HOL Lib.## (help/Docfiles/Lib.hash2.adoc 0), value ## (Lib 8), value ## (mlibUseful 31)
HOL BasicProvers.&& (help/Docfiles/BasicProvers.amper2.adoc 0), HOL bossLib.&& (help/Docfiles/bossLib.amper2.adoc 0), value && (bossLib 58), value && (simpLib 116)
value * (Arbintcore 21), value * (Arbnumcore 40), value * (Arbrat 27), value * (mlibArbint 23), value * (mlibArbnum 28), value * (mlibOmegaint 20)
value + (Arbintcore 19), value + (Arbnumcore 38), value + (Arbrat 25), value + (mlibArbint 21), value + (mlibArbnum 26), value + (mlibOmegaint 18)
HOL simpLib.++ (help/Docfiles/simpLib.plus2.adoc 0), value ++ (bossLib 57), value ++ (errormonad 12), value ++ (mlibParser 20), value ++ (optmonad 10), value ++ (seqmonad 10), value ++ (simpLib 115)
value +++ (optmonad 13), value +++ (seqmonad 13)
value - (Arbintcore 20), value - (Arbnumcore 39), value - (Arbrat 26), value - (mlibArbint 22), value - (mlibArbnum 27), value - (mlibOmegaint 19)
HOL Parse.-- (help/Docfiles/Parse.minus2.adoc 0), value -- (Parse 55)
HOL Type.--> (help/Docfiles/Type.arrow.adoc 0), value --> (FinalType 27)
value / (Arbrat 28)
value ::> (mlibSubst 16)
value < (Arbintcore 32), value < (Arbnumcore 48), value < (Arbrat 34), value < (mlibArbint 33), value < (mlibArbnum 33), value < (mlibOmegaint 27)
value <= (Arbintcore 33), value <= (Arbnumcore 49), value <= (Arbrat 35), value <= (mlibArbint 34), value <= (mlibArbnum 34), value <= (mlibOmegaint 28)
HOL Parse.== (help/Docfiles/Parse.equal2.adoc 0), value == (Parse 22), value == (mlibUseful 179)
value > (Arbintcore 34), value > (Arbnumcore 50), value > (Arbrat 36), value > (mlibArbint 35), value > (mlibArbnum 35), value > (mlibOmegaint 29)
value >* (Coding 10)
value >- (Coding 8), value >- (Tactical 23), value >- (errormonad 11), value >- (lcsymtacs 107), value >- (optmonad 9), value >- (seqmonad 9), value >- (smpp 12), value >- (stmonad 5)
value >-> (Coding 11), value >-> (optmonad 12), value >-> (seqmonad 12)
value >= (Arbintcore 35), value >= (Arbnumcore 51), value >= (Arbrat 37), value >= (mlibArbint 36), value >= (mlibArbnum 36), value >= (mlibOmegaint 30)
value >> (Coding 9), value >> (Tactical 8), value >> (errormonad 13), value >> (lcsymtacs 96), value >> (mlibParser 21), value >> (optmonad 11), value >> (seqmonad 11), value >> (smpp 11), value >> (stmonad 4)
value >>++ (mlibParser 22)
value >>> (Tactical 25), value >>> (lcsymtacs 109)
value >| (Tactical 15), value >| (lcsymtacs 102)
value ?!! (quotientTheory 5)
value ?> (Lib 9)
value @> (mlibSubst 17)
value \\ (Tactical 9), value \\ (lcsymtacs 98)
HOL Lib.|-> (help/Docfiles/Lib.maplet.adoc 0), constructor |-> (mlibUseful 167), value |-> (Lib 10)
value |<>| (mlibSubst 15)
HOL Lib.|> (help/Docfiles/Lib.pipegt.adoc 0), value |> (Lib 11), value |> (liteLib 28)
value || (Coding 7), value || (mlibParser 23), value || (smpp 13)
value ||| (smpp 14)
value ~ (Arbintcore 29), value ~ (Arbrat 31), value ~ (mlibArbint 31), value ~ (mlibOmegaint 25)
value ABB (markerLib 24)
value abb_dest_type (type_grammar 24)
HOL BasicProvers.Abbr (help/Docfiles/BasicProvers.Abbr.adoc 0), value Abbr (BasicProvers 21), value Abbr (bossLib 124), value Abbr (markerLib 39), value Abbr (markerSyntax 15)
constructor ABBREV (DefnBase 5), structure Abbrev
value Abbrev_def (markerTheory 6)
HOL Q.ABBREV_TAC (help/Docfiles/Q.ABBREV_TAC.adoc 0), value ABBREV_TAC (OldAbbrevTactics 4), value ABBREV_TAC (Q 53), value ABBREV_TAC (jrhUtils 14), value ABBREV_TAC (markerLib 25)
value abbrev_tm (markerSyntax 7)
value abbreviations (type_grammar 21)
value ABBRS_THEN (markerLib 37)
HOL Thm.ABS (help/Docfiles/Thm.ABS.adoc 0), constructor Abs (Count 11), constructor Abs (KernelTypes 33), constructor Abs (Preterm 10), constructor Abs (clauses 8), constructor abs (DiskFilesHeader 7), value ABS (FinalThm 28), value ABS (Q 7), value abs (Arbintcore 30), value abs (Arbrat 32), value abs (mlibArbint 38), value abs (mlibOmegaint 32), value abs (realTheory 7)
value ABS_0 (realTheory 24)
value ABS_1 (realTheory 25)
value ABS_1_MINUS_PROB (probabilityTheory 26)
value ABS_ABS (realTheory 26)
value ABS_applied (pred_setTheory 54)
value ABS_BETWEEN (realTheory 27)
value ABS_BETWEEN1 (realTheory 28)
value ABS_BETWEEN2 (realTheory 29)
value ABS_BOUND (realTheory 30)
value ABS_BOUNDS (realTheory 31), value abs_bounds (extrealTheory 120)
value abs_bounds_lt (extrealTheory 121)
value ABS_CASES (realTheory 32)
value ABS_CIRCLE (realTheory 33)
HOL Conv.ABS_CONV (help/Docfiles/Conv.ABS_CONV.adoc 0), value ABS_CONV (Conv 13), value ABS_CONV (RJBConv 14), value ABS_CONV (liteLib 126)
value ABS_DIFF_ADD_SAME (arithmeticTheory 33)
value ABS_DIFF_COMM (arithmeticTheory 34)
value ABS_DIFF_def (arithmeticTheory 5)
value ABS_DIFF_EQ_0 (arithmeticTheory 36)
value ABS_DIFF_EQS (arithmeticTheory 35)
value ABS_DIFF_SUM_IMAGE (pred_setTheory 53)
value ABS_DIFF_SUMS (arithmeticTheory 37)
value ABS_DIFF_SYM (arithmeticTheory 38)
value ABS_DIFF_TRIANGLE (arithmeticTheory 39)
value ABS_DIFF_ZERO (arithmeticTheory 40)
value ABS_DIV (realTheory 34)
value ABS_INV (realTheory 35)
value ABS_LE (realTheory 36)
value ABS_LT_MUL2 (realTheory 37)
value ABS_MUL (realTheory 38)
value ABS_N (realTheory 39)
value ABS_NEG (realTheory 40)
value ABS_NEG_LEMMA (seqTheory 16)
value ABS_NZ (realTheory 41)
value ABS_PAIR_THM (pairTheory 19)
value ABS_POS (realTheory 42), value abs_pos (extrealTheory 122)
value ABS_POW2 (realTheory 43)
value ABS_PROB (probabilityTheory 27)
value abs_rat_def (ratTheory 5)
value ABS_REFL (realTheory 44), value abs_refl (extrealTheory 123)
value ABS_REP_prod (pairTheory 5)
value ABS_REP_THM (boolTheory 37)
value ABS_SIGN (realTheory 45)
value ABS_SIGN2 (realTheory 46)
value ABS_SIMP (boolTheory 38)
value ABS_STILLNZ (realTheory 47)
value ABS_SUB (realTheory 48)
value ABS_SUB_ABS (realTheory 49)
value ABS_SUM (realTheory 50)
HOL Tactic.ABS_TAC (help/Docfiles/Tactic.ABS_TAC.adoc 0), value ABS_TAC (Tactic 69), value ABS_TAC (jrhUtils 16)
value ABS_TRIANGLE (realTheory 51)
value ABS_ZERO (realTheory 52)
constructor ABSDATATYPE (EmitML 17)
value ABSORPTION (pred_setTheory 51)
value ABSORPTION_RWT (pred_setTheory 52)
value ABSORPTIONR (quotient_pred_setTheory 15)
value ABST (RW 51)
value ABSTRACT_PRS (quotientTheory 15)
value ABSTRACT_RES_ABSTRACT (quotientTheory 16)
structure abstraction
value absval_tm (intSyntax 9), value absval_tm (realSyntax 9)
HOL Parse.Absyn (help/Docfiles/Parse.Absyn.adoc 0), structure Absyn, type absyn (Absyn 12), type absyn (Defn 6), type absyn (TermParse 7), value Absyn (Parse 52), value absyn (TermParse 13)
value absyn_postprocessors (term_grammar 123)
value absyn_to_preterm (Parse 51), value absyn_to_preterm (TermParse 15)
value absyn_to_term (Parse 50), value absyn_to_term (TermParse 16)
HOL simpLib.AC (help/Docfiles/simpLib.AC.adoc 0), structure AC, value AC (AC 8), value AC (bossLib 83), value AC (jrhUtils 8), value AC (markerLib 19), value AC (refuteLib 4), value AC (simpLib 79)
value AC_CANON_CONV (AC 11), value AC_CANON_CONV (refuteLib 6)
value AC_CANON_GEN_CONV (AC 10), value AC_CANON_GEN_CONV (refuteLib 5)
HOL Conv.AC_CONV (help/Docfiles/Conv.AC_CONV.adoc 0), value AC_CONV (Conv 108), value AC_CONV (Q 8)
value AC_DEF (markerTheory 5)
structure AC_Sort
value ac_ss (simpLib 83)
value AC_tm (markerSyntax 5)
HOL Tactic.ACCEPT_TAC (help/Docfiles/Tactic.ACCEPT_TAC.adoc 0), value ACCEPT_TAC (Tactic 4), value ACCEPT_TAC (jrhTactics 23)
value accepted_axioms (Sanity 8)
value accepted_oracles (Sanity 9)
value accessors_of (TypeBase 30), value accessors_of (TypeBasePure 57)
HOL Term.aconv (help/Docfiles/Term.aconv.adoc 0), value aconv (FinalTerm 58)
value ACS (transcTheory 26), value acs (transcTheory 6)
value ACS_BOUNDS (transcTheory 27)
value ACS_BOUNDS_LT (transcTheory 28)
value ACS_COS (transcTheory 29)
value acs_tm (transcSyntax 5)
type action (Trace 4), type action (clauses 26)
value acyclic_bigunion (set_relationTheory 43)
value acyclic_def (set_relationTheory 7)
value acyclic_irreflexive (set_relationTheory 44)
value acyclic_reln_to_rel_conv (set_relationTheory 45)
value acyclic_rrestrict (set_relationTheory 46)
value acyclic_subset (set_relationTheory 47)
value acyclic_union (set_relationTheory 48)
value acyclic_WF (set_relationTheory 42)
constructor ADD (RW 31), value ADD (arithmeticTheory 6), value add (CharSet 6), value add (Manager 15), value add (PIntMap 28), value add (Redblackset 10), value add (UTF8Set 4), value add (mlibClause 55), value add (mlibClauseset 39), value add (mlibHeap 11), value add (mlibPatricia 22), value add (mlibResolution 35), value add (mlibRewrite 23), value add (mlibSubsume 19), value add (mlibSupport 40), value add (mlibUnits 15), value add (patriciaLib 17), value add (proofManagerLib 16)
value ADD1 (arithmeticTheory 41)
value add2_sub2 (extrealTheory 124)
value ADD_0 (arithmeticTheory 42)
value add_absyn_postprocessor (Parse 47)
value add_actual_overloading (Overload 46)
value ADD_ADD (patriciaTheory 36)
value ADD_ADD_SYM (patriciaTheory 37)
value add_ASCIInumbers_compset (ASCIInumbersLib 2)
value ADD_ASSOC (arithmeticTheory 43), value add_assoc (extrealTheory 125), value add_assoc (liteLib 57)
value ADD_ASSOC_CONV (Thm_convs 14)
HOL Drule.ADD_ASSUM (help/Docfiles/Drule.ADD_ASSUM.adoc 0), value ADD_ASSUM (Drule 18)
value add_assums (abstraction 9)
HOL Parse.add_bare_numeral_form (help/Docfiles/Parse.add_bare_numeral_form.adoc 0), value add_bare_numeral_form (Parse 90)
value add_binder (term_grammar 188)
value ADD_BIT0 (bitTheory 24)
value add_bit_compset (bitLib 2)
value ADD_BIT_SUC (bitTheory 26)
value ADD_BITS_SUC (bitTheory 25)
value add_bitstring_compset (bitstringLib 4)
value add_break (HOLPP 27), value add_break (smpp 7)
value add_cast_ptree_compset (patricia_castsLib 11)
value add_check_factoid (OmegaMLShadow 24), value add_check_factoid (mlibOmega 30)
value ADD_CLAUSES (arithmeticTheory 44)
value ADD_COEFFS_TO_LEQ_CONV (Norm_ineqs 7)
value add_combin_compset (combinLib 3)
value ADD_COMM (arithmeticTheory 45), value add_comm (extrealTheory 126)
value add_cong (DefnBase 25)
value add_congs (RW 11)
value add_const (Parse 80), value add_const (folTools 47)
HOL reduceLib.ADD_CONV (help/Docfiles/reduceLib.ADD_CONV.adoc 0), value ADD_CONV (Arithconv 14), value ADD_CONV (reduceLib 21), value add_conv (computeLib 14)
value add_convs (computeLib 29)
value add_csfrag_rewrites (congLib 84)
value ADD_curried_def (patriciaTheory 6)
value add_d_neginf (DeepSyntaxTheory 16)
value add_d_posinf (DeepSyntaxTheory 17)
value add_datatype_info (computeLib 42)
value ADD_def (patriciaTheory 43), value add_def (bitstringTheory 5)
value add_delta (term_grammar 199)
value ADD_DIV_ADD_DIV (arithmeticTheory 46)
value ADD_DIV_RWT (arithmeticTheory 47)
value ADD_EQ_0 (arithmeticTheory 48)
value ADD_EQ_1 (arithmeticTheory 49)
value ADD_EQ_SUB (arithmeticTheory 50)
value add_extern (clauses 45)
value add_facts (Satisfy 49)
value add_finite_map_compset (finite_mapLib 35)
value add_funs (computeLib 28)
value add_hyp (folTools 46)
value add_impl_param (abstraction 13)
value add_implicit_congs (RW 18)
HOL Rewrite.add_implicit_rewrites (help/Docfiles/Rewrite.add_implicit_rewrites.adoc 0), value add_implicit_rewrites (Ho_Rewrite 8), value add_implicit_rewrites (Rewrite 13)
value add_implicit_rws (RW 19)
value add_implicit_simpls (RW 20)
value ADD_IN_Q (extrealTheory 45)
value ADD_ind (patriciaTheory 44)
value add_inferior_overloading (Overload 51)
HOL Parse.add_infix (help/Docfiles/Parse.add_infix.adoc 0), value add_infix (Parse 81)
HOL Parse.add_infix_type (help/Docfiles/Parse.add_infix_type.adoc 0), value add_infix_type (Parse 26)
value add_infty (extrealTheory 127)
value ADD_INSERT (patriciaTheory 38)
value ADD_INSERT_STRING (patricia_castsTheory 44)
value ADD_INSERT_WORD (patricia_castsTheory 45)
value add_int_compset (intReduce 4)
value add_integer_word_compset (integer_wordLib 4)
value add_ints (realTheory 427)
value ADD_INV_0 (arithmeticTheory 51)
value ADD_INV_0_EQ (arithmeticTheory 52)
value ADD_IS_PTREE (patriciaTheory 39)
value add_ldistrib (extrealTheory 128)
value add_ldistrib_neg (extrealTheory 129)
value add_ldistrib_normal (extrealTheory 130)
value add_ldistrib_normal2 (extrealTheory 131)
value add_ldistrib_pos (extrealTheory 132)
value add_leqs (mlibTermorder 28)
value add_list (patriciaLib 18)
value ADD_LIST_def (patriciaTheory 5)
value ADD_LIST_IS_PTREE (patriciaTheory 40)
value add_list_tm (patriciaSyntax 15)
value ADD_LIST_TO_EMPTY_IS_PTREE (patriciaTheory 41)
HOL Parse.add_listform (help/Docfiles/Parse.add_listform.adoc 0), value add_listform (Parse 86), value add_listform (term_grammar 189)
value ADD_LISTs_def (patricia_castsTheory 5)
value add_lists_tm (patricia_castsSyntax 32)
value ADD_LISTw_def (patricia_castsTheory 6)
value add_listw_tm (patricia_castsSyntax 15)
value add_literal (Literal 28)
value add_lzero (extrealTheory 133)
value ADD_MOD (arithmeticTheory 53)
value ADD_MODULUS (arithmeticTheory 54)
value ADD_MODULUS_LEFT (arithmeticTheory 55)
value ADD_MODULUS_RIGHT (arithmeticTheory 56)
value ADD_MONO_LESS_EQ (arithmeticTheory 57)
value add_mono_thm (IndDefLib 19)
value add_newline (HOLPP 28), value add_newline (smpp 6)
value add_not_infty (extrealTheory 134)
HOL Parse.add_numeral_form (help/Docfiles/Parse.add_numeral_form.adoc 0), value add_numeral_form (Parse 89), value add_numeral_form (term_grammar 201)
value add_numposrep_compset (numposrepLib 2)
value add_overloading (Overload 50)
value add_pair_compset (pairLib 4)
value add_parameter (abstraction 5)
value add_persistent_funs (computeLib 45)
value add_pow2 (extrealTheory 135)
value add_pred_set_compset (pred_setLib 17)
value add_ptree_compset (patriciaLib 75)
value add_rat (realTheory 428)
value add_ratl (realTheory 429)
value add_ratr (realTheory 430)
value add_rdistrib (extrealTheory 136)
value add_rdistrib_normal (extrealTheory 137)
value add_rdistrib_normal2 (extrealTheory 138)
value add_readings (mlibMeter 20)
value add_record_field (Parse 112)
value add_record_fupdate (Parse 113)
value add_relsimp (simpLib 123)
HOL Rewrite.add_rewrites (help/Docfiles/Rewrite.add_rewrites.adoc 0), value add_rewrites (Rewrite 7)
HOL Parse.add_rule (help/Docfiles/Parse.add_rule.adoc 0), value add_rule (Parse 83), value add_rule (term_grammar 192)
value add_rule_induction (IndDefLib 26)
value add_rws (RW 10)
value add_rwts (simpfrag 12)
value add_rzero (extrealTheory 139)
HOL Tactical.ADD_SGS_TAC (help/Docfiles/Tactical.ADD_SGS_TAC.adoc 0), value ADD_SGS_TAC (Tactical 60)
value add_string (HOLPP 29), value add_string (smpp 5)
value add_string_compset (stringLib 42)
value add_stringsz (HOLPP 30)
value add_style_to_string (Parse 200)
value ADD_SUB (arithmeticTheory 58), value add_sub (extrealTheory 140)
value ADD_SUB2 (floatTheory 9), value add_sub2 (extrealTheory 141)
value ADD_SUC (arithmeticTheory 59)
value ADD_SYM (arithmeticTheory 60)
value ADD_SYM_CONV (Thm_convs 15)
HOL Thm.add_tag (help/Docfiles/Thm.add_tag.adoc 0), value add_tag (FinalThm 109)
value ADD_TERM_TO_LEQ_CONV (Norm_ineqs 6)
value add_thm (folTools 45)
value add_thms (clauses 46), value add_thms (computeLib 13)
value add_thmset (clauses 47), value add_thmset (computeLib 15)
value add_tm (bitstringSyntax 44), value add_tm (patriciaSyntax 14)
value add_to_great (int_arithTheory 25)
value ADD_TRANSFORM (patriciaTheory 42)
value ADD_tupled_primitive_def (patriciaTheory 7)
value add_type (Parse 24)
HOL Parse.add_user_printer (help/Docfiles/Parse.add_user_printer.adoc 0), value add_user_printer (Parse 127), value add_user_printer (term_grammar 115)
value add_weakener (simpLib 120)
value add_with_carry_def (wordsTheory 10)
value ADD_WITH_CARRY_SUB (wordsTheory 116)
value add_with_carry_tm (wordsSyntax 23)
value add_word_cast_printer (wordsLib 75)
value add_words_compset (wordsLib 48)
value addbvs (term_pp_utils 6)
value addctxt (Traverse 87)
value addf (PIntMap 30), value addf (mlibPatricia 23)
value ADDITIVE (measureTheory 37)
value additive_def (measureTheory 6)
value ADDITIVE_INCREASING (measureTheory 38)
value ADDITIVE_PROB (probabilityTheory 28)
value ADDITIVE_SUM (measureTheory 39)
value ADDITIVE_TERMS_CONV (CooperSyntax 83)
value addl (mlibUnits 16)
value ADDL_CANON_CONV (NumRelNorms 4), value ADDL_CANON_CONV (intSimps 35), value ADDL_CANON_CONV (numSimps 22)
value addList (CharSet 7), value addList (Redblackset 11), value addList (UTF8Set 6)
value ADDR_CANON_CONV (NumRelNorms 5), value ADDR_CANON_CONV (intSimps 38), value ADDR_CANON_CONV (numSimps 23)
value ADDs_def (patricia_castsTheory 7)
value adds_tm (patricia_castsSyntax 31)
value addString (CharSet 8)
value ADDw_def (patricia_castsTheory 8)
value addw_tm (patricia_castsSyntax 14)
value addzero (OmegaMath 8)
HOL Theory.adjoin_to_theory (help/Docfiles/Theory.adjoin_to_theory.adoc 0), value adjoin_to_theory (Theory 44)
value advance (mlibResolution 36), value advance (qbuf 11)
type aint (Arbrat 6)
value ALGEBRA_ALT_INTER (measureTheory 40)
value ALGEBRA_COMPL (measureTheory 41)
value algebra_def (measureTheory 7)
value ALGEBRA_DIFF (measureTheory 42)
value ALGEBRA_EMPTY (measureTheory 43)
value ALGEBRA_FINITE_UNION (measureTheory 44)
value ALGEBRA_INTER (measureTheory 45)
value ALGEBRA_INTER_SPACE (measureTheory 46)
value ALGEBRA_SPACE (measureTheory 47)
value ALGEBRA_SUBSET_LAMBDA_SYSTEM (measureTheory 48)
value ALGEBRA_UNION (measureTheory 49)
constructor Alien (BasicProvers 52)
value align_0 (alignmentTheory 11)
value align_align (alignmentTheory 12)
value align_aligned (alignmentTheory 13)
value align_bitwise_and (alignmentTheory 14)
value align_def (alignmentTheory 5)
value align_shift (alignmentTheory 15)
value align_sub (alignmentTheory 16)
value align_table (mlibUseful 132)
value align_tm (alignmentSyntax 5)
value align_w2n (alignmentTheory 17)
value aligned_0 (alignmentTheory 18)
value aligned_1_lsb (alignmentTheory 19)
value aligned_add_sub (alignmentTheory 20)
value aligned_add_sub_123 (alignmentTheory 21)
value aligned_add_sub_cor (alignmentTheory 22)
value aligned_add_sub_prod (alignmentTheory 23)
value aligned_align (alignmentTheory 24)
value aligned_bit_count_upto (alignmentTheory 25)
value aligned_bitwise_and (alignmentTheory 26)
value aligned_def (alignmentTheory 6)
value aligned_extract (alignmentTheory 27)
value aligned_ge_dim (alignmentTheory 28)
value aligned_imp (alignmentTheory 29)
value aligned_mul_shift_1 (alignmentTheory 30)
value aligned_numeric (alignmentTheory 31)
value aligned_tm (alignmentSyntax 6)
value alignment_grammars (alignmentTheory 33)
structure alignmentSyntax
structure alignmentTheory
value alist_grammars (alistTheory 68)
value alist_range_def (alistTheory 7)
value alist_to_fmap_APPEND (alistTheory 46)
value alist_to_fmap_def (alistTheory 8)
value alist_to_fmap_FAPPLY_MEM (alistTheory 47)
value alist_to_fmap_MAP (alistTheory 48)
value alist_to_fmap_MAP_matchable (alistTheory 49)
value alist_to_fmap_MAP_values (alistTheory 50)
value alist_to_fmap_PERM (alistTheory 51)
value alist_to_fmap_prefix (alistTheory 52)
value alist_to_fmap_thm (alistTheory 53)
value alist_to_fmap_to_alist (alistTheory 54)
value alist_to_fmap_to_alist_PERM (alistTheory 55)
structure alistTheory
HOL Lib.all (help/Docfiles/Lib.all.adoc 0), value all (Lib 19), value all (mlibMultiset 24), value all (mlibStream 36)
HOL Lib.all2 (help/Docfiles/Lib.all2.adoc 0), value all2 (Lib 18)
HOL Term.all_atoms (help/Docfiles/Term.all_atoms.adoc 0), value all_atoms (FinalTerm 14)
value all_atomsl (FinalTerm 15)
value all_choices_def (set_relationTheory 8)
value all_choices_thm (set_relationTheory 49)
HOL Term.all_consts (help/Docfiles/Term.all_consts.adoc 0), value all_consts (FinalTerm 30)
HOL Conv.ALL_CONV (help/Docfiles/Conv.ALL_CONV.adoc 0), value ALL_CONV (Conv 29), value ALL_CONV (RJBConv 5)
value all_cpn_distinct (totoTheory 83)
value all_data (ThmSetData 16)
value ALL_DISTINCT (listTheory 5)
value ALL_DISTINCT_APPEND (listTheory 57)
value ALL_DISTINCT_CARD_LIST_TO_SET (listTheory 58)
value ALL_DISTINCT_CONS (HolSmtTheory 9)
value all_distinct_count_list (rich_listTheory 343)
value ALL_DISTINCT_DROP (listTheory 59), value ALL_DISTINCT_DROP (rich_listTheory 30)
value ALL_DISTINCT_EL_IMP (listTheory 60)
value ALL_DISTINCT_FILTER (listTheory 61)
value ALL_DISTINCT_FILTER_EL_IMP (listTheory 62)
value ALL_DISTINCT_fmap_to_alist_keys (alistTheory 12)
value ALL_DISTINCT_GENLIST (listTheory 63)
value ALL_DISTINCT_MAP (listTheory 64)
value ALL_DISTINCT_MAP_FST_toAList (sptreeTheory 35)
value ALL_DISTINCT_MAP_INJ (listTheory 65)
value ALL_DISTINCT_MEM_ZIP_MAP (rich_listTheory 31)
value ALL_DISTINCT_NIL (HolSmtTheory 10)
value all_distinct_nub (listTheory 399)
value ALL_DISTINCT_PERM (sortingTheory 20)
value ALL_DISTINCT_PERM_LIST_TO_SET_TO_LIST (sortingTheory 21)
value ALL_DISTINCT_REVERSE (listTheory 66)
value ALL_DISTINCT_SET_TO_LIST (listTheory 67)
value ALL_DISTINCT_SING (listTheory 68)
value ALL_DISTINCT_SNOC (listTheory 69), value ALL_DISTINCT_SNOC (rich_listTheory 357)
value all_distinct_tm (listSyntax 10)
value ALL_DISTINCT_TRAVERSE (patriciaTheory 45)
value ALL_DISTINCT_ZIP (listTheory 70)
value ALL_DISTINCT_ZIP_SWAP (listTheory 71)
value ALL_DIVIDES_0 (dividesTheory 10)
value ALL_EL (rich_listTheory 358)
value ALL_EL_APPEND (rich_listTheory 359)
value ALL_EL_BUTFIRSTN (rich_listTheory 360)
value ALL_EL_BUTLASTN (rich_listTheory 361)
value ALL_EL_CONJ (rich_listTheory 362)
HOL listLib.ALL_EL_CONV (help/Docfiles/listLib.ALL_EL_CONV.adoc 0), value ALL_EL_CONV (ListConv1 28), value ALL_EL_CONV (listLib 42)
value ALL_EL_FIRSTN (rich_listTheory 363)
value ALL_EL_FOLDL (rich_listTheory 364)
value ALL_EL_FOLDL_MAP (rich_listTheory 365)
value ALL_EL_FOLDR (rich_listTheory 366)
value ALL_EL_FOLDR_MAP (rich_listTheory 367)
value ALL_EL_LASTN (rich_listTheory 368)
value ALL_EL_MAP (rich_listTheory 32)
value ALL_EL_PRS (quotient_listTheory 5)
value ALL_EL_REPLICATE (rich_listTheory 369)
value ALL_EL_REVERSE (rich_listTheory 370)
value ALL_EL_RSP (quotient_listTheory 6)
value ALL_EL_SEG (rich_listTheory 371)
value ALL_EL_SNOC (rich_listTheory 372)
value all_goals (goalTree 16)
HOL Tactical.ALL_LT (help/Docfiles/Tactical.ALL_LT.adoc 0), value ALL_LT (Tactical 48)
value all_negative (mlibSolver 72)
value all_positive (mlibSolver 73)
value all_set_types (ThmSetData 20)
HOL Tactical.ALL_TAC (help/Docfiles/Tactical.ALL_TAC.adoc 0), value ALL_TAC (Tactical 46), value ALL_TAC (jrhTactics 22), value all_tac (Tactical 47), value all_tac (lcsymtacs 4)
HOL Thm_cont.ALL_THEN (help/Docfiles/Thm_cont.ALL_THEN.adoc 0), value ALL_THEN (Thm_cont 8)
HOL DB.all_thys (help/Docfiles/DB.all_thys.adoc 0)
HOL Term.all_vars (help/Docfiles/Term.all_vars.adoc 0), value all_vars (FinalTerm 13)
HOL Term.all_varsl (help/Docfiles/Term.all_varsl.adoc 0), value all_varsl (FinalTerm 17)
value alldivide_def (DeepSyntaxTheory 7)
HOL Tactical.ALLGOALS (help/Docfiles/Tactical.ALLGOALS.adoc 0), value ALLGOALS (Tactical 32)
value allow_new_clauses (Pmatch 12)
value allow_octal_input (base_tokens 16)
value allow_schema_definition (Globals 29)
HOL Lexis.allowed_term_constant (help/Docfiles/Lexis.allowed_term_constant.adoc 0), value allowed_term_constant (Lexis 13)
HOL Lexis.allowed_type_constant (help/Docfiles/Lexis.allowed_type_constant.adoc 0), value allowed_type_constant (Lexis 12)
value allowed_user_type_var (Lexis 11)
value ALOOKUP_ALL_DISTINCT_EL (alistTheory 13)
value ALOOKUP_ALL_DISTINCT_MEM (alistTheory 14)
value ALOOKUP_ALL_DISTINCT_PERM_same (alistTheory 15)
value ALOOKUP_APPEND (alistTheory 16)
value ALOOKUP_APPEND_same (alistTheory 17)
value ALOOKUP_curried_def (alistTheory 5)
value ALOOKUP_def (alistTheory 29)
value alookup_distinct_reverse (alistTheory 56)
value ALOOKUP_EQ_FLOOKUP (alistTheory 18)
value ALOOKUP_FAILS (alistTheory 19)
value ALOOKUP_FILTER (alistTheory 20), value alookup_filter (alistTheory 57)
value ALOOKUP_IN_FRANGE (alistTheory 21)
value ALOOKUP_ind (alistTheory 30)
value ALOOKUP_LEAST_EL (alistTheory 22)
value ALOOKUP_MAP (alistTheory 23)
value ALOOKUP_MEM (alistTheory 24)
value ALOOKUP_NONE (alistTheory 25)
value ALOOKUP_prefix (alistTheory 31)
value ALOOKUP_SOME_FAPPLY_alist_to_fmap (alistTheory 26)
value alookup_stable_sorted (alistTheory 58)
value ALOOKUP_TABULATE (alistTheory 27)
value ALOOKUP_toAList (sptreeTheory 36)
value ALOOKUP_tupled_primitive_def (alistTheory 6)
value ALOOKUP_ZIP_MAP_SND (alistTheory 28)
HOL Thm.ALPHA (help/Docfiles/Thm.ALPHA.adoc 0), HOL Type.alpha (help/Docfiles/Type.alpha.adoc 0), constructor Alpha (Count 11), value ALPHA (FinalThm 40), value alpha (FinalType 31), value alpha (UnicodeChars 4), value alpha (liteLib 107), value alpha (mlibParser 58)
HOL Drule.ALPHA_CONV (help/Docfiles/Drule.ALPHA_CONV.adoc 0), value ALPHA_CONV (Drule 71)
value alphabet (Lexis 5)
value alphanum (mlibParser 59)
value alphanumerics (Lexis 2)
value ALT_equivalence (relationTheory 58)
value alt_length_thm (pathTheory 55)
value ALT_ZERO (arithmeticTheory 7)
value alt_zero_tm (numSyntax 6)
value alternative_equivalence (OmegaTheory 36)
constructor Always (term_grammar 30), value ALWAYS (Temporal_LogicTheory 5), value Always (Parse 256)
value ALWAYS_AS_BEFORE (Temporal_LogicTheory 18)
value ALWAYS_AS_SBEFORE (Temporal_LogicTheory 19)
value ALWAYS_AS_SUNTIL (Temporal_LogicTheory 20)
value ALWAYS_AS_SWHEN (Temporal_LogicTheory 21)
value ALWAYS_AS_UNTIL (Temporal_LogicTheory 22)
value ALWAYS_AS_WHEN (Temporal_LogicTheory 23)
value always_fails (RW 28)
value ALWAYS_FIX (Temporal_LogicTheory 24)
value ALWAYS_IDEM (Temporal_LogicTheory 25)
value ALWAYS_INVARIANT (Temporal_LogicTheory 26)
value ALWAYS_LINORD (Temporal_LogicTheory 27)
value ALWAYS_NEXT (Temporal_LogicTheory 28)
value ALWAYS_REC (Temporal_LogicTheory 29)
value ALWAYS_SIGNAL (Temporal_LogicTheory 30)
HOL Theory.ancestry (help/Docfiles/Theory.ancestry.adoc 0), value ancestry (Theory 35)
constructor And (mlibTerm 18)
value AND1_THM (boolTheory 39)
value AND2_THM (boolTheory 40)
value AND_CLAUSES (boolTheory 41)
value AND_CLAUSES_FX (ConseqConvTheory 8)
value AND_CLAUSES_TX (ConseqConvTheory 9)
value AND_CLAUSES_XF (ConseqConvTheory 10)
value AND_CLAUSES_XT (ConseqConvTheory 11)
value AND_CLAUSES_XX (ConseqConvTheory 12)
value AND_CONG (boolTheory 42)
HOL reduceLib.AND_CONV (help/Docfiles/reduceLib.AND_CONV.adoc 0), value AND_CONV (Boolconv 5), value AND_CONV (reduceLib 5)
value AND_DEF (boolTheory 11)
HOL listLib.AND_EL_CONV (help/Docfiles/listLib.AND_EL_CONV.adoc 0), value AND_EL_CONV (ListConv1 31), value AND_EL_CONV (listLib 45)
value AND_EL_DEF (rich_listTheory 5)
value AND_EL_FOLDL (rich_listTheory 33)
value AND_EL_FOLDR (rich_listTheory 34)
value and_el_tm (rich_listSyntax 4)
HOL Conv.AND_EXISTS_CONV (help/Docfiles/Conv.AND_EXISTS_CONV.adoc 0), value AND_EXISTS_CONV (Conv 61)
HOL Conv.AND_FORALL_CONV (help/Docfiles/Conv.AND_FORALL_CONV.adoc 0), value AND_FORALL_CONV (Conv 53)
value AND_IMP (satTheory 5)
value AND_IMP_ELIM_CONV (quantHeuristicsTools 33)
value AND_IMP_INTRO (boolTheory 43)
value AND_IMP_INTRO_CONV (Conv 84), value AND_IMP_INTRO_CONV (quantHeuristicsTools 32)
value AND_IMP_INTRO_SYM (HolSmtTheory 11)
value AND_IMP_RULE (jbUtils 9)
value AND_INTRO_THM (boolTheory 44)
value AND_INV (satTheory 6)
value AND_INV2 (satTheory 7)
value AND_INV_IMP (satTheory 8)
value AND_NEXT (Temporal_LogicTheory 31)
value AND_NOT_CONV (quantHeuristicsLibBase 22), value AND_NOT_CONV (quantHeuristicsTools 20)
HOL PairRules.AND_PEXISTS_CONV (help/Docfiles/PairRules.AND_PEXISTS_CONV.adoc 0), value AND_PEXISTS_CONV (PairRules 39)
HOL PairRules.AND_PFORALL_CONV (help/Docfiles/PairRules.AND_PFORALL_CONV.adoc 0), value AND_PFORALL_CONV (PairRules 32)
value AND_RES_FORALL_CONV (res_quanTools 42)
value and_special (GrammarSpecials 8)
value AND_T (HolSmtTheory 12)
value ANDNOT (HOLtokens 10)
type annotation (PPBackEnd 11)
HOL Conv.ANTE_CONJ_CONV (help/Docfiles/Conv.ANTE_CONJ_CONV.adoc 0), value ANTE_CONJ_CONV (Conv 83)
HOL Thm_cont.ANTE_RES_THEN (help/Docfiles/Thm_cont.ANTE_RES_THEN.adoc 0), value ANTE_RES_THEN (Thm_cont 29)
value ANTI_PRENEX_CONV (normalForms 99)
constructor Antiq (Preterm 10)
constructor ANTIQUOTE (HOLPP 22), constructor Antiquote (term_tokens 3)
value antisym_def (set_relationTheory 9)
value antisym_reln_to_rel_conv (set_relationTheory 50)
value antisym_resp_equiv (comparisonTheory 26)
value antisymmetric_def (relationTheory 40)
value antisymmetric_inv (relationTheory 198)
value antisymmetric_RC (relationTheory 196)
value antisymmetric_RINTER (relationTheory 197)
constructor any (PEGParse 3), value any (mlibParser 36)
value ap_qk_numto_thm (totoTheory 84)
value AP_SND (fmapalTheory 5)
HOL Thm.AP_TERM (help/Docfiles/Thm.AP_TERM.adoc 0), value AP_TERM (FinalThm 42), value AP_TERM (Q 9)
HOL Tactic.AP_TERM_TAC (help/Docfiles/Tactic.AP_TERM_TAC.adoc 0), value AP_TERM_TAC (Tactic 65)
HOL Thm.AP_THM (help/Docfiles/Thm.AP_THM.adoc 0), value AP_THM (FinalThm 43), value AP_THM (Q 10)
HOL Tactic.AP_THM_TAC (help/Docfiles/Tactic.AP_THM_TAC.adoc 0), value AP_THM_TAC (Tactic 66)
value apcharto_thm (totoTheory 85)
value apfst (Lib 20)
value apiDefine (TotalDefn 42)
value apiDefineq (TotalDefn 43)
type apidefn (TotalDefn 40)
value apintto_thm (inttoTheory 14)
value aplextoto (totoTheory 86)
value aplistoto (totoTheory 87)
value apnth (Lib 23)
value apnumto_thm (totoTheory 88)
constructor APP (Absyn 12), constructor App (clauses 8), constructor app (DiskFilesHeader 7), value app (KernelSig 31), value app (LVTermNet 17), value app (PIntMap 38), value app (Redblackmap 19), value app (Redblackset 24), value app (TypeNet 16), value app (mlibHeap 16), value app (mlibMultiset 20), value app (mlibPatricia 27)
value APP_DEF (combinTheory 5)
HOL Lib.append (help/Docfiles/Lib.append.adoc 0), value APPEND (listTheory 6), value APPEND (rich_listTheory 373), value append (Lib 21), value append (mlibStream 25), value append (mlibUseful 60), value append (seq 18)
value APPEND_11 (listTheory 72)
value APPEND_11_LENGTH (listTheory 73), value APPEND_11_LENGTH (rich_listTheory 374)
value APPEND_ASSOC (listTheory 74), value APPEND_ASSOC (rich_listTheory 375)
value APPEND_ASSOC_CONS (rich_listTheory 35)
value APPEND_BUTLAST_LAST (rich_listTheory 377)
value APPEND_BUTLASTN_BUTFIRSTN (rich_listTheory 376)
value APPEND_BUTLASTN_DROP (rich_listTheory 36)
value APPEND_BUTLASTN_LASTN (rich_listTheory 37)
HOL listLib.APPEND_CONV (help/Docfiles/listLib.APPEND_CONV.adoc 0), value APPEND_CONV (ListConv1 15), value APPEND_CONV (listLib 29)
value APPEND_EQ_APPEND (listTheory 75)
value APPEND_EQ_APPEND_MID (listTheory 76)
value APPEND_EQ_CONS (listTheory 77)
value APPEND_eq_NIL (listTheory 84)
value APPEND_EQ_SELF (listTheory 78)
value APPEND_EQ_SING (listTheory 79)
value APPEND_FIRSTN_BUTFIRSTN (rich_listTheory 378)
value APPEND_FIRSTN_LASTN (rich_listTheory 379)
value APPEND_FOLDL (rich_listTheory 38)
value APPEND_FOLDR (rich_listTheory 39)
value APPEND_FRONT_LAST (listTheory 80)
value APPEND_LENGTH_EQ (listTheory 81), value APPEND_LENGTH_EQ (rich_listTheory 380)
value APPEND_NIL (listTheory 82), value APPEND_NIL (rich_listTheory 40)
value APPEND_PERM_SYM (sortingTheory 22)
value APPEND_PRS (quotient_listTheory 7)
value APPEND_RSP (quotient_listTheory 8)
value APPEND_SNOC (listTheory 83), value APPEND_SNOC (rich_listTheory 381)
value APPEND_SNOC1 (rich_listTheory 41)
value APPEND_TAKE_LASTN (rich_listTheory 42)
value append_tm (listSyntax 11)
constructor appf1 (PEGParse 19)
constructor appf2 (PEGParse 19)
constructor AppFail (Preterm 76)
value appi (Lib 22)
value applicable_paths_FINITE (fmaptreeTheory 19)
HOL Count.apply (help/Docfiles/Count.apply.adoc 0), value apply (ConstMapML 12), value apply (Count 97), value apply (History 7)
value APPLY_ASM_TAC (schneiderUtils 8)
value APPLY_FCP_UPDATE_ID (fcpTheory 35)
value apply_path_def (fmaptreeTheory 6)
value apply_path_SNOC (fmaptreeTheory 20)
value APPLY_PRS (quotientTheory 17)
value APPLY_RSP (quotientTheory 18)
value apply_sos_filter (mlibSolver 66)
value apply_subst (Pretype 34)
value apply_thydata (ProvideUnicode 27)
value APPLY_UNIT (errorStateMonadTheory 25)
value APPLY_UNIT_UNIT (errorStateMonadTheory 26)
value APPLY_UPDATE_ID (combinTheory 16), value APPLY_UPDATE_ID (updateTheory 10)
value APPLY_UPDATE_THM (combinTheory 17), value APPLY_UPDATE_THM (updateTheory 11)
value approx_def (relationTheory 41)
HOL DB.apropos (help/Docfiles/DB.apropos.adoc 0), value apropos (DB 28)
HOL DB.apropos_in (help/Docfiles/DB.apropos_in.adoc 0), value apropos_in (DB 29)
value apsnd (Lib 24)
constructor ApTerm (Count 11)
constructor ApThm (Count 11)
value apto_inv (totoTheory 89)
constructor AQ (Absyn 12), constructor AQ (type_tokens 2)
HOL boolSyntax.arb (help/Docfiles/boolSyntax.arb.adoc 0), value arb (boolSyntax 24)
structure Arbint, type arbint (mlibOmega 4)
structure Arbintcore
structure Arbnum
structure Arbnumcore
structure Arbrat
value arg (complexTheory 7)
value arg1 (Arith_cons 39)
value arg2 (Arith_cons 40)
value ARG_COS (complexTheory 25)
value ARG_SIN (complexTheory 26)
value ARGS_CONV (RJBConv 15)
value argv (Portable 49)
structure Arith
value ARITH_AC_ss (numSimps 11)
value arith_cache (numSimps 20), value arith_cache (realSimps 20)
structure Arith_cons
HOL numLib.ARITH_CONV (help/Docfiles/numLib.ARITH_CONV.adoc 0), value ARITH_CONV (Arith 4), value ARITH_CONV (Gen_arith 5), value ARITH_CONV (intLib 11), value ARITH_CONV (numLib 29)
value ARITH_DP_FILTER_ss (numSimps 9)
value ARITH_DP_ss (numSimps 8)
HOL Arith.ARITH_FORM_NORM_CONV (help/Docfiles/Arith.ARITH_FORM_NORM_CONV.adoc 0), value ARITH_FORM_NORM_CONV (Arith 5), value ARITH_FORM_NORM_CONV (Norm_ineqs 9)
value ARITH_NORM_ss (numSimps 12)
value ARITH_PROVE (intLib 12), value ARITH_PROVE (numLib 30)
value ARITH_RWTS_ss (numSimps 10)
HOL bossLib.arith_ss (help/Docfiles/bossLib.arith_ss.adoc 0), value ARITH_ss (bossLib 67), value ARITH_ss (numSimps 5), value arith_ss (bossLib 62), value arith_ss (numLib 37)
value ARITH_TAC (intLib 13), value ARITH_TAC (numLib 31)
structure Arithconv
value arithmetic_grammars (arithmeticTheory 393)
structure arithmeticTheory
constructor AroundEachPhrase (term_grammar 24), value AroundEachPhrase (Parse 259)
constructor AroundSameName (term_grammar 24), value AroundSameName (Parse 261)
constructor AroundSamePrec (term_grammar 24), value AroundSamePrec (Parse 260)
type array (DiskFilesHeader 10)
value array_ext_def (HolSmtTheory 5)
value ASCIInumbers_grammars (ASCIInumbersTheory 45)
structure ASCIInumbersLib
structure ASCIInumbersSyntax
structure ASCIInumbersTheory
value Aset_def (DeepSyntaxTheory 5)
value asList (Arbnumcore 36), value asList (mlibArbnum 24)
constructor ASM (OmegaMLShadow 5), constructor ASM (mlibOmega 8)
HOL Tactic.ASM_CASES_TAC (help/Docfiles/Tactic.ASM_CASES_TAC.adoc 0), value ASM_CASES_TAC (Q 11), value ASM_CASES_TAC (Tactic 62)
value ASM_CONGRUENCE_SIMP_TAC (congLib 127)
value ASM_CONSEQ_CONV_TAC (ConseqConv 225)
value ASM_CRW_RULE (RW 86)
value ASM_CRW_TAC (RW 101)
value ASM_LIST_TAC (schneiderUtils 9)
value ASM_MARKER_DEF (ConseqConvTheory 5)
value asm_marker_ELIM_CONV (ConseqConv 85)
value asm_marker_INTRO_CONV (ConseqConv 86)
value ASM_MARKER_THM (ConseqConvTheory 13)
value asm_marker_tm (ConseqConv 78)
HOL mesonLib.ASM_MESON_TAC (help/Docfiles/mesonLib.ASM_MESON_TAC.adoc 0), value ASM_MESON_TAC (mesonLib 21)
HOL bossLib.ASM_QI_TAC (help/Docfiles/bossLib.ASM_QI_TAC.adoc 0), value ASM_QI_TAC (bossLib 104)
HOL quantHeuristicsLib.ASM_QUANT_INSTANTIATE_TAC (help/Docfiles/quantHeuristicsLib.ASM_QUANT_INSTANTIATE_TAC.adoc 0), value ASM_QUANT_INSTANTIATE_TAC (quantHeuristicsLib 18), value ASM_QUANT_INSTANTIATE_TAC (quantHeuristicsLibBase 202)
HOL Rewrite.ASM_REWRITE_RULE (help/Docfiles/Rewrite.ASM_REWRITE_RULE.adoc 0), value ASM_REWRITE_RULE (Ho_Rewrite 25), value ASM_REWRITE_RULE (RW 64), value ASM_REWRITE_RULE (Rewrite 34)
HOL Rewrite.ASM_REWRITE_TAC (help/Docfiles/Rewrite.ASM_REWRITE_TAC.adoc 0), value ASM_REWRITE_TAC (Ho_Rewrite 34), value ASM_REWRITE_TAC (RW 66), value ASM_REWRITE_TAC (Rewrite 45), value asm_rewrite_tac (Rewrite 46), value asm_rewrite_tac (lcsymtacs 24)
value ASM_RW_RULE (RW 87)
value ASM_RW_TAC (RW 100)
HOL simpLib.ASM_SIMP_RULE (help/Docfiles/simpLib.ASM_SIMP_RULE.adoc 0), value ASM_SIMP_RULE (simpLib 193)
HOL bossLib.ASM_SIMP_TAC (help/Docfiles/bossLib.ASM_SIMP_TAC.adoc 0), HOL simpLib.ASM_SIMP_TAC (help/Docfiles/simpLib.ASM_SIMP_TAC.adoc 0), value ASM_SIMP_TAC (bossLib 89), value ASM_SIMP_TAC (simpLib 170), value asm_simp_tac (bossLib 90), value asm_simp_tac (lcsymtacs 79), value asm_simp_tac (simpLib 171)
value ASM_TAC (schneiderUtils 12)
value ASM_TAUT_TAC (tautLib 14)
value ASN (transcTheory 30), value asn (transcTheory 7)
value ASN_BOUNDS (transcTheory 31)
value ASN_BOUNDS_LT (transcTheory 32)
value ASN_SIN (transcTheory 33)
value asn_tm (transcSyntax 6)
value asr (UnicodeChars 145)
value ASR_ADD (wordsTheory 117)
value ASR_LIMIT (wordsTheory 118)
value ASR_UINT_MAX (wordsTheory 119)
value ass_prec (parmonadsyntax 5)
structure AssembleDiskFiles
structure AssembleHolindexParser
HOL Lib.assert (help/Docfiles/Lib.assert.adoc 0), value assert (Lib 25), value assert (mlibUseful 12)
HOL Lib.assert_exn (help/Docfiles/Lib.assert_exn.adoc 0), value assert_exn (Lib 26)
HOL Lib.assoc (help/Docfiles/Lib.assoc.adoc 0), HOL hol88Lib.assoc (help/Docfiles/hol88Lib.assoc.adoc 0), value assoc (Lib 29), value assoc (hol88Lib 16)
HOL Lib.assoc1 (help/Docfiles/Lib.assoc1.adoc 0), value assoc1 (Lib 27)
HOL Lib.assoc2 (help/Docfiles/Lib.assoc2.adoc 0), value assoc2 (Lib 28)
value ASSOC_APPEND (rich_listTheory 43)
value ASSOC_BAG_UNION (bagTheory 40)
value ASSOC_CONJ (operatorTheory 13)
value ASSOC_CONV (AC 12), value ASSOC_CONV (refuteLib 7)
value ASSOC_DEF (operatorTheory 5)
value ASSOC_DISJ (operatorTheory 14)
value ASSOC_FOLDL_FLAT (rich_listTheory 44)
value ASSOC_FOLDR_FLAT (rich_listTheory 45)
type assoc_mode (GenPolyCanon 4)
value ASSOC_SYM (operatorTheory 15)
value assoc_tm (boolSyntax 172)
HOL Parse.associate_restriction (help/Docfiles/Parse.associate_restriction.adoc 0), value associate_restriction (Parse 93), value associate_restriction (Parse_support 38), value associate_restriction (term_grammar 159)
type associativity (HOLgrammars 4), type associativity (Parse 5), type associativity (term_grammar 7)
value assocToString (HOLgrammars 6)
value assocv (fmapalTheory 104)
value assocv_curried (fmapalTheory 23)
value assocv_ind (fmapalTheory 105)
value assocv_tupled_primitive (fmapalTheory 24)
HOL Tactical.ASSUM_LIST (help/Docfiles/Tactical.ASSUM_LIST.adoc 0), value ASSUM_LIST (Tactical 77), value ASSUM_LIST (jrhTactics 30)
HOL Thm.ASSUME (help/Docfiles/Thm.ASSUME.adoc 0), constructor Assume (Count 11), constructor Assume (mlibKernel 14), value ASSUME (FinalThm 25), value ASSUME (Q 12), value ASSUME (mlibKernel 22)
constructor Assume' (mlibThm 13)
HOL Drule.ASSUME_CONJS (help/Docfiles/Drule.ASSUME_CONJS.adoc 0), value ASSUME_CONJS (Drule 39)
value ASSUME_NAMED_TAC (markerLib 51)
HOL Tactic.ASSUME_TAC (help/Docfiles/Tactic.ASSUME_TAC.adoc 0), value ASSUME_TAC (Tactic 8), value ASSUME_TAC (jrhTactics 24), value assume_tac (Tactic 9), value assume_tac (lcsymtacs 59)
value ASSUME_X_TAC (jbUtils 15)
type AST (Datatype 5), type AST (ParseDatatype 17)
value asterisk (UnicodeChars 96)
value astHol_datatype (Datatype 48)
value atleastone (mlibParser 26)
value ATN (transcTheory 34), value atn (transcTheory 8)
value ATN_BOUNDS (transcTheory 35)
value ATN_TAN (transcTheory 36)
value atn_tm (transcSyntax 7)
constructor Atom (mlibTerm 18), constructor atom (DiskFilesHeader 7)
value atom_name (wfrecUtils 16)
type ATP (holyHammer 4)
value atp_settings (holyHammer 17)
HOL BasicProvers.augment_srw_ss (help/Docfiles/BasicProvers.augment_srw_ss.adoc 0), HOL bossLib.augment_srw_ss (help/Docfiles/bossLib.augment_srw_ss.adoc 0), value augment_srw_ss (BasicProvers 29), value augment_srw_ss (bossLib 71)
value auto_import_definitions (computeLib 5)
value AUTOMATON_TEMP_CLOSURE (Omega_AutomataTheory 5)
value aux_defn (Defn 36)
value ax_tag (FinalTag 9), value ax_tag (Tag 10)
constructor Axiom (Count 11), constructor Axiom (mlibClause 74), constructor Axiom (mlibKernel 14), value AXIOM (mlibKernel 20), value axiom (DB 17)
constructor Axiom' (mlibThm 13)
value axiom_in_db (Opentheory 40)
value axiom_of (TypeBase 19), value axiom_of (TypeBasePure 45)
value axiom_of0 (TypeBase 37), value axiom_of0 (TypeBasePure 64)
value axiomatize (mlibThm 62)
HOL DB.axioms (help/Docfiles/DB.axioms.adoc 0), HOL Theory.axioms (help/Docfiles/Theory.axioms.adoc 0), type Axioms (folMapping 33), value axioms (DB 19)
value axioms_of (FinalTag 4), value axioms_of (Tag 4)
constructor Axm (DB 7)
HOL proofManagerLib.b (help/Docfiles/proofManagerLib.b.adoc 0), value b (proofManagerLib 20)
value BACKCHAIN_TAC (InductiveDefinition 14)
value backend_block (smpp 33)
value backend_style (smpp 35)
HOL proofManagerLib.backup (help/Docfiles/proofManagerLib.backup.adoc 0), value backup (Manager 18), value backup (proofManagerLib 24)
exception BadUTF8 (UTF8 3)
value BAG_AC_ss (bagLib 54), value BAG_AC_ss (bagSimps 6)
value BAG_ALL_DISTINCT (bagTheory 5)
value BAG_ALL_DISTINCT_BAG_INN (bagTheory 41)
value BAG_ALL_DISTINCT_BAG_MERGE (bagTheory 42)
value BAG_ALL_DISTINCT_BAG_OF_SET (bagTheory 43)
value BAG_ALL_DISTINCT_BAG_UNION (bagTheory 44)
value BAG_ALL_DISTINCT_DELETE (bagTheory 45)
value BAG_ALL_DISTINCT_DIFF (bagTheory 46)
value BAG_ALL_DISTINCT_EXTENSION (bagTheory 47)
value BAG_ALL_DISTINCT_SET (bagTheory 48)
value BAG_ALL_DISTINCT_THM (bagTheory 49)
value BAG_ALL_DISTINCT_tm (bagLib 13), value BAG_ALL_DISTINCT_tm (bagSyntax 11)
value BAG_CARD (bagTheory 6)
value BAG_CARD_BAG_INN (bagTheory 50)
value BAG_CARD_DIFF (bagTheory 51)
value BAG_CARD_EMPTY (bagTheory 52)
value BAG_CARD_RELn (bagTheory 7)
value BAG_CARD_THM (bagTheory 53)
value BAG_CARD_tm (bagSyntax 10)
value BAG_CARD_UNION (bagTheory 54)
value BAG_cases (bagTheory 159)
value BAG_CHOICE_DEF (bagTheory 8)
value BAG_CHOICE_SING (bagTheory 55)
value BAG_DECOMPOSE (bagTheory 56)
value BAG_DELETE (bagTheory 9)
value BAG_DELETE_11 (bagTheory 57)
value BAG_DELETE_BAG_IN (bagTheory 58)
value BAG_DELETE_BAG_IN_down (bagTheory 59)
value BAG_DELETE_BAG_IN_up (bagTheory 60)
value BAG_DELETE_commutes (bagTheory 66)
value BAG_DELETE_concrete (bagTheory 67)
value BAG_DELETE_EMPTY (bagTheory 61)
value BAG_DELETE_INSERT (bagTheory 62)
value BAG_DELETE_PSUB_BAG (bagTheory 63)
value BAG_DELETE_SING (bagTheory 64)
value BAG_DELETE_TWICE (bagTheory 65)
value BAG_DIFF (bagTheory 10)
value BAG_DIFF_2L (bagTheory 68)
value BAG_DIFF_2R (bagTheory 69)
value BAG_DIFF_EMPTY (bagTheory 70)
value BAG_DIFF_EMPTY_simple (bagTheory 71)
value BAG_DIFF_EQ_EMPTY (bagTheory 72)
value BAG_DIFF_INSERT (bagTheory 73)
value BAG_DIFF_INSERT_CANCEL_CONV (bagLib 73), value BAG_DIFF_INSERT_CANCEL_CONV (bagSimpleLib 15)
value BAG_DIFF_INSERT_same (bagTheory 75)
value BAG_DIFF_INSERT_SUB_BAG (bagTheory 74)
value BAG_DIFF_tm (bagLib 8), value BAG_DIFF_tm (bagSyntax 5)
value BAG_DIFF_UNION_eliminate (bagTheory 76)
value BAG_DISJOINT (bagTheory 11)
value BAG_DISJOINT_BAG_IN (bagTheory 77)
value BAG_DISJOINT_BAG_INSERT (bagTheory 78)
value BAG_DISJOINT_BAG_UNION (bagTheory 79)
value BAG_DISJOINT_DIFF (bagTheory 80)
value BAG_DISJOINT_EMPTY (bagTheory 81)
value BAG_EQ_INSERT_CANCEL_CONV (bagLib 72), value BAG_EQ_INSERT_CANCEL_CONV (bagSimpleLib 14)
value BAG_EVERY (bagTheory 12)
value BAG_EVERY_MERGE (bagTheory 82)
value BAG_EVERY_SET (bagTheory 83)
value BAG_EVERY_THM (bagTheory 84)
value BAG_EVERY_tm (bagLib 14), value BAG_EVERY_tm (bagSyntax 12)
value BAG_EVERY_UNION (bagTheory 85)
value BAG_EXTENSION (bagTheory 86)
value BAG_FILTER_BAG_INSERT (bagTheory 87)
value BAG_FILTER_DEF (bagTheory 13)
value BAG_FILTER_EMPTY (bagTheory 88)
value BAG_FILTER_EQ_EMPTY (bagTheory 89)
value BAG_FILTER_FILTER (bagTheory 90)
value BAG_FILTER_SUB_BAG (bagTheory 91)
value BAG_GEN_PROD_ALL_ONES (bagTheory 92)
value BAG_GEN_PROD_def (bagTheory 14)
value BAG_GEN_PROD_EMPTY (bagTheory 93)
value BAG_GEN_PROD_EQ_1 (bagTheory 94)
value BAG_GEN_PROD_POSITIVE (bagTheory 95)
value BAG_GEN_PROD_REC (bagTheory 96)
value BAG_GEN_PROD_TAILREC (bagTheory 97)
value BAG_GEN_PROD_UNION (bagTheory 98)
value BAG_GEN_PROD_UNION_LEM (bagTheory 99)
value BAG_GEN_SUM_def (bagTheory 15)
value BAG_GEN_SUM_EMPTY (bagTheory 100)
value BAG_GEN_SUM_REC (bagTheory 101)
value BAG_GEN_SUM_TAILREC (bagTheory 102)
value bag_grammars (bagTheory 270)
value BAG_IMAGE_COMPOSE (bagTheory 103)
value BAG_IMAGE_CONV (bagLib 62), value BAG_IMAGE_CONV (bagSimpleLib 5)
value BAG_IMAGE_DEF (bagTheory 16)
value BAG_IMAGE_EMPTY (bagTheory 104)
value BAG_IMAGE_EQ_EMPTY (bagTheory 105)
value BAG_IMAGE_FINITE (bagTheory 106)
value BAG_IMAGE_FINITE_I (bagTheory 107)
value BAG_IMAGE_FINITE_INSERT (bagTheory 108)
value BAG_IMAGE_FINITE_RESTRICTED_I (bagTheory 109)
value BAG_IMAGE_FINITE_UNION (bagTheory 110)
value BAG_IMAGE_tm (bagLib 12), value BAG_IMAGE_tm (bagSyntax 9)
value BAG_IN (bagTheory 17)
value BAG_IN_BAG_DELETE (bagTheory 131)
value BAG_IN_BAG_DIFF_ALL_DISTINCT (bagTheory 132)
value BAG_IN_BAG_FILTER (bagTheory 133)
value BAG_IN_BAG_INSERT (bagTheory 134)
value BAG_IN_BAG_MERGE (bagTheory 135)
value BAG_IN_BAG_OF_FMAP (containerTheory 11)
value BAG_IN_BAG_OF_SET (bagTheory 136)
value BAG_IN_BAG_UNION (bagTheory 137)
value BAG_IN_BIG_BAG_UNION (bagTheory 138)
value BAG_IN_DIFF_E (bagTheory 139)
value BAG_IN_DIFF_I (bagTheory 140)
value BAG_IN_DIVIDES (bagTheory 141)
value BAG_IN_FINITE_BAG_IMAGE (bagTheory 142)
value BAG_IN_MEM (containerTheory 12)
value BAG_INN (bagTheory 18)
value BAG_INN_0 (bagTheory 111)
value BAG_INN_BAG_DELETE (bagTheory 112)
value BAG_INN_BAG_FILTER (bagTheory 113)
value BAG_INN_BAG_INSERT (bagTheory 114)
value BAG_INN_BAG_INSERT_STRONG (bagTheory 115)
value BAG_INN_BAG_MERGE (bagTheory 116)
value BAG_INN_BAG_UNION (bagTheory 117)
value BAG_INN_EMPTY_BAG (bagTheory 118)
value BAG_INN_LESS (bagTheory 119)
value BAG_INSERT (bagTheory 19)
value BAG_INSERT_CHOICE_REST (bagTheory 120)
value BAG_INSERT_commutes (bagTheory 128)
value BAG_INSERT_DIFF (bagTheory 121)
value BAG_INSERT_EQ_UNION (bagTheory 123)
value BAG_INSERT_EQUAL (bagTheory 122)
value BAG_INSERT_NOT_EMPTY (bagTheory 124)
value BAG_INSERT_ONE_ONE (bagTheory 125)
value BAG_INSERT_SUB_BAG_E (bagTheory 126)
value BAG_INSERT_tm (bagLib 10), value BAG_INSERT_tm (bagSyntax 7)
value BAG_INSERT_UNION (bagTheory 127)
value BAG_INTER (bagTheory 20)
value BAG_INTER_FINITE (bagTheory 129)
value BAG_INTER_SUB_BAG (bagTheory 130)
value BAG_LESS_ADD (bagTheory 143)
value BAG_MERGE (bagTheory 21)
value BAG_MERGE_IDEM (bagTheory 144)
value BAG_NOT_LESS_EMPTY (bagTheory 145)
value BAG_OF_EMPTY (bagTheory 146)
value BAG_OF_FMAP_def (containerTheory 5)
value BAG_OF_FMAP_THM (containerTheory 13)
value BAG_OF_SET (bagTheory 22)
value BAG_RESORT_CONV (bagLib 61), value BAG_RESORT_CONV (bagSimpleLib 4)
value BAG_REST_DEF (bagTheory 23)
value BAG_REST_SING (bagTheory 147)
value bag_size_def (bagTheory 35)
value BAG_SIZE_EMPTY (bagTheory 148)
value BAG_SIZE_INSERT (bagTheory 149)
value BAG_ss (bagLib 56), value BAG_ss (bagSimps 13)
value BAG_TO_LIST_CARD (containerTheory 14)
value BAG_TO_LIST_EQ_NIL (containerTheory 15)
value BAG_TO_LIST_IND (containerTheory 16)
value BAG_TO_LIST_INV (containerTheory 17)
value BAG_TO_LIST_primitive_def (containerTheory 6)
value BAG_TO_LIST_THM (containerTheory 18)
value bag_ty (bagLib 17), value bag_ty (bagSyntax 15)
value BAG_UNION (bagTheory 24)
value BAG_UNION_DIFF (bagTheory 150)
value BAG_UNION_DIFF_eliminate (bagTheory 151)
value BAG_UNION_EMPTY (bagTheory 152)
value BAG_UNION_EQ_LCANCEL1 (bagTheory 153)
value BAG_UNION_EQ_LEFT (bagTheory 154)
value BAG_UNION_EQ_RCANCEL1 (bagTheory 155)
value BAG_UNION_INSERT (bagTheory 156)
value BAG_UNION_LEFT_CANCEL (bagTheory 157)
value BAG_UNION_RIGHT_CANCEL (bagTheory 158)
value BAG_UNION_tm (bagLib 11), value BAG_UNION_tm (bagSyntax 8)
structure bagLib
structure bagSimpleLib
structure bagSimps
structure bagSyntax
structure bagTheory
value ball (topologyTheory 5)
value BALL_NEIGH (topologyTheory 21)
value BALL_OPEN (topologyTheory 22)
value band_def (bitstringTheory 6)
value band_tm (bitstringSyntax 45)
value base64_to_int (mlibUseful 112)
value base_config (satConfig 6)
value base_pp_num (Arbnum 5)
value BASE_RPOW_LE (transcTheory 37)
value BASE_RPOW_LT (transcTheory 38)
type base_token (base_tokens 7)
structure base_tokens
value base_type (bagLib 19), value base_type (bagSyntax 17)
value BASIC_CONV (IntDP_Munge 4)
value basic_diffs (Diff 2), value basic_diffs (realLib 16)
value basic_fix (mlibModel 20)
value basic_qp (quantHeuristicsLibBase 164)
value basic_shadow_equivalence (OmegaTheory 37)
structure BasicProvers
value basicSize_grammars (basicSizeTheory 11)
structure basicSizeSyntax
structure basicSizeTheory
value basis_emit_grammars (basis_emitTheory 33)
structure basis_emitTheory
HOL blastLib.BBLAST_CONV (help/Docfiles/blastLib.BBLAST_CONV.adoc 0), value BBLAST_CONV (blastLib 6)
value BBLAST_PROVE (blastLib 7)
value BBLAST_PROVE_TAC (blastLib 8)
value BBLAST_RULE (blastLib 9)
value BBLAST_TAC (blastLib 10)
value BCARD_0 (bagTheory 160)
value BCARD_SUC (bagTheory 161)
value BCARRY_def (blastTheory 5), value bcarry_def (blastTheory 7)
value BCARRY_def_compute (blastTheory 13)
value BCARRY_EQ (blastTheory 11)
value BCARRY_LEM (blastTheory 12)
value bdominates_BAG_DIFF (bagTheory 250)
value been_stored (Defn 49)
value BEFORE (Temporal_LogicTheory 6)
value BEFORE_AS_CO_BUECHI (Omega_AutomataTheory 6)
value BEFORE_AS_NOT_SWHEN (Temporal_LogicTheory 32)
value BEFORE_AS_SBEFORE (Temporal_LogicTheory 33)
value BEFORE_AS_SUNTIL (Temporal_LogicTheory 34)
value BEFORE_AS_SWHEN (Temporal_LogicTheory 35)
value BEFORE_AS_UNTIL (Temporal_LogicTheory 36)
value BEFORE_AS_WHEN (Temporal_LogicTheory 37)
value BEFORE_AS_WHEN_UNTIL (Temporal_LogicTheory 38)
value BEFORE_EVENT (Temporal_LogicTheory 39)
value BEFORE_EXPRESSIVE (Past_Temporal_LogicTheory 18)
value BEFORE_FIX (Temporal_LogicTheory 40)
value BEFORE_HW (Temporal_LogicTheory 41)
value BEFORE_IDEM (Temporal_LogicTheory 42)
value BEFORE_IMP (Temporal_LogicTheory 43)
value BEFORE_INVARIANT (Temporal_LogicTheory 44)
value BEFORE_LINORD (Temporal_LogicTheory 45)
value BEFORE_NEXT (Temporal_LogicTheory 46)
value BEFORE_REC (Temporal_LogicTheory 47)
value BEFORE_SIGNAL (Temporal_LogicTheory 48)
value BEFORE_SIMP (Temporal_LogicTheory 49)
value begin_block (HOLPP 31)
constructor BeginFinalBlock (term_grammar 14), value BeginFinalBlock (Parse 249)
HOL reduceLib.BEQ_CONV (help/Docfiles/reduceLib.BEQ_CONV.adoc 0), value BEQ_CONV (Boolconv 8), value BEQ_CONV (reduceLib 8)
HOL Thm.Beta (help/Docfiles/Thm.Beta.adoc 0), HOL Type.beta (help/Docfiles/Type.beta.adoc 0), constructor Beta (Count 11), value Beta (FinalThm 95), value beta (FinalType 32), value beta (UnicodeChars 5)
HOL Thm.BETA_CONV (help/Docfiles/Thm.BETA_CONV.adoc 0), HOL Term.beta_conv (help/Docfiles/Term.beta_conv.adoc 0), value BETA_CONV (FinalThm 27), value BETA_CONV (Q 13), value beta_conv (FinalTerm 59)
HOL Conv.BETA_RULE (help/Docfiles/Conv.BETA_RULE.adoc 0), value BETA_RULE (Conv 45)
HOL Tactic.BETA_TAC (help/Docfiles/Tactic.BETA_TAC.adoc 0), value BETA_TAC (Tactic 88)
value BETA_THM (boolTheory 45), value beta_thm (compute_rules 27)
value BETA_VAR (Drule 84)
value better_bt_to_ol (enumeralTheory 85)
value better_bt_to_orl (fmapalTheory 106)
value between (locn 46)
value bf_flatten_append (lbtreeTheory 28)
value bf_flatten_def (lbtreeTheory 9)
value bf_flatten_eq_lnil (lbtreeTheory 29)
value bias (ieeeTheory 23)
value BIG_BAG_UNION_def (bagTheory 25)
value BIG_BAG_UNION_DELETE (bagTheory 162)
value BIG_BAG_UNION_EMPTY (bagTheory 163)
value BIG_BAG_UNION_EQ_ELEMENT (bagTheory 164)
value BIG_BAG_UNION_EQ_EMPTY_BAG (bagTheory 165)
value BIG_BAG_UNION_INSERT (bagTheory 166)
value BIG_BAG_UNION_ITSET_BAG_UNION (bagTheory 167)
value BIG_BAG_UNION_UNION (bagTheory 168)
value big_record_size (Datatype 11)
value bigasterisk (UnicodeChars 95)
value bigger_satisfies_lowers (OmegaTheory 38)
value BIGINTER (pred_setTheory 5)
value BIGINTER_applied (pred_setTheory 60)
value BIGINTER_EMPTY (pred_setTheory 55)
value BIGINTER_INSERT (pred_setTheory 56)
value BIGINTER_INTER (pred_setTheory 57)
value BIGINTER_SING (pred_setTheory 58)
value BIGINTER_SUBSET (util_probTheory 19)
value biginter_tm (pred_setSyntax 29)
value BIGINTER_UNION (pred_setTheory 59)
value bigrec_subdivider_string (GrammarSpecials 23)
value BIGSTEP (defCNFTheory 13)
value BIGUNION (pred_setTheory 6)
value BIGUNION_applied (pred_setTheory 67)
value bigunion_countable (pred_setTheory 417)
value BIGUNION_EMPTY (pred_setTheory 61)
value BIGUNION_EQ_EMPTY (pred_setTheory 62)
value BIGUNION_IMAGE_Q (measureTheory 50)
value BIGUNION_IMAGE_set_SUBSET (listTheory 85)
value BIGUNION_IMAGE_UNIV (util_probTheory 20)
value BIGUNION_INSERT (pred_setTheory 63)
value BIGUNION_PAIR (util_probTheory 21)
value BIGUNION_partition (pred_setTheory 68)
value BIGUNION_SING (pred_setTheory 64)
value BIGUNION_SUBSET (pred_setTheory 65)
value bigunion_tm (pred_setSyntax 28)
value BIGUNION_UNION (pred_setTheory 66)
value BIJ_ALT (util_probTheory 22)
value BIJ_COMPOSE (pred_setTheory 69)
value BIJ_DEF (pred_setTheory 7)
value BIJ_DELETE (pred_setTheory 70)
value BIJ_EMPTY (pred_setTheory 71)
value BIJ_FINITE (pred_setTheory 72)
value BIJ_FINITE_SUBSET (util_probTheory 23)
value BIJ_ID (pred_setTheory 73)
value BIJ_IFF_INV (pred_setTheory 74)
value BIJ_INJ_SURJ (util_probTheory 24)
value BIJ_INSERT (pred_setTheory 75), value BIJ_INSERT (util_probTheory 25)
value BIJ_INV (util_probTheory 26)
value BIJ_LINV_BIJ (pred_setTheory 76)
value BIJ_LINV_INV (pred_setTheory 77)
value BIJ_NUM_COUNTABLE (util_probTheory 27)
value BIJ_SYM (util_probTheory 28)
value BIJ_SYM_IMP (util_probTheory 29)
value bij_tm (pred_setSyntax 40)
value BIJ_TRANS (util_probTheory 30)
value BINARY_GCD (gcdTheory 11)
value bind (mlibUseful 52), value bind (seq 31)
value BIND_ASSOC (errorStateMonadTheory 27), value BIND_ASSOC (state_transformerTheory 21)
value BIND_DEF (errorStateMonadTheory 5), value BIND_DEF (state_transformerTheory 5)
value BIND_ESGUARD (errorStateMonadTheory 28)
value BIND_FAIL_L (errorStateMonadTheory 29)
value BIND_LEFT_UNIT (errorStateMonadTheory 30), value BIND_LEFT_UNIT (state_transformerTheory 22)
value BIND_RIGHT_UNIT (errorStateMonadTheory 31), value BIND_RIGHT_UNIT (state_transformerTheory 23)
value bind_term (Parse_support 20)
value bind_tm (state_transformerSyntax 8)
constructor BINDER (term_grammar 52), constructor Binder (Parse 13), type binder (term_grammar 48)
HOL Conv.BINDER_CONV (help/Docfiles/Conv.BINDER_CONV.adoc 0), value BINDER_CONV (Conv 21), value BINDER_CONV (liteLib 110)
value binder_restrictions (Parse_support 37)
value binder_to_string (term_grammar 156)
value binders (term_grammar 154)
constructor BinderString (term_grammar 48)
value bindl (DB 49)
HOL Conv.BINOP_CONV (help/Docfiles/Conv.BINOP_CONV.adoc 0), value BINOP_CONV (Conv 17)
value BINOP_TAC (Tactic 68), value BINOP_TAC (jrhUtils 11)
value binops (liteLib 95)
value binstring_of_term (bitstringSyntax 14)
value biprefix_append (EncodeTheory 32)
value biprefix_appends (EncodeTheory 33)
value biprefix_cons (EncodeTheory 34)
value biprefix_def (EncodeTheory 5)
value biprefix_refl (EncodeTheory 35)
value biprefix_sym (EncodeTheory 36)
value bit0_11 (fcpTheory 58)
value bit0_Axiom (fcpTheory 59)
value bit0_case_cong (fcpTheory 60)
value bit0_case_def (fcpTheory 20)
value bit0_distinct (fcpTheory 61)
value bit0_induction (fcpTheory 62)
value bit0_nchotomy (fcpTheory 63)
value BIT0_ODD (bitTheory 27)
value bit0_size_def (fcpTheory 21)
value bit0_TY_DEF (fcpTheory 19)
value BIT1 (arithmeticTheory 8)
value bit1_11 (fcpTheory 64)
value bit1_Axiom (fcpTheory 65)
value bit1_case_cong (fcpTheory 66)
value bit1_case_def (fcpTheory 23)
value bit1_distinct (fcpTheory 67)
value BIT1_gt_neg_thm (inttoTheory 9)
value bit1_induction (fcpTheory 68)
value bit1_nchotomy (fcpTheory 69)
value BIT1_nz (inttoTheory 10)
value bit1_size_def (fcpTheory 24)
value bit1_tm (numSyntax 7)
value bit1_TY_DEF (fcpTheory 22)
value BIT2 (arithmeticTheory 9)
value BIT2_gt_neg_thm (inttoTheory 11)
value BIT2_nz (inttoTheory 12)
value bit2_tm (numSyntax 8)
value BIT_B (bitTheory 61)
value BIT_B_NEQ (bitTheory 63)
value BIT_BITS_THM (bitTheory 62)
value BIT_BLAST_CONV (blastLib 4)
value BIT_COMP_THM3 (bitTheory 65)
value BIT_COMPLEMENT (bitTheory 64)
value bit_count_def (wordsTheory 11)
value bit_count_is_zero (wordsTheory 448)
value bit_count_tm (wordsSyntax 24)
value bit_count_upto_0 (wordsTheory 449)
value bit_count_upto_def (wordsTheory 12)
value bit_count_upto_is_zero (wordsTheory 451)
value bit_count_upto_SUC (wordsTheory 450)
value bit_count_upto_tm (wordsSyntax 25)
value BIT_def (bitTheory 10)
value BIT_DIV2 (bitTheory 66)
value BIT_EXP_SUB1 (bitTheory 67)
value bit_field_insert (wordsTheory 452)
value bit_field_insert_def (wordsTheory 13)
value bit_field_insert_tm (wordsSyntax 26)
value bit_grammars (bitTheory 141)
value BIT_IMP_GE_TWOEXP (bitTheory 68)
value bit_induction (numeralTheory 20)
value bit_initiality (numeralTheory 21)
value BIT_LOG2 (bitTheory 69)
value BIT_MODF_def (numeral_bitTheory 5)
value BIT_MODIFY_def (bitTheory 8)
value BIT_MODIFY_EVAL (numeral_bitTheory 16)
value BIT_MODIFY_THM (bitTheory 70)
value bit_modify_tm (bitSyntax 5)
value BIT_num_from_bin_list (numposrepTheory 20)
value BIT_num_from_bin_string (ASCIInumbersTheory 22)
value BIT_OF_BITS_THM (bitTheory 71)
value BIT_OF_BITS_THM2 (bitTheory 72)
value BIT_REV_def (numeral_bitTheory 6)
value BIT_REVERSE_def (bitTheory 9)
value BIT_REVERSE_EVAL (numeral_bitTheory 17)
value BIT_REVERSE_THM (bitTheory 73)
value bit_reverse_tm (bitSyntax 6)
value BIT_SET (wordsTheory 121)
value BIT_SET_CONV (wordsLib 26)
value BIT_SET_curried_def (wordsTheory 5)
value BIT_SET_def (wordsTheory 122)
value BIT_SET_ind (wordsTheory 123)
value bit_set_tm (wordsSyntax 27)
value BIT_SET_tupled_primitive_def (wordsTheory 6)
value BIT_SHIFT_THM (bitTheory 74)
value BIT_SHIFT_THM2 (bitTheory 75)
value BIT_SHIFT_THM3 (bitTheory 76)
value BIT_SHIFT_THM4 (bitTheory 77)
value BIT_SHIFT_THM5 (bitTheory 78)
value BIT_SIGN_EXTEND (bitTheory 79)
value BIT_SLICE (bitTheory 80)
value BIT_SLICE_LEM (bitTheory 81)
value BIT_SLICE_THM (bitTheory 82)
value BIT_SLICE_THM2 (bitTheory 83)
value BIT_SLICE_THM3 (bitTheory 84)
value BIT_SLICE_THM4 (bitTheory 85)
HOL wordsLib.BIT_ss (help/Docfiles/wordsLib.BIT_ss.adoc 0), value BIT_ss (wordsLib 7)
value bit_tm (bitSyntax 7)
value BIT_UPDATE (wordsTheory 124)
value bit_v2w (bitstringTheory 38)
value BIT_ZERO (bitTheory 86)
type bitify_boolify (bitstringLib 8), value bitify_boolify (bitstringLib 32)
value bitify_curried_def (bitstringTheory 7)
value bitify_def (bitstringTheory 39)
value bitify_ind (bitstringTheory 40)
value bitify_num (bitstringLib 30)
value bitify_reverse_map (bitstringTheory 41)
value bitify_tm (bitstringSyntax 46)
value bitify_tupled_primitive_def (bitstringTheory 8)
structure bitLib
value bitlist_of_term (bitstringSyntax 13)
value bitlist_to_int (bitstringSyntax 8)
type bits (mlibClause 32)
value bits_bitwise_curried_def (int_bitwiseTheory 5)
value bits_bitwise_def (int_bitwiseTheory 21)
value bits_bitwise_ind (int_bitwiseTheory 22)
value bits_bitwise_tupled_primitive_def (int_bitwiseTheory 6)
value BITS_COMP_THM (bitTheory 30)
value BITS_COMP_THM2 (bitTheory 31)
value BITS_def (bitTheory 5)
value BITS_DIV_THM (bitTheory 32)
HOL wordsLib.BITS_INTRO_CONV (help/Docfiles/wordsLib.BITS_INTRO_CONV.adoc 0), value BITS_INTRO_CONV (wordsLib 27)
HOL wordsLib.BITS_INTRO_ss (help/Docfiles/wordsLib.BITS_INTRO_ss.adoc 0), value BITS_INTRO_ss (wordsLib 8)
value BITS_LEQ (bitTheory 33)
value BITS_LOG2_ZERO_ID (bitTheory 34)
value BITS_LT_HIGH (bitTheory 35)
value BITS_LT_LOW (bitTheory 36)
value BITS_MUL (bitTheory 37)
value bits_of_int_def (int_bitwiseTheory 7)
value bits_of_num_def (int_bitwiseTheory 23)
value bits_of_num_ind (int_bitwiseTheory 24)
value bits_of_num_primitive_def (int_bitwiseTheory 8)
value BITS_SLICE_THM (bitTheory 38)
value BITS_SLICE_THM2 (bitTheory 39)
value BITS_SUC (bitTheory 40)
value BITS_SUC_THM (bitTheory 41)
value BITS_SUM (bitTheory 42)
value BITS_SUM2 (bitTheory 43)
value BITS_SUM3 (bitTheory 44)
value BITS_THM (bitTheory 45)
value BITS_THM2 (bitTheory 46)
value bits_tm (bitSyntax 8)
value bits_to_int (mlibUseful 110)
value BITS_ZERO (bitTheory 47)
value BITS_ZERO2 (bitTheory 48)
value BITS_ZERO3 (bitTheory 49)
value BITS_ZERO4 (bitTheory 50)
value BITS_ZERO5 (bitTheory 51)
value BITS_ZEROL (bitTheory 52)
value BITS_ZEROL_DIMINDEX (wordsTheory 120)
value BITSLT_THM (bitTheory 28)
value BITSLT_THM2 (bitTheory 29)
value bitstring_grammars (bitstringTheory 126)
value bitstring_nchotomy (bitstringTheory 42)
value bitstring_of_binstring (bitstringSyntax 19)
value bitstring_of_bitlist (bitstringSyntax 18)
value bitstring_of_hexstring (bitstringSyntax 20)
value bitstring_of_int (bitstringSyntax 21)
value bitstring_ty (bitstringSyntax 5)
structure bitstringLib
structure bitstringSyntax
structure bitstringTheory
structure bitSyntax
structure bitTheory
value BITV_def (bitTheory 6)
value BITV_THM (bitTheory 53)
value bitv_tm (bitSyntax 9)
value bitvector_of_binstring (bitstringSyntax 24)
value bitvector_of_bitlist (bitstringSyntax 23)
value bitvector_of_hexstring (bitstringSyntax 25)
value bitvector_of_int (bitstringSyntax 26)
value BITWISE_ADD (blastTheory 14)
value BITWISE_BITS (bitTheory 54)
value BITWISE_COR (bitTheory 55)
value BITWISE_def (bitTheory 7), value bitwise_def (bitstringTheory 9)
value BITWISE_EVAL (bitTheory 56)
value BITWISE_LO (blastTheory 15)
value BITWISE_LT_2EXP (bitTheory 57)
value BITWISE_MUL (blastTheory 16)
value BITWISE_NOT_COR (bitTheory 58)
value BITWISE_ONE_COMP_LEM (bitTheory 59)
value BITWISE_SUB (blastTheory 17)
value BITWISE_THM (bitTheory 60)
value bitwise_tm (bitSyntax 10), value bitwise_tm (bitstringSyntax 47)
value bl_11 (enumeralTheory 86)
value BL_ACCUM (enumeralTheory 5)
value bl_Axiom (enumeralTheory 87)
value bl_case_cong (enumeralTheory 88)
value bl_case_def (enumeralTheory 20)
value BL_CONS (enumeralTheory 6)
value BL_CONS_CONV (enumTacs 13)
value bl_distinct (enumeralTheory 89)
value bl_induction (enumeralTheory 90)
value bl_nchotomy (enumeralTheory 91)
value bl_rev (enumeralTheory 21)
value bl_size_def (enumeralTheory 22)
value bl_to_bt (enumeralTheory 23)
value bl_to_bt_CONV (enumTacs 17)
value bl_to_fmap (fmapalTheory 107)
value bl_to_fmap_curried (fmapalTheory 25)
value bl_to_fmap_ind (fmapalTheory 108)
value bl_to_fmap_tupled_primitive (fmapalTheory 26)
value bl_to_set (enumeralTheory 24)
value bl_TY_DEF (enumeralTheory 19)
value blackstar (UnicodeChars 93)
value blast_grammars (blastTheory 26)
structure blastLib
structure blastTheory
value BLEAF_CONV (CooperMath 81)
value blist_coder_def (CoderTheory 5)
value block (smpp 19)
type block_info (Parse 9), type block_info (term_grammar 5)
value bmarker_def (int_arithTheory 5)
value bmarker_rewrites (int_arithTheory 26)
value bn_tm (sptreeSyntax 15)
value bnand_def (bitstringTheory 10)
value bnor_def (bitstringTheory 11)
value bnot_def (bitstringTheory 12)
value bnot_tm (bitstringSyntax 48)
value bnum_coder_def (CoderTheory 6)
HOL Term.body (help/Docfiles/Term.body.adoc 0), value body (FinalTerm 54)
HOL Drule.BODY_CONJUNCTS (help/Docfiles/Drule.BODY_CONJUNCTS.adoc 0), value BODY_CONJUNCTS (Drule 59)
value BODY_CONV (Canon 21), value BODY_CONV (liteLib 111), value BODY_CONV (refuteLib 21)
value BOLZANO_LEMMA (seqTheory 17)
value BOLZANO_LEMMA_ALT (integralTheory 9)
HOL Type.bool (help/Docfiles/Type.bool.adoc 0), value bool (FinalType 29)
HOL boolSyntax.bool_case (help/Docfiles/boolSyntax.bool_case.adoc 0), value bool_case (boolSyntax 21)
value bool_case_CONG (boolTheory 180)
value bool_case_ID (boolTheory 181)
value bool_case_thm (boolTheory 182)
value BOOL_CASES_AX (boolTheory 5)
HOL Tactic.BOOL_CASES_TAC (help/Docfiles/Tactic.BOOL_CASES_TAC.adoc 0), value BOOL_CASES_TAC (Tactic 49)
value bool_cmp_antisym (comparisonTheory 27)
value bool_cmp_curried_def (comparisonTheory 5)
value bool_cmp_def (comparisonTheory 28)
value bool_cmp_good (comparisonTheory 29)
value bool_cmp_ind (comparisonTheory 30)
value bool_cmp_tupled_primitive_def (comparisonTheory 6)
value bool_coder_def (CoderTheory 7)
value bool_compare (Lib 30), value bool_compare (mlibUseful 37)
HOL computeLib.bool_compset (help/Docfiles/computeLib.bool_compset.adoc 0), value bool_compset (computeLib 11)
HOL Conv.bool_EQ_CONV (help/Docfiles/Conv.bool_EQ_CONV.adoc 0), value bool_EQ_CONV (Conv 104)
value BOOL_EQ_DISTINCT (boolTheory 46)
value BOOL_EQ_IMP_CONV (BoolExtractShared 11)
value BOOL_EQ_IMP_convdata (BoolExtractShared 15)
value BOOL_EXTRACT_SHARED_CONV (BoolExtractShared 13)
value BOOL_EXTRACT_SHARED_convdata (BoolExtractShared 16)
value BOOL_FUN_CASES_THM (boolTheory 47)
value BOOL_FUN_INDUCT (boolTheory 48)
value bool_grammars (boolTheory 191)
value bool_INDUCT (boolTheory 179)
value bool_monoset (InductiveDefinition 12)
value BOOL_NEG_PAIR_CONV (BoolExtractShared 12)
value BOOL_NEG_PAIR_convdata (BoolExtractShared 17)
value bool_of_term (bitstringSyntax 10)
HOL Rewrite.bool_rewrites (help/Docfiles/Rewrite.bool_rewrites.adoc 0), value bool_rewrites (Rewrite 16)
value bool_size_def (basicSizeTheory 5)
value bool_size_tm (basicSizeSyntax 5)
HOL BasicProvers.bool_ss (help/Docfiles/BasicProvers.bool_ss.adoc 0), HOL boolSimps.bool_ss (help/Docfiles/boolSimps.bool_ss.adoc 0), HOL bossLib.bool_ss (help/Docfiles/bossLib.bool_ss.adoc 0), value BOOL_ss (boolSimps 5), value bool_ss (BasicProvers 19), value bool_ss (boolSimps 4), value bool_ss (bossLib 60)
value bool_to_string (mlibUseful 35)
value BOOL_VAR_ELIM_CONV (schneiderUtils 13)
value BOOL_VAR_ELIM_TAC (schneiderUtils 14)
value boolAxiom (boolTheory 178)
structure Boolconv
value BOOLEAN_CLOSURE_F (Omega_AutomataTheory 7)
value BOOLEAN_CLOSURE_FG (Omega_AutomataTheory 8)
value BOOLEAN_CLOSURE_G (Omega_AutomataTheory 9)
value BOOLEAN_CLOSURE_GF (Omega_AutomataTheory 10)
structure BoolExtractShared
value BOOLIFY_def (numposrepTheory 5), value boolify_def (bitstringTheory 13)
value boolify_reverse_map (bitstringTheory 43)
value boolify_tm (bitstringSyntax 49), value boolify_tm (numposrepSyntax 4)
structure boolSimps
structure boolSyntax
structure boolTheory
value bop_characterise (CooperSyntax 33)
value bor_def (bitstringTheory 14)
value bor_tm (bitstringSyntax 50)
value Borel_def (measureTheory 5)
value BOREL_HIERARCHY_F (Omega_AutomataTheory 11)
value BOREL_HIERARCHY_FG (Omega_AutomataTheory 12)
value BOREL_HIERARCHY_G (Omega_AutomataTheory 13)
value BOREL_MEASURABLE_SETS (measureTheory 51)
value BOREL_MEASURABLE_SETS1 (measureTheory 52)
value BOREL_MEASURABLE_SETS10 (measureTheory 53)
value BOREL_MEASURABLE_SETS2 (measureTheory 54)
value BOREL_MEASURABLE_SETS3 (measureTheory 55)
value BOREL_MEASURABLE_SETS4 (measureTheory 56)
value BOREL_MEASURABLE_SETS5 (measureTheory 57)
value BOREL_MEASURABLE_SETS6 (measureTheory 58)
value BOREL_MEASURABLE_SETS7 (measureTheory 59)
value BOREL_MEASURABLE_SETS8 (measureTheory 60)
value BOREL_MEASURABLE_SETS9 (measureTheory 61)
constructor BOS (term_grammar 169)
structure bossLib
value bot_and_greaters (int_arithTheory 27)
constructor Both (mlibRewrite 13)
value BOTH_EXISTS_AND_THM (boolTheory 49)
value BOTH_EXISTS_IMP_CONV (Conv 72)
value BOTH_EXISTS_IMP_THM (boolTheory 50)
value BOTH_FORALL_IMP_THM (boolTheory 51)
value BOTH_FORALL_OR_THM (boolTheory 52)
constructor Both_horn (mlibCanon 38)
value BOTTOM (ind_typeTheory 5)
value bottom_def (posetTheory 5)
value bottomfloat (ieeeTheory 24)
constructor Bound (BasicProvers 52), constructor Bound (Sup_Inf 4), type bound (Sup_Inf 4)
value BOUND_AT_WORST_LEMMA (floatTheory 10)
value BOUND_ORDER (wordsTheory 125)
constructor BOUNDED (BoundedRewrites 3), value bounded (netsTheory 5)
value BOUNDED_DEF (boolTheory 12)
value BOUNDED_EXISTS_CONV (numLib 34)
value BOUNDED_EXISTS_THM (arithmeticTheory 61)
value BOUNDED_FORALL_CONV (numLib 33)
value BOUNDED_FORALL_THM (arithmeticTheory 62)
value BOUNDED_NOT_EXISTS_LIST_CONV (quantHeuristicsLibBase 13), value BOUNDED_NOT_EXISTS_LIST_CONV (quantHeuristicsTools 11)
value BOUNDED_REPEATC (quantHeuristicsLibBase 14), value BOUNDED_REPEATC (quantHeuristicsTools 12)
value BOUNDED_THM (boolTheory 53)
value bounded_tm (boolSyntax 26)
structure BoundedRewrites
value bracket_special (GrammarSpecials 4)
constructor BRANCH (mlibUseful 171), value BRANCH (patriciaTheory 46)
value BRANCH_def (patriciaTheory 52)
value BRANCH_ind (patriciaTheory 53)
value BRANCH_primitive_def (patriciaTheory 10)
value branch_tm (patriciaSyntax 11)
value BRANCHING_BIT (patriciaTheory 47)
value BRANCHING_BIT_curried_def (patriciaTheory 8)
value BRANCHING_BIT_def (patriciaTheory 50)
value BRANCHING_BIT_ind (patriciaTheory 51)
value BRANCHING_BIT_SYM (patriciaTheory 48)
value branching_bit_tm (patriciaSyntax 27)
value BRANCHING_BIT_tupled_primitive_def (patriciaTheory 9)
value BRANCHING_BIT_ZERO (patriciaTheory 49)
value break_abs (Term 14)
value break_const (Term 13)
type break_style (HOLPP 9), type break_style (PPBackEnd 5)
constructor BreakSpace (term_grammar 14), value BreakSpace (Parse 247)
value BRESTR (tcTheory 5)
value bring_to_front_overload (Parse 108)
value bring_to_front_overloading (Overload 57)
constructor BRULE (term_grammar 89)
value bs_tm (sptreeSyntax 16)
value Bset_def (DeepSyntaxTheory 6)
value BSUM_def (blastTheory 6), value bsum_def (blastTheory 8)
value BSUM_EQ (blastTheory 18)
value BSUM_LEM (blastTheory 19)
value bt_11 (enumeralTheory 92)
constructor BT_AQ (base_tokens 7)
value bt_Axiom (enumeralTheory 93)
value bt_case_cong (enumeralTheory 94)
value bt_case_def (enumeralTheory 95)
constructor BT_DecimalFraction (base_tokens 7)
value bt_distinct (enumeralTheory 96)
constructor BT_EOI (base_tokens 7)
value bt_FST_FDOM (fmapalTheory 109)
constructor BT_Ident (base_tokens 7)
value bt_induction (enumeralTheory 97)
value bt_map (fmapalTheory 27)
value bt_nchotomy (enumeralTheory 98)
constructor BT_Numeral (base_tokens 7)
value bt_rev (enumeralTheory 26)
value bt_rev_CONV (enumTacs 14)
value bt_rplacv_cn (fmapalTheory 110)
value bt_rplacv_cn_curried (fmapalTheory 28)
value bt_rplacv_cn_ind (fmapalTheory 111)
value bt_rplacv_cn_tupled_primitive (fmapalTheory 29)
value bt_rplacv_thm (fmapalTheory 112)
value bt_size_def (enumeralTheory 27)
value bt_to_bl (enumeralTheory 28)
value bt_to_fmap (fmapalTheory 113)
value bt_to_fmap_curried (fmapalTheory 30)
value bt_to_fmap_ind (fmapalTheory 114)
value bt_to_fmap_lb (fmapalTheory 31)
value bt_to_fmap_lb_ub (fmapalTheory 32)
value bt_to_fmap_tupled_primitive (fmapalTheory 33)
value bt_to_fmap_ub (fmapalTheory 34)
value bt_to_list (enumeralTheory 29)
value bt_to_list_ac (enumeralTheory 30)
value bt_to_list_CONV (enumTacs 16)
value bt_to_list_thm (enumeralTheory 99)
value bt_to_ol (enumeralTheory 31)
value bt_to_ol_ac (enumeralTheory 32)
value bt_to_ol_ID_IMP (enumeralTheory 100)
value bt_to_ol_lb (enumeralTheory 33)
value bt_to_ol_lb_ac (enumeralTheory 34)
value bt_to_ol_lb_ub (enumeralTheory 35)
value bt_to_ol_lb_ub_ac (enumeralTheory 36)
value bt_to_ol_ub (enumeralTheory 37)
value bt_to_ol_ub_ac (enumeralTheory 38)
value bt_to_orl (fmapalTheory 115)
value bt_to_orl_ac (fmapalTheory 117)
value bt_to_orl_ac_curried (fmapalTheory 35)
value bt_to_orl_ac_ind (fmapalTheory 118)
value bt_to_orl_ac_tupled_primitive (fmapalTheory 36)
value bt_to_orl_curried (fmapalTheory 37)
value bt_to_orl_ID_IMP (fmapalTheory 116)
value bt_to_orl_ind (fmapalTheory 119)
value bt_to_orl_lb (fmapalTheory 120)
value bt_to_orl_lb_ac (fmapalTheory 121)
value bt_to_orl_lb_ac_curried (fmapalTheory 38)
value bt_to_orl_lb_ac_ind (fmapalTheory 122)
value bt_to_orl_lb_ac_tupled_primitive (fmapalTheory 39)
value bt_to_orl_lb_curried (fmapalTheory 40)
value bt_to_orl_lb_ind (fmapalTheory 123)
value bt_to_orl_lb_tupled_primitive (fmapalTheory 41)
value bt_to_orl_lb_ub (fmapalTheory 124)
value bt_to_orl_lb_ub_ac (fmapalTheory 125)
value bt_to_orl_lb_ub_ac_curried (fmapalTheory 42)
value bt_to_orl_lb_ub_ac_ind (fmapalTheory 126)
value bt_to_orl_lb_ub_ac_tupled_AUX (fmapalTheory 43)
value bt_to_orl_lb_ub_ac_tupled_primitive (fmapalTheory 44)
value bt_to_orl_lb_ub_curried (fmapalTheory 45)
value bt_to_orl_lb_ub_ind (fmapalTheory 127)
value bt_to_orl_lb_ub_tupled_primitive (fmapalTheory 46)
value bt_to_orl_tupled_primitive (fmapalTheory 47)
value bt_to_orl_ub (fmapalTheory 128)
value bt_to_orl_ub_ac (fmapalTheory 129)
value bt_to_orl_ub_ac_curried (fmapalTheory 48)
value bt_to_orl_ub_ac_ind (fmapalTheory 130)
value bt_to_orl_ub_ac_tupled_primitive (fmapalTheory 49)
value bt_to_orl_ub_curried (fmapalTheory 50)
value bt_to_orl_ub_ind (fmapalTheory 131)
value bt_to_orl_ub_tupled_primitive (fmapalTheory 51)
value bt_to_set (enumeralTheory 39)
value bt_to_set_lb (enumeralTheory 40)
value bt_to_set_lb_ub (enumeralTheory 41)
value bt_to_set_ub (enumeralTheory 42)
value bt_TY_DEF (enumeralTheory 25)
value BUECHI_PERIODIC_MODEL (Omega_AutomataTheory 14)
value BUECHI_PERIODIC_REDUCTION_THM (Omega_AutomataTheory 15)
value BUECHI_PROP_REDUCTION (Omega_AutomataTheory 16)
value BUECHI_TRANSLATION (Omega_AutomataTheory 17)
exception Bug (mlibUseful 10)
constructor BUILD (TotalDefn 35)
value build_arith (Term_coeffs 18)
value build_leq (Term_coeffs 19)
value build_log_dir (Systeml 42)
value build_log_file (Systeml 43)
value build_map (folTools 48)
value build_pcomp_trace (pathTheory 56)
value build_term_vector (SharingTables 42)
value build_tyinfos (Datatype 38)
value build_type_vector (SharingTables 34)
value BUTFIRSTN (rich_listTheory 382)
value BUTFIRSTN_APPEND1 (rich_listTheory 383)
value BUTFIRSTN_APPEND2 (rich_listTheory 384)
value BUTFIRSTN_BUTFIRSTN (rich_listTheory 385)
value BUTFIRSTN_CONS_EL (rich_listTheory 386)
HOL listLib.BUTFIRSTN_CONV (help/Docfiles/listLib.BUTFIRSTN_CONV.adoc 0), value BUTFIRSTN_CONV (ListConv1 38), value BUTFIRSTN_CONV (listLib 52)
value BUTFIRSTN_LASTN (rich_listTheory 387)
value BUTFIRSTN_LENGTH_APPEND (rich_listTheory 388)
value BUTFIRSTN_LENGTH_NIL (rich_listTheory 389)
value BUTFIRSTN_REVERSE (rich_listTheory 390)
value BUTFIRSTN_SEG (rich_listTheory 391)
value BUTFIRSTN_SNOC (rich_listTheory 392)
HOL Lib.butlast (help/Docfiles/Lib.butlast.adoc 0), value BUTLAST (rich_listTheory 393), value butlast (Lib 31)
value BUTLAST_CONS (rich_listTheory 397)
HOL listLib.BUTLAST_CONV (help/Docfiles/listLib.BUTLAST_CONV.adoc 0), value BUTLAST_CONV (ListConv1 34), value BUTLAST_CONV (listLib 48)
value BUTLASTN (rich_listTheory 6)
value BUTLASTN_1 (rich_listTheory 46)
value BUTLASTN_APPEND1 (rich_listTheory 47)
value BUTLASTN_APPEND2 (rich_listTheory 48)
value BUTLASTN_BUTLAST (rich_listTheory 394)
value BUTLASTN_BUTLASTN (rich_listTheory 49)
value BUTLASTN_compute (rich_listTheory 62)
value BUTLASTN_CONS (rich_listTheory 50)
HOL listLib.BUTLASTN_CONV (help/Docfiles/listLib.BUTLASTN_CONV.adoc 0), value BUTLASTN_CONV (ListConv1 37), value BUTLASTN_CONV (listLib 51)
value BUTLASTN_FIRSTN (rich_listTheory 395)
value BUTLASTN_FRONT (rich_listTheory 51)
value BUTLASTN_LASTN (rich_listTheory 52)
value BUTLASTN_LASTN_NIL (rich_listTheory 53)
value BUTLASTN_LENGTH_APPEND (rich_listTheory 54)
value BUTLASTN_LENGTH_CONS (rich_listTheory 55)
value BUTLASTN_LENGTH_NIL (rich_listTheory 56)
value BUTLASTN_MAP (rich_listTheory 57)
value BUTLASTN_REVERSE (rich_listTheory 58)
value BUTLASTN_SEG (rich_listTheory 59)
value BUTLASTN_SUC_BUTLAST (rich_listTheory 396)
value BUTLASTN_SUC_FRONT (rich_listTheory 60)
value BUTLASTN_TAKE (rich_listTheory 61)
value butlastn_tm (rich_listSyntax 5)
constructor Bv (KernelTypes 33), constructor Bv (clauses 8)
HOL Term.bvar (help/Docfiles/Term.bvar.adoc 0), value bvar (FinalTerm 53)
type bvar_in_env (Parse_support 8)
HOL HolKernel.bvk_find_term (help/Docfiles/HolKernel.bvk_find_term.adoc 0), value bvk_find_term (HolKernelDoc 18)
value bxnor_def (bitstringTheory 15)
value bxor_def (bitstringTheory 16)
value bxor_tm (bitstringSyntax 51)
HOL bossLib.by (help/Docfiles/bossLib.by.adoc 0), value by (BasicProvers 47), value by (bossLib 117), value by (jrhTactics 10)
value bys (jrhTactics 11)
value byte_align_def (alignmentTheory 7)
value byte_align_tm (alignmentSyntax 7)
value byte_aligned_def (alignmentTheory 8)
value byte_aligned_tm (alignmentSyntax 8)
HOL Lib.C (help/Docfiles/Lib.C.adoc 0), value C (Lib 12), value C (mlibUseful 25)
value C_ABS_L (combinTheory 18)
value C_BAG_INSERT_ONE_ONE (bagTheory 172)
value C_DEF (combinTheory 6)
value C_PRS (quotientTheory 22)
value C_RSP (quotientTheory 23)
value C_THM (combinTheory 19)
value C_tm (combinSyntax 7)
value C_UNCURRY_L (pairTheory 23)
structure Cache, type cache (Cache 36), type cache (bagLib 3), type cache (bagSimps 3), value CACHE (Cache 37), value cache (mesonLib 15)
value cache_values (Cache 39)
value cached (mlibUseful 186)
value CACHED_ARITH (numSimps 16)
value caching (quotient 45)
value calc_nightmare_curried_def (OmegaTheory 7)
value calc_nightmare_def (OmegaTheory 39)
value calc_nightmare_ind (OmegaTheory 40)
value calc_nightmare_tupled_primitive_def (OmegaTheory 8)
value calculate_range_disjunct (OmegaMath 25)
value calculational_nightmare (OmegaTheory 41)
type call_info (Profile 3)
HOL Lib.can (help/Docfiles/Lib.can.adoc 0), value can (Lib 32), value can (mlibUseful 15)
value can_get_big (int_arithTheory 28)
value can_get_small (int_arithTheory 29)
value can_unify (Pretype 28)
value CANCEL_CONV (bagLib 55), value CANCEL_CONV (bagSimps 8)
value CANCEL_SUB (arithmeticTheory 63)
structure Canon
structure Canon_Port
value canonical_grammars (canonicalTheory 67)
value canonical_sum_11 (canonicalTheory 32)
value canonical_sum_Axiom (canonicalTheory 33)
value canonical_sum_case_cong (canonicalTheory 34)
value canonical_sum_case_def (canonicalTheory 6)
value canonical_sum_distinct (canonicalTheory 35)
value canonical_sum_induction (canonicalTheory 36)
value canonical_sum_merge_curried_def (canonicalTheory 7)
value canonical_sum_merge_def (canonicalTheory 37), value canonical_sum_merge_def (ringNormTheory 29)
value canonical_sum_merge_ind (canonicalTheory 38)
value canonical_sum_merge_ok (canonicalTheory 39)
value canonical_sum_merge_tupled_primitive_def (canonicalTheory 8)
value canonical_sum_nchotomy (canonicalTheory 40)
value canonical_sum_prod_def (canonicalTheory 9), value canonical_sum_prod_def (ringNormTheory 30)
value canonical_sum_prod_ok (canonicalTheory 41)
value canonical_sum_scalar2_def (canonicalTheory 10), value canonical_sum_scalar2_def (ringNormTheory 31)
value canonical_sum_scalar2_ok (canonicalTheory 42)
value canonical_sum_scalar3_def (canonicalTheory 11), value canonical_sum_scalar3_def (ringNormTheory 32)
value canonical_sum_scalar3_ok (canonicalTheory 43)
value canonical_sum_scalar_def (canonicalTheory 12), value canonical_sum_scalar_def (ringNormTheory 33)
value canonical_sum_scalar_ok (canonicalTheory 44)
value canonical_sum_simplify_def (canonicalTheory 13), value canonical_sum_simplify_def (ringNormTheory 34)
value canonical_sum_simplify_ok (canonicalTheory 45)
value canonical_sum_size_def (canonicalTheory 14)
value canonical_sum_TY_DEF (canonicalTheory 5)
value canonicalize_clauses (InductiveDefinition 29)
structure canonicalTheory
exception CANT_BACKUP_ANYMORE (History 4)
value CARATHEODORY (measureTheory 62)
value CARATHEODORY_LEMMA (measureTheory 63)
value CARD_BIGUNION_SAME_SIZED_SETS (pred_setTheory 78)
value CARD_CONV (PFset_conv 10)
value CARD_COUNT (pred_setTheory 79)
value CARD_CROSS (pred_setTheory 80)
value CARD_DEF (pred_setTheory 8)
value CARD_DELETE (pred_setTheory 81)
value CARD_DIFF (pred_setTheory 82)
value CARD_DIFF_EQN (pred_setTheory 83)
value card_dimindex (fcpTheory 70)
value CARD_EMPTY (pred_setTheory 84)
value CARD_EQ_0 (pred_setTheory 85)
value CARD_INJ_IMAGE (pred_setTheory 86)
value CARD_INSERT (pred_setTheory 87)
value CARD_INTER_LESS_EQ (pred_setTheory 88)
value CARD_LIST_TO_BAG (containerTheory 19)
value CARD_LIST_TO_SET (listTheory 86), value CARD_LIST_TO_SET (patriciaTheory 54)
value CARD_NUMSET_OF_PTREE (patriciaTheory 55)
value CARD_POW (pred_setTheory 89)
value CARD_PSUBSET (pred_setTheory 90)
value CARD_REST (pred_setTheory 91)
value CARD_SING (pred_setTheory 92)
value CARD_SING_CROSS (pred_setTheory 93)
value CARD_SUBSET (pred_setTheory 94)
value card_tm (pred_setSyntax 20)
value CARD_UNION (pred_setTheory 95)
value CARD_UNION_EQN (pred_setTheory 96)
value CARD_UNION_LE (pred_setTheory 97)
value carrier_def (posetTheory 6)
value cart (mlibUseful 71)
value CART_EQ (fcpTheory 36)
value cart_TY_DEF (fcpTheory 25)
value cart_tybij (fcpTheory 26)
value cartwith (mlibUseful 70)
value case_arrow_special (GrammarSpecials 34)
value case_cong_of (TypeBase 25), value case_cong_of (TypeBasePure 51)
value case_cong_ss (DatatypeSimps 99)
value case_cong_stateful_ss (DatatypeSimps 100)
value case_cong_thm (Prim_rec 44)
value case_cong_typeinfos_ss (DatatypeSimps 101)
value case_const_of (TypeBase 24), value case_const_of (TypeBasePure 50)
value case_constant_defn_name (Prim_rec 32)
value case_constant_name (Prim_rec 31)
value case_def_of (TypeBase 26), value case_def_of (TypeBasePure 52)
value case_initialised (GrammarSpecials 41)
value CASE_SIMP_CONV (BasicProvers 71)
value case_special (GrammarSpecials 32)
value case_split_special (GrammarSpecials 33)
HOL BasicProvers.CASE_TAC (help/Docfiles/BasicProvers.CASE_TAC.adoc 0), value CASE_TAC (BasicProvers 73), value CASE_TAC (bossLib 41)
HOL BasicProvers.Cases (help/Docfiles/BasicProvers.Cases.adoc 0), HOL bossLib.Cases (help/Docfiles/bossLib.Cases.adoc 0), value Cases (BasicProvers 61), value Cases (bossLib 33), value cases (seq 15)
HOL BasicProvers.Cases_on (help/Docfiles/BasicProvers.Cases_on.adoc 0), HOL bossLib.Cases_on (help/Docfiles/bossLib.Cases_on.adoc 0), value Cases_on (BasicProvers 63), value Cases_on (bossLib 36)
value Cases_on_i2w (integer_wordLib 6)
value Cases_on_v2w (bitstringLib 6)
value Cases_on_word (wordsLib 58)
value Cases_on_word_value (wordsLib 59)
value cases_qp (quantHeuristicsLib 131), value cases_qp (quantHeuristicsLibBase 141)
HOL Thm_cont.CASES_THENL (help/Docfiles/Thm_cont.CASES_THENL.adoc 0), value CASES_THENL (Thm_cont 26)
value cases_to_top_RULE (DatatypeSimps 116)
value Cases_word (wordsLib 56)
value Cases_word_value (wordsLib 57)
value cast_ptree_compset (patricia_castsLib 12)
value CAST_PTREE_CONV (patricia_castsLib 13)
value catch_SIGINT (Portable 79)
value catch_withpp_err (HOLPP 38)
value categorise_leaf (CooperSyntax 34)
value categorize_clauses (mlibCanon 41)
type category (mlibCanon 39)
value category_to_string (mlibCanon 42)
value cauchy (seqTheory 5)
HOL computeLib.CBV_CONV (help/Docfiles/computeLib.CBV_CONV.adoc 0), value CBV_CONV (computeLib 24)
value CC (Systeml 26)
value ccode2num_11 (ieeeTheory 102)
value ccode2num_num2ccode (ieeeTheory 104)
value ccode2num_ONTO (ieeeTheory 103)
value ccode2num_thm (ieeeTheory 105)
value ccode_Axiom (ieeeTheory 106)
value ccode_BIJ (ieeeTheory 25)
value ccode_CASE (ieeeTheory 26)
value ccode_case_cong (ieeeTheory 108)
value ccode_case_def (ieeeTheory 109)
value ccode_distinct (ieeeTheory 110)
value ccode_EQ_ccode (ieeeTheory 107)
value ccode_induction (ieeeTheory 111)
value ccode_nchotomy (ieeeTheory 112)
value ccode_size_def (ieeeTheory 28)
value ccode_TY_DEF (ieeeTheory 27)
HOL Thm.CCONTR (help/Docfiles/Thm.CCONTR.adoc 0), constructor Ccontr (Count 11), value CCONTR (FinalThm 90)
HOL Tactic.CCONTR_TAC (help/Docfiles/Tactic.CCONTR_TAC.adoc 0), value CCONTR_TAC (Tactic 7)
value cd (Portable 51)
value ceil (Arbrat 44)
value ceiling_def (extrealTheory 7)
value CEILING_LBOUND (extrealTheory 46)
value CEILING_UBOUND (extrealTheory 47)
value chain_def (posetTheory 7), value chain_def (set_relationTheory 10), value chain_def (wotTheory 7)
HOL ConseqConv.CHANGED_CONSEQ_CONV (help/Docfiles/ConseqConv.CHANGED_CONSEQ_CONV.adoc 0), value CHANGED_CONSEQ_CONV (ConseqConv 201)
HOL Conv.CHANGED_CONV (help/Docfiles/Conv.CHANGED_CONV.adoc 0), value CHANGED_CONV (Conv 35), value CHANGED_CONV (RJBConv 9)
HOL Tactical.CHANGED_TAC (help/Docfiles/Tactical.CHANGED_TAC.adoc 0), value CHANGED_TAC (Tactical 85)
value char_BIJ (stringTheory 18)
value char_cmp_antisym (comparisonTheory 31)
value char_cmp_charOrd (comparisonTheory 32)
value char_cmp_def (comparisonTheory 7)
value char_cmp_good (comparisonTheory 33)
value char_EQ_CONV (stringLib 39)
value CHAR_EQ_THM (stringTheory 46)
value char_ge_def (stringTheory 20)
value char_ge_tm (stringSyntax 7)
value char_gt_def (stringTheory 21)
value char_gt_tm (stringSyntax 8)
value CHAR_INDUCT_THM (stringTheory 47)
value char_le_def (stringTheory 22)
value char_le_tm (stringSyntax 9)
value char_lt_def (stringTheory 23)
value char_lt_tm (stringSyntax 10)
value char_nchotomy (stringTheory 95)
value char_rewrites (stringSimps 4)
value char_size_def (stringTheory 24)
value char_ty (stringLib 4), value char_ty (stringSyntax 4)
value char_TY_DEF (stringTheory 19)
type charclass (HOLtokens 3)
value charOrd (totoTheory 11)
value charOrd_eq_lem (totoTheory 90)
value charOrd_gt_lem (totoTheory 91)
value charOrd_lt_lem (totoTheory 92)
value charOrd_thm (totoTheory 93)
structure CharSet, type CharSet (CharSet 3)
value charto (totoTheory 12)
value charto_CONV (totoTacs 19)
value chase (Pretype 44)
value chatting (goalStack 6), value chatting (mesonLib 16), value chatting (proofManagerLib 6), value chatting (quotient 43)
HOL bossLib.cheat (help/Docfiles/bossLib.cheat.adoc 0), value cheat (bossLib 119)
value check (mlibModel 44)
HOL Tactic.CHECK_ASSUME_TAC (help/Docfiles/Tactic.CHECK_ASSUME_TAC.adoc 0), value CHECK_ASSUME_TAC (Tactic 41)
value check_definition (InductiveDefinition 31)
value check_divides (CooperMath 35)
value check_guess (quantHeuristicsLibBase 105)
value check_meter (mlibMeter 31)
value checking_const_names (Globals 31)
value checking_type_names (Globals 30)
value checkn (mlibModel 45)
constructor choice (PEGParse 3)
value CHOICE_DEF (pred_setTheory 9)
value CHOICE_INSERT_REST (pred_setTheory 98)
value CHOICE_NOT_IN_REST (pred_setTheory 99)
value CHOICE_SING (pred_setTheory 100)
value choice_tm (pred_setSyntax 36)
value chomp (mlibUseful 123)
HOL Thm.CHOOSE (help/Docfiles/Thm.CHOOSE.adoc 0), constructor Choose (Count 11), value CHOOSE (FinalThm 69), value CHOOSE (Rules 10), value choose (PIntMap 46)
HOL Tactic.CHOOSE_TAC (help/Docfiles/Tactic.CHOOSE_TAC.adoc 0), value CHOOSE_TAC (Tactic 56), value CHOOSE_TAC (jrhTactics 36)
HOL Thm_cont.CHOOSE_THEN (help/Docfiles/Thm_cont.CHOOSE_THEN.adoc 0), value CHOOSE_THEN (Thm_cont 21)
value chooser_def (pred_setTheory 41)
value chooser_def_compute (pred_setTheory 418)
value chop (Coding 15)
value chop_list (liteLib 46)
value chr (UTF8 7)
value CHR_11 (stringTheory 48)
value CHR_ONTO (stringTheory 49)
value CHR_ORD (stringTheory 50)
value chr_tm (stringLib 7), value chr_tm (stringSyntax 11)
value cinst (TypeBasePure 109)
type cinst_infos (abstraction 27)
value circlestar (UnicodeChars 97)
HOL DB.class (help/Docfiles/DB.class.adoc 0), type class (DB 7)
value classic_heuristic_fun (PmatchHeuristics 67)
value clausal (mlibCanon 29)
type clause (mlibClause 29), type clause (mlibClauseset 9), type clause (mlibResolution 11), type clause (mlibSupport 10), value clause (mlibThm 25)
structure clauses, value clauses (mlibClauseset 28), value clauses (mlibThm 64)
type clauseset (mlibClauseset 22)
value clean (Pretype 42)
value CLEANUP_DEF_CNF_CONV (defCNF 38), value CLEANUP_DEF_CNF_CONV (normalForms 166)
value CLEANUP_SKOLEM_CONSTS_RULE (normalForms 192)
value clear_arith_caches (numSimps 17)
value clear_cache (Cache 38)
value clear_CONSEQ_CONV_CACHE (ConseqConv 113)
value clear_CONSEQ_CONV_CACHE_OPT (ConseqConv 114)
HOL Parse.clear_overloads_on (help/Docfiles/Parse.clear_overloads_on.adoc 0), value clear_overloads_on (Parse 109)
value clear_ppstream (HOLPP 33)
value clear_stateful_qp (quantHeuristicsLib 67), value clear_stateful_qp (quantHeuristicsLibBase 159), value clear_stateful_qp (quantHeuristicsLibParameters 9)
constructor CLOS (clauses 8), constructor Clos (KernelTypes 33)
value close_in (Portable 65)
value close_out (Portable 63)
value closed (topologyTheory 6)
value CLOSED_CDI_COMPL (measureTheory 64)
value closed_cdi_def (measureTheory 8)
value CLOSED_CDI_DISJOINT (measureTheory 65)
value CLOSED_CDI_DUNION (measureTheory 66)
value CLOSED_CDI_INCREASING (measureTheory 67)
value closed_def (fixedPointTheory 5)
value CLOSED_LIMPT (topologyTheory 23)
value CLOSED_PAIR_EQ (pairTheory 20)
constructor CLOSEFIX (term_grammar 74), constructor Closefix (term_grammar 83), value Closefix (Parse 239)
value closest (ieeeTheory 29)
value CLOSEST_IN_SET (floatTheory 11)
value CLOSEST_IS_CLOSEST (floatTheory 12)
value CLOSEST_IS_EVERYTHING (floatTheory 13)
type cmp (Lib 5)
value cmp_thms (comparisonTheory 34)
value CMUL_IN_Q (extrealTheory 48)
value cnf (mlibCanon 31)
HOL normalForms.CNF_CONV (help/Docfiles/normalForms.CNF_CONV.adoc 0), value CNF_CONV (Canon 24), value CNF_CONV (normalForms 124), value CNF_CONV (refuteLib 24)
value CNF_CONV' (normalForms 123)
value CNF_REFUTE (Canon 27), value CNF_REFUTE (refuteLib 27)
value CNF_THEN_REFUTE (Canon 26), value CNF_THEN_REFUTE (refuteLib 26)
value CNTXT_REABBREV_TAC (markerLib 32)
type cntxt_solver (RW 38)
value CO_BUECHI_BEFORE_CLOSURE (Omega_AutomataTheory 18)
value CO_BUECHI_CONJ_CLOSURE (Omega_AutomataTheory 19)
value CO_BUECHI_DISJ_CLOSURE (Omega_AutomataTheory 20)
value CO_BUECHI_NEXT_CLOSURE (Omega_AutomataTheory 21)
value CO_BUECHI_SBEFORE_CLOSURE (Omega_AutomataTheory 22)
value CO_BUECHI_SUNTIL_CLOSURE (Omega_AutomataTheory 23)
value CO_BUECHI_SWHEN_CLOSURE (Omega_AutomataTheory 24)
value CO_BUECHI_UNTIL_CLOSURE (Omega_AutomataTheory 25)
value CO_BUECHI_WHEN_CLOSURE (Omega_AutomataTheory 26)
value Coder_grammars (CoderTheory 37)
structure CoderTheory
structure Coding
value coeffs_of_arith (Term_coeffs 15)
value coeffs_of_leq (Term_coeffs 16)
value coeffs_of_leq_set (Term_coeffs 17)
value coin_flip (mlibUseful 184)
structure CoIndDefLib
value collect_additive_consts (intReduce 12), value collect_additive_consts (intSimps 12)
value collect_in_sum (CooperMath 25)
value COLLECT_NUM_CONSTS_CONV (Norm_arith 6)
value collect_terms (CooperMath 24)
value collision_free_def (EncodeTheory 6)
constructor COMB (HolKernelDoc 10), constructor COMB (Psyntax 45), constructor COMB (Rsyntax 48), constructor Comb (KernelTypes 33), constructor Comb (Preterm 10)
HOL Conv.COMB2_CONV (help/Docfiles/Conv.COMB2_CONV.adoc 0), value COMB2_CONV (Conv 15), value COMB2_CONV (liteLib 112)
value COMB2_QCONV (liteLib 113)
HOL Conv.COMB_CONV (help/Docfiles/Conv.COMB_CONV.adoc 0), value COMB_CONV (Conv 14), value COMB_CONV (liteLib 114)
value COMB_QCONV (liteLib 115)
value combin_grammars (combinTheory 49)
value COMBIN_ss (combinSimps 2)
HOL Lib.combine (help/Docfiles/Lib.combine.adoc 0), value combine (Lib 33), value combine (mlibSolver 61)
value COMBINE_HEURISTIC_FUNS (quantHeuristicsLibBase 180)
value combine_qp (quantHeuristicsLib 126), value combine_qp (quantHeuristicsLibBase 172)
value combine_qps (quantHeuristicsLib 127), value combine_qps (quantHeuristicsLibBase 176)
structure combinLib
structure combinSimps
structure combinSyntax
structure combinTheory
value COMM_ASSOC_FOLDL_REVERSE (rich_listTheory 63)
value COMM_ASSOC_FOLDR_REVERSE (rich_listTheory 64)
value COMM_BAG_UNION (bagTheory 171)
value COMM_DEF (operatorTheory 6)
value COMM_MONOID_FOLDL (rich_listTheory 65)
value COMM_MONOID_FOLDR (rich_listTheory 66)
value comm_tm (boolSyntax 171)
constructor Comma (type_tokens 2)
value COMMA_DEF (pairTheory 6)
value COMMA_PRS (quotient_pairTheory 8)
value COMMA_RSP (quotient_pairTheory 9)
value comma_tm (pairLib 13), value comma_tm (pairSyntax 10), value comma_tm (pairTheory 82)
HOL Lib.commafy (help/Docfiles/Lib.commafy.adoc 0), value commafy (Lib 34)
type command (mungeTools 3)
value COMMUTING_ITBAG_INSERT (bagTheory 169)
value COMMUTING_ITBAG_RECURSES (bagTheory 170)
value COMMUTING_ITSET_INSERT (pred_setTheory 101)
value COMMUTING_ITSET_RECURSES (pred_setTheory 102)
value comp (Subst 10)
type comp_rws (clauses 42)
HOL Term.compare (help/Docfiles/Term.compare.adoc 0), HOL Type.compare (help/Docfiles/Type.compare.adoc 0), value compare (Arbintcore 37), value compare (Arbnumcore 53), value compare (Arbrat 39), value compare (FinalTerm 77), value compare (FinalType 25), value compare (mlibArbint 40), value compare (mlibMultiset 18), value compare (mlibOmegaint 34), value compare (mlibTermorder 35)
value compare_abbrev (markerSyntax 13)
value compare_def (prelimTheory 5)
value compare_equal (prelimTheory 16)
value compare_index_equal (quoteTheory 18)
value compare_list_index (quoteTheory 19)
value comparison_case_def (comparisonTheory 35)
value comparison_distinct (comparisonTheory 36)
value comparison_grammars (comparisonTheory 70)
value comparison_nchotomy (comparisonTheory 37)
structure comparisonTheory
value compatible_listrule (term_grammar 163)
value compile_pattern_match (GrammarSpecials 39)
value compl (mlibMultiset 14)
value COMPL_applied (pred_setTheory 109)
value COMPL_CLAUSES (pred_setTheory 103)
value COMPL_COMPL (pred_setTheory 104)
value COMPL_DEF (pred_setTheory 10)
value COMPL_EMPTY (pred_setTheory 105)
value compl_insert (pred_setTheory 419)
value COMPL_INTER (pred_setTheory 106)
value COMPL_SPLITS (pred_setTheory 107)
value compl_tm (pred_setSyntax 19)
value COMPL_UNION (pred_setTheory 108)
value complete_bottom (posetTheory 24)
value complete_def (posetTheory 8)
value complete_down (posetTheory 25)
value COMPLETE_INDUCTION (arithmeticTheory 64)
value complete_pointwise (posetTheory 26)
value complete_top (posetTheory 27)
value complete_up (posetTheory 28)
HOL bossLib.completeInduct_on (help/Docfiles/bossLib.completeInduct_on.adoc 0), value completeInduct_on (bossLib 40), value completeInduct_on (numLib 20)
value COMPLEX (complexTheory 27)
value COMPLEX_0 (complexTheory 28)
value COMPLEX_0_THM (complexTheory 29)
value COMPLEX_1 (complexTheory 30)
value COMPLEX_10 (complexTheory 31)
value complex_add (complexTheory 8)
value COMPLEX_ADD2_SUB2 (complexTheory 32)
value COMPLEX_ADD_ASSOC (complexTheory 33)
value COMPLEX_ADD_COMM (complexTheory 34)
value COMPLEX_ADD_LDISTRIB (complexTheory 35)
value COMPLEX_ADD_LID (complexTheory 36)
value COMPLEX_ADD_LID_UNIQ (complexTheory 37)
value COMPLEX_ADD_LINV (complexTheory 38)
value COMPLEX_ADD_RAT (complexTheory 39)
value COMPLEX_ADD_RDISTRIB (complexTheory 40)
value COMPLEX_ADD_RID (complexTheory 41)
value COMPLEX_ADD_RID_UNIQ (complexTheory 42)
value COMPLEX_ADD_RINV (complexTheory 43)
value COMPLEX_ADD_RSCALAR_RMUL (complexTheory 44)
value COMPLEX_ADD_SCALAR_LMUL (complexTheory 45)
value COMPLEX_ADD_SUB (complexTheory 46)
value COMPLEX_ADD_SUB2 (complexTheory 47)
value COMPLEX_DIFFSQ (complexTheory 48)
value complex_div (complexTheory 9)
value COMPLEX_DIV1 (complexTheory 49)
value COMPLEX_DIV_ADD (complexTheory 50)
value COMPLEX_DIV_ARG (complexTheory 51)
value COMPLEX_DIV_DENOM_CANCEL (complexTheory 52)
value COMPLEX_DIV_INNER_CANCEL (complexTheory 53)
value COMPLEX_DIV_LMUL_CANCEL (complexTheory 54)
value COMPLEX_DIV_LZERO (complexTheory 55)
value COMPLEX_DIV_MUL2 (complexTheory 56)
value COMPLEX_DIV_OUTER_CANCEL (complexTheory 57)
value COMPLEX_DIV_REFL (complexTheory 58)
value COMPLEX_DIV_RMUL_CANCEL (complexTheory 59)
value COMPLEX_DIV_SUB (complexTheory 60)
value COMPLEX_DOUBLE (complexTheory 61)
value COMPLEX_ENTIRE (complexTheory 62)
value COMPLEX_EQ_LADD (complexTheory 63)
value COMPLEX_EQ_LDIV_EQ (complexTheory 64)
value COMPLEX_EQ_LMUL (complexTheory 65)
value COMPLEX_EQ_LMUL2 (complexTheory 66)
value COMPLEX_EQ_LMUL_IMP (complexTheory 67)
value COMPLEX_EQ_NEG (complexTheory 68)
value COMPLEX_EQ_RADD (complexTheory 69)
value COMPLEX_EQ_RDIV_EQ (complexTheory 70)
value COMPLEX_EQ_RMUL (complexTheory 71)
value COMPLEX_EQ_RMUL_IMP (complexTheory 72)
value COMPLEX_EQ_SCALAR_LMUL (complexTheory 73)
value COMPLEX_EQ_SUB_LADD (complexTheory 74)
value COMPLEX_EQ_SUB_RADD (complexTheory 75)
value complex_exp (complexTheory 10)
value COMPLEX_EXP_0 (complexTheory 76)
value COMPLEX_EXP_ADD (complexTheory 77)
value COMPLEX_EXP_ADD_MUL (complexTheory 78)
value COMPLEX_EXP_N (complexTheory 79)
value COMPLEX_EXP_N2 (complexTheory 80)
value COMPLEX_EXP_NEG (complexTheory 81)
value COMPLEX_EXP_NEG_MUL (complexTheory 82)
value COMPLEX_EXP_NEG_MUL2 (complexTheory 83)
value COMPLEX_EXP_NZ (complexTheory 84)
value COMPLEX_EXP_SUB (complexTheory 85)
value complex_grammars (complexTheory 250)
value complex_inv (complexTheory 11)
value COMPLEX_INV1 (complexTheory 86)
value COMPLEX_INV_0 (complexTheory 88)
value COMPLEX_INV_1OVER (complexTheory 89)
value COMPLEX_INV_ARG (complexTheory 90)
value COMPLEX_INV_EQ_0 (complexTheory 91)
value COMPLEX_INV_INJ (complexTheory 92)
value COMPLEX_INV_INV (complexTheory 93)
value COMPLEX_INV_MUL (complexTheory 94)
value COMPLEX_INV_NEG (complexTheory 95)
value COMPLEX_INV_NZ (complexTheory 96)
value COMPLEX_INV_SCALAR_LMUL (complexTheory 97)
value COMPLEX_INVINV (complexTheory 87)
value COMPLEX_LEMMA1 (complexTheory 98)
value COMPLEX_LEMMA2 (complexTheory 99)
value COMPLEX_LINV_UNIQ (complexTheory 100)
value COMPLEX_LMUL_SCALAR_LMUL (complexTheory 101)
value COMPLEX_LNEG_UNIQ (complexTheory 102)
value COMPLEX_MODU_ARG_EQ (complexTheory 103)
value complex_mul (complexTheory 12)
value COMPLEX_MUL_ARG (complexTheory 104)
value COMPLEX_MUL_ASSOC (complexTheory 105)
value COMPLEX_MUL_COMM (complexTheory 106)
value COMPLEX_MUL_LCONJ1 (complexTheory 107)
value COMPLEX_MUL_LID (complexTheory 108)
value COMPLEX_MUL_LINV (complexTheory 109)
value COMPLEX_MUL_LNEG (complexTheory 110)
value COMPLEX_MUL_LZERO (complexTheory 111)
value COMPLEX_MUL_RCONJ (complexTheory 112)
value COMPLEX_MUL_RCONJ1 (complexTheory 113)
value COMPLEX_MUL_RID (complexTheory 114)
value COMPLEX_MUL_RINV (complexTheory 115)
value COMPLEX_MUL_RNEG (complexTheory 116)
value COMPLEX_MUL_RZERO (complexTheory 117)
value COMPLEX_MUL_SCALAR_LMUL2 (complexTheory 118)
value complex_neg (complexTheory 13)
value COMPLEX_NEG_0 (complexTheory 120)
value COMPLEX_NEG_ADD (complexTheory 121)
value COMPLEX_NEG_DIV2 (complexTheory 122)
value COMPLEX_NEG_EQ (complexTheory 123)
value COMPLEX_NEG_EQ0 (complexTheory 124)
value COMPLEX_NEG_INV (complexTheory 125)
value COMPLEX_NEG_LDIV (complexTheory 126)
value COMPLEX_NEG_LMUL (complexTheory 127)
value COMPLEX_NEG_MUL2 (complexTheory 128)
value COMPLEX_NEG_RDIV (complexTheory 129)
value COMPLEX_NEG_RMUL (complexTheory 130)
value COMPLEX_NEG_SCALAR_LMUL (complexTheory 131)
value COMPLEX_NEG_SCALAR_RMUL (complexTheory 132)
value COMPLEX_NEG_SUB (complexTheory 133)
value COMPLEX_NEGNEG (complexTheory 119)
value complex_of_num (complexTheory 14)
value COMPLEX_OF_NUM_ADD (complexTheory 134)
value COMPLEX_OF_NUM_EQ (complexTheory 135)
value COMPLEX_OF_NUM_MUL (complexTheory 136)
value complex_of_real (complexTheory 15)
value COMPLEX_OF_REAL_ADD (complexTheory 137)
value COMPLEX_OF_REAL_DIV (complexTheory 138)
value COMPLEX_OF_REAL_EQ (complexTheory 139)
value COMPLEX_OF_REAL_INV (complexTheory 140)
value COMPLEX_OF_REAL_MUL (complexTheory 141)
value COMPLEX_OF_REAL_NEG (complexTheory 142)
value COMPLEX_OF_REAL_SUB (complexTheory 143)
value COMPLEX_POW_0 (complexTheory 145)
value COMPLEX_POW_1 (complexTheory 146)
value COMPLEX_POW_2 (complexTheory 147)
value COMPLEX_POW_ADD (complexTheory 148)
value complex_pow_def (complexTheory 16)
value complex_pow_def_compute (complexTheory 248)
value COMPLEX_POW_DIV (complexTheory 149)
value COMPLEX_POW_INV (complexTheory 150)
value COMPLEX_POW_L (complexTheory 151)
value COMPLEX_POW_MUL (complexTheory 152)
value COMPLEX_POW_NZ (complexTheory 153)
value COMPLEX_POW_ONE (complexTheory 154)
value COMPLEX_POW_POW (complexTheory 155)
value COMPLEX_POW_ZERO (complexTheory 156)
value COMPLEX_POW_ZERO_EQ (complexTheory 157)
value COMPLEX_POWINV (complexTheory 144)
value COMPLEX_RE_IM_EQ (complexTheory 158)
value COMPLEX_RINV_UNIQ (complexTheory 159)
value COMPLEX_RMUL_SCALAR_LMUL (complexTheory 160)
value COMPLEX_RNEG_UNIQ (complexTheory 161)
value COMPLEX_RSCALAR_RMUL_SUB (complexTheory 162)
value COMPLEX_SCALAR_LMUL (complexTheory 163), value complex_scalar_lmul (complexTheory 17)
value COMPLEX_SCALAR_LMUL_ADD (complexTheory 164)
value COMPLEX_SCALAR_LMUL_DIV2 (complexTheory 165)
value COMPLEX_SCALAR_LMUL_ENTIRE (complexTheory 166)
value COMPLEX_SCALAR_LMUL_EQ (complexTheory 167)
value COMPLEX_SCALAR_LMUL_EQ1 (complexTheory 168)
value COMPLEX_SCALAR_LMUL_NEG (complexTheory 169)
value COMPLEX_SCALAR_LMUL_NEG1 (complexTheory 170)
value COMPLEX_SCALAR_LMUL_ONE (complexTheory 171)
value COMPLEX_SCALAR_LMUL_SUB (complexTheory 172)
value COMPLEX_SCALAR_LMUL_ZERO (complexTheory 173)
value COMPLEX_SCALAR_MUL_COMM (complexTheory 174)
value COMPLEX_SCALAR_RMUL (complexTheory 175), value complex_scalar_rmul (complexTheory 18)
value COMPLEX_SCALAR_RMUL_ADD (complexTheory 176)
value COMPLEX_SCALAR_RMUL_NEG (complexTheory 177)
value COMPLEX_SCALAR_RMUL_NEG1 (complexTheory 178)
value COMPLEX_SCALAR_RMUL_ONE (complexTheory 179)
value COMPLEX_SCALAR_RMUL_ZERO (complexTheory 180)
value complex_sub (complexTheory 19)
value COMPLEX_SUB_0 (complexTheory 181)
value COMPLEX_SUB_ADD (complexTheory 182)
value COMPLEX_SUB_ADD2 (complexTheory 183)
value COMPLEX_SUB_INV2 (complexTheory 184)
value COMPLEX_SUB_LDISTRIB (complexTheory 185)
value COMPLEX_SUB_LNEG (complexTheory 186)
value COMPLEX_SUB_LZERO (complexTheory 187)
value COMPLEX_SUB_NEG2 (complexTheory 188)
value COMPLEX_SUB_RAT (complexTheory 189)
value COMPLEX_SUB_RDISTRIB (complexTheory 190)
value COMPLEX_SUB_REFL (complexTheory 191)
value COMPLEX_SUB_RNEG (complexTheory 192)
value COMPLEX_SUB_RZERO (complexTheory 193)
value COMPLEX_SUB_SCALAR_LMUL (complexTheory 194)
value COMPLEX_SUB_SCALAR_RMUL (complexTheory 195)
value COMPLEX_SUB_SUB (complexTheory 196)
value COMPLEX_SUB_SUB2 (complexTheory 197)
value COMPLEX_SUB_TRIANGLE (complexTheory 198)
value COMPLEX_TRIANGLE (complexTheory 199)
value COMPLEX_ZERO_SCALAR_LMUL (complexTheory 200)
value COMPLEX_ZERO_SCALAR_RMUL (complexTheory 201)
structure complexTheory
value COMPONENT (pred_setTheory 110)
type compset (computeLib 3)
value compute_divides (dividesTheory 46)
value compute_inst_infos (abstraction 29)
structure compute_rules
structure computeLib
type con (mlibParser 41)
value CONCAT_EXTRACT (wordsTheory 126)
value concat_word_list_def (wordsTheory 14)
value concat_word_list_tm (wordsSyntax 28)
HOL Thm.concl (help/Docfiles/Thm.concl.adoc 0), value concl (FinalThm 16)
value COND_ABS (boolTheory 54)
value COND_ABS_CONV (IntDP_Munge 5)
HOL Tactic.COND_CASES_TAC (help/Docfiles/Tactic.COND_CASES_TAC.adoc 0), value COND_CASES_TAC (Tactic 47)
value COND_CLAUSES (boolTheory 55)
value COND_CLAUSES_CF (ConseqConvTheory 14)
value COND_CLAUSES_CT (ConseqConvTheory 15)
value COND_CLAUSES_FF (ConseqConvTheory 16)
value COND_CLAUSES_FT (ConseqConvTheory 17)
value COND_CLAUSES_ID (ConseqConvTheory 18)
value COND_CLAUSES_TF (ConseqConvTheory 19)
value COND_CLAUSES_TT (ConseqConvTheory 20)
value COND_CONG (boolTheory 56)
HOL Conv.COND_CONV (help/Docfiles/Conv.COND_CONV.adoc 0), HOL reduceLib.COND_CONV (help/Docfiles/reduceLib.COND_CONV.adoc 0), value COND_CONV (Boolconv 9), value COND_CONV (Conv 106), value COND_CONV (reduceLib 9)
value COND_DEF (boolTheory 13)
HOL Arith.COND_ELIM_CONV (help/Docfiles/Arith.COND_ELIM_CONV.adoc 0), value COND_ELIM_CONV (Arith 6), value COND_ELIM_CONV (Sub_and_cond 3), value COND_ELIM_CONV (schneiderUtils 15)
value COND_elim_ss (boolSimps 14)
value COND_ELIM_TAC (schneiderUtils 16)
value COND_EQ_CONV (schneiderUtils 17)
value COND_EQ_LESS_CONV (enumTacs 11)
value COND_EQ_TAC (schneiderUtils 18)
value COND_EXPAND (boolTheory 57)
value COND_EXPAND_CONV (Thm_convs 45)
value COND_EXPAND_IMP (boolTheory 58)
value COND_EXPAND_OR (boolTheory 59)
value COND_FUN_EXT_CONV (schneiderUtils 19)
value COND_FUN_EXT_TAC (schneiderUtils 20)
value COND_ID (boolTheory 60)
value cond_lift_SS (normalForms 226), value cond_lift_ss (normalForms 227)
value COND_PRS (quotientTheory 19)
value COND_RAND (boolTheory 61)
value COND_RAND_CONV (Thm_convs 44)
value COND_RATOR (boolTheory 62)
value COND_RATOR_CONV (Thm_convs 43)
value cond_removal (OmegaMath 21)
structure Cond_rewr
HOL Cond_rewrite.COND_REWR_CANON (help/Docfiles/Cond_rewrite.COND_REWR_CANON.adoc 0), value COND_REWR_CANON (Cond_rewrite 22)
HOL Cond_rewrite.COND_REWR_CONV (help/Docfiles/Cond_rewrite.COND_REWR_CONV.adoc 0), value COND_REWR_CONV (Cond_rewr 40), value COND_REWR_CONV (Cond_rewrite 19)
HOL Cond_rewrite.COND_REWR_TAC (help/Docfiles/Cond_rewrite.COND_REWR_TAC.adoc 0), value COND_REWR_TAC (Cond_rewrite 13)
structure Cond_rewrite
HOL Cond_rewrite.COND_REWRITE1_CONV (help/Docfiles/Cond_rewrite.COND_REWRITE1_CONV.adoc 0), value COND_REWRITE1_CONV (Cond_rewrite 24)
HOL Cond_rewrite.COND_REWRITE1_TAC (help/Docfiles/Cond_rewrite.COND_REWRITE1_TAC.adoc 0), value COND_REWRITE1_TAC (Cond_rewrite 23)
value COND_RSP (quotientTheory 20)
value cond_sum_expand (sumTheory 35)
value condify_SS (normalForms 235), value condify_ss (normalForms 236)
HOL boolSyntax.conditional (help/Docfiles/boolSyntax.conditional.adoc 0), value conditional (boolSyntax 20)
value conditional_distribution_def (probabilityTheory 5)
value conditional_distribution_le_1 (probabilityTheory 80)
value conditional_distribution_pos (probabilityTheory 81)
value conditional_expectation_def (probabilityTheory 6)
value conditional_prob_def (probabilityTheory 7)
HOL simpLib.Cong (help/Docfiles/simpLib.Cong.adoc 0), value Cong (bossLib 82), value Cong (markerLib 21), value Cong (simpLib 78)
value cong2proc (Travrules 89)
value Cong_def (markerTheory 7)
value CONG_ss (boolSimps 7)
value Cong_tm (markerSyntax 6)
structure congLib
type congproc (Opening 72), value CONGPROC (Opening 77)
value CONGRUENCE_EQ_SIMP_CONV (congLib 116)
value CONGRUENCE_SIMP_CONV (congLib 99)
value CONGRUENCE_SIMP_QCONV (congLib 108)
value CONGRUENCE_SIMP_RULE (congLib 125)
value CONGRUENCE_SIMP_TAC (congLib 126)
constructor Congs (RW 58), type congs (RW 58)
type congset (congLib 63)
type congsetfrag (congLib 51)
HOL Thm.CONJ (help/Docfiles/Thm.CONJ.adoc 0), constructor Conj (Count 11), value CONJ (FinalThm 74), value conj (UnicodeChars 109), value conj (complexTheory 20)
value CONJ_ACI (AC 9), value CONJ_ACI (refuteLib 8)
value CONJ_ADD (complexTheory 202)
HOL Tactic.CONJ_ASM1_TAC (help/Docfiles/Tactic.CONJ_ASM1_TAC.adoc 0), value CONJ_ASM1_TAC (Tactic 13), value conj_asm1_tac (Tactic 14), value conj_asm1_tac (lcsymtacs 9)
HOL Tactic.CONJ_ASM2_TAC (help/Docfiles/Tactic.CONJ_ASM2_TAC.adoc 0), value CONJ_ASM2_TAC (Tactic 15), value conj_asm2_tac (Tactic 16), value conj_asm2_tac (lcsymtacs 10)
value CONJ_ASSOC (boolTheory 63)
value CONJ_ASSOC_NORM_CONV (Thm_convs 2)
value CONJ_COMM (boolTheory 64)
value CONJ_CONG (HolSmtTheory 13)
value CONJ_CONJ (complexTheory 203)
HOL Drule.CONJ_DISCH (help/Docfiles/Drule.CONJ_DISCH.adoc 0), value CONJ_DISCH (Drule 42)
HOL Drule.CONJ_DISCHL (help/Docfiles/Drule.CONJ_DISCHL.adoc 0), value CONJ_DISCHL (Drule 43)
value CONJ_DIV (complexTheory 204)
value CONJ_EQ (complexTheory 205)
value CONJ_EQ2 (complexTheory 206)
value CONJ_EQ_ELIM (int_arithTheory 8)
HOL unwindLib.CONJ_FORALL_CONV (help/Docfiles/unwindLib.CONJ_FORALL_CONV.adoc 0), value CONJ_FORALL_CONV (unwindLib 14)
HOL unwindLib.CONJ_FORALL_ONCE_CONV (help/Docfiles/unwindLib.CONJ_FORALL_ONCE_CONV.adoc 0), value CONJ_FORALL_ONCE_CONV (unwindLib 15)
HOL unwindLib.CONJ_FORALL_RIGHT_RULE (help/Docfiles/unwindLib.CONJ_FORALL_RIGHT_RULE.adoc 0), value CONJ_FORALL_RIGHT_RULE (unwindLib 16)
value CONJ_IMPLIES (quotientTheory 21)
value CONJ_INV (complexTheory 207)
value conj_lift_qp (quantHeuristicsLib 121), value conj_lift_qp (quantHeuristicsLibParameters 57)
HOL Drule.CONJ_LIST (help/Docfiles/Drule.CONJ_LIST.adoc 0), value CONJ_LIST (Drule 57)
value CONJ_MUL (complexTheory 208)
value CONJ_NEG (complexTheory 209)
value CONJ_NOT_OR_THM (quantHeuristicsTheory 14)
value CONJ_NUM_REFL (complexTheory 210)
HOL Drule.CONJ_PAIR (help/Docfiles/Drule.CONJ_PAIR.adoc 0), value CONJ_PAIR (Drule 55)
value CONJ_REAL_REFL (complexTheory 211)
value CONJ_SCALAR_LMUL (complexTheory 212)
value CONJ_ss (boolSimps 9)
value CONJ_SUB (complexTheory 213)
value CONJ_SYM (boolTheory 65)
HOL Tactic.CONJ_TAC (help/Docfiles/Tactic.CONJ_TAC.adoc 0), value CONJ_TAC (Tactic 11), value conj_tac (Tactic 12), value conj_tac (lcsymtacs 8)
value CONJ_ZERO (complexTheory 214)
constructor CONJN (CooperSyntax 28)
HOL Thm.CONJUNCT1 (help/Docfiles/Thm.CONJUNCT1.adoc 0), constructor Conjunct1 (Count 11), value CONJUNCT1 (FinalThm 75)
HOL Thm.CONJUNCT2 (help/Docfiles/Thm.CONJUNCT2.adoc 0), constructor Conjunct2 (Count 11), value CONJUNCT2 (FinalThm 76)
HOL boolSyntax.conjunction (help/Docfiles/boolSyntax.conjunction.adoc 0), value conjunction (boolSyntax 17)
value CONJUNCTIVE_NORMAL_FORM (Past_Temporal_LogicTheory 19)
HOL Drule.CONJUNCTS (help/Docfiles/Drule.CONJUNCTS.adoc 0), value CONJUNCTS (Drule 58)
HOL Drule.CONJUNCTS_AC (help/Docfiles/Drule.CONJUNCTS_AC.adoc 0), value CONJUNCTS_AC (Drule 40)
HOL Thm_cont.CONJUNCTS_THEN (help/Docfiles/Thm_cont.CONJUNCTS_THEN.adoc 0), value CONJUNCTS_THEN (Thm_cont 13), value CONJUNCTS_THEN (jrhTactics 41)
HOL Thm_cont.CONJUNCTS_THEN2 (help/Docfiles/Thm_cont.CONJUNCTS_THEN2.adoc 0), value CONJUNCTS_THEN2 (Thm_cont 12)
HOL Lib.cons (help/Docfiles/Lib.cons.adoc 0), constructor CONS (mlibStream 8), value CONS (listTheory 87), value CONS (rich_listTheory 398), value cons (Lib 35), value cons (Subst 5), value cons (mlibStream 19), value cons (mlibUseful 58), value cons (seq 37)
value CONS_11 (listTheory 88), value CONS_11 (rich_listTheory 399)
value CONS_ACYCLIC (listTheory 89)
value CONS_APPEND (rich_listTheory 67)
value CONS_PERM (sortingTheory 23)
value CONS_PRS (quotient_listTheory 9)
value CONS_RSP (quotient_listTheory 10)
value cons_tm (listSyntax 12)
HOL ConseqConv.conseq_conv (help/Docfiles/ConseqConv.conseq_conv.adoc 0), type conseq_conv (ConseqConv 26)
value CONSEQ_CONV___APPLY_CONV_RULE (ConseqConv 43)
value CONSEQ_CONV___GET_DIRECTION (ConseqConv 41)
value CONSEQ_CONV___GET_SIMPLIFIED_TERM (ConseqConv 40)
type conseq_conv_congruence (ConseqConv 32)
type conseq_conv_congruence_syscall (ConseqConv 29)
type CONSEQ_CONV_context (ConseqConv 18)
value CONSEQ_CONV_default_cache_opt (ConseqConv 104)
HOL ConseqConv.CONSEQ_CONV_direction (help/Docfiles/ConseqConv.CONSEQ_CONV_direction.adoc 0), type CONSEQ_CONV_direction (ConseqConv 13)
value CONSEQ_CONV_DIRECTION_NEGATE (ConseqConv 39)
constructor CONSEQ_CONV_FULL_CONTEXT (ConseqConv 18)
value CONSEQ_CONV_get_context_congruences (ConseqConv 110)
constructor CONSEQ_CONV_IMP_CONTEXT (ConseqConv 18)
constructor CONSEQ_CONV_NO_CONTEXT (ConseqConv 18)
constructor CONSEQ_CONV_STRENGTHEN_direction (ConseqConv 13)
HOL ConseqConv.CONSEQ_CONV_TAC (help/Docfiles/ConseqConv.CONSEQ_CONV_TAC.adoc 0), value CONSEQ_CONV_TAC (ConseqConv 224)
constructor CONSEQ_CONV_UNKNOWN_direction (ConseqConv 13)
constructor CONSEQ_CONV_WEAKEN_direction (ConseqConv 13)
value CONSEQ_HO_REWRITE_CONV (ConseqConv 120)
value CONSEQ_HO_REWRITE_TAC (ConseqConv 234)
HOL ConseqConv.CONSEQ_REWRITE_CONV (help/Docfiles/ConseqConv.CONSEQ_REWRITE_CONV.adoc 0), value CONSEQ_REWRITE_CONV (ConseqConv 119)
value CONSEQ_REWRITE_TAC (ConseqConv 233)
HOL ConseqConv.CONSEQ_TOP_REWRITE_CONV (help/Docfiles/ConseqConv.CONSEQ_TOP_REWRITE_CONV.adoc 0)
structure ConseqConv
value ConseqConv_grammars (ConseqConvTheory 49)
structure ConseqConvTheory
value CONSISTENCY (defCNFTheory 14)
constructor CONSISTENT (HOLPP 9), value consistent (mlibTermorder 33)
constructor CONST (HolKernelDoc 10), constructor CONST (Psyntax 45), constructor CONST (Rsyntax 48), constructor Const (KernelTypes 33), constructor Const (Preterm 10)
value const_eq_ref (Defn 13)
value const_from_ot_map (OpenTheoryMap 24)
value const_name_in_map (Opentheory 37)
value CONST_TIMES_ARITH_CONV (Solve_ineqs 7)
value const_to_ot_map (OpenTheoryMap 23)
HOL Theory.constants (help/Docfiles/Theory.constants.adoc 0), value constants (Theory 37)
type constmap (ConstMapML 3)
structure ConstMapML
value CONSTR (ind_typeTheory 6)
value CONSTR_BOT (ind_typeTheory 25)
value CONSTR_IND (ind_typeTheory 26)
value CONSTR_INJ (ind_typeTheory 27)
value CONSTR_REC (ind_typeTheory 28)
constructor Constrained (Preterm 10)
constructor ConstrainFail (Preterm 76)
value constraint_size (CooperSyntax 48)
value constraint_var (CooperSyntax 47)
value construct_def (fmaptreeTheory 7)
type constructor (Datatype 8), type constructor (ParseDatatype 11), type constructor (ind_types 3)
constructor Constructors (ParseDatatype 13)
value constructors_of (TypeBase 21), value constructors_of (TypeBasePure 47)
value CONT_ADD (limTheory 12)
value CONT_ATTAINS (limTheory 13)
value CONT_ATTAINS2 (limTheory 14)
value CONT_ATTAINS_ALL (limTheory 15)
value CONT_BOUNDED (limTheory 16)
value CONT_COMPOSE (limTheory 17)
value CONT_CONST (limTheory 18)
value CONT_DIV (limTheory 19)
value CONT_HASSUP (limTheory 20)
value CONT_INJ_LEMMA (limTheory 21)
value CONT_INJ_LEMMA2 (limTheory 22)
value CONT_INJ_RANGE (limTheory 23)
value CONT_INV (limTheory 24)
value CONT_INVERSE (limTheory 25)
value CONT_MUL (limTheory 26)
value CONT_NEG (limTheory 27)
value CONT_SUB (limTheory 28)
value CONT_UNIFORM (integralTheory 10)
value container_grammars (containerTheory 46)
structure containerTheory
constructor Context (RW 57), type context (RW 57), type context (Traverse 18)
value CONTEXT_DEPTH_CONSEQ_CONV (ConseqConv 186)
value context_heuristics_qp (quantHeuristicsLib 139), value context_heuristics_qp (quantHeuristicsLibBase 151)
value CONTEXT_NUM_DEPTH_CONSEQ_CONV (ConseqConv 189)
value CONTEXT_NUM_REDEPTH_CONSEQ_CONV (ConseqConv 191)
value CONTEXT_ONCE_DEPTH_CONSEQ_CONV (ConseqConv 188)
value context_oracle_qp (quantHeuristicsLib 144), value context_oracle_qp (quantHeuristicsLibBase 155)
type context_policy (RW 31)
value context_qp (quantHeuristicsLib 73), value context_qp (quantHeuristicsLibBase 166)
value CONTEXT_REDEPTH_CONSEQ_CONV (ConseqConv 187)
value context_top_heuristics_qp (quantHeuristicsLib 140), value context_top_heuristics_qp (quantHeuristicsLibBase 152)
value continuous_def (posetTheory 9)
value contl (limTheory 5)
value CONTL_LIM (limTheory 11)
HOL Drule.CONTR (help/Docfiles/Drule.CONTR.adoc 0), constructor CONTR (OmegaMLShadow 11), constructor CONTR (mlibOmega 14), value CONTR (Drule 21), value CONTR (mlibThm 45), value contr (mlibUnits 18)
HOL Tactic.CONTR_TAC (help/Docfiles/Tactic.CONTR_TAC.adoc 0), value CONTR_TAC (Tactic 6), value CONTR_TAC (jrhTactics 25)
value CONTRACT_CONV (normalForms 110)
value contradiction_solver (mlibSolver 21)
HOL Drule.CONTRAPOS (help/Docfiles/Drule.CONTRAPOS.adoc 0), value CONTRAPOS (Drule 66)
HOL Conv.CONTRAPOS_CONV (help/Docfiles/Conv.CONTRAPOS_CONV.adoc 0), value CONTRAPOS_CONV (Conv 82)
type control (BoundedRewrites 3)
type controlled_thm (BoundedRewrites 5), type controlled_thm (Cond_rewr 37), type controlled_thm (simpLib 59)
constructor Conv (clauses 26), structure Conv, type conv (Abbrev 5), type conv (Canon 9), type conv (ListConv1 5), type conv (Norm_arith 4), type conv (Norm_bool 3), type conv (Norm_ineqs 4), type conv (PFset_conv 2), type conv (PGspec 2), type conv (QbfConv 1), type conv (Satisfy 42), type conv (Solve 3), type conv (Solve_ineqs 5), type conv (dep_rewrite 155), type conv (enumTacs 5), type conv (fmapalTacs 5), type conv (folTools 17), type conv (fracLib 5), type conv (fracUtils 5), type conv (intExtensionLib 5), type conv (inttoTacs 5), type conv (jbUtils 5), type conv (listLib 5), type conv (pairTheory 79), type conv (ratLib 5), type conv (ratUtils 5), type conv (realLib 5), type conv (schneiderUtils 5), type conv (tcTacs 5), type conv (temporalLib 8), type conv (totoTacs 5), type conv (unwindLib 12)
value conv_at (CooperMath 21)
value CONV_OF_PROVER (Canon 28), value CONV_OF_PROVER (refuteLib 28)
HOL Conv.CONV_RULE (help/Docfiles/Conv.CONV_RULE.adoc 0), value CONV_RULE (Conv 44), value CONV_RULE (RJBConv 11)
value conv_ss (simpLib 84)
HOL Tactic.CONV_TAC (help/Docfiles/Tactic.CONV_TAC.adoc 0), value CONV_TAC (Tactic 87), value conv_tac (IntDP_Munge 12)
value CONV_THEN_REFUTE (Canon 18), value CONV_THEN_REFUTE (refuteLib 18)
type convdata (simpLib 44), type convdata (simpfrag 4)
value convergent (seqTheory 6)
value convert (jrhTactics 19)
value convert_prethms (DiskFilesHeader 14)
value convs_qp (quantHeuristicsLib 137), value convs_qp (quantHeuristicsLibBase 148)
structure Cooper
value cooper_cache (intSimps 31)
value cooper_compset (CooperMath 5)
value COOPER_CONV (Cooper 5), value COOPER_CONV (intLib 15)
value cooper_lemma_1 (int_arithTheory 30)
value COOPER_PROVE (Cooper 6), value COOPER_PROVE (intLib 16)
value COOPER_ss (intSimps 29)
value COOPER_TAC (Cooper 7), value COOPER_TAC (intLib 17)
structure CooperCore
structure CooperMath
structure CooperShell
structure CooperSyntax
structure CooperThms
constructor COPY (TypeBasePure 11)
value COPY_ASM_NO (schneiderUtils 21)
structure CoreKernel
value coreRENAME_TAC (Q 68)
value correct_guess (quantHeuristicsLibBase 106)
value correct_guess_collection (quantHeuristicsLibBase 108)
value correct_guess_list (quantHeuristicsLibBase 107)
value cos (transcTheory 9)
value COS_0 (transcTheory 39)
value COS_2 (transcTheory 40)
value COS_ACS (transcTheory 41)
value COS_ADD (transcTheory 42)
value COS_ASN_NZ (transcTheory 43)
value COS_ATN_NZ (transcTheory 44)
value COS_BOUND (transcTheory 45)
value COS_BOUNDS (transcTheory 46)
value COS_CONVERGES (transcTheory 47)
value COS_DOUBLE (transcTheory 48)
value COS_FDIFF (transcTheory 49)
value COS_ISZERO (transcTheory 50)
value COS_NEG (transcTheory 51)
value COS_NPI (transcTheory 52)
value COS_PAIRED (transcTheory 53)
value COS_PERIODIC (transcTheory 54)
value COS_PERIODIC_PI (transcTheory 55)
value COS_PI (transcTheory 56)
value COS_PI2 (transcTheory 57)
value COS_POS_PI (transcTheory 58)
value COS_POS_PI2 (transcTheory 59)
value COS_POS_PI2_LE (transcTheory 60)
value COS_POS_PI_LE (transcTheory 61)
value COS_SIN (transcTheory 62)
value COS_SIN_SQ (transcTheory 63)
value COS_SIN_SQRT (transcTheory 64)
value cos_tm (transcSyntax 8)
value COS_TOTAL (transcTheory 65)
value COS_ZERO (transcTheory 66)
value COS_ZERO_LEMMA (transcTheory 67)
type cost_fn (mlibSolver 54)
structure Count, value count (mlibModel 46), value count (mlibMultiset 12), value count (mlibStream 15)
value COUNT_11 (pred_setTheory 111)
value count_add (pred_setTheory 421)
value count_add1 (pred_setTheory 422)
value COUNT_applied (pred_setTheory 114)
value count_def (pred_setTheory 42)
value count_EQN (pred_setTheory 420)
value COUNT_LIST_ADD (rich_listTheory 68)
value COUNT_LIST_AUX_def (rich_listTheory 7)
value COUNT_LIST_AUX_def_compute (rich_listTheory 69)
value COUNT_LIST_compute (rich_listTheory 73)
value COUNT_LIST_COUNT (rich_listTheory 70)
value COUNT_LIST_def (rich_listTheory 8)
value COUNT_LIST_GENLIST (rich_listTheory 71)
value COUNT_LIST_SNOC (rich_listTheory 72)
value count_list_sub1 (rich_listTheory 344)
value count_list_tm (rich_listSyntax 6)
value COUNT_SUC (pred_setTheory 112)
value count_tm (pred_setSyntax 31)
value count_vars (CooperSyntax 40)
value COUNT_ZERO (pred_setTheory 113)
value COUNTABLE_ALT (util_probTheory 31)
value COUNTABLE_BIGUNION (util_probTheory 32)
value COUNTABLE_COUNT (util_probTheory 33)
value countable_def (pred_setTheory 43), value countable_def (util_probTheory 8)
value COUNTABLE_EMPTY (util_probTheory 34), value countable_EMPTY (pred_setTheory 423)
value COUNTABLE_ENUM (util_probTheory 35)
value COUNTABLE_ENUM_Q (extrealTheory 49)
value COUNTABLE_IMAGE (util_probTheory 36)
value countable_image_nats (pred_setTheory 427)
value COUNTABLE_IMAGE_NUM (util_probTheory 37)
value countable_INSERT (pred_setTheory 424)
value COUNTABLE_NUM (util_probTheory 38)
value countable_per (set_relationTheory 51)
value COUNTABLE_RATIONAL_INTERVALS (extrealTheory 50)
value COUNTABLE_SUBSET (util_probTheory 39)
value countable_surj (pred_setTheory 428)
value COUNTABLE_UNION (util_probTheory 40)
value countable_Uprod (pred_setTheory 425)
value countable_Usum (pred_setTheory 426)
value COUNTABLY_ADDITIVE (measureTheory 68)
value COUNTABLY_ADDITIVE_ADDITIVE (measureTheory 69)
value countably_additive_def (measureTheory 9)
value COUNTABLY_ADDITIVE_PROB (probabilityTheory 29)
value COUNTABLY_SUBADDITIVE (measureTheory 70)
value countably_subadditive_def (measureTheory 10)
value COUNTABLY_SUBADDITIVE_SUBADDITIVE (measureTheory 71)
value counting_thms (Count 48)
value cpEU_THM (CooperThms 24)
value cpEVERY_CONJ_CONV (CooperSyntax 16)
value cpEVERY_DISJ_CONV (CooperSyntax 17)
value cpis_conj (CooperSyntax 10)
value cpis_disj (CooperSyntax 11)
value cpl_def (wotTheory 8)
value cpn2num_11 (totoTheory 94)
value cpn2num_num2cpn (totoTheory 96)
value cpn2num_ONTO (totoTheory 95)
value cpn2num_thm (totoTheory 97)
value cpn_Axiom (totoTheory 98)
value cpn_BIJ (totoTheory 13)
value cpn_CASE (totoTheory 14)
value cpn_case_cong (totoTheory 100)
value cpn_case_def (totoTheory 101)
value cpn_distinct (totoTheory 102)
value cpn_EQ_cpn (totoTheory 99)
value cpn_induction (totoTheory 103)
value cpn_nchotomy (totoTheory 104)
value cpn_REWR_CONV (totoTacs 15)
value cpn_size_def (totoTheory 16)
value cpn_TY_DEF (totoTheory 15)
value cpstrip_conj (CooperSyntax 13)
value cpstrip_disj (CooperSyntax 14)
value CR_def (relationTheory 5)
value CROSS_applied (pred_setTheory 123)
value CROSS_COUNTABLE (extrealTheory 51), value cross_countable (pred_setTheory 429)
value cross_countable_IFF (pred_setTheory 430)
value CROSS_COUNTABLE_LEMMA1 (extrealTheory 52)
value CROSS_COUNTABLE_LEMMA2 (extrealTheory 53)
value CROSS_COUNTABLE_UNIV (extrealTheory 54)
value CROSS_DEF (pred_setTheory 11)
value CROSS_EMPTY (pred_setTheory 115)
value CROSS_EMPTY_EQN (pred_setTheory 116)
value CROSS_EQNS (pred_setTheory 117)
value CROSS_INSERT_LEFT (pred_setTheory 118)
value CROSS_INSERT_RIGHT (pred_setTheory 119)
value CROSS_SINGS (pred_setTheory 120)
value CROSS_SUBSET (pred_setTheory 121)
value cross_tm (pred_setSyntax 30)
value CROSS_UNIV (pred_setTheory 122)
value CRW_CONV (RW 72)
value CRW_RULE (RW 80)
value CRW_TAC (RW 95)
value cs_addfrag (congLib 75)
constructor CSFRAG (congLib 51)
value csfrag_rewrites (congLib 81)
structure CSimp, value csimp (CSimp 4), value csimp (bossLib 132), value csimp (lcsymtacs 87)
constructor CST (clauses 8), constructor Cst (clauses 8)
type cstdb (OmegaMLShadow 14), type cstdb (mlibOmega 17)
value CT (DB 51)
type ctxt (numSimps 3)
value CTXT_ARITH (numSimps 15)
value ctxt_preterm_to_term (TermParse 21)
value ctxt_term (TermParse 22)
value current (qbuf 7)
HOL Theory.current_axioms (help/Docfiles/Theory.current_axioms.adoc 0), value current_axioms (Theory 38)
value current_backend (Parse 178)
value current_data (ThmSetData 13)
HOL Theory.current_definitions (help/Docfiles/Theory.current_definitions.adoc 0), value current_definitions (Theory 40)
HOL Theory.current_defs (help/Docfiles/Theory.current_defs.adoc 0)
value current_grammars (Parse 266)
value current_lgrms (Parse 265)
value current_proof (Manager 39)
HOL Theory.current_theorems (help/Docfiles/Theory.current_theorems.adoc 0), value current_theorems (Theory 39)
HOL Theory.current_theory (help/Docfiles/Theory.current_theory.adoc 0), value current_theory (Theory 32)
HOL Theory.current_thms (help/Docfiles/Theory.current_thms.adoc 0)
HOL Feedback.current_trace (help/Docfiles/Feedback.current_trace.adoc 0), value current_trace (Feedback 45)
HOL Lib.curry (help/Docfiles/Lib.curry.adoc 0), value curry (Lib 36), value curry (mlibUseful 46)
HOL PairRules.CURRY_CONV (help/Docfiles/PairRules.CURRY_CONV.adoc 0), value CURRY_CONV (PairRules 8)
value CURRY_DEF (pairTheory 7)
HOL PairRules.CURRY_EXISTS_CONV (help/Docfiles/PairRules.CURRY_EXISTS_CONV.adoc 0), value CURRY_EXISTS_CONV (PairRules 54)
HOL PairRules.CURRY_FORALL_CONV (help/Docfiles/PairRules.CURRY_FORALL_CONV.adoc 0), value CURRY_FORALL_CONV (PairRules 53)
value CURRY_ONE_ONE_THM (pairTheory 21)
value CURRY_PRS (quotient_pairTheory 10)
value CURRY_RSP (quotient_pairTheory 11)
value curry_tm (pairLib 17), value curry_tm (pairSyntax 15)
value CURRY_UNCURRY_THM (pairTheory 22)
value custom_pp_term_ptree (patriciaLib 51)
value CUT_BOUNDED (hrealTheory 19)
value CUT_DOWN (hrealTheory 20)
value CUT_ISACUT (hrealTheory 21)
value CUT_NEARTOP_ADD (hrealTheory 22)
value CUT_NEARTOP_MUL (hrealTheory 23)
value CUT_NONEMPTY (hrealTheory 24)
value cut_of_hrat (hrealTheory 5)
value CUT_STRADDLE (hrealTheory 25)
value CUT_UBOUND (hrealTheory 26)
value CUT_UP (hrealTheory 27)
value D (mlibUseful 40)
value d001 (HolSmtTheory 33)
value d002 (HolSmtTheory 34)
value d003 (HolSmtTheory 35)
value d004 (HolSmtTheory 36)
value d005 (HolSmtTheory 37)
value d006 (HolSmtTheory 38)
value d007 (HolSmtTheory 39)
value d008 (HolSmtTheory 40)
value d009 (HolSmtTheory 41)
value d010 (HolSmtTheory 42)
value d011 (HolSmtTheory 43)
value d012 (HolSmtTheory 44)
value d013 (HolSmtTheory 45)
value d014 (HolSmtTheory 46)
value d015 (HolSmtTheory 47)
value d016 (HolSmtTheory 48)
value d017 (HolSmtTheory 49)
value d018 (HolSmtTheory 50)
value d019 (HolSmtTheory 51)
value d020 (HolSmtTheory 52)
value d021 (HolSmtTheory 53)
value d022 (HolSmtTheory 54)
value d023 (HolSmtTheory 55)
value d024 (HolSmtTheory 56)
value d025 (HolSmtTheory 57)
value d026 (HolSmtTheory 58)
value d027 (HolSmtTheory 59)
value d028 (HolSmtTheory 60)
value DA (arithmeticTheory 65)
constructor dAQ (ParseDatatype 3)
value dark_implies_real (OmegaTheory 42)
value dark_shadow_cond_row_curried_def (OmegaTheory 9)
value dark_shadow_cond_row_def (OmegaTheory 44)
value dark_shadow_cond_row_ind (OmegaTheory 45)
value dark_shadow_cond_row_tupled_primitive_def (OmegaTheory 10)
value dark_shadow_condition_curried_def (OmegaTheory 11)
value dark_shadow_condition_def (OmegaTheory 46)
value dark_shadow_condition_ind (OmegaTheory 47)
value dark_shadow_condition_tupled_primitive_def (OmegaTheory 12)
value dark_shadow_curried_def (OmegaTheory 13)
value dark_shadow_def (OmegaTheory 48)
value dark_shadow_FORALL (OmegaTheory 43)
value dark_shadow_ind (OmegaTheory 49)
value dark_shadow_row_curried_def (OmegaTheory 14)
value dark_shadow_row_def (OmegaTheory 50)
value dark_shadow_row_ind (OmegaTheory 51)
value dark_shadow_row_tupled_primitive_def (OmegaTheory 15)
value dark_shadow_tupled_primitive_def (OmegaTheory 16)
value darkrow_implies_realrow (OmegaTheory 52)
HOL DB.data (help/Docfiles/DB.data.adoc 0), type data (DB 9), type data (ThmSetData 3)
type data_entry (holindexData 3)
value data_entry___add_page (holindexData 29)
value data_entry___update_comment (holindexData 28)
value data_entry___update_content (holindexData 26)
value data_entry___update_full_index (holindexData 23)
value data_entry___update_in_index (holindexData 21)
value data_entry___update_label (holindexData 24)
value data_entry___update_latex (holindexData 27)
value data_entry___update_options (holindexData 25)
value data_entry___update_printed (holindexData 22)
value data_entry_is_used (holindexData 30)
value data_exportfn (ThmSetData 18)
value data_list_to_string (DB 32)
type data_store_ty (holindexData 15)
value data_storefn (ThmSetData 17)
structure DataSize
HOL bossLib.Datatype (help/Docfiles/bossLib.Datatype.adoc 0), constructor DATATYPE (EmitML 17), structure Datatype, value Datatype (Datatype 50), value Datatype (bossLib 10)
value datatype_bit0 (fcpTheory 71)
value datatype_bit1 (fcpTheory 72)
value datatype_bl (enumeralTheory 101)
value DATATYPE_BOOL (boolTheory 66)
value datatype_bt (enumeralTheory 102)
value datatype_canonical_sum (canonicalTheory 46)
value datatype_ccode (ieeeTheory 113)
value datatype_cpn (totoTheory 105)
value datatype_deep_form (DeepSyntaxTheory 18)
value datatype_extreal (extrealTheory 142)
value datatype_index (quoteTheory 20)
value datatype_list (listTheory 400)
value datatype_num (arithmeticTheory 382)
value datatype_num_dt (totoTheory 106)
value datatype_option (optionTheory 60)
value datatype_ordering (prelimTheory 17)
value datatype_pair (pairTheory 59)
value datatype_polynom (ringNormTheory 35)
value datatype_ptree (patriciaTheory 134)
value datatype_ring (ringTheory 24)
value datatype_roundmode (ieeeTheory 114)
value datatype_semi_ring (semi_ringTheory 21)
value datatype_spolynom (canonicalTheory 47)
value datatype_spt (sptreeTheory 40)
value datatype_sum (sumTheory 36)
value DATATYPE_TAG_DEF (boolTheory 14)
value DATATYPE_TAG_THM (boolTheory 67)
HOL EmitTeX.datatype_theorems (help/Docfiles/EmitTeX.datatype_theorems.adoc 0), value datatype_theorems (EmitTeX 10)
HOL EmitTeX.datatype_thm_to_string (help/Docfiles/EmitTeX.datatype_thm_to_string.adoc 0), value datatype_thm_to_string (EmitTeX 12)
value datatype_tree (EncodeTheory 37)
value datatype_varmap (quoteTheory 21)
value datatype_word_ptree (patricia_castsTheory 51)
type datatypeForm (ParseDatatype 13)
structure DatatypeSimps
value date (mlibUseful 190)
structure DB, type db (clauses 26)
value dbempty (OmegaMLShadow 29), value dbempty (mlibOmega 35)
value DC (prim_recTheory 15)
value dc_cond (satTheory 16)
value dc_conj (satTheory 17)
value dc_disj (satTheory 18)
value dc_eq (satTheory 19)
value dc_imp (satTheory 20)
value dc_neg (satTheory 21)
value dcnfgv (defCNF 61)
value dcutin (mesonLib 13)
value DE_MOIVRE_LEMMA (complexTheory 215)
value DE_MOIVRE_THM (complexTheory 216)
value DE_MORGAN_THM (boolTheory 68)
exception DEAD_CODE (compute_rules 10)
value dealwith_nats (IntDP_Munge 10)
value debug_blocks_terminal (PPBackEnd 33)
value debug_sys (quantHeuristicsLibBase 196)
value dec (Portable 32)
value dec2enc_decode_blist (DecodeTheory 21)
value dec2enc_decode_bnum (DecodeTheory 22)
value dec2enc_decode_bool (DecodeTheory 23)
value dec2enc_decode_list (DecodeTheory 24)
value dec2enc_decode_num (DecodeTheory 25)
value dec2enc_decode_option (DecodeTheory 26)
value dec2enc_decode_prod (DecodeTheory 27)
value dec2enc_decode_sum (DecodeTheory 28)
value dec2enc_decode_unit (DecodeTheory 29)
value dec2enc_def (DecodeTheory 5)
value dec2enc_enc2dec (DecodeTheory 30)
value dec2enc_some (DecodeTheory 31)
value dec_bnum_def (DecodeTheory 6)
value dec_bnum_def_compute (DecodeTheory 32)
value dec_bnum_inj (DecodeTheory 33)
value dec_bnum_lt (DecodeTheory 34)
value DEC_UNDEC (ASCIInumbersTheory 23)
HOL bossLib.DECIDE (help/Docfiles/bossLib.DECIDE.adoc 0), value DECIDE (bossLib 47), value DECIDE (numLib 39), value decide (HolQbfLib 7)
value decide_closed_presburger (OmegaShell 6)
value decide_prenex (HolQbfLib 6)
value decide_pure_presburger_term (Cooper 10), value decide_pure_presburger_term (CooperShell 6)
value decide_strategy (OmegaShell 5)
HOL bossLib.DECIDE_TAC (help/Docfiles/bossLib.DECIDE_TAC.adoc 0), value DECIDE_TAC (bossLib 52), value DECIDE_TAC (numLib 40), value decide_tac (bossLib 53), value decide_tac (lcsymtacs 74)
value decimal_fraction_special (GrammarSpecials 14)
structure DecimalFractionPP
HOL ringLib.declare_ring (help/Docfiles/ringLib.declare_ring.adoc 0), value declare_ring (ringLib 24)
HOL Term.decls (help/Docfiles/Term.decls.adoc 0), HOL Type.decls (help/Docfiles/Type.decls.adoc 0), value decls (FinalTerm 29), value decls (FinalType 17)
value decode (ProvideUnicode 37), value decode (TermCoding 4)
value decode_blist (DecodeTheory 35)
value decode_blist_def (DecodeTheory 7)
value decode_bnum (DecodeTheory 36)
value decode_bnum_def (DecodeTheory 8)
value decode_bool (DecodeTheory 37)
value decode_bool_def (DecodeTheory 9)
value decode_dec2enc (DecodeTheory 38)
value decode_dec2enc_append (DecodeTheory 39)
value decode_def (CoderTheory 8)
value decode_encode (CoderTheory 22)
value Decode_grammars (DecodeTheory 70)
value decode_list (DecodeTheory 40)
value decode_list_def (DecodeTheory 10)
value decode_num (DecodeTheory 41)
value decode_num_def (DecodeTheory 11)
value decode_num_total (DecodeTheory 42)
value decode_option (DecodeTheory 43)
value decode_option_def (DecodeTheory 12)
value decode_prod (DecodeTheory 44)
value decode_prod_def (DecodeTheory 13)
value decode_sum (DecodeTheory 45)
value decode_sum_def (DecodeTheory 14)
value decode_tree (DecodeTheory 46)
value decode_tree_def (DecodeTheory 15)
value decode_unit (DecodeTheory 47)
value decode_unit_def (DecodeTheory 16)
value decoder_def (CoderTheory 9)
structure DecodeTheory
value DECOMPOSITION (pred_setTheory 124)
value deduce (mlibClauseset 42), value deduce (mlibResolution 33)
value deep_form_11 (DeepSyntaxTheory 19)
value deep_form_Axiom (DeepSyntaxTheory 20)
value deep_form_case_cong (DeepSyntaxTheory 21)
value deep_form_case_def (DeepSyntaxTheory 9)
value deep_form_distinct (DeepSyntaxTheory 22)
value deep_form_induction (DeepSyntaxTheory 23)
value deep_form_nchotomy (DeepSyntaxTheory 24)
value deep_form_size_def (DeepSyntaxTheory 10)
value deep_form_TY_DEF (DeepSyntaxTheory 8)
HOL Tactic.DEEP_INTRO_TAC (help/Docfiles/Tactic.DEEP_INTRO_TAC.adoc 0), value DEEP_INTRO_TAC (Tactic 94)
value DEEP_INTROk_TAC (Tactic 93)
value DeepSyntax_grammars (DeepSyntaxTheory 36)
structure DeepSyntaxTheory
constructor Def (DB 7)
value DEF_CNF_CONV (defCNF 39), value DEF_CNF_CONV (normalForms 167)
value DEF_CNF_VECTOR_CONV (defCNF 59)
value DEF_def (defCNFTheory 5)
value DEF_NNF_CONV (defCNF 19), value DEF_NNF_CONV (normalForms 147)
value DEF_SNOC (defCNFTheory 15)
value def_suffix (Defn 12)
constructor Default (RW 54)
value default_data_entry (holindexData 17)
value default_delta (mlibMetis 34)
value default_heuristic_fun (PmatchHeuristics 66)
value default_heuristic_list (PmatchHeuristics 79)
value default_meson (mlibMetis 33)
value default_prover (Tactical 88)
value default_resolution (mlibMetis 31)
value DEFAULT_STATE (Systeml 35)
value defaultConsumer (Portable 20)
value defaults (folMapping 22), value defaults (folTools 30), value defaults (metisTools 29), value defaults (mlibClause 23), value defaults (mlibClauseset 14), value defaults (mlibMeson 22), value defaults (mlibMetis 35), value defaults (mlibModel 28), value defaults (mlibResolution 20), value defaults (mlibSupport 21), value defaults (mlibTermorder 18)
structure defCNF
value defCNF_grammars (defCNFTheory 23)
structure defCNFTheory
HOL TotalDefn.Define (help/Docfiles/TotalDefn.Define.adoc 0), HOL bossLib.Define (help/Docfiles/bossLib.Define.adoc 0), value Define (TotalDefn 33), value Define (bossLib 13)
value define_case_constant (Prim_rec 30)
value define_const_in_thy (Opentheory 51)
value Define_enum2string (stringLib 44)
value define_enum_type (EnumType 5)
value define_equivalence_type (EquivType 2), value define_equivalence_type (quotient 461)
HOL patriciaLib.Define_mk_ptree (help/Docfiles/patriciaLib.Define_mk_ptree.adoc 0), value Define_mk_ptree (patriciaLib 12)
value Define_mk_ptree_with_is_ptree (patriciaLib 13)
value Define_mk_word_ptree (patricia_castsLib 15)
HOL Drule.define_new_type_bijections (help/Docfiles/Drule.define_new_type_bijections.adoc 0), value define_new_type_bijections (Drule 94)
value define_quotient_lifted_function (quotient 218)
value define_quotient_type (quotient 50)
value define_quotient_types (quotient 357)
value define_quotient_types_full (quotient 395)
value define_quotient_types_full_rule (quotient 414)
value define_quotient_types_rule (quotient 376)
value define_quotient_types_std (quotient 436)
value define_quotient_types_std_rule (quotient 449)
value define_size (DataSize 4)
value Define_string2enum (stringLib 45)
value define_subset_types (quotient 474)
value define_subset_types_rule (quotient 491)
value define_tyop_in_thy (Opentheory 48)
value define_type (Datatype 20), value define_type (ind_types 6)
HOL TotalDefn.DefineSchema (help/Docfiles/TotalDefn.DefineSchema.adoc 0), value DefineSchema (TotalDefn 48)
constructor Definition (Count 11), value definition (DB 16)
HOL DB.definitions (help/Docfiles/DB.definitions.adoc 0), value definitions (DB 21)
value DEFLOAT_FLOAT_ROUND (floatTheory 14)
value DEFLOAT_FLOAT_ZEROSIGN_ROUND (floatTheory 15)
value DEFLOAT_FLOAT_ZEROSIGN_ROUND_FINITE (floatTheory 16)
constructor DEFN (EmitML 17), structure Defn, type defn (Abbrev 20), type defn (DefnBase 5)
constructor DEFN_NOSIG (EmitML 17)
structure DefnBase
value defnDefine (TotalDefn 29)
value degree (polyTheory 5)
value DEGREE_ZERO (polyTheory 20)
value deinitcomment (Lib 37)
value deinitcommentss (Lib 38)
value del_consts (computeLib 31)
value del_funs (computeLib 32)
value del_persistent_consts (computeLib 46)
value del_segment (FinalTerm 89), value del_segment (FinalType 62), value del_segment (KernelSig 36)
value DELAMB_CONV (Canon_Port 9), value DELAMB_CONV (normalForms 200)
value delay (seq 22)
value delete (LVTermNet 14), value delete (Net 20), value delete (Raw 13), value delete (Redblackset 18), value delete (TypeNet 13), value delete (mlibUseful 79), value delete (schneiderUtils 50)
value DELETE_applied (pred_setTheory 134)
HOL Theory.delete_binding (help/Docfiles/Theory.delete_binding.adoc 0), value delete_binding (Theory 28)
value DELETE_COMM (pred_setTheory 125)
value delete_compute (sptreeTheory 41)
HOL Theory.delete_const (help/Docfiles/Theory.delete_const.adoc 0), value delete_const (Theory 27), value delete_const (boolSyntax 158)
HOL pred_setLib.DELETE_CONV (help/Docfiles/pred_setLib.DELETE_CONV.adoc 0), value DELETE_CONV (PFset_conv 6), value DELETE_CONV (pred_setLib 8)
value DELETE_DEF (pred_setTheory 12), value delete_def (sptreeTheory 5)
value DELETE_DELETE (pred_setTheory 126)
value DELETE_EQ_SING (pred_setTheory 127)
value delete_hook (Theory 50)
value DELETE_INSERT (pred_setTheory 128)
value DELETE_INTER (pred_setTheory 129)
value delete_mk_wf (sptreeTheory 42)
value DELETE_NON_ELEMENT (pred_setTheory 130)
value DELETE_NON_ELEMENT_RWT (pred_setTheory 131)
value DELETE_PRS (quotient_pred_setTheory 17)
value delete_restriction (Parse_support 39)
value DELETE_SUBSET (pred_setTheory 132)
value DELETE_SUBSET_INSERT (pred_setTheory 133)
value DELETE_THEN_INSERT (util_probTheory 41)
value delete_tm (pred_setSyntax 17), value delete_tm (sptreeSyntax 17)
HOL Theory.delete_type (help/Docfiles/Theory.delete_type.adoc 0), value delete_type (Theory 26)
value DELETE_UNION (patriciaTheory 56)
value delete_unused_consts (Opentheory 64)
value DELETER_def (quotient_pred_setTheory 5)
value DELETER_RSP (quotient_pred_setTheory 16)
HOL Lib.delta (help/Docfiles/Lib.delta.adoc 0), HOL Type.delta (help/Docfiles/Type.delta.adoc 0), constructor Delta (mlibMetis 24), type delta (Lib 2), value Delta (UnicodeChars 25), value delta (FinalType 34), value delta (UnicodeChars 7), value delta (mlibMeson 38)
value delta' (mlibMeson 37)
HOL Lib.delta_apply (help/Docfiles/Lib.delta_apply.adoc 0), value delta_apply (Lib 39)
value DELTA_CASES (Temporal_LogicTheory 50)
HOL Lib.delta_map (help/Docfiles/Lib.delta_map.adoc 0), value delta_map (Lib 40)
HOL Lib.delta_pair (help/Docfiles/Lib.delta_pair.adoc 0), value delta_pair (Lib 41)
value demod (mlibUnits 20)
value DEMODULATE (mlibClause 64)
value Denominator (Rationals 11), value denominator (Arbrat 12)
value dense_def (fixedPointTheory 6)
structure Dep, type dep (Dep 4)
value DEP_ASM_REWRITE_TAC (dep_rewrite 236)
value DEP_FIND_THEN (dep_rewrite 231)
value DEP_LIST_ASM_REWRITE_TAC (dep_rewrite 219)
value DEP_LIST_FIND_THEN (dep_rewrite 214)
value DEP_LIST_REWRITE_TAC (dep_rewrite 217)
value dep_of (FinalTag 5), value dep_of (Tag 5)
value DEP_ONCE_ASM_REWRITE_TAC (dep_rewrite 193)
value DEP_ONCE_ASM_SUBST_TAC (dep_rewrite 198)
value DEP_ONCE_FIND_THEN (dep_rewrite 188)
value DEP_ONCE_REWRITE_TAC (dep_rewrite 191)
value DEP_ONCE_SUBST_TAC (dep_rewrite 196)
value DEP_PURE_ASM_REWRITE_TAC (dep_rewrite 235)
value DEP_PURE_LIST_ASM_REWRITE_TAC (dep_rewrite 218)
value DEP_PURE_LIST_REWRITE_TAC (dep_rewrite 216)
value DEP_PURE_ONCE_ASM_REWRITE_TAC (dep_rewrite 192)
value DEP_PURE_ONCE_ASM_SUBST_TAC (dep_rewrite 197)
value DEP_PURE_ONCE_REWRITE_TAC (dep_rewrite 190)
value DEP_PURE_ONCE_SUBST_TAC (dep_rewrite 195)
value DEP_PURE_REWRITE_TAC (dep_rewrite 233)
structure dep_rewrite
value DEP_REWRITE_TAC (dep_rewrite 234)
constructor DEP_SAVED (Dep 4)
constructor DEP_UNSAVED (Dep 4)
value DEPDIR (Systeml 30)
type depdisk (Dep 6), type depdisk (FinalThm 7)
type depid (Dep 3)
value depid_compare (Dep 18)
value depid_of (Dep 13)
value depidl_of (Dep 14)
value depnumber_of (Dep 12)
HOL intLib.deprecate_int (help/Docfiles/intLib.deprecate_int.adoc 0), value deprecate_int (intLib 8)
value deprecate_num (numLib 43)
value deprecate_word (wordsLib 65)
value DEPTH (RW 45), value DEPTH (mlibThm 59), value depth (goalStack 22), value depth (mesonLib 10), value depth (patriciaLib 24)
value DEPTH1 (mlibThm 58)
value DEPTH_BINOP_CONV (Canon 20), value DEPTH_BINOP_CONV (liteLib 134), value DEPTH_BINOP_CONV (refuteLib 20)
value depth_cases (lbtreeTheory 30)
HOL ConseqConv.DEPTH_CONSEQ_CONV (help/Docfiles/ConseqConv.DEPTH_CONSEQ_CONV.adoc 0), value DEPTH_CONSEQ_CONV (ConseqConv 178)
type depth_conseq_conv_cache (ConseqConv 90)
type depth_conseq_conv_cache_opt (ConseqConv 91)
value DEPTH_CONSEQ_CONV_TAC (ConseqConv 230)
HOL Conv.DEPTH_CONV (help/Docfiles/Conv.DEPTH_CONV.adoc 0), value DEPTH_CONV (Conv 39), value DEPTH_CONV (liteLib 135)
value DEPTH_def (patriciaTheory 11), value depth_def (lbtreeTheory 10)
HOL unwindLib.DEPTH_EXISTS_CONV (help/Docfiles/unwindLib.DEPTH_EXISTS_CONV.adoc 0), value DEPTH_EXISTS_CONV (unwindLib 17)
HOL unwindLib.DEPTH_FORALL_CONV (help/Docfiles/unwindLib.DEPTH_FORALL_CONV.adoc 0), value DEPTH_FORALL_CONV (Solve 11), value DEPTH_FORALL_CONV (unwindLib 18)
value depth_ind (lbtreeTheory 31)
value depth_mem (lbtreeTheory 32)
value DEPTH_QCONV (liteLib 136)
value depth_rules (lbtreeTheory 33)
HOL ConseqConv.DEPTH_STRENGTHEN_CONSEQ_CONV (help/Docfiles/ConseqConv.DEPTH_STRENGTHEN_CONSEQ_CONV.adoc 0), value DEPTH_STRENGTHEN_CONSEQ_CONV (ConseqConv 194)
value depth_strongind (lbtreeTheory 34)
value depth_tm (patriciaSyntax 23)
value DEPTHw_def (patricia_castsTheory 9)
value depthw_tm (patricia_castsSyntax 23)
value depthy_of (Dep 11)
value deref_tmenv (Unify 17)
type derivation (OmegaMLShadow 5), type derivation (mlibClause 74), type derivation (mlibOmega 8), value derivation (mlibClause 79)
value derive_l_asscomm (GenPolyCanon 25)
value derive_mono_strong_induction (IndDefLib 15), value derive_mono_strong_induction (IndDefRules 8)
value derive_nonschematic_coinductive_relations (CoIndDefLib 14)
value derive_nonschematic_inductive_relations (InductiveDefinition 22)
value derive_r_asscomm (GenPolyCanon 26)
value derive_strong_induction (IndDefLib 16)
type des (mlibParser 42)
value dest (Nonce 5), value dest (mlibResolution 28)
value dest_abbr (markerSyntax 17)
value dest_abbrev (markerSyntax 11)
HOL Term.dest_abs (help/Docfiles/Term.dest_abs.adoc 0), value dest_abs (FinalTerm 45), value dest_abs (Psyntax 26), value dest_abs (Rsyntax 26)
value dest_absval (intSyntax 86), value dest_absval (realSyntax 60)
value dest_acs (transcSyntax 25)
value dest_add (bitstringSyntax 70), value dest_add (patriciaSyntax 57)
value dest_add_list (patriciaSyntax 58)
value dest_add_lists (patricia_castsSyntax 96)
value dest_add_listw (patricia_castsSyntax 79)
value dest_add_with_carry (wordsSyntax 132)
value dest_adds (patricia_castsSyntax 95)
value dest_addw (patricia_castsSyntax 78)
value dest_align (alignmentSyntax 10)
value dest_aligned (alignmentSyntax 11)
value dest_all_distinct (bagLib 40), value dest_all_distinct (bagSyntax 38), value dest_all_distinct (listSyntax 81)
value dest_and_el (rich_listSyntax 23)
HOL pairSyntax.dest_anylet (help/Docfiles/pairSyntax.dest_anylet.adoc 0), value dest_anylet (pairSyntax 47)
value dest_app (Absyn 42)
value dest_append (listSyntax 82)
value dest_AQ (Absyn 40), value dest_aq (term_tokens 18), value dest_aq (type_tokens 18)
HOL boolSyntax.dest_arb (help/Docfiles/boolSyntax.dest_arb.adoc 0), value dest_arb (boolSyntax 81)
value dest_asm_marker (ConseqConv 79)
value dest_asn (transcSyntax 26)
value dest_atn (transcSyntax 27)
value dest_atom (mlibTerm 49)
value dest_axiom (mlibThm 29)
value dest_b (bitstringSyntax 35)
value dest_bag (bagLib 51), value dest_bag (bagSyntax 49)
value dest_band (bitstringSyntax 71)
value dest_biginter (pred_setSyntax 105)
value dest_bigunion (pred_setSyntax 104)
value dest_bij (pred_setSyntax 118)
value dest_bind (state_transformerSyntax 30)
value dest_binder (Absyn 54), value dest_binder (HolKernelDoc 20)
value dest_binop (Absyn 55), value dest_binop (HolKernelDoc 21), value dest_binop (liteLib 93), value dest_binop (mlibTerm 46)
value dest_binop_triple (jbUtils 27)
value dest_bit (bitSyntax 39)
value dest_bit1 (numSyntax 64)
value dest_bit2 (numSyntax 65)
value dest_bit_count (wordsSyntax 133)
value dest_bit_count_upto (wordsSyntax 134)
value dest_bit_field_insert (wordsSyntax 135)
value dest_bit_modify (bitSyntax 40)
value dest_bit_reverse (bitSyntax 41)
value dest_bit_set (wordsSyntax 136)
value dest_bitify (bitstringSyntax 72)
value dest_bits (bitSyntax 42)
value dest_bitv (bitSyntax 43)
value dest_bitwise (bitSyntax 44), value dest_bitwise (bitstringSyntax 73)
value dest_bn (sptreeSyntax 38)
value dest_bnot (bitstringSyntax 74)
HOL boolSyntax.dest_bool_case (help/Docfiles/boolSyntax.dest_bool_case.adoc 0), value dest_bool_case (boolSyntax 79)
value dest_bool_size (basicSizeSyntax 17)
value dest_boolify (bitstringSyntax 75), value dest_boolify (numposrepSyntax 28)
value dest_bor (bitstringSyntax 76)
value DEST_BOUNDED (BoundedRewrites 9)
value dest_branch (patriciaSyntax 54)
value dest_branching_bit (patriciaSyntax 70)
value dest_bs (sptreeSyntax 39)
value dest_butlastn (rich_listSyntax 24)
value dest_bxor (bitstringSyntax 77)
value dest_byte_align (alignmentSyntax 12)
value dest_byte_aligned (alignmentSyntax 13)
value dest_C (combinSyntax 27)
value dest_card (bagLib 43), value dest_card (bagSyntax 41), value dest_card (pred_setSyntax 95)
value dest_cart_type (fcpSyntax 10)
value dest_case (Pmatch 21), value dest_case (TypeBase 45), value dest_case (TypeBasePure 114)
value dest_char_ge (stringSyntax 90)
value dest_char_gt (stringSyntax 91)
value dest_char_le (stringSyntax 92)
value dest_char_lit (Literal 24)
value dest_char_lt (stringSyntax 93)
value dest_choice (pred_setSyntax 114)
value dest_chr (stringLib 20), value dest_chr (stringSyntax 94)
value dest_clause (mlibClause 34)
value dest_cmeasure (numSyntax 66)
HOL Term.dest_comb (help/Docfiles/Term.dest_comb.adoc 0), value dest_comb (FinalTerm 42), value dest_comb (Psyntax 27), value dest_comb (Rsyntax 27)
value dest_compl (pred_setSyntax 94)
value dest_concat_word_list (wordsSyntax 137)
HOL boolSyntax.dest_cond (help/Docfiles/boolSyntax.dest_cond.adoc 0), value dest_cond (Psyntax 28), value dest_cond (Rsyntax 28), value dest_cond (boolSyntax 78)
value dest_config (satConfig 22)
HOL boolSyntax.dest_conj (help/Docfiles/boolSyntax.dest_conj.adoc 0), value dest_conj (Absyn 46), value dest_conj (Psyntax 29), value dest_conj (Rsyntax 29), value dest_conj (boolSyntax 74)
HOL listSyntax.dest_cons (help/Docfiles/listSyntax.dest_cons.adoc 0), value dest_cons (listSyntax 83)
HOL Term.dest_const (help/Docfiles/Term.dest_const.adoc 0), value dest_const (FinalTerm 40), value dest_const (Psyntax 25), value dest_const (Rsyntax 25), value dest_const (mlibTerm 42)
value dest_constraint (CooperSyntax 49)
value dest_cos (transcSyntax 28)
value dest_count (pred_setSyntax 109)
value dest_count_list (rich_listSyntax 25)
value dest_cross (pred_setSyntax 108)
value dest_curry (pairLib 35), value dest_curry (pairSyntax 39)
value dest_delete (pred_setSyntax 92), value dest_delete (sptreeSyntax 40)
value dest_depth (patriciaSyntax 66)
value dest_depthw (patricia_castsSyntax 87)
value dest_dest_string (stringSyntax 95)
value dest_diff (bagLib 26), value dest_diff (bagSyntax 24), value dest_diff (pred_setSyntax 91)
value dest_difference (sptreeSyntax 41)
value dest_dimindex (fcpSyntax 45), value dest_dimindex (wordsSyntax 138)
value dest_dimword (wordsSyntax 139)
value dest_Dint (transcSyntax 24)
HOL boolSyntax.dest_disj (help/Docfiles/boolSyntax.dest_disj.adoc 0), value dest_disj (Absyn 47), value dest_disj (Psyntax 30), value dest_disj (Rsyntax 30), value dest_disj (boolSyntax 75)
value dest_disjoint (pred_setSyntax 103)
value dest_div (intSyntax 69), value dest_div (numSyntax 67), value dest_div (realSyntax 55)
value dest_div2 (numSyntax 68)
value dest_div_2exp (bitSyntax 45)
value dest_divides (intSyntax 105)
value dest_division (transcSyntax 29)
value dest_divmod (numSyntax 69)
value dest_divmod_2exp (bitSyntax 46)
value dest_domain (sptreeSyntax 42)
value dest_drop (listSyntax 84)
value dest_dsize (transcSyntax 30)
value dest_el (listSyntax 85)
value dest_ell (rich_listSyntax 26)
value dest_empty (pred_setSyntax 85)
HOL boolSyntax.dest_eq (help/Docfiles/boolSyntax.dest_eq.adoc 0), value dest_eq (Absyn 45), value dest_eq (Psyntax 31), value dest_eq (Rsyntax 31), value dest_eq (boolSyntax 61), value dest_eq (mlibTerm 101)
HOL boolSyntax.dest_eq_ty (help/Docfiles/boolSyntax.dest_eq_ty.adoc 0), value dest_eq_ty (Term 10), value dest_eq_ty (boolSyntax 62)
value dest_even (numSyntax 70)
value dest_every (bagLib 46), value dest_every (bagSyntax 44), value dest_every (listSyntax 86)
value dest_every_leaf (patriciaSyntax 63)
value dest_every_leafw (patricia_castsSyntax 84)
HOL boolSyntax.dest_exists (help/Docfiles/boolSyntax.dest_exists.adoc 0), value dest_exists (Absyn 51), value dest_exists (Psyntax 33), value dest_exists (Rsyntax 33), value dest_exists (boolSyntax 72), value dest_exists (listSyntax 87)
HOL boolSyntax.dest_exists1 (help/Docfiles/boolSyntax.dest_exists1.adoc 0), value dest_exists1 (Absyn 52), value dest_exists1 (Psyntax 34), value dest_exists1 (Rsyntax 34), value dest_exists1 (boolSyntax 73)
value dest_exists_leaf (patriciaSyntax 64)
value dest_exists_leafw (patricia_castsSyntax 85)
value dest_exp (intSyntax 66), value dest_exp (numSyntax 71), value dest_exp (transcSyntax 31)
value dest_explode (stringLib 23), value dest_explode (stringSyntax 96)
value dest_extract (stringSyntax 97)
value dest_fact (numSyntax 72)
value dest_fail (combinSyntax 33)
value dest_fakeconst_name (GrammarSpecials 12)
value dest_fapply (finite_mapSyntax 22)
value dest_fcp (fcpSyntax 43)
value dest_fcp_cons (fcpSyntax 49)
value dest_fcp_every (fcpSyntax 52)
value dest_fcp_exists (fcpSyntax 51)
value dest_fcp_hd (fcpSyntax 47)
value dest_fcp_index (fcpSyntax 44)
value dest_fcp_map (fcpSyntax 50)
value dest_fcp_tl (fcpSyntax 48)
value dest_fcp_update (fcpSyntax 46)
value dest_fdom (finite_mapSyntax 23)
value dest_fempty (finite_mapSyntax 24)
value dest_fevery (finite_mapSyntax 25)
value dest_field (bitstringSyntax 78)
value dest_field_insert (bitstringSyntax 79)
value dest_fields (stringSyntax 98)
value dest_filter (listSyntax 88)
value dest_find (patriciaSyntax 56), value dest_find (updateSyntax 9)
value dest_finds (patricia_castsSyntax 94)
value dest_findw (patricia_castsSyntax 77)
value dest_fine (transcSyntax 32)
value dest_finite (pred_setSyntax 97)
value dest_fixwidth (bitstringSyntax 80)
value dest_flat (listSyntax 89)
value dest_flookup (finite_mapSyntax 26)
value dest_fmap_ty (finite_mapSyntax 5)
value dest_fn (mlibTerm 34)
value dest_foldi (sptreeSyntax 43)
value dest_foldl (listSyntax 90)
value dest_foldr (listSyntax 91)
value dest_for (state_transformerSyntax 31)
HOL boolSyntax.dest_forall (help/Docfiles/boolSyntax.dest_forall.adoc 0), value dest_forall (Absyn 50), value dest_forall (Psyntax 32), value dest_forall (Rsyntax 32), value dest_forall (boolSyntax 71)
value dest_foreach (state_transformerSyntax 32)
value dest_frac (fracUtils 8)
value dest_frac_add (fracSyntax 35)
value dest_frac_ainv (fracSyntax 33)
value dest_frac_div (fracSyntax 38)
value dest_frac_dnm (fracSyntax 31)
value dest_frac_minv (fracSyntax 34)
value dest_frac_mul (fracSyntax 37)
value dest_frac_nmr (fracSyntax 30)
value dest_frac_sgn (fracSyntax 32)
value dest_frac_sub (fracSyntax 36)
value dest_fromAList (sptreeSyntax 44)
value dest_fromBinString (ASCIInumbersSyntax 44)
value dest_fromDecString (ASCIInumbersSyntax 45)
value dest_fromHexString (ASCIInumbersSyntax 46)
value dest_fromList (sptreeSyntax 45)
value dest_fromString (integer_wordSyntax 47)
value dest_front (listSyntax 92)
value dest_fst (pairLib 33), value dest_fst (pairSyntax 36)
value dest_funpow (numSyntax 73)
value dest_fupdate (finite_mapSyntax 27)
value dest_gauge (transcSyntax 33)
value dest_genlist (listSyntax 93)
value dest_geq (Arith_cons 22), value dest_geq (intSyntax 101), value dest_geq (numSyntax 74), value dest_geq (realSyntax 75)
value dest_great (Arith_cons 21), value dest_great (intSyntax 97), value dest_great (realSyntax 71)
value dest_greater (numSyntax 75)
value dest_guess_tm (quantHeuristicsLibBase 72)
value dest_hd (listSyntax 94)
value dest_hex (ASCIInumbersSyntax 39)
value dest_I (combinSyntax 26)
value dest_i2w (integer_wordSyntax 34)
value dest_ident (Absyn 41)
value dest_image (bagLib 36), value dest_image (bagSyntax 34), value dest_image (pred_setSyntax 96)
HOL boolSyntax.dest_imp (help/Docfiles/boolSyntax.dest_imp.adoc 0), value dest_imp (Absyn 48), value dest_imp (Psyntax 36), value dest_imp (Rsyntax 36), value dest_imp (boolSyntax 68), value dest_imp (liteLib 103)
HOL boolSyntax.dest_imp_only (help/Docfiles/boolSyntax.dest_imp_only.adoc 0), value dest_imp_only (Psyntax 37), value dest_imp_only (Rsyntax 37), value dest_imp_only (boolSyntax 69)
value dest_implode (stringLib 22), value dest_implode (stringSyntax 99)
value dest_IN (boolSyntax 88), value dest_in (pred_setSyntax 84)
value dest_in_ptree (patriciaSyntax 68)
value dest_in_ptrees (patricia_castsSyntax 100)
value dest_in_ptreew (patricia_castsSyntax 88)
value dest_index (wordsSyntax 140)
value dest_infinite (pred_setSyntax 98)
value dest_inj (pred_setSyntax 116)
value dest_injected (intSyntax 37), value dest_injected (realSyntax 31)
value dest_inl (sumSyntax 25)
value dest_inr (sumSyntax 26)
value dest_insert (bagLib 33), value dest_insert (bagSyntax 31), value dest_insert (pred_setSyntax 87), value dest_insert (sptreeSyntax 46)
value dest_insert_ptree (patriciaSyntax 69)
value dest_insert_ptrees (patricia_castsSyntax 101)
value dest_insert_ptreew (patricia_castsSyntax 89)
value dest_INT_CEILING (intrealSyntax 23)
value dest_INT_FLOOR (intrealSyntax 19)
value dest_int_max (integer_wordSyntax 37), value dest_int_max (wordsSyntax 141)
value dest_int_min (integer_wordSyntax 36), value dest_int_min (wordsSyntax 142)
value dest_int_numeric_type (fcpSyntax 9)
value dest_inter (pred_setSyntax 89), value dest_inter (sptreeSyntax 47)
value dest_inter_eq (sptreeSyntax 48)
value dest_is_int (intrealSyntax 27)
value dest_is_none (optionLib 33), value dest_is_none (optionSyntax 32)
value dest_is_ptree (patriciaSyntax 67)
value dest_is_some (optionLib 32), value dest_is_some (optionSyntax 31)
value dest_is_sublist (rich_listSyntax 27)
value dest_is_suffix (rich_listSyntax 28)
value dest_isalpha (stringSyntax 100)
value dest_isalphanum (stringSyntax 101)
value dest_isascii (stringSyntax 102)
value dest_iscntrl (stringSyntax 103)
value dest_isdigit (stringSyntax 104)
value dest_isgraph (stringSyntax 105)
value dest_ishexdigit (stringSyntax 106)
value dest_isl (sumSyntax 27)
value dest_islower (stringSyntax 107)
value dest_isprefix (listSyntax 95), value dest_isprefix (stringSyntax 108)
value dest_isprint (stringSyntax 109)
value dest_ispunct (stringSyntax 110)
value dest_isr (sumSyntax 28)
value dest_isspace (stringSyntax 111)
value dest_isupper (stringSyntax 112)
value dest_itself (boolSyntax 82)
value dest_join (state_transformerSyntax 33)
value dest_K (combinSyntax 23)
value dest_K_1 (combinSyntax 24)
value dest_keys (patriciaSyntax 61)
value dest_keyss (patricia_castsSyntax 99)
value dest_keysw (patricia_castsSyntax 82)
value dest_l2n (numposrepSyntax 29)
value dest_l2v (fcpSyntax 54)
value dest_l2w (wordsSyntax 143)
value DEST_LABEL (markerLib 43), value dest_label (markerSyntax 21)
value DEST_LABEL_CONV (markerLib 45)
value dest_label_ref (markerSyntax 23)
value DEST_LABELS (markerLib 44)
value DEST_LABELS_CONV (markerLib 46)
value DEST_LABELS_TAC (markerLib 47)
value dest_lam (Absyn 43)
value dest_last (listSyntax 96)
value dest_lastn (rich_listSyntax 29)
value dest_leaf (patriciaSyntax 53)
value dest_least (numSyntax 76)
value dest_LEAST_INT (intSyntax 117)
value dest_length (listSyntax 97)
value dest_leq (Arith_cons 20), value dest_leq (intSyntax 93), value dest_leq (numSyntax 77), value dest_leq (realSyntax 67)
value dest_less (Arith_cons 19), value dest_less (intSyntax 89), value dest_less (numSyntax 78), value dest_less (realSyntax 63)
HOL boolSyntax.dest_let (help/Docfiles/boolSyntax.dest_let.adoc 0), value dest_let (Psyntax 38), value dest_let (Rsyntax 38), value dest_let (boolSyntax 77)
value dest_lex (pairSyntax 42)
value dest_linv (pred_setSyntax 119)
HOL listSyntax.dest_list (help/Docfiles/listSyntax.dest_list.adoc 0), value dest_list (listSyntax 98)
value dest_list_case (listSyntax 99)
value dest_list_elem_count (rich_listSyntax 30)
value dest_list_to_set (listSyntax 100)
value dest_list_type (listSyntax 5)
value dest_list_update (updateSyntax 10)
value dest_literal (mlibTerm 83)
value dest_literal_case (boolSyntax 80)
value dest_ln (sptreeSyntax 49), value dest_ln (transcSyntax 34)
value dest_log2 (bitSyntax 47)
value dest_lookup (sptreeSyntax 50)
value dest_ls (sptreeSyntax 51)
value dest_map (listSyntax 101)
value dest_map2 (listSyntax 102)
value dest_max (intSyntax 113), value dest_max (numSyntax 79), value dest_max (realSyntax 83)
value dest_max_set (pred_setSyntax 110)
value dest_measure (numSyntax 80)
value dest_mem (listSyntax 103)
value dest_min (intSyntax 109), value dest_min (numSyntax 81), value dest_min (realSyntax 79)
value dest_min_set (pred_setSyntax 111)
value dest_minus (Arith_cons 10), value dest_minus (intSyntax 55), value dest_minus (numSyntax 82), value dest_minus (realSyntax 45)
value dest_mk_bn (sptreeSyntax 52)
value dest_mk_bs (sptreeSyntax 53)
value dest_mk_wf (sptreeSyntax 54)
value dest_mmap (state_transformerSyntax 34)
value dest_mod (intSyntax 73), value dest_mod (numSyntax 83)
value dest_mod_2exp (bitSyntax 48)
value dest_mod_2exp_eq (bitSyntax 49)
value dest_mod_2exp_max (bitSyntax 50)
value dest_mod_word_literal (wordsSyntax 18)
value dest_modify (bitstringSyntax 81)
value dest_monad_type (state_transformerSyntax 6)
value dest_monop (HolKernelDoc 22)
value dest_mult (Arith_cons 11), value dest_mult (intSyntax 60), value dest_mult (numSyntax 84), value dest_mult (realSyntax 50)
value dest_n2l (numposrepSyntax 30)
value dest_n2s (ASCIInumbersSyntax 42)
value dest_n2v (bitstringSyntax 82)
value dest_n2w (wordsSyntax 144)
value dest_narrow (state_transformerSyntax 35)
HOL boolSyntax.dest_neg (help/Docfiles/boolSyntax.dest_neg.adoc 0), value dest_neg (boolSyntax 76), value dest_neg (mlibTerm 52)
value dest_neg_asm_marker (ConseqConv 83)
value dest_neg_eq (BoolExtractShared 5)
value dest_negated (intSyntax 46), value dest_negated (realSyntax 36)
value dest_nil (listSyntax 104)
value dest_none (optionLib 27), value dest_none (optionSyntax 26)
value dest_nub (listSyntax 105)
value dest_null (listSyntax 106)
value dest_Num (intSyntax 41)
value dest_num_case (numSyntax 85)
value dest_num_from_bin_list (numposrepSyntax 31)
value dest_num_from_bin_string (ASCIInumbersSyntax 47)
value dest_num_from_dec_list (numposrepSyntax 33)
value dest_num_from_dec_string (ASCIInumbersSyntax 49)
value dest_num_from_hex_list (numposrepSyntax 34)
value dest_num_from_hex_string (ASCIInumbersSyntax 50)
value dest_num_from_oct_list (numposrepSyntax 32)
value dest_num_from_oct_string (ASCIInumbersSyntax 48)
value dest_num_to_bin_list (numposrepSyntax 35)
value dest_num_to_bin_string (ASCIInumbersSyntax 51)
value dest_num_to_dec_list (numposrepSyntax 37)
value dest_num_to_dec_string (ASCIInumbersSyntax 53)
value dest_num_to_hex_list (numposrepSyntax 38)
value dest_num_to_hex_string (ASCIInumbersSyntax 54)
value dest_num_to_oct_list (numposrepSyntax 36)
value dest_num_to_oct_string (ASCIInumbersSyntax 52)
HOL numSyntax.dest_numeral (help/Docfiles/numSyntax.dest_numeral.adoc 0), value dest_numeral (Literal 7), value dest_numeral (numSyntax 121)
value dest_numeric_type (fcpSyntax 8)
value dest_numset_of_ptree (patriciaSyntax 72)
value dest_nzcv (wordsSyntax 145)
value dest_o (combinSyntax 29)
value dest_odd (numSyntax 86)
value dest_one_size (basicSizeSyntax 20)
value dest_option (optionLib 6), value dest_option (optionSyntax 5)
value dest_option_case (optionLib 34), value dest_option_case (optionSyntax 33)
value dest_option_join (optionLib 31), value dest_option_join (optionSyntax 30)
value dest_option_map (optionLib 30), value dest_option_map (optionSyntax 29)
value dest_option_size (basicSizeSyntax 21)
value dest_or_el (rich_listSyntax 31)
value dest_ord (stringLib 21), value dest_ord (stringSyntax 113)
value dest_outl (sumSyntax 29)
value dest_outr (sumSyntax 30)
value dest_override (updateSyntax 11)
HOL pairSyntax.dest_pabs (help/Docfiles/pairSyntax.dest_pabs.adoc 0), value dest_pabs (pairLib 38), value dest_pabs (pairSyntax 43)
value dest_pad_left (listSyntax 107)
value dest_pad_right (listSyntax 108)
HOL pairSyntax.dest_pair (help/Docfiles/pairSyntax.dest_pair.adoc 0), value dest_pair (Absyn 49), value dest_pair (pairLib 32), value dest_pair (pairSyntax 35), value dest_pair (pairTheory 83)
value dest_pair_map (pairLib 37), value dest_pair_map (pairSyntax 41)
value dest_pair_size (basicSizeSyntax 18)
value dest_part (sortingSyntax 13)
value dest_part3 (sortingSyntax 14)
value dest_partition (sortingSyntax 15)
value dest_pbinder (pairLib 45), value dest_pbinder (pairSyntax 52)
value dest_peek (patriciaSyntax 55)
value dest_peeks (patricia_castsSyntax 93)
value dest_peekw (patricia_castsSyntax 76)
value dest_PERM (permLib 6), value dest_perm (sortingSyntax 16)
HOL pairSyntax.dest_pexists (help/Docfiles/pairSyntax.dest_pexists.adoc 0), value dest_pexists (pairLib 42), value dest_pexists (pairSyntax 49)
value dest_pexists1 (pairLib 43), value dest_pexists1 (pairSyntax 50)
HOL pairSyntax.dest_pforall (help/Docfiles/pairSyntax.dest_pforall.adoc 0), value dest_pforall (pairLib 41), value dest_pforall (pairSyntax 48)
value dest_plet (pairSyntax 46)
value dest_plus (Arith_cons 9), value dest_plus (intSyntax 50), value dest_plus (numSyntax 87), value dest_plus (realSyntax 40)
value dest_pow (pred_setSyntax 102)
value dest_pre (Arith_cons 32), value dest_pre (numSyntax 88)
value dest_prefix (mlibUseful 129), value dest_prefix (rich_listSyntax 32)
HOL pairSyntax.dest_prod (help/Docfiles/pairSyntax.dest_prod.adoc 0), value dest_prod (pairLib 9), value dest_prod (pairSyntax 5)
HOL pairSyntax.dest_pselect (help/Docfiles/pairSyntax.dest_pselect.adoc 0), value dest_pselect (pairLib 44), value dest_pselect (pairSyntax 51)
value dest_psubset (pred_setSyntax 101)
HOL patriciaLib.dest_ptree (help/Docfiles/patriciaLib.dest_ptree.adoc 0), value dest_ptree (patriciaLib 8)
value dest_ptree_of_numset (patriciaSyntax 71)
value dest_ptree_of_stringset (patricia_castsSyntax 102)
value dest_ptree_of_wordset (patricia_castsSyntax 90)
value dest_ptree_type (patriciaSyntax 6)
value dest_ptvar (Preterm 32)
value dest_qsort (sortingSyntax 17)
value dest_qsort3 (sortingSyntax 18)
value dest_quadop (HolKernelDoc 23)
value dest_quot (intSyntax 77)
value dest_rat (ratUtils 8)
value dest_rat_add (ratSyntax 50)
value dest_rat_ainv (ratSyntax 47)
value dest_rat_div (ratSyntax 53)
value dest_rat_dnm (ratSyntax 43)
value dest_rat_geq (ratSyntax 58)
value dest_rat_gre (ratSyntax 56)
value dest_rat_leq (ratSyntax 57)
value dest_rat_les (ratSyntax 55)
value dest_rat_minv (ratSyntax 48)
value dest_rat_mul (ratSyntax 52)
value dest_rat_nmr (ratSyntax 42)
value dest_rat_of_num (ratSyntax 45)
value dest_rat_sgn (ratSyntax 44)
value dest_rat_sub (ratSyntax 51)
value dest_read (state_transformerSyntax 36)
value dest_real_of_int (intrealSyntax 15)
value DEST_REC_INJ (ind_typeTheory 29)
value dest_record (TypeBase 51), value dest_record (TypeBasePure 119)
value dest_record_type (TypeBase 54), value dest_record_type (TypeBasePure 122)
value dest_reduce_and (wordsSyntax 146)
value dest_reduce_nand (wordsSyntax 147)
value dest_reduce_nor (wordsSyntax 148)
value dest_reduce_or (wordsSyntax 149)
value dest_reduce_xnor (wordsSyntax 150)
value dest_reduce_xor (wordsSyntax 151)
value dest_reducer (Traverse 77)
value dest_relation (wfrecUtils 20)
value dest_rem (intSyntax 81)
value dest_remove (patriciaSyntax 59)
value dest_removes (patricia_castsSyntax 97)
value dest_removew (patricia_castsSyntax 80)
value dest_replicate (bitstringSyntax 83), value dest_replicate (rich_listSyntax 33)
HOL res_quanLib.dest_res_abstract (help/Docfiles/res_quanLib.dest_res_abstract.adoc 0), HOL res_quanTools.dest_res_abstract (help/Docfiles/res_quanTools.dest_res_abstract.adoc 0), value dest_res_abstract (boolSyntax 87), value dest_res_abstract (res_quanTools 24)
HOL res_quanLib.dest_res_exists (help/Docfiles/res_quanLib.dest_res_exists.adoc 0), HOL res_quanTools.dest_res_exists (help/Docfiles/res_quanTools.dest_res_exists.adoc 0), value dest_res_exists (boolSyntax 84), value dest_res_exists (res_quanTools 21)
HOL res_quanLib.dest_res_exists_unique (help/Docfiles/res_quanLib.dest_res_exists_unique.adoc 0), value dest_res_exists_unique (boolSyntax 85), value dest_res_exists_unique (res_quanTools 22)
HOL res_quanLib.dest_res_forall (help/Docfiles/res_quanLib.dest_res_forall.adoc 0), HOL res_quanTools.dest_res_forall (help/Docfiles/res_quanTools.dest_res_forall.adoc 0), value dest_res_forall (boolSyntax 83), value dest_res_forall (res_quanTools 20)
HOL res_quanLib.dest_res_select (help/Docfiles/res_quanLib.dest_res_select.adoc 0), HOL res_quanTools.dest_res_select (help/Docfiles/res_quanTools.dest_res_select.adoc 0), value dest_res_select (boolSyntax 86), value dest_res_select (res_quanTools 23)
value dest_rest (pred_setSyntax 115)
value dest_reverse (listSyntax 109)
value dest_rewr (mlibClause 37)
value dest_rewrites (Rewrite 8)
value dest_rinv (pred_setSyntax 120)
value dest_root (transcSyntax 35)
value dest_rotate (bitstringSyntax 84)
value dest_rpow (transcSyntax 36)
value dest_rsum (transcSyntax 37)
value dest_S (combinSyntax 25)
value dest_s2n (ASCIInumbersSyntax 41)
value dest_s2v (bitstringSyntax 85)
value dest_s2w (wordsSyntax 152)
value dest_saturate_add (wordsSyntax 153)
value dest_saturate_i2sw (integer_wordSyntax 39)
value dest_saturate_i2w (integer_wordSyntax 40)
value dest_saturate_mul (wordsSyntax 154)
value dest_saturate_n2w (wordsSyntax 155)
value dest_saturate_sub (wordsSyntax 156)
value dest_saturate_sw2sw (integer_wordSyntax 41)
value dest_saturate_sw2w (integer_wordSyntax 42)
value dest_saturate_w2sw (integer_wordSyntax 43)
value dest_saturate_w2w (wordsSyntax 157)
value dest_sbit (bitSyntax 51)
value dest_scanl (rich_listSyntax 34)
value dest_scanr (rich_listSyntax 35)
value dest_seg (rich_listSyntax 36)
HOL boolSyntax.dest_select (help/Docfiles/boolSyntax.dest_select.adoc 0), value dest_select (Absyn 53), value dest_select (Psyntax 35), value dest_select (Rsyntax 35), value dest_select (boolSyntax 70)
value dest_set_spec (pred_setSyntax 93)
value dest_set_type (pred_setSyntax 5)
value dest_shiftl (bitstringSyntax 86)
value dest_shiftr (bitstringSyntax 87)
value dest_sign_extend (bitSyntax 52), value dest_sign_extend (bitstringSyntax 88)
value dest_signed_saturate_add (integer_wordSyntax 44)
value dest_signed_saturate_sub (integer_wordSyntax 45)
value dest_simpls (RW 7)
value dest_sin (transcSyntax 38)
value dest_sing (pred_setSyntax 99)
value dest_size (patriciaSyntax 65), value dest_size (sptreeSyntax 55)
value dest_sizew (patricia_castsSyntax 86)
value dest_slice (bitSyntax 53)
value dest_snd (pairLib 34), value dest_snd (pairSyntax 37)
value dest_snoc (listSyntax 110)
value dest_some (optionLib 28), value dest_some (optionSyntax 27)
value dest_some_ptree (patricia_castsSyntax 74)
value dest_sorted (sortingSyntax 19)
value dest_splitl (rich_listSyntax 37)
value dest_splitp (rich_listSyntax 38)
value dest_splitr (rich_listSyntax 39)
value dest_sptree_ty (sptreeSyntax 8)
value dest_sqrt (transcSyntax 39)
value dest_str (stringSyntax 114)
value dest_strcat (stringSyntax 115)
value dest_string (stringLib 24), value dest_string (stringSyntax 116)
value dest_string_case (stringSyntax 117)
value DEST_STRING_def (stringTheory 5)
value dest_string_ge (stringSyntax 118)
value dest_string_gt (stringSyntax 119)
value dest_string_le (stringSyntax 120)
value DEST_STRING_LEMS (stringTheory 51)
value dest_string_lit (Literal 17)
value dest_string_lt (stringSyntax 121)
value dest_string_tm (stringSyntax 122)
value dest_stringset_of_ptree (patricia_castsSyntax 103)
HOL boolSyntax.dest_strip_comb (help/Docfiles/boolSyntax.dest_strip_comb.adoc 0), value dest_strip_comb (boolSyntax 146)
value dest_strlen (stringSyntax 123)
value dest_sub (stringSyntax 124)
value dest_sub_bag (bagLib 23), value dest_sub_bag (bagSyntax 21)
value dest_subset (pred_setSyntax 100)
value dest_substring (stringSyntax 125)
value dest_suc (Arith_cons 29), value dest_suc (numSyntax 89)
value dest_suffix (rich_listSyntax 40)
value dest_sum (listSyntax 111), value dest_sum (sumSyntax 13)
value dest_sum_image (pred_setSyntax 112)
value dest_sum_set (pred_setSyntax 113)
value dest_sum_size (basicSizeSyntax 19)
value dest_surj (pred_setSyntax 117)
value dest_sw2sw (wordsSyntax 158)
value dest_swap (pairSyntax 38)
value dest_tag (FinalTag 6), value dest_tag (Tag 6)
value dest_tagged_rewrite (BoundedRewrites 7)
value dest_take (listSyntax 112)
value dest_tan (transcSyntax 40)
value dest_tdiv (transcSyntax 41)
HOL HolKernel.dest_term (help/Docfiles/HolKernel.dest_term.adoc 0), value dest_term (HolKernelDoc 24), value dest_term (Psyntax 51), value dest_term (Rsyntax 54)
value dest_testbit (bitstringSyntax 89)
value dest_the (optionLib 29), value dest_the (optionSyntax 28)
value dest_the_ptree (patricia_castsSyntax 73)
HOL DB.dest_theory (help/Docfiles/DB.dest_theory.adoc 0), value dest_theory (DB 38)
HOL Thm.dest_thm (help/Docfiles/Thm.dest_thm.adoc 0), value dest_thm (FinalThm 17), value dest_thm (mlibKernel 17)
HOL Term.dest_thy_const (help/Docfiles/Term.dest_thy_const.adoc 0), value dest_thy_const (FinalTerm 41)
HOL Type.dest_thy_type (help/Docfiles/Type.dest_thy_type.adoc 0), value dest_thy_type (FinalType 15)
value dest_time (Portable 43)
value dest_times_2exp (bitSyntax 54)
value dest_tl (listSyntax 113)
value dest_tmkind (BasicProvers 57)
value dest_toAList (sptreeSyntax 56)
value dest_tochar (stringSyntax 126)
value dest_tokens (stringSyntax 127)
value dest_toList (sptreeSyntax 57)
value dest_tolower (stringSyntax 128)
value dest_toString (integer_wordSyntax 46)
value dest_toupper (stringSyntax 129)
value dest_transform (patriciaSyntax 62)
value dest_transformw (patricia_castsSyntax 83)
value dest_translate (stringSyntax 130)
value dest_traverse (patriciaSyntax 60)
value dest_traverses (patricia_castsSyntax 98)
value dest_traversew (patricia_castsSyntax 81)
value dest_triop (HolKernelDoc 25)
value dest_ty_antiq (parse_type 17)
HOL Type.dest_type (help/Docfiles/Type.dest_type.adoc 0), value dest_type (FinalType 12), value dest_type (Psyntax 23), value dest_type (Rsyntax 23)
value dest_typed (Absyn 44)
value dest_uint_max (integer_wordSyntax 38), value dest_uint_max (wordsSyntax 159)
value dest_uncurry (pairLib 36), value dest_uncurry (pairSyntax 40)
value dest_unhex (ASCIInumbersSyntax 40)
value dest_union (bagLib 30), value dest_union (bagSyntax 28), value dest_union (pred_setSyntax 90), value dest_union (sptreeSyntax 58)
value dest_unit (mlibThm 39), value dest_unit (state_transformerSyntax 37)
value dest_unit_eq (mlibThm 41)
value dest_univ (pred_setSyntax 86)
value dest_unzip (listSyntax 114)
value dest_unzip_fst (rich_listSyntax 41)
value dest_unzip_snd (rich_listSyntax 42)
value dest_update (combinSyntax 30)
value dest_update_comb (combinSyntax 31)
value dest_v2l (fcpSyntax 53)
value dest_v2n (bitstringSyntax 90)
value dest_v2s (bitstringSyntax 91)
value dest_v2w (bitstringSyntax 92)
HOL Term.dest_var (help/Docfiles/Term.dest_var.adoc 0), value dest_var (FinalTerm 39), value dest_var (Psyntax 24), value dest_var (Rsyntax 24), value dest_var (mlibTerm 31)
HOL Type.dest_vartype (help/Docfiles/Type.dest_vartype.adoc 0), value dest_vartype (FinalType 7)
value dest_W (combinSyntax 28)
value dest_w2i (integer_wordSyntax 35)
value dest_w2l (wordsSyntax 160)
value dest_w2n (wordsSyntax 161)
value dest_w2s (wordsSyntax 162)
value dest_w2v (bitstringSyntax 93)
value dest_w2w (wordsSyntax 163)
value dest_wf (sptreeSyntax 59)
value dest_while (numSyntax 90)
value dest_widen (state_transformerSyntax 38)
value dest_word_1comp (wordsSyntax 164)
value dest_word_2comp (wordsSyntax 165)
value dest_word_abs (wordsSyntax 170)
value dest_word_add (wordsSyntax 171)
value dest_word_and (wordsSyntax 172)
value dest_word_asr (wordsSyntax 173)
value dest_word_asr_bv (wordsSyntax 174)
value dest_word_bit (wordsSyntax 175)
value dest_word_bits (wordsSyntax 176)
value dest_word_compare (wordsSyntax 177)
value dest_word_concat (wordsSyntax 178)
value dest_word_div (wordsSyntax 179)
value dest_word_extract (wordsSyntax 180)
value dest_word_from_bin_list (wordsSyntax 181)
value dest_word_from_bin_string (wordsSyntax 182)
value dest_word_from_dec_list (wordsSyntax 183)
value dest_word_from_dec_string (wordsSyntax 184)
value dest_word_from_hex_list (wordsSyntax 185)
value dest_word_from_hex_string (wordsSyntax 186)
value dest_word_from_oct_list (wordsSyntax 187)
value dest_word_from_oct_string (wordsSyntax 188)
value dest_word_ge (wordsSyntax 189)
value dest_word_gt (wordsSyntax 190)
value dest_word_H (wordsSyntax 166)
value dest_word_hi (wordsSyntax 191)
value dest_word_hs (wordsSyntax 192)
value dest_word_join (wordsSyntax 193)
value dest_word_L (wordsSyntax 167)
value dest_word_L2 (wordsSyntax 168)
value dest_word_le (wordsSyntax 194)
value dest_word_len (wordsSyntax 195)
value dest_word_literal (wordsLib 62), value dest_word_literal (wordsSyntax 19)
value dest_word_lo (wordsSyntax 196)
value dest_word_log2 (wordsSyntax 197)
value dest_word_ls (wordsSyntax 198)
value dest_word_lsb (wordsSyntax 199)
value dest_word_lsl (wordsSyntax 200)
value dest_word_lsl_bv (wordsSyntax 201)
value dest_word_lsr (wordsSyntax 202)
value dest_word_lsr_bv (wordsSyntax 203)
value dest_word_lt (wordsSyntax 204)
value dest_word_max (wordsSyntax 205)
value dest_word_min (wordsSyntax 206)
value dest_word_mod (wordsSyntax 207)
value dest_word_modify (wordsSyntax 208)
value dest_word_msb (wordsSyntax 209)
value dest_word_mul (wordsSyntax 210)
value dest_word_nand (wordsSyntax 211)
value dest_word_nor (wordsSyntax 212)
value dest_word_or (wordsSyntax 213)
value dest_word_ptree (patricia_castsLib 8)
value dest_word_ptree_type (patricia_castsSyntax 6)
value dest_word_reduce (wordsSyntax 214)
value dest_word_replicate (wordsSyntax 215)
value dest_word_reverse (wordsSyntax 216)
value dest_word_rol (wordsSyntax 217)
value dest_word_rol_bv (wordsSyntax 218)
value dest_word_ror (wordsSyntax 219)
value dest_word_ror_bv (wordsSyntax 220)
value dest_word_rrx (wordsSyntax 221)
value dest_word_sdiv (wordsSyntax 222)
value dest_word_sign_extend (wordsSyntax 223)
value dest_word_slice (wordsSyntax 224)
value dest_word_smax (wordsSyntax 225)
value dest_word_smin (wordsSyntax 226)
value dest_word_smod (wordsSyntax 227)
value dest_word_srem (wordsSyntax 228)
value dest_word_sub (wordsSyntax 229)
value dest_word_T (wordsSyntax 169)
value dest_word_to_bin_list (wordsSyntax 230)
value dest_word_to_bin_string (wordsSyntax 231)
value dest_word_to_dec_list (wordsSyntax 232)
value dest_word_to_dec_string (wordsSyntax 233)
value dest_word_to_hex_list (wordsSyntax 234)
value dest_word_to_hex_string (wordsSyntax 235)
value dest_word_to_oct_list (wordsSyntax 236)
value dest_word_to_oct_string (wordsSyntax 237)
value dest_word_type (wordsSyntax 7)
value dest_word_xnor (wordsSyntax 238)
value dest_word_xor (wordsSyntax 239)
value dest_wordempty (patricia_castsSyntax 75)
value dest_wordset_of_ptree (patricia_castsSyntax 91)
value dest_write (state_transformerSyntax 39)
value dest_zero_extend (bitstringSyntax 94)
value dest_zip (listSyntax 115)
value destruct_theory_thm (holindexData 48)
value destructors_of (TypeBase 22), value destructors_of (TypeBasePure 48)
value DET_OMEGA_EXISTS_FORALL_THEOREM (Omega_AutomataTheory 27)
value Df (mlibUseful 41)
type dfactoid (OmegaMLShadow 10), type dfactoid (mlibOmega 13)
value DFUNSET_def (util_probTheory 5)
value diag_def (relationTheory 42)
value diamond_def (relationTheory 43)
value diamond_RC_diamond (relationTheory 199)
value diamond_TC_diamond (relationTheory 200)
type dict (Redblackmap 3)
value dict_topsort (Lib 43)
value die (mlibUseful 193), value die (testutils 5)
constructor DIFF (Lib 2), structure Diff
value DIFF_ACS (transcTheory 68)
value DIFF_ACS_LEMMA (transcTheory 69)
value DIFF_ADD (limTheory 29)
value DIFF_applied (pred_setTheory 145)
value DIFF_ASN (transcTheory 70)
value DIFF_ASN_LEMMA (transcTheory 71)
value DIFF_ATN (transcTheory 72)
value DIFF_BIGINTER (util_probTheory 42)
value DIFF_BIGINTER1 (util_probTheory 43)
value DIFF_CARAT (limTheory 30)
value DIFF_CHAIN (limTheory 31)
value DIFF_CMUL (limTheory 32)
value DIFF_COMM (pred_setTheory 135)
value DIFF_COMPOSITE (transcTheory 73)
value DIFF_COMPOSITE_EXP (transcTheory 74)
value DIFF_CONST (limTheory 33)
value DIFF_CONT (limTheory 34)
value DIFF_CONV (Diff 3), value DIFF_CONV (realLib 17)
value DIFF_COS (transcTheory 75)
value DIFF_DEF (pred_setTheory 13)
value DIFF_DIFF (pred_setTheory 136)
value DIFF_DIFF_SUBSET (util_probTheory 44)
value DIFF_DIV (limTheory 35)
value DIFF_EMPTY (pred_setTheory 137)
value DIFF_EQ_EMPTY (pred_setTheory 138)
value DIFF_EXP (transcTheory 76)
value DIFF_INSERT (pred_setTheory 139)
value DIFF_INTER (util_probTheory 45)
value DIFF_INTER2 (util_probTheory 46)
value DIFF_INTER_SUBSET (pred_setTheory 140)
value DIFF_INV (limTheory 36)
value DIFF_INVERSE (limTheory 37)
value DIFF_INVERSE_LT (limTheory 38)
value DIFF_INVERSE_OPEN (limTheory 39)
value DIFF_ISCONST (limTheory 40)
value DIFF_ISCONST_ALL (limTheory 41)
value DIFF_ISCONST_END (limTheory 42)
value DIFF_LCONST (limTheory 43)
value DIFF_LDEC (limTheory 44)
value DIFF_LINC (limTheory 45)
value DIFF_LMAX (limTheory 46)
value DIFF_LMIN (limTheory 47)
value DIFF_LN (transcTheory 77)
value DIFF_LN_COMPOSITE (transcTheory 78)
value diff_merge (fmapalTheory 132)
value diff_merge_curried (fmapalTheory 52)
value diff_merge_ind (fmapalTheory 133)
value diff_merge_tupled_primitive (fmapalTheory 53)
value DIFF_MUL (limTheory 48)
value DIFF_NEG (limTheory 49)
value diff_of_coeffs (Term_coeffs 10)
value DIFF_POW (limTheory 50)
value DIFF_PRS (quotient_pred_setTheory 18)
value DIFF_RPOW (transcTheory 79)
value DIFF_RSP (quotient_pred_setTheory 19)
value DIFF_SAME_UNION (pred_setTheory 141)
value DIFF_SIN (transcTheory 80)
value DIFF_SUB (limTheory 51)
value DIFF_SUBSET (pred_setTheory 142)
value DIFF_SUM (limTheory 52)
value DIFF_TAN (transcTheory 81)
value diff_tm (pred_setSyntax 16)
value DIFF_UNION (pred_setTheory 143)
value DIFF_UNIQ (limTheory 53)
value DIFF_UNIV (pred_setTheory 144)
value DIFF_X (limTheory 54)
value DIFF_XM1 (limTheory 55)
value difference (Redblackset 22)
value difference_def (sptreeTheory 6)
value difference_tm (sptreeSyntax 18)
value different_sign_then_no_overflow (integer_wordTheory 37)
value differentiable (limTheory 6)
value diffl (limTheory 7)
value diffs (powserTheory 5)
value DIFFS_EQUIV (powserTheory 8)
value DIFFS_LEMMA (powserTheory 9)
value DIFFS_LEMMA2 (powserTheory 10)
value DIFFS_NEG (powserTheory 11)
value digit (mlibParser 55)
value dim_of (fcpSyntax 15), value dim_of (wordsSyntax 9)
value DIMINDEX (fcpLib 8)
value dimindex_1 (wordsTheory 453)
value dimindex_10 (wordsTheory 454)
value dimindex_11 (wordsTheory 455)
value dimindex_12 (wordsTheory 456)
value dimindex_128 (wordsTheory 457)
value dimindex_16 (wordsTheory 458)
value dimindex_1_cases (wordsTheory 459)
value dimindex_2 (wordsTheory 460)
value dimindex_20 (wordsTheory 461)
value dimindex_24 (wordsTheory 462)
value dimindex_28 (wordsTheory 463)
value dimindex_3 (wordsTheory 464)
value dimindex_30 (wordsTheory 465)
value dimindex_32 (wordsTheory 466)
value dimindex_4 (wordsTheory 467)
value dimindex_48 (wordsTheory 468)
value dimindex_5 (wordsTheory 469)
value dimindex_6 (wordsTheory 470)
value dimindex_64 (wordsTheory 471)
value dimindex_7 (wordsTheory 472)
value dimindex_8 (wordsTheory 473)
value dimindex_9 (wordsTheory 474)
value dimindex_96 (wordsTheory 475)
value dimindex_def (fcpTheory 27)
value dimindex_dimword_iso (wordsTheory 476)
value dimindex_dimword_le_iso (wordsTheory 477)
value dimindex_dimword_lt_iso (wordsTheory 478)
value DIMINDEX_GE_1 (fcpTheory 37)
value DIMINDEX_GT_0 (wordsTheory 127)
value dimindex_int_max_iso (wordsTheory 479)
value dimindex_int_max_le_iso (wordsTheory 480)
value dimindex_int_max_lt_iso (wordsTheory 481)
value dimindex_int_min_iso (wordsTheory 482)
value dimindex_int_min_le_iso (wordsTheory 483)
value dimindex_int_min_lt_iso (wordsTheory 484)
value dimindex_lt_dimword (wordsTheory 485)
value dimindex_tm (fcpSyntax 19), value dimindex_tm (wordsSyntax 29)
value dimindex_uint_max_iso (wordsTheory 486)
value dimindex_uint_max_le_iso (wordsTheory 487)
value dimindex_uint_max_lt_iso (wordsTheory 488)
value dimindexi (basis_emitTheory 8)
HOL BasicProvers.diminish_srw_ss (help/Docfiles/BasicProvers.diminish_srw_ss.adoc 0), value diminish_srw_ss (BasicProvers 30), value diminish_srw_ss (bossLib 72)
value dimword_1 (wordsTheory 489)
value dimword_10 (wordsTheory 490)
value dimword_11 (wordsTheory 491)
value dimword_12 (wordsTheory 492)
value dimword_128 (wordsTheory 493)
value dimword_16 (wordsTheory 494)
value dimword_2 (wordsTheory 495)
value dimword_20 (wordsTheory 496)
value dimword_24 (wordsTheory 497)
value dimword_28 (wordsTheory 498)
value dimword_3 (wordsTheory 499)
value dimword_30 (wordsTheory 500)
value dimword_32 (wordsTheory 501)
value dimword_4 (wordsTheory 502)
value dimword_48 (wordsTheory 503)
value dimword_5 (wordsTheory 504)
value dimword_6 (wordsTheory 505)
value dimword_64 (wordsTheory 506)
value dimword_7 (wordsTheory 507)
value dimword_8 (wordsTheory 508)
value dimword_9 (wordsTheory 509)
value dimword_96 (wordsTheory 510)
value dimword_def (wordsTheory 15)
value dimword_IS_TWICE_INT_MIN (wordsTheory 511)
value dimword_sub_int_min (wordsTheory 512)
value dimword_tm (wordsSyntax 30)
value Dint (transcTheory 5)
value DINT_0 (integralTheory 11)
value DINT_ADD (integralTheory 12)
value DINT_CMUL (integralTheory 13)
value DINT_COMBINE (integralTheory 14)
value DINT_CONST (integralTheory 15)
value DINT_DELTA (integralTheory 16)
value DINT_DELTA_LEFT (integralTheory 17)
value DINT_DELTA_RIGHT (integralTheory 18)
value DINT_EQ (integralTheory 19)
value DINT_FINITE_SPIKE (integralTheory 20)
value DINT_INTEGRAL (integralTheory 21)
value DINT_LE (integralTheory 22)
value DINT_LINEAR (integralTheory 23)
value DINT_NEG (integralTheory 24)
value DINT_POINT_SPIKE (integralTheory 25)
value DINT_SUB (integralTheory 26)
value Dint_tm (transcSyntax 4)
value DINT_TRIANGLE (integralTheory 27)
value DINT_UNIQ (transcTheory 82)
value DINT_WRONG (integralTheory 28)
type dir (CooperMath 16)
value dir_of_pair (CooperMath 19)
value direct_context_qp (quantHeuristicsLib 72), value direct_context_qp (quantHeuristicsLibBase 165)
constructor DIRECT_CONTR (OmegaMLShadow 5), constructor DIRECT_CONTR (mlibOmega 8)
value direct_ctxt_std_qp (quantHeuristicsLib 112), value direct_ctxt_std_qp (quantHeuristicsLibParameters 47)
HOL ConseqConv.directed_conseq_conv (help/Docfiles/ConseqConv.directed_conseq_conv.adoc 0), type directed_conseq_conv (ConseqConv 27)
value disable_abbrev_printing (type_grammar 27)
value disable_all (ProvideUnicode 30)
HOL Parse.disable_tyabbrev_printing (help/Docfiles/Parse.disable_tyabbrev_printing.adoc 0), value disable_tyabbrev_printing (Parse 40)
HOL Tactic.DISCARD_TAC (help/Docfiles/Tactic.DISCARD_TAC.adoc 0), value DISCARD_TAC (Tactic 5)
HOL Thm.DISCH (help/Docfiles/Thm.DISCH.adoc 0), HOL HolKernel.disch (help/Docfiles/HolKernel.disch.adoc 0), constructor Disch (Count 11), value DISCH (FinalThm 29), value DISCH (Q 35), value disch (HolKernelDoc 26)
HOL Drule.DISCH_ALL (help/Docfiles/Drule.DISCH_ALL.adoc 0), value DISCH_ALL (Drule 51)
value DISCH_ASM_CONSEQ_CONV_TAC (ConseqConv 228)
value DISCH_ASM_CONV_TAC (ConseqConv 227)
HOL Tactic.DISCH_TAC (help/Docfiles/Tactic.DISCH_TAC.adoc 0), value DISCH_TAC (Tactic 54)
HOL Thm_cont.DISCH_THEN (help/Docfiles/Thm_cont.DISCH_THEN.adoc 0), value DISCH_THEN (Thm_cont 17), value disch_then (Thm_cont 18), value disch_then (lcsymtacs 38)
value disj (UnicodeChars 110)
HOL Thm.DISJ1 (help/Docfiles/Thm.DISJ1.adoc 0), constructor Disj1 (Count 11), value DISJ1 (FinalThm 81), value DISJ1 (Q 14)
HOL Tactic.DISJ1_TAC (help/Docfiles/Tactic.DISJ1_TAC.adoc 0), value DISJ1_TAC (Tactic 17), value disj1_tac (Tactic 18), value disj1_tac (lcsymtacs 11)
HOL Thm.DISJ2 (help/Docfiles/Thm.DISJ2.adoc 0), constructor Disj2 (Count 11), value DISJ2 (FinalThm 82), value DISJ2 (Q 15)
HOL Tactic.DISJ2_TAC (help/Docfiles/Tactic.DISJ2_TAC.adoc 0), value DISJ2_TAC (Tactic 19), value disj2_tac (Tactic 20), value disj2_tac (lcsymtacs 12)
value DISJ_ASSOC (boolTheory 69)
value DISJ_ASSOC_NORM_CONV (Thm_convs 3)
HOL Thm.DISJ_CASES (help/Docfiles/Thm.DISJ_CASES.adoc 0), value DISJ_CASES (FinalThm 83)
HOL Tactic.DISJ_CASES_TAC (help/Docfiles/Tactic.DISJ_CASES_TAC.adoc 0), value DISJ_CASES_TAC (Tactic 55), value DISJ_CASES_TAC (jrhTactics 26)
HOL Thm_cont.DISJ_CASES_THEN (help/Docfiles/Thm_cont.DISJ_CASES_THEN.adoc 0), value DISJ_CASES_THEN (Thm_cont 15), value DISJ_CASES_THEN (jrhTactics 42)
HOL Thm_cont.DISJ_CASES_THEN2 (help/Docfiles/Thm_cont.DISJ_CASES_THEN2.adoc 0), value DISJ_CASES_THEN2 (Thm_cont 14)
HOL Thm_cont.DISJ_CASES_THENL (help/Docfiles/Thm_cont.DISJ_CASES_THENL.adoc 0), value DISJ_CASES_THENL (Thm_cont 16)
HOL Drule.DISJ_CASES_UNION (help/Docfiles/Drule.DISJ_CASES_UNION.adoc 0), value DISJ_CASES_UNION (Drule 69)
value DISJ_CASESL (Drule 70), value DISJ_CASESL (Rules 16)
value DISJ_COMM (boolTheory 70)
value DISJ_ELIM_1 (HolSmtTheory 14)
value DISJ_ELIM_2 (HolSmtTheory 15)
HOL Drule.DISJ_IMP (help/Docfiles/Drule.DISJ_IMP.adoc 0), value DISJ_IMP (Drule 67)
value DISJ_IMP_INTRO (quantHeuristicsTheory 15)
value DISJ_IMP_THM (boolTheory 71)
value DISJ_IMPLIES (quotientTheory 24)
HOL Arith.DISJ_INEQS_FALSE_CONV (help/Docfiles/Arith.DISJ_INEQS_FALSE_CONV.adoc 0), value DISJ_INEQS_FALSE_CONV (Arith 7), value DISJ_INEQS_FALSE_CONV (Solve 6)
value DISJ_LINEAR_CONV (Norm_bool 7)
value DISJ_LIST_CASES_TAC (jbUtils 16)
value DISJ_NEQ_ELIM (CooperThms 23)
value DISJ_NORM_FORM_CONV (Norm_bool 8)
value DISJ_SYM (boolTheory 72)
constructor DisjCases (Count 11)
constructor DISJN (CooperSyntax 28)
value DISJOINT_ALT (util_probTheory 47)
value DISJOINT_BIGINTER (pred_setTheory 146)
value DISJOINT_BIGUNION (pred_setTheory 147)
value DISJOINT_COUNT (util_probTheory 48)
value DISJOINT_DEF (pred_setTheory 14)
value DISJOINT_DELETE_SYM (pred_setTheory 148)
value DISJOINT_DIFF (util_probTheory 49)
value DISJOINT_DIFFS (util_probTheory 50)
value disjoint_drestrict (finite_mapTheory 225)
value DISJOINT_EMPTY (pred_setTheory 149)
value DISJOINT_EMPTY_REFL (pred_setTheory 150)
value DISJOINT_EMPTY_REFL_RWT (pred_setTheory 151)
value DISJOINT_GENLIST_PLUS (listTheory 90)
value DISJOINT_INSERT (pred_setTheory 152)
value DISJOINT_INSERT' (pred_setTheory 153)
value DISJOINT_PRS (quotient_pred_setTheory 21)
value DISJOINT_SING_EMPTY (pred_setTheory 154)
value DISJOINT_SUBSET (pred_setTheory 155)
value DISJOINT_SYM (pred_setTheory 156)
value disjoint_tm (pred_setSyntax 27)
value DISJOINT_UNION (pred_setTheory 157)
value DISJOINT_UNION_BOTH (pred_setTheory 158)
value DISJOINTR_def (quotient_pred_setTheory 6)
value DISJOINTR_RSP (quotient_pred_setTheory 20)
value DISJPATH_CONV (Canon 14), value DISJPATH_CONV (refuteLib 14)
HOL boolSyntax.disjunction (help/Docfiles/boolSyntax.disjunction.adoc 0), value disjunction (boolSyntax 18)
value DISJUNCTIVE_NORMAL_FORM (Past_Temporal_LogicTheory 20)
HOL Drule.DISJUNCTS_AC (help/Docfiles/Drule.DISJUNCTS_AC.adoc 0), value DISJUNCTS_AC (Drule 41)
constructor Disk (Count 11)
value disk_thm (FinalThm 118)
structure DiskFilesHeader
structure DiskThms
value DISPLAY_TO_ENUMERAL_CONV (enumTacs 23)
value DISPLAY_TO_set_CONV (enumTacs 22)
value disprove (HolQbfLib 5)
type distance (mlibResolution 12), type distance (mlibSupport 31)
value distinct (mlibUseful 85)
value distinct_of (TypeBase 28), value distinct_of (TypeBasePure 54)
value distinct_qp (quantHeuristicsLib 130), value distinct_qp (quantHeuristicsLibBase 140)
value distr_left (ringTheory 25), value distr_left (semi_ringTheory 22)
value distr_right (semi_ringTheory 23)
value DISTRIB_CONV (AC 13), value DISTRIB_CONV (refuteLib 9)
value distribution_def (probabilityTheory 8)
value distribution_lebesgue_thm1 (probabilityTheory 82)
value distribution_lebesgue_thm2 (probabilityTheory 83)
value distribution_partition (probabilityTheory 84)
value distribution_pos (probabilityTheory 85)
value distribution_prob_space (probabilityTheory 86)
value distribution_x_eq_1_imp_distribution_y_eq_0 (probabilityTheory 87)
exception Div (Portable 73), value div (Arbintcore 22), value div (Arbnumcore 42), value div (mlibArbint 24), value div (mlibArbnum 29), value div (mlibOmegaint 21)
value div2 (Arbnumcore 10), value div2 (mlibArbnum 12)
value DIV2_BIT1 (numeralTheory 17)
value DIV2_def (arithmeticTheory 10)
value div2_tm (numSyntax 9)
value DIV_0_IMP_LT (numposrepTheory 21)
value DIV_1 (arithmeticTheory 70)
value DIV_2EXP (numeral_bitTheory 18)
value DIV_2EXP_def (bitTheory 12)
value div_2exp_tm (bitSyntax 11)
value div_add (extrealTheory 143)
HOL reduceLib.DIV_CONV (help/Docfiles/reduceLib.DIV_CONV.adoc 0), value DIV_CONV (Arithconv 17), value DIV_CONV (reduceLib 24)
value DIV_DIV_DIV_MULT (arithmeticTheory 71)
value DIV_EQ_X (arithmeticTheory 72)
value DIV_GT0 (bitTheory 88)
value DIV_IN_Q (extrealTheory 55)
value DIV_LE_MONOTONE (arithmeticTheory 75)
value DIV_LE_X (arithmeticTheory 76)
value DIV_LESS (arithmeticTheory 73)
value DIV_LESS_EQ (arithmeticTheory 74)
value DIV_LT (bitTheory 89)
value DIV_LT_X (arithmeticTheory 77)
value DIV_MOD_MOD_DIV (arithmeticTheory 78)
value DIV_MULT (arithmeticTheory 79)
value DIV_MULT_1 (bitTheory 90)
value DIV_MULT_THM (bitTheory 91)
value DIV_MULT_THM2 (bitTheory 92)
value DIV_ONE (arithmeticTheory 80), value div_one (extrealTheory 144)
value DIV_P (arithmeticTheory 81)
value DIV_P_UNIV (arithmeticTheory 82)
value div_rat (realTheory 431)
value div_ratl (realTheory 432)
value div_ratr (realTheory 433)
value DIV_SUB (arithmeticTheory 83)
value DIV_SUB1 (bitTheory 93)
value div_tm (intSyntax 13), value div_tm (numSyntax 10), value div_tm (realSyntax 13)
value DIV_UNIQUE (arithmeticTheory 84)
value divide (mlibUseful 72)
value divides (mlibUseful 116)
value DIVIDES_ADD_1 (dividesTheory 11)
value DIVIDES_ADD_2 (dividesTheory 12)
value DIVIDES_ANTISYM (dividesTheory 13)
value divides_def (dividesTheory 6)
value DIVIDES_FACT (dividesTheory 14)
value divides_grammars (dividesTheory 50)
value DIVIDES_LE (dividesTheory 15)
value DIVIDES_LEQ_OR_ZERO (dividesTheory 16)
value DIVIDES_MULT (dividesTheory 17)
value DIVIDES_MULT_LEFT (dividesTheory 18)
value DIVIDES_ONE (dividesTheory 19)
value DIVIDES_REFL (dividesTheory 20)
value DIVIDES_SUB (dividesTheory 21)
value divides_tm (intSyntax 23)
value DIVIDES_TRANS (dividesTheory 22)
structure dividesTheory
value DIVISION (arithmeticTheory 11), value division (transcTheory 10)
value DIVISION_0 (transcTheory 83)
value DIVISION_1 (transcTheory 84)
value DIVISION_APPEND (integralTheory 29), value DIVISION_APPEND (transcTheory 85)
value DIVISION_APPEND_EXPLICIT (integralTheory 30)
value DIVISION_APPEND_STRONG (integralTheory 31)
value DIVISION_BOUNDS (integralTheory 32)
value DIVISION_DSIZE_EQ (integralTheory 33)
value DIVISION_DSIZE_EQ_ALT (integralTheory 34)
value DIVISION_DSIZE_GE (integralTheory 35)
value DIVISION_DSIZE_LE (integralTheory 36)
value DIVISION_EQ (transcTheory 86)
value DIVISION_EXISTS (transcTheory 87)
value DIVISION_GT (transcTheory 88)
value DIVISION_INTERMEDIATE (integralTheory 37)
value DIVISION_LBOUND (transcTheory 89)
value DIVISION_LBOUND_LT (transcTheory 90)
value DIVISION_LE (transcTheory 91)
value DIVISION_LE_SUC (integralTheory 38)
value DIVISION_LHS (transcTheory 92)
value DIVISION_LT (transcTheory 93)
value DIVISION_LT_GEN (transcTheory 94)
value DIVISION_MONO_LE (integralTheory 39)
value DIVISION_MONO_LE_SUC (integralTheory 40)
value DIVISION_RHS (transcTheory 95)
value DIVISION_SINGLE (transcTheory 96)
value DIVISION_THM (transcTheory 97)
value division_tm (transcSyntax 9)
value DIVISION_UBOUND (transcTheory 98)
value DIVISION_UBOUND_LT (transcTheory 99)
value DIVISOR_IN_PRIME_FACTORS (primeFactorTheory 8)
value divmod (Arbintcore 26), value divmod (Arbnumcore 44), value divmod (mlibArbint 28), value divmod (mlibArbnum 31)
value DIVMOD_2EXP (bitTheory 87)
value DIVMOD_2EXP_def (bitTheory 11)
value divmod_2exp_tm (bitSyntax 12)
value DIVMOD_CALC (arithmeticTheory 66)
value DIVMOD_CORRECT (arithmeticTheory 67)
value DIVMOD_DEF (arithmeticTheory 12)
value DIVMOD_ID (arithmeticTheory 68)
value DIVMOD_NUMERAL_CALC (numeralTheory 18)
value divmod_POS (numeralTheory 22)
value DIVMOD_THM (arithmeticTheory 69)
value divmod_tm (numSyntax 11)
value DNF_CONV (Canon 25), value DNF_CONV (normalForms 136), value DNF_CONV (refuteLib 25)
value DNF_CONV' (normalForms 135)
HOL boolSimps.DNF_ss (help/Docfiles/boolSimps.DNF_ss.adoc 0), value DNF_ss (boolSimps 33)
value DNM (fracTheory 22)
HOL Type.dom_rng (help/Docfiles/Type.dom_rng.adoc 0), value dom_rng (FinalType 28)
value domain_CONV (sptreeLib 2)
value domain_def (CoderTheory 10), value domain_def (set_relationTheory 11), value domain_def (sptreeTheory 7)
value domain_delete (sptreeTheory 43)
value domain_empty (sptreeTheory 44)
value domain_foldi (sptreeTheory 45)
value domain_fromAList (sptreeTheory 46)
value domain_fromList (sptreeTheory 47)
value domain_insert (sptreeTheory 48)
value domain_inter (sptreeTheory 49)
value domain_lookup (sptreeTheory 50)
value domain_map (sptreeTheory 51)
value domain_mk_wf (sptreeTheory 52)
value domain_sing (sptreeTheory 53)
value domain_tm (sptreeSyntax 19)
value domain_to_rel_conv (set_relationTheory 52)
value domain_union (sptreeTheory 54)
value dominates_def (bagTheory 36)
value dominates_DIFF (bagTheory 251)
value dominates_EMPTY (bagTheory 252)
value dominates_SUBSET (bagTheory 253)
value doms_of_tyaxiom (Prim_rec 12)
value DOMSUB_COMMUTES (finite_mapTheory 35)
value DOMSUB_FAPPLY (finite_mapTheory 36)
value DOMSUB_FAPPLY_NEQ (finite_mapTheory 37)
value DOMSUB_FAPPLY_THM (finite_mapTheory 38)
value DOMSUB_FEMPTY (finite_mapTheory 39)
value DOMSUB_FLOOKUP (finite_mapTheory 40)
value DOMSUB_FLOOKUP_NEQ (finite_mapTheory 41)
value DOMSUB_FLOOKUP_THM (finite_mapTheory 42)
value DOMSUB_FUNION (finite_mapTheory 43)
value DOMSUB_FUPDATE (finite_mapTheory 44)
value DOMSUB_FUPDATE_NEQ (finite_mapTheory 45)
value DOMSUB_FUPDATE_THM (finite_mapTheory 46)
value DOMSUB_IDEM (finite_mapTheory 47)
value DOMSUB_NOT_IN_DOM (finite_mapTheory 48)
value DOMSUB_SUBMAP (finite_mapTheory 49)
constructor DONT_ADD (RW 31)
value dorder (netsTheory 6)
value DORDER_LEMMA (netsTheory 11)
value DORDER_NGE (netsTheory 12)
value DORDER_TENDSTO (netsTheory 13)
value DOT_PATH (Systeml 34)
value double_bracel (UnicodeChars 83)
value double_bracer (UnicodeChars 84)
value double_langle (UnicodeChars 87)
value DOUBLE_LT (arithmeticTheory 85)
value double_rangle (UnicodeChars 88)
value down_continuous_def (posetTheory 10)
value dproc_ss (simpLib 82)
value DRESTR (tcTheory 6)
value DRESTR_EMPTY (tcTheory 15)
value DRESTR_IN (tcTheory 16)
value DRESTR_RDOM (tcTheory 17)
value DRESTRICT_CONV (fmapalTacs 28)
value DRESTRICT_DEF (finite_mapTheory 5)
value DRESTRICT_DOMSUB (finite_mapTheory 51)
value DRESTRICT_DRESTRICT (finite_mapTheory 52)
value DRESTRICT_EQ_DRESTRICT (finite_mapTheory 53)
value DRESTRICT_EQ_DRESTRICT_SAME (finite_mapTheory 54)
value DRESTRICT_EQ_FUNION (finite_mapTheory 55)
value DRESTRICT_FDOM (finite_mapTheory 56)
value DRESTRICT_FEMPTY (finite_mapTheory 57)
value DRESTRICT_FUNION (finite_mapTheory 58)
value DRESTRICT_FUNION_DRESTRICT_COMPL (finite_mapTheory 59)
value DRESTRICT_FUNION_SAME (finite_mapTheory 60)
value DRESTRICT_FUNION_SUBSET (finite_mapTheory 61)
value DRESTRICT_FUPDATE (finite_mapTheory 62)
value DRESTRICT_IDEMPOT (finite_mapTheory 63)
value DRESTRICT_IS_FEMPTY (finite_mapTheory 64)
value drestrict_iter_list (finite_mapTheory 226)
value DRESTRICT_SUBMAP (finite_mapTheory 65)
value DRESTRICT_SUBMAP_gen (finite_mapTheory 66)
value DRESTRICT_SUBSET (finite_mapTheory 67)
value DRESTRICT_SUBSET_SUBMAP (finite_mapTheory 68)
value DRESTRICT_SUBSET_SUBMAP_gen (finite_mapTheory 69)
value DRESTRICT_UNIV (finite_mapTheory 70)
value DRESTRICTED_FUNION (finite_mapTheory 50)
value DROP (rich_listTheory 74), value drop (Manager 24), value drop (mlibStream 31), value drop (proofManagerLib 21), value drop (seq 40)
value DROP_0 (listTheory 91)
value DROP_APPEND (rich_listTheory 75)
value DROP_APPEND1 (rich_listTheory 76)
value DROP_APPEND2 (rich_listTheory 77)
value DROP_compute (listTheory 94)
value drop_cong (DefnBase 26)
value DROP_CONS_EL (rich_listTheory 78)
value DROP_def (listTheory 7), value drop_def (pathTheory 7)
value drop_def_compute (pathTheory 57)
value DROP_DROP (rich_listTheory 79)
value DROP_DROP_T (rich_listTheory 80)
value DROP_EL_CONS (rich_listTheory 81)
value drop_eq_pcons (pathTheory 58)
value DROP_FUNPOW_TL (rich_listTheory 82)
value DROP_LASTN (rich_listTheory 83)
value DROP_LENGTH_APPEND (rich_listTheory 84)
value DROP_LENGTH_NIL (rich_listTheory 85)
value DROP_LENGTH_NIL_rwt (rich_listTheory 86)
value DROP_LENGTH_TOO_LONG (listTheory 92)
value DROP_NIL (listTheory 93)
value drop_order (mlibClause 45)
value DROP_REPLICATE (rich_listTheory 87)
value DROP_REVERSE (rich_listTheory 88)
value DROP_SEG (rich_listTheory 89)
value DROP_SNOC (rich_listTheory 90)
value DROP_splitAtPki (listTheory 95)
value drop_tm (listSyntax 13)
value dropn (proofManagerLib 22)
value dropWhile_APPEND_EVERY (listTheory 401)
value dropWhile_APPEND_EXISTS (listTheory 402)
value dropWhile_def (listTheory 48)
value dropWhile_eq_nil (listTheory 403)
value dropWhile_splitAtPki (listTheory 404)
structure Drule
value dsimp (bossLib 133), value dsimp (lcsymtacs 88)
value dsize (transcTheory 11)
value DSIZE_EQ (integralTheory 41)
value dsize_tm (transcSyntax 10)
type dterm (clauses 8)
constructor dTyop (ParseDatatype 3)
constructor dVartype (ParseDatatype 3)
value DYNLIB (Systeml 32)
HOL proofManagerLib.e (help/Docfiles/proofManagerLib.e.adoc 0), value e (proofManagerLib 32)
value eager (liteLib 83)
HOL proofManagerLib.eall (help/Docfiles/proofManagerLib.eall.adoc 0), value eall (proofManagerLib 34)
value EBLAST_CONV (blastLib 13)
value EBLAST_PROVE (blastLib 14)
value EBLAST_RULE (blastLib 15)
value EBLAST_TAC (blastLib 16)
value eCAML (EmitML 37)
constructor Effectively_propositional (mlibCanon 36)
value egt1 (floatTheory 138)
value egtff (floatTheory 139)
constructor EITHER (CooperSyntax 27)
HOL Lib.el (help/Docfiles/Lib.el.adoc 0), value EL (listTheory 8), value EL (rich_listTheory 400), value el (Lib 44)
value EL_ALL_DISTINCT_EL_EQ (listTheory 96)
value EL_APPEND1 (rich_listTheory 109)
value EL_APPEND2 (rich_listTheory 110)
value el_append3 (listTheory 405)
value EL_BAG (bagTheory 26)
value EL_BAG_11 (bagTheory 173)
value EL_BAG_BAG_INSERT (bagTheory 174)
value EL_BAG_INSERT_squeeze (bagTheory 175)
value EL_BAG_SUB_BAG (bagTheory 176)
value EL_BUTFIRSTN (rich_listTheory 402)
value EL_compute (listTheory 105)
value EL_CONS (rich_listTheory 111)
HOL listLib.EL_CONV (help/Docfiles/listLib.EL_CONV.adoc 0), value EL_CONV (ListConv1 25), value EL_CONV (listLib 39)
value EL_COUNT_LIST (rich_listTheory 112)
value el_def (pathTheory 8)
value el_def_compute (pathTheory 59)
value EL_DROP (rich_listTheory 113), value el_drop (pathTheory 60)
value EL_ELL (rich_listTheory 114)
value el_field (bitstringTheory 44)
value EL_FIRSTN (rich_listTheory 403)
value el_fixwidth (bitstringTheory 45)
value EL_FRONT (rich_listTheory 115)
value EL_GENLIST (listTheory 97), value EL_GENLIST (rich_listTheory 404)
value EL_IS_EL (rich_listTheory 405)
value EL_LENGTH_APPEND (rich_listTheory 116)
value EL_LENGTH_APPEND_rwt (rich_listTheory 117)
value EL_LENGTH_dropWhile_REVERSE (listTheory 99)
value EL_LENGTH_SNOC (listTheory 98), value EL_LENGTH_SNOC (rich_listTheory 406)
value EL_listRangeLHI (listRangeTheory 9)
value EL_LUPDATE (listTheory 100)
value EL_MAP (listTheory 101), value EL_MAP (rich_listTheory 407)
value el_map_count (rich_listTheory 345)
value EL_MEM (rich_listTheory 118)
value EL_n2l (numposrepTheory 22)
value EL_num_to_bin_list (numposrepTheory 23)
value el_pgenerate (pathTheory 61)
value el_pmap (pathTheory 62)
value EL_PRE_LENGTH (rich_listTheory 119)
value EL_REPLICATE (rich_listTheory 120)
value EL_restricted (listTheory 106)
value el_rev_count_list (bitstringTheory 46)
value EL_REVERSE (listTheory 102), value EL_REVERSE (rich_listTheory 408)
value EL_REVERSE_ELL (rich_listTheory 121)
value EL_SEG (rich_listTheory 122)
value el_shiftr (bitstringTheory 47)
value el_sign_extend (bitstringTheory 48)
value EL_simp (listTheory 107)
value EL_simp_restricted (listTheory 108)
value EL_SNOC (listTheory 103), value EL_SNOC (rich_listTheory 409)
value EL_TAKE (rich_listTheory 123)
value el_tm (listSyntax 14)
value EL_V2L (fcpTheory 38)
value el_w2v (bitstringTheory 49)
value el_zero_extend (bitstringTheory 50)
value EL_ZIP (listTheory 104)
type elem (EmitML 17), value elem (schneiderUtils 51)
value ELGOT1_THM (Omega_AutomataTheory 28)
value ELGOT2_THM (Omega_AutomataTheory 29)
value ELGOT_LEMMA (Omega_AutomataTheory 30)
value elim_common_factor (realSimps 4)
value elim_eq (int_arithTheory 31)
value elim_eq_coeffs (int_arithTheory 32)
value elim_ge (CooperThms 5)
value elim_gt (CooperThms 4)
value elim_le (CooperThms 3)
value elim_le_coeffs (int_arithTheory 33)
value elim_lt_coeffs1 (int_arithTheory 34)
value elim_lt_coeffs2 (int_arithTheory 35)
value elim_minus_ones (int_arithTheory 36)
value elim_neg_ones (int_arithTheory 37)
value elim_paired_divides (CooperMath 60)
value ELIM_PEXISTS (pairTheory 24)
value ELIM_PEXISTS_EVAL (pairTheory 25)
value ELIM_PFORALL (pairTheory 26)
value ELIM_PFORALL_EVAL (pairTheory 27)
value elim_sdivides (CooperMath 50)
value elim_tcs (Defn 42)
value ELIM_TUPLED_QUANT_CONV (pairTools 17)
value ELIM_UNCURRY (pairTheory 28)
value eliminate_an_existential (OmegaSymbolic 5)
value eliminate_negative_divides (OmegaMath 24)
value eliminate_positive_divides (OmegaMath 23)
value ELL (rich_listTheory 9)
value ELL_0_SNOC (rich_listTheory 91)
value ELL_APPEND1 (rich_listTheory 92)
value ELL_APPEND2 (rich_listTheory 93)
value ELL_compute (rich_listTheory 108)
value ELL_CONS (rich_listTheory 94)
HOL listLib.ELL_CONV (help/Docfiles/listLib.ELL_CONV.adoc 0), value ELL_CONV (ListConv1 26), value ELL_CONV (listLib 40)
value ELL_EL (rich_listTheory 95)
value ELL_IS_EL (rich_listTheory 401)
value ELL_LAST (rich_listTheory 96)
value ELL_LENGTH_APPEND (rich_listTheory 97)
value ELL_LENGTH_CONS (rich_listTheory 98)
value ELL_LENGTH_SNOC (rich_listTheory 99)
value ELL_MAP (rich_listTheory 100)
value ELL_MEM (rich_listTheory 101)
value ELL_PRE_LENGTH (rich_listTheory 102)
value ELL_REVERSE (rich_listTheory 103)
value ELL_REVERSE_EL (rich_listTheory 104)
value ELL_SEG (rich_listTheory 105)
value ELL_SNOC (rich_listTheory 106)
value ELL_SUC_SNOC (rich_listTheory 107)
value ell_tm (rich_listSyntax 7)
HOL proofManagerLib.elt (help/Docfiles/proofManagerLib.elt.adoc 0), value elt (proofManagerLib 33)
value ELT_IN_DELETE (util_probTheory 51)
value elts (TypeBase 16)
value eltype (listSyntax 8), value eltype (pred_setSyntax 8)
value emacs_terminal (PPBackEnd 35)
value emax (ieeeTheory 30)
value embed (UniversalType 4)
value embedded_ref (RW 15)
HOL Feedback.emit_ERR (help/Docfiles/Feedback.emit_ERR.adoc 0), value emit_ERR (Feedback 12)
value emit_hol_script (Systeml 12)
value emit_hol_unquote_script (Systeml 13)
HOL Feedback.emit_MESG (help/Docfiles/Feedback.emit_MESG.adoc 0), value emit_MESG (Feedback 13)
HOL Feedback.emit_WARNING (help/Docfiles/Feedback.emit_WARNING.adoc 0), value emit_WARNING (Feedback 14)
value emitCAML (EmitML 34)
value emitCAMLDir (Globals 38)
structure EmitML, value emitML (EmitML 33)
value emitMLDir (Globals 37)
structure EmitTeX
value emitTeXDir (EmitTeX 6)
constructor empty (PEGParse 3), value empty (CharSet 4), value empty (HOLtokens 5), value empty (Ho_Net 13), value empty (LVTermNet 8), value empty (Net 16), value empty (PIntMap 26), value empty (Raw 9), value empty (Redblackset 7), value empty (TypeBasePure 83), value empty (TypeNet 7), value empty (UTF8Set 5), value empty (mlibClause 52), value empty (mlibClauseset 23), value empty (mlibHeap 10), value empty (mlibLiteralnet 17), value empty (mlibMultiset 10), value empty (mlibPatricia 21), value empty (mlibRewrite 16), value empty (mlibSubsume 17), value empty (mlibTermnet 17), value empty (mlibTermorder 25), value empty (mlibUnits 14), value empty (patriciaLib 15), value empty (seq 33)
value EMPTY_applied (pred_setTheory 165)
value EMPTY_BAG (bagTheory 27)
value EMPTY_BAG_alt (bagTheory 177)
value EMPTY_BAG_tm (bagLib 7), value EMPTY_BAG_tm (bagSyntax 4)
value empty_congset (congLib 69)
value EMPTY_DEF (pred_setTheory 15), value empty_def (fixedPointTheory 7)
value EMPTY_DELETE (pred_setTheory 159)
value empty_dep (Dep 8)
value EMPTY_DIFF (pred_setTheory 160)
value EMPTY_FUNSET (util_probTheory 52)
value empty_grammar (type_grammar 17)
value empty_guess_collection (quantHeuristicsLibBase 93)
value empty_idtable (SharingTables 22)
value EMPTY_IS_PTREE (patriciaTheory 57)
value empty_linear_order (set_relationTheory 53)
value empty_map (folTools 44)
HOL holCheckLib.empty_model (help/Docfiles/holCheckLib.empty_model.adoc 0)
value empty_monotone (fixedPointTheory 14)
value EMPTY_NOT_IN_partition (pred_setTheory 161)
value EMPTY_NOT_UNIV (pred_setTheory 162)
value EMPTY_OU (enumeralTheory 60)
value EMPTY_PRS (quotient_pred_setTheory 22)
value empty_qp (quantHeuristicsLib 125), value empty_qp (quantHeuristicsLibBase 163)
value empty_raw_subst (matchTools 24)
value EMPTY_REL_DEF (relationTheory 6)
HOL Rewrite.empty_rewrites (help/Docfiles/Rewrite.empty_rewrites.adoc 0), value empty_rewrites (Rewrite 5)
value EMPTY_RSP (quotient_pred_setTheory 23)
value empty_rws (clauses 43)
value empty_simpfrag (simpfrag 11)
value empty_simpls (RW 6)
value empty_ss (simpLib 110)
value empty_strict_linear_order (set_relationTheory 54)
value EMPTY_SUBSET (pred_setTheory 163)
value empty_tag (Tag 7)
value empty_termtable (SharingTables 24)
value empty_tm (patriciaSyntax 9), value empty_tm (pred_setSyntax 11)
HOL Term.empty_tmset (help/Docfiles/Term.empty_tmset.adoc 0), value empty_tmset (FinalTerm 80)
value empty_tytable (SharingTables 23)
value EMPTY_UNION (pred_setTheory 164)
HOL Term.empty_varset (help/Docfiles/Term.empty_varset.adoc 0), value empty_varset (FinalTerm 81)
value emptyset (UnicodeChars 128)
value emptystring_tm (stringLib 12), value emptystring_tm (stringSyntax 12)
value enable_all (ProvideUnicode 29)
value enc2dec_dec2enc (DecodeTheory 48)
value enc2dec_def (DecodeTheory 17)
value enc2dec_none (DecodeTheory 49)
value enc2dec_some (DecodeTheory 50)
value enc2dec_some_alt (DecodeTheory 51)
structure Encode, value encode (ProvideUnicode 36), value encode (TermCoding 3)
value encode_blist_def (EncodeTheory 7)
value encode_blist_def_compute (EncodeTheory 38)
value encode_bnum_def (EncodeTheory 8)
value encode_bnum_def_compute (EncodeTheory 39)
value encode_bnum_inj (EncodeTheory 40)
value encode_bnum_length (EncodeTheory 41)
value encode_bool_def (EncodeTheory 9)
value Encode_grammars (EncodeTheory 72)
value encode_list_cong (EncodeTheory 42)
value encode_list_def (EncodeTheory 10)
value encode_num_def (EncodeTheory 43)
value encode_num_ind (EncodeTheory 44)
value encode_num_primitive_def (EncodeTheory 11)
value encode_of (TypeBase 35), value encode_of (TypeBasePure 61)
value encode_of0 (TypeBase 40), value encode_of0 (TypeBasePure 67)
value encode_option_def (EncodeTheory 12)
value encode_prod_alt (EncodeTheory 45)
value encode_prod_def (EncodeTheory 13)
value encode_sum_def (EncodeTheory 14)
value encode_then_decode_blist (DecodeTheory 52)
value encode_then_decode_list (DecodeTheory 53)
value encode_then_decode_option (DecodeTheory 54)
value encode_then_decode_prod (DecodeTheory 55)
value encode_then_decode_sum (DecodeTheory 56)
value encode_tree_curried_def (EncodeTheory 15)
value encode_tree_def (EncodeTheory 46)
value encode_tree_tupled_primitive_def (EncodeTheory 16)
value encode_unit_def (EncodeTheory 17)
value encoder_def (CoderTheory 11)
structure EncodeTheory
value EncodeVar_grammars (EncodeVarTheory 21)
structure EncodeVarTheory
value encoding (ieeeTheory 31)
value end_block (HOLPP 32)
value end_foldr (liteLib 50)
HOL Lib.end_itlist (help/Docfiles/Lib.end_itlist.adoc 0), value end_itlist (Lib 45)
exception end_of_stream (Streams 3), value end_of_stream (Portable 59)
value end_real_time (Lib 46)
HOL Lib.end_time (help/Docfiles/Lib.end_time.adoc 0), value end_time (Lib 47)
constructor EndBinding (term_grammar 169)
constructor EndDb (clauses 26)
constructor EndInitialBlock (term_grammar 14), value EndInitialBlock (Parse 250)
value enter (Ho_Net 14), value enter (Net 28), value enter (Raw 20)
HOL proofManagerLib.enth (help/Docfiles/proofManagerLib.enth.adoc 0), value enth (proofManagerLib 36)
value entire (extrealTheory 145)
value ENUF_CONV (tcTacs 12)
value enum_type_to_tyinfo (EnumType 21)
value enumeral_grammars (enumeralTheory 121)
value enumeral_mult (numeralTheory 23)
value ENUMERAL_set (enumeralTheory 61)
value ENUMERAL_TO_DISPLAY_CONV (enumTacs 32)
value ENUMERAL_TO_OWL (enumTacs 28)
value ENUMERAL_TO_set_CONV (enumTacs 31)
structure enumeralTheory
HOL Lib.enumerate (help/Docfiles/Lib.enumerate.adoc 0), value ENUMERATE (util_probTheory 53), value enumerate (Lib 48), value enumerate (mlibUseful 66)
value enumerate_def (util_probTheory 9)
structure enumTacs
structure EnumType
type env (Parse_support 6)
value eof (Coding 14)
constructor EOS (term_grammar 169)
constructor Eprover (holyHammer 4)
constructor EQ (CooperMath 17), value eq (Preterm 27), value eq (mlibOmegaint 10)
value EQ_ABS_CONV (Canon 32), value EQ_ABS_CONV (refuteLib 32)
value EQ_ADD_LCANCEL (arithmeticTheory 86)
value EQ_ADD_RCANCEL (arithmeticTheory 87)
value eq_add_sub_switch (extrealTheory 146)
value EQ_ADDL (integerTheory 40)
value eq_axioms (mlibThm 63)
value EQ_CLAUSES (boolTheory 73)
value EQ_CONGPROC (Opening 91)
value eq_context_rwt1 (int_arithTheory 38)
value eq_context_rwt2 (int_arithTheory 39)
value EQ_EXISTS_INTRO (quantHeuristicsTools 30)
value EQ_EXPAND (boolTheory 74)
value EQ_EXPAND_CONV (Thm_convs 4)
value EQ_EXT (boolTheory 75)
value EQ_FACTOR (mlibThm 56)
value EQ_FDOM_SUBMAP (finite_mapTheory 71)
value EQ_FORALL_INTRO (quantHeuristicsTools 31)
value EQ_IMP_ELIM_CONV (Norm_bool 5)
HOL Thm.EQ_IMP_RULE (help/Docfiles/Thm.EQ_IMP_RULE.adoc 0), value EQ_IMP_RULE (FinalThm 51)
value EQ_IMP_THM (boolTheory 76)
value EQ_IMPLIES (quotientTheory 36)
value eq_intro (compute_rules 32)
value eq_ints (realTheory 434)
value eq_justify_multiplication (int_arithTheory 40)
value EQ_LADD (integerTheory 41)
HOL listLib.EQ_LENGTH_INDUCT_TAC (help/Docfiles/listLib.EQ_LENGTH_INDUCT_TAC.adoc 0), value EQ_LENGTH_INDUCT_TAC (ListConv1 10), value EQ_LENGTH_INDUCT_TAC (listLib 24)
HOL listLib.EQ_LENGTH_SNOC_INDUCT_TAC (help/Docfiles/listLib.EQ_LENGTH_SNOC_INDUCT_TAC.adoc 0), value EQ_LENGTH_SNOC_INDUCT_TAC (ListConv1 11), value EQ_LENGTH_SNOC_INDUCT_TAC (listLib 25)
value EQ_LESS (prim_recTheory 16)
value EQ_LESS_CONV (enumTacs 10)
value EQ_LESS_EQ (arithmeticTheory 88)
value EQ_LIST (listTheory 109), value EQ_LIST (rich_listTheory 410)
value EQ_MONO_ADD_EQ (arithmeticTheory 89)
value eq_move_all_left (int_arithTheory 41)
value eq_move_all_right (int_arithTheory 42)
value eq_move_left_left (int_arithTheory 43)
value eq_move_left_right (int_arithTheory 44)
value eq_move_right_left (int_arithTheory 45)
HOL Thm.EQ_MP (help/Docfiles/Thm.EQ_MP.adoc 0), value EQ_MP (FinalThm 50)
value EQ_MULT_LCANCEL (arithmeticTheory 90)
value eq_neg (extrealTheory 147)
value eq_occurs (mlibTerm 107)
value EQ_preorder (Travrules 92)
value eq_rat (realTheory 435)
value eq_ratl (realTheory 436)
value eq_ratr (realTheory 437)
value EQ_REFL (boolTheory 77)
value eq_rel (mlibTerm 99)
value eq_sub_ladd (extrealTheory 148)
value eq_sub_ladd_normal (extrealTheory 149)
value eq_sub_radd (extrealTheory 150)
value eq_sub_switch (extrealTheory 151)
value EQ_SUBSET_SUBSET (util_probTheory 54)
value EQ_SUC (integralTheory 42)
value EQ_SYM (boolTheory 78)
value eq_sym_aconv (BoolExtractShared 8)
value EQ_SYM_EQ (boolTheory 79)
value EQ_T_IMP (util_probTheory 55)
HOL Tactic.EQ_TAC (help/Docfiles/Tactic.EQ_TAC.adoc 0), value EQ_TAC (Tactic 23), value eq_tac (Tactic 24), value eq_tac (lcsymtacs 6)
value EQ_tr (Travrules 93)
value EQ_TRANS (boolTheory 80)
value EQ_UNIV (pred_setTheory 167)
value EQC_DEF (relationTheory 7)
value EQC_EQUIVALENCE (relationTheory 59)
value EQC_IDEM (relationTheory 60)
value EQC_INDUCTION (relationTheory 61)
value EQC_MONOTONE (relationTheory 62)
value EQC_MOVES_IN (relationTheory 63)
value EQC_R (relationTheory 64)
value EQC_REFL (relationTheory 65)
value EQC_SYM (relationTheory 66)
value EQC_TRANS (relationTheory 67)
constructor EQDATATYPE (EmitML 17)
HOL Drule.EQF_ELIM (help/Docfiles/Drule.EQF_ELIM.adoc 0), value EQF_ELIM (Drule 47)
value EQF_Imp1 (satTheory 9)
HOL Drule.EQF_INTRO (help/Docfiles/Drule.EQF_INTRO.adoc 0), value EQF_INTRO (Drule 46)
constructor EqImpRule (Count 11)
value EqIsBothRSUBSET (relationTheory 70)
constructor EqMp (Count 11)
value eqns (mlibRewrite 20)
value eqns_of (Defn 30)
HOL Drule.EQT_ELIM (help/Docfiles/Drule.EQT_ELIM.adoc 0), value EQT_ELIM (Drule 24)
value EQT_Imp1 (satTheory 10)
HOL Drule.EQT_INTRO (help/Docfiles/Drule.EQT_INTRO.adoc 0), value EQT_INTRO (Drule 14)
HOL Lib.equal (help/Docfiles/Lib.equal.adoc 0), type equal (mlibCanon 37), value equal (Lib 49), value equal (Redblackset 15), value equal (mlibMultiset 17), value equal (mlibUseful 48)
value EQUAL_CUTS (hrealTheory 28)
value EQUAL_REWR (totoTacs 13)
value EQUAL_SING (pred_setTheory 166)
value EQUAL_TAC (jrhUtils 17)
HOL boolSyntax.equality (help/Docfiles/boolSyntax.equality.adoc 0), constructor Equality (mlibCanon 37), constructor Equality (mlibKernel 14), value EQUALITY (mlibKernel 26), value equality (boolSyntax 9)
constructor Equality' (mlibThm 13)
value equality_removal (OmegaTheory 53)
value EQUALITY_THM (Omega_AutomataTheory 31)
value EQUALS_EQUIV_IMPLIES (quotientTheory 25)
value EQUALS_IMPLIES (quotientTheory 26)
value EQUALS_PRS (quotientTheory 27)
value EQUALS_RSP (quotientTheory 28)
value EQUIV_def (quotientTheory 6)
value EQUIV_EXTRACT_ss (boolSimps 54)
value EQUIV_IMP_PARTIAL_EQUIV (quotientTheory 29)
value equiv_inj_def (comparisonTheory 8)
value EQUIV_NEXT (Temporal_LogicTheory 51)
value equiv_on_def (pred_setTheory 44)
value equiv_refl (quotient 70)
value EQUIV_REFL_SYM_TRANS (quotientTheory 30)
value EQUIV_RES_ABSTRACT_LEFT (quotientTheory 31)
value EQUIV_RES_ABSTRACT_RIGHT (quotientTheory 32)
value EQUIV_RES_EXISTS (quotientTheory 33)
value EQUIV_RES_EXISTS_UNIQUE (quotientTheory 34)
value EQUIV_RES_FORALL (quotientTheory 35)
value equiv_sym (quotient 77)
value equiv_trans (quotient 84)
value equivalence_def (relationTheory 44)
value equivalence_inv_identity (relationTheory 201)
structure EquivType
HOL Feedback.ERR_outstream (help/Docfiles/Feedback.ERR_outstream.adoc 0), value ERR_outstream (Feedback 17)
HOL Feedback.ERR_to_string (help/Docfiles/Feedback.ERR_to_string.adoc 0), value ERR_to_string (Feedback 25)
constructor Error (errormonad 3), constructor Error (type_tokens 2), exception Error (mlibUseful 9), value error (errormonad 7)
value ERROR_AT_WORST_LEMMA (floatTheory 17)
value ERROR_BOUND_BIG (floatTheory 18)
value ERROR_BOUND_BIG1 (floatTheory 19)
value ERROR_BOUND_LEMMA1 (floatTheory 20)
value ERROR_BOUND_LEMMA2 (floatTheory 21)
value ERROR_BOUND_LEMMA3 (floatTheory 22)
value ERROR_BOUND_LEMMA4 (floatTheory 23)
value ERROR_BOUND_LEMMA5 (floatTheory 24)
value ERROR_BOUND_LEMMA6 (floatTheory 25)
value ERROR_BOUND_LEMMA7 (floatTheory 26)
value ERROR_BOUND_LEMMA8 (floatTheory 27)
value ERROR_BOUND_NORM_STRONG (floatTheory 28)
value ERROR_BOUND_NORM_STRONG_NORMALIZE (floatTheory 29)
value ERROR_BOUND_SMALL (floatTheory 30)
value ERROR_BOUND_SMALL1 (floatTheory 31)
value ERROR_BOUND_TINY (floatTheory 32)
value error_def (floatTheory 5)
value ERROR_IS_ZERO (floatTheory 33)
HOL Feedback.error_record (help/Docfiles/Feedback.error_record.adoc 0), type error_record (Feedback 2)
structure errormonad
value errorStateMonad_grammars (errorStateMonadTheory 53)
structure errorStateMonadTheory
value ES_APPLY_DEF (errorStateMonadTheory 6)
value ES_CHOICE_ASSOC (errorStateMonadTheory 32)
value ES_CHOICE_DEF (errorStateMonadTheory 7)
value ES_CHOICE_FAIL_LID (errorStateMonadTheory 33)
value ES_CHOICE_FAIL_RID (errorStateMonadTheory 34)
value ES_FAIL_DEF (errorStateMonadTheory 8)
value ES_GUARD_DEF (errorStateMonadTheory 9)
value ES_LIFT2_DEF (errorStateMonadTheory 10)
value eSML (EmitML 36)
value establish_CR (relationTheory 202)
value et (proofManagerLib 37)
HOL proofManagerLib.eta (help/Docfiles/proofManagerLib.eta.adoc 0), value eta (UnicodeChars 9), value eta (proofManagerLib 35)
value ETA_AX (boolTheory 6)
HOL Drule.ETA_CONV (help/Docfiles/Drule.ETA_CONV.adoc 0), HOL Term.eta_conv (help/Docfiles/Term.eta_conv.adoc 0), value ETA_CONV (Drule 4), value eta_conv (FinalTerm 60)
value ETA_ss (boolSimps 22)
value ETA_THM (boolTheory 81)
HOL Type.etyvar (help/Docfiles/Type.etyvar.adoc 0), value etyvar (FinalType 35)
value EUCLID (dividesTheory 23)
value EUCLID_PRIMES (dividesTheory 24)
value EULER_FORMULE (complexTheory 217)
HOL bossLib.EVAL (help/Docfiles/bossLib.EVAL.adoc 0), value EVAL (bossLib 108), value eval (liteLib 84)
value eval_base (OmegaTheory 54)
value eval_bound (Sup_Inf 17)
value EVAL_CONV (computeLib 34)
value eval_form_def (DeepSyntaxTheory 11)
HOL bossLib.EVAL_RULE (help/Docfiles/bossLib.EVAL_RULE.adoc 0), value EVAL_RULE (bossLib 109), value EVAL_RULE (computeLib 35)
value eval_step_extra1 (OmegaTheory 55)
value eval_step_extra2 (OmegaTheory 56)
value eval_step_extra3 (OmegaTheory 57)
value eval_step_extra4 (OmegaTheory 58)
value eval_step_lower1 (OmegaTheory 59)
value eval_step_lower2 (OmegaTheory 60)
value eval_step_upper1 (OmegaTheory 61)
value eval_step_upper2 (OmegaTheory 62)
HOL bossLib.EVAL_TAC (help/Docfiles/bossLib.EVAL_TAC.adoc 0), value EVAL_TAC (bossLib 110), value EVAL_TAC (computeLib 36)
value evallower_curried_def (OmegaTheory 17)
value evallower_def (OmegaTheory 64)
value evallower_FORALL (OmegaTheory 63)
value evallower_ind (OmegaTheory 65)
value evallower_tupled_primitive_def (OmegaTheory 18)
structure EvalRef
value evaluate (compute_rules 16)
value evaluate_formula (mlibModel 41)
value evaluate_term (mlibModel 40)
value evalupper_curried_def (OmegaTheory 19)
value evalupper_def (OmegaTheory 67)
value evalupper_FORALL (OmegaTheory 66)
value evalupper_ind (OmegaTheory 68)
value evalupper_tupled_primitive_def (OmegaTheory 20)
value EVEN (arithmeticTheory 13), value even (mlibUseful 114)
value EVEN_ADD (arithmeticTheory 91)
value EVEN_AND_ODD (arithmeticTheory 92)
value EVEN_CONV (Arithconv 9), value EVEN_CONV (reduceLib 17)
value EVEN_DOUBLE (arithmeticTheory 93)
value EVEN_EXISTS (arithmeticTheory 94)
value EVEN_EXP (arithmeticTheory 95)
value EVEN_MOD2 (arithmeticTheory 96)
value EVEN_MULT (arithmeticTheory 97)
value EVEN_ODD (arithmeticTheory 98)
value EVEN_ODD_EXISTS (arithmeticTheory 99)
value EVEN_OR_ODD (arithmeticTheory 100)
value EVEN_ORS (Rules 15)
value even_tm (numSyntax 12)
value EVENTS (probabilityTheory 30)
value EVENTS_ALGEBRA (probabilityTheory 31)
value EVENTS_COMPL (probabilityTheory 32)
value EVENTS_COUNTABLE_INTER (probabilityTheory 33)
value EVENTS_COUNTABLE_UNION (probabilityTheory 34)
value events_def (probabilityTheory 9)
value EVENTS_DIFF (probabilityTheory 35)
value EVENTS_EMPTY (probabilityTheory 36)
value EVENTS_INTER (probabilityTheory 37)
value EVENTS_SIGMA_ALGEBRA (probabilityTheory 38)
value EVENTS_SPACE (probabilityTheory 39)
value EVENTS_UNION (probabilityTheory 40)
value EVENTUAL (Temporal_LogicTheory 7)
value EVENTUAL_AS_BEFORE (Temporal_LogicTheory 52)
value EVENTUAL_AS_SBEFORE (Temporal_LogicTheory 53)
value EVENTUAL_AS_SUNTIL (Temporal_LogicTheory 54)
value EVENTUAL_AS_SWHEN (Temporal_LogicTheory 55)
value EVENTUAL_AS_UNTIL (Temporal_LogicTheory 56)
value EVENTUAL_AS_WHEN (Temporal_LogicTheory 57)
value EVENTUAL_FIX (Temporal_LogicTheory 58)
value EVENTUAL_IDEM (Temporal_LogicTheory 59)
value EVENTUAL_INVARIANT (Temporal_LogicTheory 60)
value EVENTUAL_LINORD (Temporal_LogicTheory 61)
value EVENTUAL_NEXT (Temporal_LogicTheory 62)
value EVENTUAL_REC (Temporal_LogicTheory 63)
value EVENTUAL_SIGNAL (Temporal_LogicTheory 64)
HOL Tactical.EVERY (help/Docfiles/Tactical.EVERY.adoc 0), value EVERY (Tactical 61), value EVERY (jrhTactics 34)
value EVERY2_APPEND (rich_listTheory 124)
value EVERY2_APPEND_suff (rich_listTheory 125)
value EVERY2_cong (listTheory 117)
value EVERY2_DROP (rich_listTheory 126)
value EVERY2_EVERY (listTheory 110)
value EVERY2_LENGTH (listTheory 111)
value EVERY2_LUPDATE_same (listTheory 112)
value EVERY2_MAP (listTheory 113)
value EVERY2_MEM_MONO (listTheory 114)
value EVERY2_mono (listTheory 118)
value EVERY2_refl (listTheory 119)
value EVERY2_REVERSE (listTheory 115)
value EVERY2_REVERSE1 (rich_listTheory 127)
value EVERY2_sym (listTheory 120)
value EVERY2_TAKE (rich_listTheory 128)
value EVERY2_THM (listTheory 116)
value EVERY2_trans (listTheory 121)
value EVERY_APPEND (listTheory 122)
HOL Tactical.EVERY_ASSUM (help/Docfiles/Tactical.EVERY_ASSUM.adoc 0), value EVERY_ASSUM (Tactical 68)
value every_bit_bitify (bitstringTheory 51)
value EVERY_BUTLASTN (rich_listTheory 129)
value EVERY_CASE_TAC (BasicProvers 77), value every_case_tac (BasicProvers 78), value every_case_tac (lcsymtacs 29)
value every_coind (llistTheory 128)
value every_coinduction (pathTheory 63)
value EVERY_CONG (listTheory 123)
value EVERY_CONJ (listTheory 124)
HOL Conv.EVERY_CONJ_CONV (help/Docfiles/Conv.EVERY_CONJ_CONV.adoc 0), value EVERY_CONJ_CONV (Conv 19)
HOL ConseqConv.EVERY_CONSEQ_CONV (help/Docfiles/ConseqConv.EVERY_CONSEQ_CONV.adoc 0), value EVERY_CONSEQ_CONV (ConseqConv 206)
HOL Conv.EVERY_CONV (help/Docfiles/Conv.EVERY_CONV.adoc 0), value EVERY_CONV (Conv 33)
value every_count_list (rich_listTheory 346)
value EVERY_DEF (listTheory 9), value every_def (llistTheory 22), value every_def (pathTheory 9)
HOL Conv.EVERY_DISJ_CONV (help/Docfiles/Conv.EVERY_DISJ_CONV.adoc 0), value EVERY_DISJ_CONV (Conv 18)
value EVERY_DROP (rich_listTheory 130)
value EVERY_EL (listTheory 125), value every_el (pathTheory 64)
value EVERY_FILTER (listTheory 126)
value EVERY_FILTER_IMP (listTheory 127)
value EVERY_FOLDL (rich_listTheory 131)
value EVERY_FOLDL_MAP (rich_listTheory 132)
value EVERY_FOLDR (rich_listTheory 133)
value EVERY_FOLDR_MAP (rich_listTheory 134)
value EVERY_GENLIST (listTheory 128), value EVERY_GENLIST (rich_listTheory 411)
value EVERY_LASTN (rich_listTheory 135)
value every_leaf (patriciaLib 25)
value EVERY_LEAF_ADD (patriciaTheory 58)
value EVERY_LEAF_BRANCH (patriciaTheory 59)
value EVERY_LEAF_def (patriciaTheory 12)
value EVERY_LEAF_PEEK (patriciaTheory 60)
value EVERY_LEAF_REMOVE (patriciaTheory 61)
value every_leaf_tm (patriciaSyntax 20)
value EVERY_LEAF_TRANSFORM (patriciaTheory 62)
value EVERY_LEAFw_def (patricia_castsTheory 10)
value every_leafw_tm (patricia_castsSyntax 20)
value EVERY_LIST_TO_BAG (containerTheory 20)
HOL Tactical.EVERY_LT (help/Docfiles/Tactical.EVERY_LT.adoc 0), value EVERY_LT (Tactical 62)
value EVERY_MAP (listTheory 129)
value EVERY_MAP_ORD (patricia_castsTheory 46)
value EVERY_MEM (listTheory 130)
value EVERY_MEM_MONO (listTheory 131)
value EVERY_MONOTONIC (listTheory 132)
value EVERY_NOT_EXISTS (listTheory 133)
value EVERY_REPLICATE (rich_listTheory 136)
value EVERY_REVERSE (rich_listTheory 137)
value EVERY_SEG (rich_listTheory 138)
value EVERY_SIMP (listTheory 134)
value EVERY_SNOC (listTheory 135)
value every_strong_coind (llistTheory 129)
value EVERY_TAKE (rich_listTheory 139)
HOL Thm_cont.EVERY_TCL (help/Docfiles/Thm_cont.EVERY_TCL.adoc 0), value EVERY_TCL (Thm_cont 10)
value every_thm (llistTheory 130), value every_thm (pathTheory 65)
value every_tm (listSyntax 15)
value every_zip_fst (listTheory 406)
value every_zip_snd (listTheory 407)
value EVERYi_DEF (listTheory 10)
value everything (mlibParser 32), value everything (mlibSolver 69)
value exact (mlibParser 37)
value EXACT_CONV (jrhUtils 19)
value exact_peek (ConstMapML 13)
value exact_shadow_case (OmegaTheory 69)
value exactlog_characterisation (numeralTheory 24)
value exactlog_def (numeralTheory 5)
value EXCLUDED_MIDDLE (boolTheory 82)
value exec (Systeml 5)
value exhaustive_heuristic_fun (PmatchHeuristics 71)
HOL Conv.EXISTENCE (help/Docfiles/Conv.EXISTENCE.adoc 0), value EXISTENCE (Conv 107)
HOL boolSyntax.existential (help/Docfiles/boolSyntax.existential.adoc 0), value existential (boolSyntax 15)
value EXISTL (Rules 12)
HOL Thm.EXISTS (help/Docfiles/Thm.EXISTS.adoc 0), HOL Lib.exists (help/Docfiles/Lib.exists.adoc 0), constructor Exists (Count 11), constructor Exists (mlibTerm 18), value EXISTS (FinalThm 68), value EXISTS (Q 16), value EXISTS (Rules 11), value exists (Lib 50), value exists (UnicodeChars 108), value exists (mlibMultiset 23), value exists (mlibStream 35)
HOL boolSyntax.exists1 (help/Docfiles/boolSyntax.exists1.adoc 0), value exists1 (boolSyntax 16)
HOL Conv.EXISTS_AND_CONV (help/Docfiles/Conv.EXISTS_AND_CONV.adoc 0), value EXISTS_AND_CONV (Conv 59)
HOL Conv.EXISTS_AND_REORDER_CONV (help/Docfiles/Conv.EXISTS_AND_REORDER_CONV.adoc 0), value EXISTS_AND_REORDER_CONV (Conv 60)
value EXISTS_APPEND (listTheory 136)
structure Exists_arith
HOL Arith.EXISTS_ARITH_CONV (help/Docfiles/Arith.EXISTS_ARITH_CONV.adoc 0), value EXISTS_ARITH_CONV (Arith 8), value EXISTS_ARITH_CONV (Exists_arith 2)
value exists_bf_flatten (lbtreeTheory 35)
value EXISTS_BIT_IN_RANGE (bitTheory 94)
value EXISTS_BIT_LT (bitTheory 95)
value EXISTS_BUTLASTN (rich_listTheory 140)
value exists_cases (llistTheory 133)
value EXISTS_CONG (listTheory 137)
HOL ConseqConv.EXISTS_CONSEQ_CONV (help/Docfiles/ConseqConv.EXISTS_CONSEQ_CONV.adoc 0), value EXISTS_CONSEQ_CONV (ConseqConv 209)
value EXISTS_DEF (boolTheory 15), value EXISTS_DEF (listTheory 11), value exists_def (llistTheory 23), value exists_def (pathTheory 10)
HOL unwindLib.EXISTS_DEL1_CONV (help/Docfiles/unwindLib.EXISTS_DEL1_CONV.adoc 0), value EXISTS_DEL1_CONV (unwindLib 19)
HOL unwindLib.EXISTS_DEL_CONV (help/Docfiles/unwindLib.EXISTS_DEL_CONV.adoc 0), value EXISTS_DEL_CONV (unwindLib 20)
value EXISTS_DISJ (rich_listTheory 141)
value EXISTS_DROP (rich_listTheory 142)
value EXISTS_DROP_IMP (rich_listTheory 143)
value exists_el (pathTheory 66)
HOL Drule.EXISTS_EQ (help/Docfiles/Drule.EXISTS_EQ.adoc 0), value EXISTS_EQ (Drule 32)
HOL ConseqConv.EXISTS_EQ___CONSEQ_CONV (help/Docfiles/ConseqConv.EXISTS_EQ___CONSEQ_CONV.adoc 0), value EXISTS_EQ___CONSEQ_CONV (ConseqConv 72)
value exists_eq_thm (ConseqConvTheory 44)
HOL unwindLib.EXISTS_EQN_CONV (help/Docfiles/unwindLib.EXISTS_EQN_CONV.adoc 0), value EXISTS_EQN_CONV (unwindLib 21)
value EXISTS_EQUATION (Prim_rec 52)
value EXISTS_FIRST (lbtreeTheory 25)
value EXISTS_FOLDL (rich_listTheory 144)
value EXISTS_FOLDL_MAP (rich_listTheory 145)
value EXISTS_FOLDR (rich_listTheory 146)
value EXISTS_FOLDR_MAP (rich_listTheory 147)
value EXISTS_FORALL_THM (Omega_AutomataTheory 32)
value EXISTS_GENLIST (listTheory 138), value EXISTS_GENLIST (rich_listTheory 412)
value EXISTS_GREATEST (arithmeticTheory 101)
value EXISTS_GREATEST_CONV (numLib 12)
value EXISTS_HB (wordsTheory 128)
HOL Drule.EXISTS_IMP (help/Docfiles/Drule.EXISTS_IMP.adoc 0), value EXISTS_IMP (Drule 74)
HOL Conv.EXISTS_IMP_CONV (help/Docfiles/Conv.EXISTS_IMP_CONV.adoc 0), value EXISTS_IMP_CONV (Conv 71)
value exists_ind (llistTheory 134)
value exists_induction (pathTheory 67)
value EXISTS_INTRO_IMP (ConseqConv 54)
value EXISTS_LASTN (rich_listTheory 148)
value exists_LDROP (llistTheory 131)
value EXISTS_LEAF_def (patriciaTheory 13)
value exists_leaf_tm (patriciaSyntax 21)
value EXISTS_LEAFw_def (patricia_castsTheory 11)
value exists_leafw_tm (patricia_castsSyntax 21)
value EXISTS_LEAST_CONV (numLib 11)
HOL Drule.EXISTS_LEFT (help/Docfiles/Drule.EXISTS_LEFT.adoc 0), value EXISTS_LEFT (Drule 12)
HOL Drule.EXISTS_LEFT1 (help/Docfiles/Drule.EXISTS_LEFT1.adoc 0), value EXISTS_LEFT1 (Drule 13)
value EXISTS_LIST (listTheory 139)
value EXISTS_LIST_EQ_MAP (listTheory 140)
value exists_list_GENLIST (listTheory 408)
value exists_LNTH (llistTheory 132)
value EXISTS_MAP (listTheory 141)
value EXISTS_MEM (listTheory 142)
HOL Conv.EXISTS_NOT_CONV (help/Docfiles/Conv.EXISTS_NOT_CONV.adoc 0), value EXISTS_NOT_CONV (Conv 49)
value EXISTS_NOT_EVERY (listTheory 143)
value EXISTS_NOT_FORALL_THM (quantHeuristicsTheory 16)
value EXISTS_NOT_LIST_CONV (quantHeuristicsLibBase 16), value EXISTS_NOT_LIST_CONV (quantHeuristicsTools 14)
value EXISTS_NUM (arithmeticTheory 102)
value EXISTS_OPTION (optionTheory 26)
HOL Conv.EXISTS_OR_CONV (help/Docfiles/Conv.EXISTS_OR_CONV.adoc 0), value EXISTS_OR_CONV (Conv 52)
value EXISTS_OR_THM (boolTheory 83)
value EXISTS_path (pathTheory 40)
value EXISTS_PROD (pairTheory 29)
value EXISTS_PRS (quotientTheory 37)
value EXISTS_REFL (boolTheory 84)
value EXISTS_REGULAR (quotientTheory 38)
value EXISTS_REVERSE (rich_listTheory 149)
value EXISTS_ring (ringTheory 22)
value exists_rules (llistTheory 135)
value EXISTS_SEG (rich_listTheory 150)
value EXISTS_semi_ring (semi_ringTheory 19)
value EXISTS_SIMP (boolTheory 85), value EXISTS_SIMP (listTheory 144)
value EXISTS_SIMP_CONV (Conv 90)
value EXISTS_SNOC (listTheory 145)
value exists_strong_ind (llistTheory 136)
value exists_strongind (llistTheory 137)
value EXISTS_SUM (sumTheory 19)
HOL Tactic.EXISTS_TAC (help/Docfiles/Tactic.EXISTS_TAC.adoc 0), value EXISTS_TAC (Q 17), value EXISTS_TAC (Tactic 30), value exists_tac (Tactic 31), value exists_tac (lcsymtacs 18)
value EXISTS_TAKE (rich_listTheory 151)
value EXISTS_TAKE_IMP (rich_listTheory 152)
value EXISTS_THM (boolTheory 86), value exists_thm (llistTheory 138), value exists_thm (pathTheory 68)
value exists_tm (listSyntax 16)
HOL Type.exists_tyvar (help/Docfiles/Type.exists_tyvar.adoc 0), value exists_tyvar (FinalType 23)
HOL Conv.EXISTS_UNIQUE_CONV (help/Docfiles/Conv.EXISTS_UNIQUE_CONV.adoc 0), value EXISTS_UNIQUE_CONV (Conv 105)
value EXISTS_UNIQUE_DEF (boolTheory 16)
value EXISTS_UNIQUE_PRS (quotientTheory 39)
value EXISTS_UNIQUE_REFL (boolTheory 87)
value EXISTS_UNIQUE_REGULAR (quotientTheory 40)
value EXISTS_UNIQUE_THM (boolTheory 88)
value exit (Portable 54)
HOL Feedback.exn_to_string (help/Docfiles/Feedback.exn_to_string.adoc 0), value exn_to_string (Feedback 28)
value EXP (arithmeticTheory 14), value exp (transcTheory 12)
value EXP2_LT (arithmeticTheory 103)
value EXP_0 (transcTheory 100)
value EXP_1 (arithmeticTheory 104)
value EXP_ADD (arithmeticTheory 105), value EXP_ADD (transcTheory 101)
value EXP_ADD_MUL (transcTheory 102)
value EXP_ALWAYS_BIG_ENOUGH (arithmeticTheory 106)
value EXP_BASE_INJECTIVE (arithmeticTheory 107)
value EXP_BASE_LE_IFF (arithmeticTheory 110)
value EXP_BASE_LE_MONO (arithmeticTheory 111)
value EXP_BASE_LEQ_MONO_IMP (arithmeticTheory 108)
value EXP_BASE_LEQ_MONO_SUC_IMP (arithmeticTheory 109)
value EXP_BASE_LT_MONO (arithmeticTheory 112)
value EXP_BASE_MULT (arithmeticTheory 113)
HOL reduceLib.EXP_CONV (help/Docfiles/reduceLib.EXP_CONV.adoc 0), value EXP_CONV (Arithconv 16), value EXP_CONV (reduceLib 23)
value EXP_CONVERGES (transcTheory 103)
value EXP_EQ_0 (arithmeticTheory 114)
value EXP_EQ_1 (arithmeticTheory 115)
value EXP_EXP_INJECTIVE (arithmeticTheory 116)
value EXP_EXP_LE_MONO (arithmeticTheory 117)
value EXP_EXP_LT_MONO (arithmeticTheory 118)
value EXP_EXP_MULT (arithmeticTheory 119)
value EXP_FDIFF (transcTheory 104)
value EXP_GT_ZERO (floatTheory 35)
value EXP_IMAGINARY (complexTheory 218)
value EXP_INJ (transcTheory 105)
value EXP_LE_ISO (logrootTheory 14)
value EXP_LE_X (transcTheory 106)
value EXP_LN (transcTheory 107)
value EXP_LT_0 (floatTheory 36)
value EXP_LT_1 (transcTheory 108)
value EXP_LT_ISO (logrootTheory 15)
value EXP_MONO_IMP (transcTheory 109)
value EXP_MONO_LE (transcTheory 110)
value EXP_MONO_LT (transcTheory 111)
value EXP_MUL (logrootTheory 16)
value EXP_N (transcTheory 112)
value EXP_NEG (transcTheory 113)
value EXP_NEG_MUL (transcTheory 114)
value EXP_NEG_MUL2 (transcTheory 115)
value EXP_NZ (transcTheory 116)
value EXP_POS_LE (transcTheory 117)
value EXP_POS_LT (transcTheory 118)
value exp_rel (Subst 9)
value EXP_SUB (arithmeticTheory 120), value EXP_SUB (transcTheory 119)
value EXP_SUB_LESS_EQ (bitTheory 96)
value EXP_SUB_NUMERAL (arithmeticTheory 121)
value exp_tm (intSyntax 17), value exp_tm (numSyntax 13), value exp_tm (realSyntax 14), value exp_tm (transcSyntax 11)
value EXP_TOTAL (transcTheory 120)
value EXP_TOTAL_LEMMA (transcTheory 121)
HOL proofManagerLib.expand (help/Docfiles/proofManagerLib.expand.adoc 0), value expand (Manager 27), value expand (goalStack 8), value expand (goalTree 12), value expand (proofManagerLib 38)
HOL unwindLib.EXPAND_ALL_BUT_CONV (help/Docfiles/unwindLib.EXPAND_ALL_BUT_CONV.adoc 0), value EXPAND_ALL_BUT_CONV (unwindLib 22)
HOL unwindLib.EXPAND_ALL_BUT_RIGHT_RULE (help/Docfiles/unwindLib.EXPAND_ALL_BUT_RIGHT_RULE.adoc 0), value EXPAND_ALL_BUT_RIGHT_RULE (unwindLib 23)
HOL unwindLib.EXPAND_AUTO_CONV (help/Docfiles/unwindLib.EXPAND_AUTO_CONV.adoc 0), value EXPAND_AUTO_CONV (unwindLib 24)
HOL unwindLib.EXPAND_AUTO_RIGHT_RULE (help/Docfiles/unwindLib.EXPAND_AUTO_RIGHT_RULE.adoc 0), value EXPAND_AUTO_RIGHT_RULE (unwindLib 25)
HOL proofManagerLib.expand_list (help/Docfiles/proofManagerLib.expand_list.adoc 0), value expand_list (Manager 29), value expand_list (goalStack 10), value expand_list (proofManagerLib 40)
HOL proofManagerLib.expand_listf (help/Docfiles/proofManagerLib.expand_listf.adoc 0), value expand_listf (Manager 30), value expand_listf (goalStack 11), value expand_listf (proofManagerLib 41)
value expand_opt (goalTree 14)
value EXPAND_QUANT_INST_ss (quantHeuristicsLib 14), value EXPAND_QUANT_INST_ss (quantHeuristicsLibBase 241)
value EXPAND_QUANT_INSTANTIATE_CONV (quantHeuristicsLib 30), value EXPAND_QUANT_INSTANTIATE_CONV (quantHeuristicsLibBase 207)
HOL wordsLib.EXPAND_REDUCE_CONV (help/Docfiles/wordsLib.EXPAND_REDUCE_CONV.adoc 0), value EXPAND_REDUCE_CONV (wordsLib 39)
value expand_right_and_over_or (CooperSyntax 77)
value EXPAND_TAC (jrhUtils 21)
value expand_type_quants_ss (DatatypeSimps 105)
value expand_type_quants_stateful_ss (DatatypeSimps 106)
value expand_type_quants_typeinfos_ss (DatatypeSimps 104)
HOL proofManagerLib.expandf (help/Docfiles/proofManagerLib.expandf.adoc 0), value expandf (Manager 28), value expandf (goalStack 9), value expandf (proofManagerLib 39)
value expandv (Manager 31), value expandv (proofManagerLib 42)
value expectation_def (probabilityTheory 10)
value EXPi (basis_emitTheory 5)
value expired (mlibMeter 13)
value EXPLICIT_ENUMERATE_MONO (util_probTheory 56)
value EXPLICIT_ENUMERATE_NOT_EMPTY (util_probTheory 57)
value explode (Portable 35)
value EXPLODE_11 (stringTheory 52)
value EXPLODE_def (stringTheory 6)
value EXPLODE_DEST_STRING (stringTheory 53)
value EXPLODE_EQ_NIL (stringTheory 55)
value EXPLODE_EQ_THM (stringTheory 56)
value EXPLODE_EQNS (stringTheory 54)
value EXPLODE_IMPLODE (stringTheory 57)
value EXPLODE_ONTO (stringTheory 58)
value explode_tm (stringLib 10), value explode_tm (stringSyntax 13)
value EXPONENT (floatTheory 34), value Exponent (ieeeTheory 5), value exponent (ieeeTheory 32)
value export_cong (DefnBase 28)
HOL IndDefLib.export_mono (help/Docfiles/IndDefLib.export_mono.adoc 0), value export_mono (IndDefLib 20), value export_mono (bossLib 25)
value export_param_theory (abstraction 18)
HOL BasicProvers.export_rewrites (help/Docfiles/BasicProvers.export_rewrites.adoc 0), value export_rewrites (BasicProvers 31), value export_rewrites (bossLib 73)
value export_rule_induction (IndDefLib 27)
value export_theorems_as_docfiles (Parse 211)
HOL Theory.export_theory (help/Docfiles/Theory.export_theory.adoc 0), value export_theory (Theory 45)
value export_theory_as_docfiles (DB 43)
value expwidth (ieeeTheory 33)
HOL Drule.EXT (help/Docfiles/Drule.EXT.adoc 0), value EXT (Drule 6)
value EXT_CONSEQ_HO_REWRITE_CONV (ConseqConv 125)
value EXT_CONSEQ_HO_REWRITE_TAC (ConseqConv 240)
HOL ConseqConv.EXT_CONSEQ_REWRITE_CONV (help/Docfiles/ConseqConv.EXT_CONSEQ_REWRITE_CONV.adoc 0), value EXT_CONSEQ_REWRITE_CONV (ConseqConv 124)
value EXT_CONSEQ_REWRITE_TAC (ConseqConv 238)
value EXT_CONTEXT_CONSEQ_HO_REWRITE_CONV (ConseqConv 127)
value EXT_CONTEXT_CONSEQ_HO_REWRITE_TAC (ConseqConv 241)
value EXT_CONTEXT_CONSEQ_REWRITE_CONV (ConseqConv 126)
value EXT_CONTEXT_CONSEQ_REWRITE_TAC (ConseqConv 239)
value EXT_CONV (jrhUtils 15)
HOL ConseqConv.EXT_DEPTH_CONSEQ_CONV (help/Docfiles/ConseqConv.EXT_DEPTH_CONSEQ_CONV.adoc 0), value EXT_DEPTH_CONSEQ_CONV (ConseqConv 147)
value EXT_DEPTH_NUM_CONSEQ_CONV (ConseqConv 162)
value ext_mono_decreasing_def (extrealTheory 8)
value ext_mono_decreasing_suc (extrealTheory 152)
value ext_mono_increasing_def (extrealTheory 9)
value ext_mono_increasing_suc (extrealTheory 153)
value EXT_POINT (normalFormsTheory 9)
value EXT_POINT_DEF (normalFormsTheory 5)
value ext_suminf_add (extrealTheory 154)
value ext_suminf_cmul (extrealTheory 155)
value ext_suminf_cmul_alt (extrealTheory 156)
value ext_suminf_def (extrealTheory 10)
value ext_suminf_lt_infty (extrealTheory 157)
value ext_suminf_mono (extrealTheory 158)
value ext_suminf_sub (extrealTheory 159)
value ext_suminf_sum (extrealTheory 160)
value ext_suminf_suminf (extrealTheory 161)
value extend (bitstringTheory 52)
value extend_cons (bitstringTheory 53)
value extend_def (bitstringTheory 17)
value extend_def_compute (bitstringTheory 54)
value EXTEND_EXTRACT (wordsTheory 129)
value EXTEND_EXTRACT_CONV (wordsLib 38)
value extend_linear_order (set_relationTheory 55)
value EXTEND_RTC_TC (relationTheory 68)
value EXTEND_RTC_TC_EQN (relationTheory 69)
value extended_gcd (CooperMath 13)
value EXTENSIBLE_QUANT_INSTANTIATE_CONSEQ_CONV (quantHeuristicsLibBase 214)
value EXTENSIBLE_QUANT_INSTANTIATE_CONV (quantHeuristicsLibBase 199)
value EXTENSIBLE_QUANT_INSTANTIATE_STEP_CONSEQ_CONV (quantHeuristicsLibBase 216)
value EXTENSION (pred_setTheory 168)
value extract_abs_frac (fracUtils 10)
value EXTRACT_ALL_BITS (wordsTheory 130)
value EXTRACT_CONCAT (wordsTheory 131)
value EXTRACT_def (stringTheory 59)
value extract_frac (fracUtils 9)
value extract_frac_fun (fracUtils 11)
value EXTRACT_ind (stringTheory 60)
value EXTRACT_JOIN (wordsTheory 132)
value EXTRACT_JOIN_ADD (wordsTheory 133)
value EXTRACT_JOIN_ADD_LSL (wordsTheory 134)
value EXTRACT_JOIN_LSL (wordsTheory 135)
value EXTRACT_primitive_def (stringTheory 7)
value extract_rat (ratUtils 9)
value extract_rat_equations (ratUtils 12)
value extract_rat_minv (ratUtils 13)
value extract_rat_vars (ratUtils 11)
value extract_terms_of_type (jbUtils 22)
value extract_thm (goalStack 13)
value extract_tm (stringSyntax 14)
value extract_v2w (bitstringTheory 55)
value extract_v2w_CONV (bitstringLib 27)
value extreal_11 (extrealTheory 162)
value extreal_abs_def (extrealTheory 164)
value extreal_abs_ind (extrealTheory 165)
value extreal_abs_primitive_def (extrealTheory 12)
value extreal_add_curried_def (extrealTheory 13)
value extreal_add_def (extrealTheory 166)
value extreal_add_ind (extrealTheory 167)
value extreal_add_tupled_primitive_def (extrealTheory 14)
value extreal_ainv_def (extrealTheory 15)
value EXTREAL_ARCH (extrealTheory 56)
value EXTREAL_ARCH_POW (extrealTheory 57)
value EXTREAL_ARCH_POW_INV (extrealTheory 58)
value extreal_Axiom (extrealTheory 163)
value extreal_case_cong (extrealTheory 168)
value extreal_case_def (extrealTheory 16)
value extreal_cases (extrealTheory 169)
value extreal_distinct (extrealTheory 170)
value extreal_div_def (extrealTheory 17)
value extreal_div_eq (extrealTheory 171)
value EXTREAL_EQ_LADD (extrealTheory 59)
value extreal_eq_zero (extrealTheory 172)
value extreal_exp_def (extrealTheory 18)
value extreal_grammars (extrealTheory 388)
value extreal_induction (extrealTheory 173)
value extreal_inf_def (extrealTheory 19)
value extreal_inv_def (extrealTheory 20)
value extreal_le_curried_def (extrealTheory 21)
value extreal_le_def (extrealTheory 174)
value extreal_le_ind (extrealTheory 175)
value extreal_le_tupled_primitive_def (extrealTheory 22)
value extreal_lg_def (extrealTheory 23)
value extreal_logr_def (extrealTheory 24)
value extreal_lt_def (extrealTheory 25)
value extreal_lt_eq (extrealTheory 176)
value extreal_max_def (extrealTheory 26)
value extreal_min_def (extrealTheory 27)
value extreal_mul_curried_def (extrealTheory 28)
value extreal_mul_def (extrealTheory 177)
value extreal_mul_ind (extrealTheory 178)
value extreal_mul_tupled_primitive_def (extrealTheory 29)
value extreal_nchotomy (extrealTheory 179)
value extreal_not_infty (extrealTheory 180)
value extreal_of_num_def (extrealTheory 30)
value extreal_pow_def (extrealTheory 31)
value extreal_size_def (extrealTheory 32)
value extreal_sqrt_def (extrealTheory 33)
value extreal_sub_add (extrealTheory 181)
value extreal_sub_curried_def (extrealTheory 34)
value extreal_sub_def (extrealTheory 182)
value extreal_sub_ind (extrealTheory 183)
value extreal_sub_tupled_primitive_def (extrealTheory 35)
value EXTREAL_SUM_IMAGE_0 (extrealTheory 60)
value EXTREAL_SUM_IMAGE_ADD (extrealTheory 61)
value EXTREAL_SUM_IMAGE_CMUL (extrealTheory 62)
value EXTREAL_SUM_IMAGE_CMUL2 (extrealTheory 63)
value EXTREAL_SUM_IMAGE_COUNT (extrealTheory 64)
value EXTREAL_SUM_IMAGE_CROSS_SYM (extrealTheory 65)
value EXTREAL_SUM_IMAGE_DEF (extrealTheory 5)
value EXTREAL_SUM_IMAGE_DISJOINT_UNION (extrealTheory 66)
value EXTREAL_SUM_IMAGE_EQ (extrealTheory 67)
value EXTREAL_SUM_IMAGE_EQ_CARD (extrealTheory 68)
value EXTREAL_SUM_IMAGE_EXTREAL_SUM_IMAGE (extrealTheory 69)
value EXTREAL_SUM_IMAGE_FINITE_CONST (extrealTheory 70)
value EXTREAL_SUM_IMAGE_FINITE_SAME (extrealTheory 71)
value EXTREAL_SUM_IMAGE_IF_ELIM (extrealTheory 72)
value EXTREAL_SUM_IMAGE_IMAGE (extrealTheory 73)
value EXTREAL_SUM_IMAGE_IN_IF (extrealTheory 77)
value EXTREAL_SUM_IMAGE_IN_IF_ALT (extrealTheory 78)
value EXTREAL_SUM_IMAGE_INTER_ELIM (extrealTheory 74)
value EXTREAL_SUM_IMAGE_INTER_NONZERO (extrealTheory 75)
value EXTREAL_SUM_IMAGE_INV_CARD_EQ_1 (extrealTheory 76)
value EXTREAL_SUM_IMAGE_MONO (extrealTheory 79)
value EXTREAL_SUM_IMAGE_MONO_SET (extrealTheory 80)
value EXTREAL_SUM_IMAGE_NORMAL (extrealTheory 81)
value EXTREAL_SUM_IMAGE_NOT_INFTY (extrealTheory 82)
value EXTREAL_SUM_IMAGE_NOT_NEG_INF (extrealTheory 83)
value EXTREAL_SUM_IMAGE_NOT_POS_INF (extrealTheory 84)
value EXTREAL_SUM_IMAGE_POS (extrealTheory 85)
value EXTREAL_SUM_IMAGE_POS_MEM_LE (extrealTheory 86)
value EXTREAL_SUM_IMAGE_SING (extrealTheory 87)
value EXTREAL_SUM_IMAGE_SPOS (extrealTheory 88)
value EXTREAL_SUM_IMAGE_SUB (extrealTheory 89)
value EXTREAL_SUM_IMAGE_THM (extrealTheory 90)
value EXTREAL_SUM_IMAGE_ZERO (extrealTheory 91)
value EXTREAL_SUM_IMAGE_ZERO_DIFF (extrealTheory 92)
value extreal_sup_def (extrealTheory 36)
value EXTREAL_SUP_FUN_SEQ_IMAGE (lebesgueTheory 28)
value EXTREAL_SUP_FUN_SEQ_MONO_IMAGE (lebesgueTheory 29)
value EXTREAL_SUP_SEQ (lebesgueTheory 30)
value extreal_TY_DEF (extrealTheory 11)
structure extrealTheory
HOL boolSyntax.F (help/Docfiles/boolSyntax.F.adoc 0), value F (boolSyntax 13)
value F_and_l (CooperThms 10)
value F_and_r (CooperThms 11)
value F_DEF (boolTheory 18)
value F_IMP (boolTheory 95)
value f_o_DEF (finite_mapTheory 22)
value f_o_f_DEF (finite_mapTheory 23)
value f_o_f_FEMPTY_1 (finite_mapTheory 229)
value f_o_f_FEMPTY_2 (finite_mapTheory 230)
value f_o_f_FUPDATE_compose (finite_mapTheory 231)
value f_o_FEMPTY (finite_mapTheory 227)
value f_o_FUPDATE (finite_mapTheory 228)
value F_OR (HolSmtTheory 16)
value F_or_l (CooperThms 14)
value F_or_r (CooperThms 15)
value FACT (arithmeticTheory 15)
value FACT_LESS (arithmeticTheory 122)
value fact_tm (numSyntax 14)
type factdb (Satisfy 44)
type factoid (OmegaMLShadow 4), type factoid (mlibOmega 7)
value factoid_gcd (mlibOmega 26)
constructor Factor (mlibClause 74), constructor Factor (mlibKernel 14), value FACTOR (mlibClause 69), value FACTOR (mlibKernel 24), value factor (mlibClauseset 45), value factor (mlibResolution 34)
constructor Factor' (mlibThm 13)
value factor_out (CooperMath 78)
value FACTOR_OUT_GCD (gcdTheory 12)
value factor_out_lits (CooperMath 79)
value FACTORS_prime (primeFactorTheory 9)
value fadd (ieeeTheory 34)
HOL Feedback.fail (help/Docfiles/Feedback.fail.adoc 0), constructor FAIL (Lib 4), value fail (Coding 12), value fail (Feedback 31), value fail (errormonad 6), value fail (liteLib 11), value fail (optmonad 5), value fail (seqmonad 5), value fail (smpp 10)
value FAIL_DEF (combinTheory 7)
HOL Tactical.FAIL_LT (help/Docfiles/Tactical.FAIL_LT.adoc 0), value FAIL_LT (Tactical 44)
HOL Tactical.FAIL_TAC (help/Docfiles/Tactical.FAIL_TAC.adoc 0), value FAIL_TAC (Tactical 42)
value FAIL_THM (combinTheory 20)
value fail_tm (combinSyntax 11)
HOL Feedback.failwith (help/Docfiles/Feedback.failwith.adoc 0), value failwith (Feedback 32), value failwith (liteLib 12)
value fakeconst_special (GrammarSpecials 9)
constructor False (mlibTerm 18)
HOL ConseqConv.FALSE_CONSEQ_CONV (help/Docfiles/ConseqConv.FALSE_CONSEQ_CONV.adoc 0), value FALSE_CONSEQ_CONV (ConseqConv 68)
value false_factoid (OmegaMLShadow 16), value false_factoid (mlibOmega 19)
value false_imp (ConseqConvTheory 45)
value false_tm (CooperSyntax 6)
value FALSITY (boolTheory 89)
value FAPPLY_CONV (fmapalTacs 18)
value FAPPLY_DEF (finite_mapTheory 6)
value FAPPLY_f_o (finite_mapTheory 74)
value FAPPLY_fmap_CONS (fmapalTheory 75)
value FAPPLY_fmap_NIL (fmapalTheory 76)
value FAPPLY_FUPDATE (finite_mapTheory 72)
value FAPPLY_FUPDATE_THM (finite_mapTheory 73)
value FAPPLY_node (fmapalTheory 77)
value FAPPLY_nt (fmapalTheory 78)
value fapply_t (finite_mapSyntax 9)
HOL quantHeuristicsLib.FAST_ASM_QUANT_INSTANTIATE_TAC (help/Docfiles/quantHeuristicsLib.FAST_ASM_QUANT_INSTANTIATE_TAC.adoc 0), value FAST_ASM_QUANT_INSTANTIATE_TAC (quantHeuristicsLib 20), value FAST_ASM_QUANT_INSTANTIATE_TAC (quantHeuristicsLibBase 206)
value FAST_EXPAND_QUANT_INSTANTIATE_CONV (quantHeuristicsLib 32), value FAST_EXPAND_QUANT_INSTANTIATE_CONV (quantHeuristicsLibBase 208)
value FAST_MULT_CONV (Norm_arith 8)
HOL quantHeuristicsLib.FAST_QUANT_INST_ss (help/Docfiles/quantHeuristicsLib.FAST_QUANT_INST_ss.adoc 0), value FAST_QUANT_INST_ss (quantHeuristicsLib 13), value FAST_QUANT_INST_ss (quantHeuristicsLibBase 242)
value FAST_QUANT_INSTANTIATE_CONSEQ_CONV (quantHeuristicsLib 37), value FAST_QUANT_INSTANTIATE_CONSEQ_CONV (quantHeuristicsLibBase 223)
HOL quantHeuristicsLib.FAST_QUANT_INSTANTIATE_CONV (help/Docfiles/quantHeuristicsLib.FAST_QUANT_INSTANTIATE_CONV.adoc 0), value FAST_QUANT_INSTANTIATE_CONV (quantHeuristicsLib 26), value FAST_QUANT_INSTANTIATE_CONV (quantHeuristicsLibBase 204)
HOL quantHeuristicsLib.FAST_QUANT_INSTANTIATE_TAC (help/Docfiles/quantHeuristicsLib.FAST_QUANT_INSTANTIATE_TAC.adoc 0), value FAST_QUANT_INSTANTIATE_TAC (quantHeuristicsLib 19), value FAST_QUANT_INSTANTIATE_TAC (quantHeuristicsLibBase 205)
value FCARD_0_FEMPTY (finite_mapTheory 75)
value FCARD_DEF (finite_mapTheory 7)
value FCARD_FEMPTY (finite_mapTheory 76)
value FCARD_FUPDATE (finite_mapTheory 77)
value FCARD_SUC (finite_mapTheory 78)
value fcases (seq 16)
value fchains_def (set_relationTheory 12)
value FCOMM_ASSOC (operatorTheory 16)
value FCOMM_DEF (operatorTheory 7)
value FCOMM_FOLDL_APPEND (rich_listTheory 153)
value FCOMM_FOLDL_FLAT (rich_listTheory 154)
value FCOMM_FOLDR_APPEND (rich_listTheory 155)
value FCOMM_FOLDR_FLAT (rich_listTheory 156)
value fcompare (ieeeTheory 35)
value FCONS (ind_typeTheory 7)
value FCONS_DEST (ind_typeTheory 30)
value FCP (fcpTheory 5)
value FCP_APPLY_UPDATE_THM (fcpTheory 39)
value fcp_Axiom (fcpTheory 73)
value FCP_BETA (fcpTheory 40)
value fcp_case_def (fcpTheory 28)
value FCP_CONCAT_def (fcpTheory 6)
value FCP_CONS (fcpTheory 41)
value FCP_CONS_def (fcpTheory 7)
value fcp_cons_tm (fcpSyntax 23)
value FCP_ETA (fcpTheory 42)
value FCP_EVERY (fcpTheory 43)
value FCP_EVERY_def (fcpTheory 8)
value fcp_every_tm (fcpSyntax 26)
value FCP_EXISTS (fcpTheory 44)
value FCP_EXISTS_def (fcpTheory 9)
value fcp_exists_tm (fcpSyntax 25)
value FCP_FOLD_def (fcpTheory 10)
value fcp_grammars (fcpTheory 86)
value FCP_HD (fcpTheory 45)
value FCP_HD_def (fcpTheory 11)
value fcp_hd_tm (fcpSyntax 21)
value fcp_ind (fcpTheory 74)
value fcp_index (fcpTheory 29)
value fcp_index_tm (fcpSyntax 18), value fcp_index_tm (wordsSyntax 31)
value FCP_MAP (fcpTheory 46)
value FCP_MAP_def (fcpTheory 12)
value fcp_map_tm (fcpSyntax 24)
value fcp_n2w (wordsTheory 513)
HOL fcpLib.FCP_ss (help/Docfiles/fcpLib.FCP_ss.adoc 0), value FCP_ss (fcpLib 11)
value fcp_subst_comp (fcpTheory 75)
value FCP_T_F (wordsTheory 136)
value FCP_TL (fcpTheory 47)
value FCP_TL_def (fcpTheory 13)
value fcp_tl_tm (fcpSyntax 22)
value fcp_tm (fcpSyntax 17)
value FCP_UNIQUE (fcpTheory 48)
value FCP_UPDATE_COMMUTES (fcpTheory 49)
value FCP_UPDATE_def (fcpTheory 14)
value FCP_UPDATE_EQ (fcpTheory 50)
value FCP_UPDATE_IMP_ID (fcpTheory 51)
value fcp_update_tm (fcpSyntax 20)
value FCP_ZIP_def (fcpTheory 15)
value FCPi_def (basis_emitTheory 25)
value FCPi_ind (basis_emitTheory 26)
value FCPi_primitive_def (basis_emitTheory 11)
structure fcpLib
structure fcpSyntax
structure fcpTheory
value fdiv (ieeeTheory 36)
value FDOM_alist_to_fmap (alistTheory 32)
value FDOM_CONV (fmapalTacs 31)
value FDOM_DEF (finite_mapTheory 8)
value FDOM_DOMSUB (finite_mapTheory 79)
value FDOM_DRESTRICT (finite_mapTheory 80)
value FDOM_EQ_EMPTY (finite_mapTheory 81)
value FDOM_EQ_EMPTY_SYM (finite_mapTheory 82)
value FDOM_EQ_FDOM_FUPDATE (finite_mapTheory 83)
value FDOM_F_FEMPTY1 (finite_mapTheory 92)
value FDOM_f_o (finite_mapTheory 93)
value FDOM_FEMPTY (finite_mapTheory 84)
value FDOM_FINITE (finite_mapTheory 85)
value FDOM_FMAP (finite_mapTheory 86)
value FDOM_FMERGE (finite_mapTheory 87)
value FDOM_FOLDR_DOMSUB (finite_mapTheory 88)
value FDOM_FUNION (finite_mapTheory 89)
value FDOM_FUPDATE (finite_mapTheory 90)
value FDOM_FUPDATE_LIST (finite_mapTheory 91)
value fdom_fupdate_list2 (finite_mapTheory 232)
value FDOM_o_f (finite_mapTheory 94)
value FDOM_RDOM (tcTheory 18)
value fdom_t (finite_mapSyntax 10)
value FDUB_def (numeral_bitTheory 7)
value FDUB_FDUB (numeral_bitTheory 19)
value FDUB_iDIV2 (numeral_bitTheory 20)
value FDUB_iDUB (numeral_bitTheory 21)
HOL Feedback (help/Docfiles/Feedback.adoc 0), structure Feedback
value FEMPTY_DEF (finite_mapTheory 9)
value FEMPTY_SUBMAP (finite_mapTheory 95)
value fempty_t (finite_mapSyntax 11)
value feq (ieeeTheory 37)
HOL DB.fetch (help/Docfiles/DB.fetch.adoc 0), value fetch (DB 12), value fetch (TypeBase 14), value fetch (TypeBasePure 87)
value fetch_eqns (Defn 47)
value FEVERY_ALL_FLOOKUP (finite_mapTheory 96)
value FEVERY_DEF (finite_mapTheory 10)
value FEVERY_DRESTRICT_COMPL (finite_mapTheory 97)
value fevery_EXPAND_CONV (finite_mapLib 19)
value FEVERY_FEMPTY (finite_mapTheory 98)
value FEVERY_FLOOKUP (finite_mapTheory 99)
value fevery_funion (finite_mapTheory 233)
value FEVERY_FUPDATE (finite_mapTheory 100)
value FEVERY_FUPDATE_LIST (finite_mapTheory 101)
value FEVERY_o_f (finite_mapTheory 104)
value FEVERY_STRENGTHEN_THM (finite_mapTheory 102)
value FEVERY_SUBMAP (finite_mapTheory 103)
value fevery_t (finite_mapSyntax 12)
value fge (ieeeTheory 38)
value fgt (ieeeTheory 39)
type field (ParseDatatype 10)
value field_concat_left (bitstringTheory 56)
value field_concat_right (bitstringTheory 57)
value field_def (bitstringTheory 18)
value field_fixwidth (bitstringTheory 58)
value field_id_imp (bitstringTheory 59)
value field_insert_def (bitstringTheory 19)
value field_insert_tm (bitstringSyntax 52)
type field_name (Datatype 6)
type field_names (Datatype 7)
value field_tm (bitstringSyntax 53)
value FIELDS_curried_def (stringTheory 8)
value FIELDS_def (stringTheory 61)
value FIELDS_ind (stringTheory 62)
value fields_of (TypeBase 29), value fields_of (TypeBasePure 56)
value fields_tm (stringSyntax 15)
value FIELDS_tupled_primitive_def (stringTheory 9)
HOL Lib.filter (help/Docfiles/Lib.filter.adoc 0), type filter (mlibClauseset 11), value FILTER (listTheory 12), value FILTER (rich_listTheory 413), value filter (Lib 51), value filter (Net 21), value filter (Raw 14), value filter (mlibLiteralnet 22), value filter (mlibStream 37), value filter (mlibSubsume 20), value filter (mlibTermnet 21), value filter (seq 30)
value FILTER_ALL (patriciaTheory 63)
value FILTER_ALL_DISTINCT (listTheory 146)
value FILTER_APPEND (rich_listTheory 414)
value FILTER_APPEND_DISTRIB (listTheory 147)
HOL Rewrite.FILTER_ASM_REWRITE_RULE (help/Docfiles/Rewrite.FILTER_ASM_REWRITE_RULE.adoc 0), value FILTER_ASM_REWRITE_RULE (Ho_Rewrite 41), value FILTER_ASM_REWRITE_RULE (Rewrite 54)
HOL Rewrite.FILTER_ASM_REWRITE_TAC (help/Docfiles/Rewrite.FILTER_ASM_REWRITE_TAC.adoc 0), value FILTER_ASM_REWRITE_TAC (Ho_Rewrite 45), value FILTER_ASM_REWRITE_TAC (Rewrite 58)
value FILTER_COMM (rich_listTheory 157)
value FILTER_COND_REWRITE (listTheory 148)
HOL listLib.FILTER_CONV (help/Docfiles/listLib.FILTER_CONV.adoc 0), value FILTER_CONV (ListConv1 21), value FILTER_CONV (listLib 35)
value filter_def (pathTheory 11)
value FILTER_DISCH_ALL (Rules 8)
HOL Tactic.FILTER_DISCH_TAC (help/Docfiles/Tactic.FILTER_DISCH_TAC.adoc 0), value FILTER_DISCH_TAC (Tactic 60)
HOL Thm_cont.FILTER_DISCH_THEN (help/Docfiles/Thm_cont.FILTER_DISCH_THEN.adoc 0), value FILTER_DISCH_THEN (Tactic 52)
value FILTER_EQ (rich_listTheory 158)
value FILTER_EQ_APPEND (listTheory 149)
value FILTER_EQ_CONS (listTheory 150)
value FILTER_EQ_ID (listTheory 151)
value FILTER_EQ_LENGTHS_EQ (sortingTheory 24)
value FILTER_EQ_NIL (listTheory 152)
value FILTER_EQ_REP (sortingTheory 25)
value filter_every (pathTheory 69)
value FILTER_FILTER (rich_listTheory 159)
value FILTER_FLAT (rich_listTheory 160)
value FILTER_FOLDL (rich_listTheory 161)
value FILTER_FOLDR (rich_listTheory 162)
HOL Tactic.FILTER_GEN_TAC (help/Docfiles/Tactic.FILTER_GEN_TAC.adoc 0), value FILTER_GEN_TAC (Tactic 51)
value FILTER_IDEM (rich_listTheory 163)
value FILTER_MAP (rich_listTheory 164)
value filter_merge (mergesortTheory 22)
value FILTER_NEQ_ID (listTheory 153)
value FILTER_NEQ_NIL (listTheory 154)
value FILTER_NONE (patriciaTheory 64)
HOL Rewrite.FILTER_ONCE_ASM_REWRITE_RULE (help/Docfiles/Rewrite.FILTER_ONCE_ASM_REWRITE_RULE.adoc 0), value FILTER_ONCE_ASM_REWRITE_RULE (Ho_Rewrite 43), value FILTER_ONCE_ASM_REWRITE_RULE (Rewrite 56)
HOL Rewrite.FILTER_ONCE_ASM_REWRITE_TAC (help/Docfiles/Rewrite.FILTER_ONCE_ASM_REWRITE_TAC.adoc 0), value FILTER_ONCE_ASM_REWRITE_TAC (Ho_Rewrite 47), value FILTER_ONCE_ASM_REWRITE_TAC (Rewrite 60)
HOL PairRules.FILTER_PGEN_TAC (help/Docfiles/PairRules.FILTER_PGEN_TAC.adoc 0), value FILTER_PGEN_TAC (PairRules 70)
value FILTER_PRS (quotient_listTheory 11)
HOL PairRules.FILTER_PSTRIP_TAC (help/Docfiles/PairRules.FILTER_PSTRIP_TAC.adoc 0), value FILTER_PSTRIP_TAC (PairRules 96)
HOL PairRules.FILTER_PSTRIP_THEN (help/Docfiles/PairRules.FILTER_PSTRIP_THEN.adoc 0), value FILTER_PSTRIP_THEN (PairRules 94)
HOL Rewrite.FILTER_PURE_ASM_REWRITE_RULE (help/Docfiles/Rewrite.FILTER_PURE_ASM_REWRITE_RULE.adoc 0), value FILTER_PURE_ASM_REWRITE_RULE (Ho_Rewrite 40), value FILTER_PURE_ASM_REWRITE_RULE (Rewrite 53)
HOL Rewrite.FILTER_PURE_ASM_REWRITE_TAC (help/Docfiles/Rewrite.FILTER_PURE_ASM_REWRITE_TAC.adoc 0), value FILTER_PURE_ASM_REWRITE_TAC (Ho_Rewrite 44), value FILTER_PURE_ASM_REWRITE_TAC (Rewrite 57)
HOL Rewrite.FILTER_PURE_ONCE_ASM_REWRITE_RULE (help/Docfiles/Rewrite.FILTER_PURE_ONCE_ASM_REWRITE_RULE.adoc 0), value FILTER_PURE_ONCE_ASM_REWRITE_RULE (Ho_Rewrite 42), value FILTER_PURE_ONCE_ASM_REWRITE_RULE (Rewrite 55)
HOL Rewrite.FILTER_PURE_ONCE_ASM_REWRITE_TAC (help/Docfiles/Rewrite.FILTER_PURE_ONCE_ASM_REWRITE_TAC.adoc 0), value FILTER_PURE_ONCE_ASM_REWRITE_TAC (Ho_Rewrite 46), value FILTER_PURE_ONCE_ASM_REWRITE_TAC (Rewrite 59)
value filter_qp (quantHeuristicsLib 138), value filter_qp (quantHeuristicsLibBase 149)
value FILTER_REVERSE (listTheory 155), value FILTER_REVERSE (rich_listTheory 415)
value FILTER_RSP (quotient_listTheory 12)
value FILTER_SNOC (rich_listTheory 165)
HOL Tactic.FILTER_STRIP_TAC (help/Docfiles/Tactic.FILTER_STRIP_TAC.adoc 0), value FILTER_STRIP_TAC (Tactic 61)
HOL Thm_cont.FILTER_STRIP_THEN (help/Docfiles/Thm_cont.FILTER_STRIP_THEN.adoc 0), value FILTER_STRIP_THEN (Tactic 53)
value filter_tm (listSyntax 17)
value FINAL_DEF (defCNFTheory 16)
value final_equivalence (OmegaTheory 70)
value final_rewrite_qp (quantHeuristicsLib 145), value final_rewrite_qp (quantHeuristicsLibBase 156)
value finalize_subst (matchTools 27)
value finalizer (Manager 36), value finalizer (goalStack 15)
structure FinalTag
structure FinalTerm
structure FinalThm
structure FinalType
HOL DB.find (help/Docfiles/DB.find.adoc 0), value find (DB 22), value find (KernelSig 23), value find (LVTermNet 10), value find (PIntMap 32), value find (Redblackmap 13), value find (Redblackset 28), value find (TypeNet 9), value find (mlibPatricia 24), value find (mlibSolver 31)
value FIND_def (listTheory 13), value FIND_def (patriciaTheory 14), value FIND_def (updateTheory 5)
value find_free_terms (CooperSyntax 25)
HOL DB.find_in (help/Docfiles/DB.find_in.adoc 0), value find_in (DB 23)
value find_labelled_assumption (markerLib 49)
value find_maximal_terms (HolKernelDoc 27)
value find_my_path (Systeml 16)
value find_prefix_lhses (term_grammar 186)
value find_redex (mlibSubst 21)
value find_relation (Travrules 29)
value find_subterm (BasicProvers 59)
value find_suffix_rhses (term_grammar 185)
value find_summand (OmegaMath 3)
HOL HolKernel.find_term (help/Docfiles/HolKernel.find_term.adoc 0), value find_term (HolKernelDoc 28)
HOL HolKernel.find_terms (help/Docfiles/HolKernel.find_terms.adoc 0), value find_terms (HolKernelDoc 29)
value find_tm (patriciaSyntax 13), value find_tm (updateSyntax 5)
value findelim_deep_existential (OmegaSymbolic 7)
value findKey (Redblackmap 12)
value findq_def (arithmeticTheory 28)
value findq_divisor (arithmeticTheory 383)
value findq_eq_0 (arithmeticTheory 384)
value findq_thm (arithmeticTheory 385)
value FINDs_def (patricia_castsTheory 12)
value finds_tm (patricia_castsSyntax 30)
value FINDw_def (patricia_castsTheory 13)
value findw_tm (patricia_castsSyntax 13)
value fine (transcTheory 13)
value FINE_MIN (transcTheory 122)
value fine_tm (transcSyntax 12)
value finished (mlibParser 34)
value FINITE (fcpLib 9), value Finite (ieeeTheory 6)
value finite_1 (wordsTheory 514)
value finite_10 (wordsTheory 515)
value finite_11 (wordsTheory 516)
value finite_12 (wordsTheory 517)
value finite_128 (wordsTheory 518)
value finite_16 (wordsTheory 519)
value finite_2 (wordsTheory 520)
value finite_20 (wordsTheory 521)
value finite_24 (wordsTheory 522)
value finite_28 (wordsTheory 523)
value finite_3 (wordsTheory 524)
value finite_30 (wordsTheory 525)
value finite_32 (wordsTheory 526)
value finite_4 (wordsTheory 527)
value finite_48 (wordsTheory 528)
value finite_5 (wordsTheory 529)
value finite_6 (wordsTheory 530)
value finite_64 (wordsTheory 531)
value finite_7 (wordsTheory 532)
value finite_8 (wordsTheory 533)
value finite_9 (wordsTheory 534)
value finite_96 (wordsTheory 535)
value finite_acyclic_has_maximal (set_relationTheory 56)
value finite_acyclic_has_maximal_path (set_relationTheory 57)
value finite_acyclic_has_minimal (set_relationTheory 58)
value finite_acyclic_has_minimal_path (set_relationTheory 59)
value finite_additivity_sufficient_for_finite_spaces (measureTheory 231)
value finite_additivity_sufficient_for_finite_spaces2 (measureTheory 232)
value FINITE_BAG (bagTheory 28)
value FINITE_BAG_DIFF (bagTheory 178)
value FINITE_BAG_DIFF_dual (bagTheory 179)
value FINITE_BAG_FILTER (bagTheory 180)
value FINITE_BAG_INDUCT (bagTheory 181)
value FINITE_BAG_INSERT (bagTheory 182)
value FINITE_BAG_OF_FMAP (containerTheory 21)
value FINITE_BAG_THM (bagTheory 183)
value FINITE_BAG_UNION (bagTheory 184)
value FINITE_BIG_BAG_UNION (bagTheory 185)
value FINITE_BIGUNION (pred_setTheory 170)
value FINITE_BIGUNION_EQ (pred_setTheory 171)
value FINITE_BIJ (util_probTheory 58)
value FINITE_BIJ_CARD_EQ (pred_setTheory 172)
value FINITE_BIJ_COUNT (util_probTheory 59)
value finite_bit0 (fcpTheory 76)
value finite_bit1 (fcpTheory 77)
value finite_cases (lbtreeTheory 36)
value FINITE_COMPLETE_INDUCTION (pred_setTheory 173)
HOL pred_setLib.FINITE_CONV (help/Docfiles/pred_setLib.FINITE_CONV.adoc 0), value FINITE_CONV (PFset_conv 4), value FINITE_CONV (pred_setLib 6)
value FINITE_COUNT (pred_setTheory 174)
value FINITE_COUNTABLE (util_probTheory 60), value finite_countable (pred_setTheory 431)
value FINITE_CROSS (pred_setTheory 175)
value FINITE_CROSS_EQ (pred_setTheory 176)
value FINITE_DEF (pred_setTheory 16), value finite_def (lbtreeTheory 11), value finite_def (pathTheory 12)
value FINITE_DELETE (pred_setTheory 177)
value FINITE_DIFF (pred_setTheory 178)
value FINITE_DIFF_down (pred_setTheory 179)
value FINITE_domain (sptreeTheory 37)
value finite_drop (pathTheory 70)
value FINITE_EMPTY (pred_setTheory 180)
value FINITE_EMPTY_BAG (bagTheory 186)
value finite_enumeration_of_sets_has_max_non_empty (util_probTheory 171)
value finite_expectation (probabilityTheory 88)
value finite_expectation1 (probabilityTheory 89)
value finite_expectation2 (probabilityTheory 90)
value FINITE_FRANGE (finite_mapTheory 105)
value finite_image_TY_DEF (fcpTheory 30)
value finite_image_tybij (fcpTheory 31)
value finite_ind (lbtreeTheory 37)
value finite_index_def (fcpTheory 32)
value FINITE_INDUCT (pred_setTheory 181)
value FINITE_INJ (pred_setTheory 182), value FINITE_INJ (util_probTheory 61)
value FINITE_INSERT (pred_setTheory 183)
value FINITE_INTER (pred_setTheory 184)
value FINITE_ISO_NUM (pred_setTheory 185)
value finite_labels (pathTheory 71)
value FINITE_LEMMA (polyTheory 21)
value finite_length (pathTheory 72)
value finite_linear_order_has_maximal (set_relationTheory 60)
value finite_linear_order_has_minimal (set_relationTheory 61)
value FINITE_LIST_TO_BAG (containerTheory 22)
value FINITE_LIST_TO_SET (containerTheory 23), value FINITE_LIST_TO_SET (listTheory 156)
value finite_map (lbtreeTheory 38)
value finite_map_grammars (finite_mapTheory 275)
structure finite_mapLib
structure finite_mapSyntax
structure finite_mapTheory
value finite_marginal_product_space_POW (probabilityTheory 91)
value finite_marginal_product_space_POW2 (probabilityTheory 92)
value finite_marginal_product_space_POW3 (probabilityTheory 93)
value FINITE_NUMSET_OF_PTREE (patriciaTheory 65)
value finite_okpath_ind (pathTheory 73)
value finite_one (fcpTheory 78)
value FINITE_partition (pred_setTheory 195)
value finite_path_end_cases (pathTheory 74)
value finite_path_ind (pathTheory 75)
value finite_paths_SN (pathTheory 76)
value finite_pconcat (pathTheory 77)
value finite_plink (pathTheory 78)
value finite_pmap (pathTheory 79)
value FINITE_POW (pred_setTheory 186)
value finite_POW_prod_measure_reduce (lebesgueTheory 37)
value finite_POW_prod_measure_reduce3 (lebesgueTheory 38)
value FINITE_PRED_11 (finite_mapTheory 106)
value finite_prefix_linear_order_has_unique_minimal (set_relationTheory 62)
value finite_prefix_po_has_minimal_path (set_relationTheory 63)
value finite_prefixes_comp (set_relationTheory 64)
value finite_prefixes_def (set_relationTheory 13)
value finite_prefixes_inj_image (set_relationTheory 65)
value finite_prefixes_range (set_relationTheory 66)
value finite_prefixes_subset (set_relationTheory 67)
value finite_prefixes_union (set_relationTheory 68)
value finite_prod_measure_space_POW (lebesgueTheory 39)
value finite_prod_measure_space_POW3 (lebesgueTheory 40)
value FINITE_PRS (quotient_pred_setTheory 29)
value FINITE_PSUBSET_INFINITE (pred_setTheory 187)
value FINITE_PSUBSET_UNIV (pred_setTheory 188)
value FINITE_R3 (floatTheory 37)
value FINITE_RDOM (tcTheory 19)
value FINITE_REST (pred_setTheory 189), value FINITE_REST (util_probTheory 62)
value finite_rules (lbtreeTheory 39)
value finite_seg (pathTheory 80)
value FINITE_SET_OF_BAG (bagTheory 187)
value FINITE_SING (pred_setTheory 190)
value finite_space_integral_def (lebesgueTheory 7)
value finite_space_integral_reduce (lebesgueTheory 42)
value finite_space_POW_integral_reduce (lebesgueTheory 41)
value finite_strict_linear_order_has_maximal (set_relationTheory 69)
value finite_strict_linear_order_has_minimal (set_relationTheory 70)
value finite_strongind (lbtreeTheory 40)
value FINITE_StrongOrder_WF (pred_setTheory 191)
value FINITE_SUB_BAG (bagTheory 188)
value finite_sum (fcpTheory 79)
value finite_support_expectation (probabilityTheory 94)
value finite_support_integral_reduce (lebesgueTheory 43)
value finite_take (pathTheory 81)
value finite_thm (lbtreeTheory 41), value finite_thm (pathTheory 82)
value finite_tm (pred_setSyntax 22)
value FINITE_UNION (pred_setTheory 192)
value FINITE_WEAK_ENUMERATE (pred_setTheory 193)
value FINITE_WF_noloops (pred_setTheory 194)
value FINITELY_INJECTIVE_IMAGE_FINITE (pred_setTheory 169)
value FINITER_def (quotient_pred_setTheory 7)
value FINITER_EMPTY (quotient_pred_setTheory 24)
value FINITER_EQ (quotient_pred_setTheory 25)
value FINITER_INDUCT (quotient_pred_setTheory 26)
value FINITER_INSERTR (quotient_pred_setTheory 27)
value FINITER_RSP (quotient_pred_setTheory 28)
value fintrnd (ieeeTheory 40)
HOL Tactical.FIRST (help/Docfiles/Tactical.FIRST.adoc 0), HOL Lib.first (help/Docfiles/Lib.first.adoc 0), value FIRST (Tactical 63), value first (Lib 52), value first (mlibUseful 62)
HOL Tactical.FIRST_ASSUM (help/Docfiles/Tactical.FIRST_ASSUM.adoc 0), value FIRST_ASSUM (Tactical 69), value FIRST_ASSUM (jrhTactics 29), value first_assum (Tactical 70), value first_assum (lcsymtacs 34)
HOL ConseqConv.FIRST_CONSEQ_CONV (help/Docfiles/ConseqConv.FIRST_CONSEQ_CONV.adoc 0), value FIRST_CONSEQ_CONV (ConseqConv 205)
HOL Conv.FIRST_CONV (help/Docfiles/Conv.FIRST_CONV.adoc 0), value FIRST_CONV (Conv 32)
value first_def (pathTheory 14)
value first_drop (pathTheory 86)
value first_goal (goalTree 13)
value first_goal_opt (goalTree 15)
value first_label_def (pathTheory 15)
value first_label_drop (pathTheory 87)
value first_opt (Lib 53)
value first_plink (pathTheory 88)
value first_pmap (pathTheory 89)
HOL Tactical.FIRST_PROVE (help/Docfiles/Tactical.FIRST_PROVE.adoc 0), value FIRST_PROVE (Tactical 67)
value first_seg (pathTheory 90)
value first_take (pathTheory 91)
HOL Thm_cont.FIRST_TCL (help/Docfiles/Thm_cont.FIRST_TCL.adoc 0), value FIRST_TCL (Thm_cont 11)
value first_thm (pathTheory 92)
HOL Tactical.FIRST_X_ASSUM (help/Docfiles/Tactical.FIRST_X_ASSUM.adoc 0), value FIRST_X_ASSUM (Tactical 71), value FIRST_X_ASSUM (jrhTactics 37), value first_x_assum (Tactical 72), value first_x_assum (lcsymtacs 35)
value FIRSTN (rich_listTheory 416)
value FIRSTN_APPEND1 (rich_listTheory 417)
value FIRSTN_APPEND2 (rich_listTheory 418)
value FIRSTN_BUTLASTN (rich_listTheory 419)
HOL listLib.FIRSTN_CONV (help/Docfiles/listLib.FIRSTN_CONV.adoc 0), value FIRSTN_CONV (ListConv1 39), value FIRSTN_CONV (listLib 53)
value FIRSTN_FIRSTN (rich_listTheory 420)
value FIRSTN_LENGTH_APPEND (rich_listTheory 421)
value FIRSTN_LENGTH_ID (rich_listTheory 422)
value FIRSTN_REVERSE (rich_listTheory 423)
value FIRSTN_SEG (rich_listTheory 424)
value FIRSTN_SNOC (rich_listTheory 425)
value firstP_at_def (pathTheory 13)
value firstP_at_thm (pathTheory 83)
value firstP_at_unique (pathTheory 84)
value firstP_at_zero (pathTheory 85)
constructor FirstTM (term_grammar 14)
type fix (mlibModel 14)
value FIX_CONV (bitstringLib 20)
value fix_merge (mlibModel 16)
value fix_mergel (mlibModel 17)
value FIX_v2w_CONV (bitstringLib 21)
value fixed_context_qp (quantHeuristicsLib 135), value fixed_context_qp (quantHeuristicsLibBase 146)
value fixed_width_bnum (EncodeVarTheory 9)
value fixed_width_bool (EncodeVarTheory 10)
value fixed_width_def (EncodeVarTheory 5)
value fixed_width_exists (EncodeVarTheory 11)
value fixed_width_prod (EncodeVarTheory 12)
value fixed_width_sum (EncodeVarTheory 13)
value fixed_width_unit (EncodeVarTheory 14)
value fixed_width_univ (EncodeVarTheory 15)
value fixedPoint_grammars (fixedPointTheory 32)
structure fixedPointTheory
value fixedwidth_of_binstring (bitstringSyntax 29)
value fixedwidth_of_bitlist (bitstringSyntax 28)
value fixedwidth_of_hexstring (bitstringSyntax 30)
value fixedwidth_of_int (bitstringSyntax 31)
type fixity (Parse 13), type fixity (dep_rewrite 152), value fixity (Parse 241)
value fixity_encode (term_grammar 254)
value fixity_reader (term_grammar 255)
value fixityToString (Parse 16)
value FIXPOINTS (Past_Temporal_LogicTheory 21)
value fixup_newvar (CooperSyntax 57)
value fixwidth (bitstringTheory 60)
value fixwidth_def (bitstringTheory 20)
value fixwidth_eq (bitstringTheory 61)
value fixwidth_fixwidth (bitstringTheory 62)
value fixwidth_id (bitstringTheory 63)
value fixwidth_id_imp (bitstringTheory 64)
value fixwidth_tm (bitstringSyntax 54)
value FLAT (listTheory 14), value FLAT (rich_listTheory 426)
value FLAT_APPEND (listTheory 157), value FLAT_APPEND (rich_listTheory 427)
HOL listLib.FLAT_CONV (help/Docfiles/listLib.FLAT_CONV.adoc 0), value FLAT_CONV (ListConv1 24), value FLAT_CONV (listLib 38)
value FLAT_EQ_NIL (listTheory 158)
value FLAT_FLAT (rich_listTheory 166)
value FLAT_FOLDL (rich_listTheory 167)
value FLAT_FOLDR (rich_listTheory 168)
value FLAT_PRS (quotient_listTheory 13)
value FLAT_REVERSE (rich_listTheory 169)
value FLAT_RSP (quotient_listTheory 14)
value FLAT_SNOC (rich_listTheory 170)
value flat_tm (listSyntax 18)
HOL proofManagerLib.flatn (help/Docfiles/proofManagerLib.flatn.adoc 0), value flatn (Manager 43), value flatn (goalStack 19), value flatn (proofManagerLib 58)
HOL Lib.flatten (help/Docfiles/Lib.flatten.adoc 0), value flatten (Lib 54), value flatten (mlibStream 39), value flatten (seq 26)
value flatten_conj (mlibTerm 57)
HOL unwindLib.FLATTEN_CONJ_CONV (help/Docfiles/unwindLib.FLATTEN_CONJ_CONV.adoc 0), value FLATTEN_CONJ_CONV (unwindLib 26)
value flatten_disj (mlibTerm 61)
value fle (ieeeTheory 41)
value flip_cmp (Lib 55)
value flip_forall (CooperSyntax 37)
value flip_foralls (CooperSyntax 38)
value flip_order (Lib 56)
value Float (ieeeTheory 7)
value float_abs (ieeeTheory 43)
value FLOAT_ADD (floatTheory 38), value float_add (ieeeTheory 44)
value FLOAT_ADD_RELATIVE (floatTheory 39)
value FLOAT_CASES (floatTheory 40)
value FLOAT_CASES_FINITE (floatTheory 41)
value FLOAT_COUNTINDUCT (floatTheory 42)
value FLOAT_DISTINCT (floatTheory 43)
value FLOAT_DISTINCT_FINITE (floatTheory 44)
value FLOAT_DIV (floatTheory 45), value float_div (ieeeTheory 45)
value FLOAT_DIV_RELATIVE (floatTheory 46)
value FLOAT_EQ (floatTheory 47), value float_eq (ieeeTheory 46)
value FLOAT_EQ_REFL (floatTheory 48)
value FLOAT_FINITECOUNT (floatTheory 49)
value FLOAT_FIRSTCROSS (floatTheory 50)
value FLOAT_FIRSTCROSS1 (floatTheory 51)
value FLOAT_FIRSTCROSS2 (floatTheory 52)
value FLOAT_FIRSTCROSS3 (floatTheory 53)
value float_format (ieeeTheory 47)
value FLOAT_GE (floatTheory 54), value float_ge (ieeeTheory 48)
value float_grammars (floatTheory 157)
value FLOAT_GT (floatTheory 55), value float_gt (ieeeTheory 49)
value FLOAT_INFINITES_DISTINCT (floatTheory 56)
value FLOAT_INFINITIES (floatTheory 57)
value FLOAT_INFINITIES_SIGNED (floatTheory 58)
value FLOAT_IS_FINITE_SUBSET (floatTheory 59)
value FLOAT_LE (floatTheory 60), value float_le (ieeeTheory 50)
value FLOAT_LT (floatTheory 61), value float_lt (ieeeTheory 51)
value FLOAT_MUL (floatTheory 62), value float_mul (ieeeTheory 52)
value FLOAT_MUL_FINITE (floatTheory 63)
value FLOAT_MUL_RELATIVE (floatTheory 64)
value float_neg (ieeeTheory 53)
value float_rem (ieeeTheory 54)
value float_sqrt (ieeeTheory 55)
value FLOAT_SUB (floatTheory 65), value float_sub (ieeeTheory 56)
value FLOAT_SUB_FINITE (floatTheory 66)
value FLOAT_SUB_RELATIVE (floatTheory 67)
value FLOAT_THRESHOLD_EXPLICIT (floatTheory 68)
value float_TY_DEF (ieeeTheory 42)
value float_tybij (ieeeTheory 57)
structure floatTheory
value FLOOKUP_DEF (finite_mapTheory 11)
value FLOOKUP_DEFN_CONV (flookupLib 2)
value FLOOKUP_DRESTRICT (finite_mapTheory 107)
value FLOOKUP_EMPTY (finite_mapTheory 108)
value FLOOKUP_EXT (finite_mapTheory 109)
value FLOOKUP_FUN_FMAP (finite_mapTheory 111)
value FLOOKUP_FUNION (finite_mapTheory 110)
value flookup_fupdate_list (alistTheory 59)
value FLOOKUP_FUPDATE_LIST_ALOOKUP_NONE (alistTheory 33)
value FLOOKUP_FUPDATE_LIST_ALOOKUP_SOME (alistTheory 34)
value FLOOKUP_o_f (finite_mapTheory 114)
value FLOOKUP_SUBMAP (finite_mapTheory 112)
value flookup_t (finite_mapSyntax 13)
value flookup_thm (finite_mapTheory 234)
value FLOOKUP_UPDATE (finite_mapTheory 113)
structure flookupLib
value floor (Arbnumcore 33), value floor (Arbrat 43)
value flt (ieeeTheory 58)
value flush (smpp 8)
value flush_out (Portable 60)
value flush_ppstream (HOLPP 34)
value FM_PULL_APART (finite_mapTheory 129)
value fmap (fmapalTheory 54)
value fmap_bij_thm (fmaptreeTheory 8)
value fmap_CASES (finite_mapTheory 235)
value fmap_domsub (finite_mapTheory 27)
value fmap_EQ (finite_mapTheory 236)
value fmap_eq_flookup (finite_mapTheory 246)
value fmap_EQ_THM (finite_mapTheory 237)
value fmap_EQ_UPTO___EMPTY (finite_mapTheory 238)
value fmap_EQ_UPTO___EQ (finite_mapTheory 239)
value fmap_EQ_UPTO___FUPDATE_BOTH (finite_mapTheory 240)
value fmap_EQ_UPTO___FUPDATE_BOTH___NO_DELETE (finite_mapTheory 241)
value fmap_EQ_UPTO___FUPDATE_SING (finite_mapTheory 242)
value fmap_EQ_UPTO_def (finite_mapTheory 24)
value FMAP_EXPR_CONV (fmapalTacs 37)
value fmap_EXT (finite_mapTheory 243)
value fmap_FDOM (fmapalTheory 134)
value fmap_FDOM_rec (fmapalTheory 135)
value fmap_INDUCT (finite_mapTheory 244)
value fmap_inverse_def (finite_mapTheory 28)
value fmap_ISO_DEF (finite_mapTheory 25)
value FMAP_MAP2_def (finite_mapTheory 12)
value FMAP_MAP2_FEMPTY (finite_mapTheory 115)
value FMAP_MAP2_FUPDATE (finite_mapTheory 116)
value FMAP_MAP2_THM (finite_mapTheory 117)
value fmap_ORWL_thm (fmapalTheory 136)
value fmap_rel_def (finite_mapTheory 29)
value fmap_rel_FEMPTY (finite_mapTheory 247)
value fmap_rel_FEMPTY2 (finite_mapTheory 248)
value fmap_rel_FUNION_rels (finite_mapTheory 249)
value fmap_rel_FUPDATE_I (finite_mapTheory 250)
value fmap_rel_FUPDATE_LIST_same (finite_mapTheory 251)
value fmap_rel_FUPDATE_same (finite_mapTheory 252)
value fmap_rel_mono (finite_mapTheory 254)
value fmap_rel_OPTREL_FLOOKUP (finite_mapTheory 253)
value fmap_rel_refl (finite_mapTheory 255)
value fmap_rel_sym (finite_mapTheory 256)
value fmap_rel_trans (finite_mapTheory 257)
value fmap_SIMPLE_INDUCT (finite_mapTheory 245)
value fmap_size_def (finite_mapTheory 30)
value fmap_to_alist_def (alistTheory 9)
value fmap_to_alist_FEMPTY (alistTheory 60)
value fmap_to_alist_inj (alistTheory 61)
value fmap_to_alist_preserves_FDOM (alistTheory 62)
value fmap_to_alist_to_fmap (alistTheory 63)
value fmap_TO_FMAPAL_CONV (fmapalTacs 13)
value fmap_to_list (finite_mapTheory 258)
value FMAP_TO_RELN (tcTacs 10), value FMAP_TO_RELN (tcTheory 7)
value fmap_TY_DEF (finite_mapTheory 26)
value FMAPAL_FDOM_THM (fmapalTheory 79)
value FMAPAL_fmap (fmapalTheory 80)
value fmapal_grammars (fmapalTheory 153)
value FMAPAL_TO_fmap_CONV (fmapalTacs 14)
value FMAPAL_TO_ORWL (fmapalTacs 21)
structure fmapalTacs
structure fmapalTheory
value fmaptree_grammars (fmaptreeTheory 36)
value fmaptree_nchotomy (fmaptreeTheory 21)
value fmaptree_TY_DEF (fmaptreeTheory 9)
structure fmaptreeTheory
value FMEQ_ENUMERATE_CASES (finite_mapTheory 118)
value FMEQ_SINGLE_SIMPLE_DISJ_ELIM (finite_mapTheory 119)
value FMEQ_SINGLE_SIMPLE_ELIM (finite_mapTheory 120)
value FMERGE_ASSOC (finite_mapTheory 121)
value FMERGE_COMM (finite_mapTheory 122)
value FMERGE_DEF (finite_mapTheory 13)
value FMERGE_DOMSUB (finite_mapTheory 123)
value FMERGE_DRESTRICT (finite_mapTheory 124)
value FMERGE_EQ_FEMPTY (finite_mapTheory 125)
value FMERGE_FEMPTY (finite_mapTheory 126)
value FMERGE_FUNION (finite_mapTheory 127)
value FMERGE_NO_CHANGE (finite_mapTheory 128)
value fmtree_Axiom (fmaptreeTheory 22)
value fmtreerec_def (fmaptreeTheory 10)
value fmtreerec_thm (fmaptreeTheory 23)
value fmul (ieeeTheory 59)
constructor Fn (mlibTerm 14)
value fn_abs_def (measureTheory 11)
value fn_args (mlibTerm 37)
value fn_arity (mlibTerm 38)
value fn_function (mlibTerm 39)
value FN_MINUS_ADD_LE (measureTheory 72)
value FN_MINUS_CMUL (measureTheory 73)
value fn_minus_def (measureTheory 12)
value FN_MINUS_POS (measureTheory 74)
value FN_MINUS_POS_ZERO (measureTheory 75)
value fn_name (mlibTerm 36)
value FN_PLUS_ADD_LE (measureTheory 76)
value FN_PLUS_CMUL (measureTheory 77)
value fn_plus_def (measureTheory 13)
value FN_PLUS_POS (measureTheory 78)
value FN_PLUS_POS_ID (measureTheory 79)
value fn_seq_def (lebesgueTheory 8)
value fn_seq_integral_def (lebesgueTheory 9)
constructor FNAPP (term_grammar 60)
value fnapp_special (GrammarSpecials 3)
value fneg (ieeeTheory 60)
value FNIL (ind_typeTheory 8)
value fnsum_ASSOC (fixedPointTheory 15)
value fnsum_COMM (fixedPointTheory 16)
value fnsum_def (fixedPointTheory 8)
value fnsum_empty (fixedPointTheory 18)
value fnsum_monotone (fixedPointTheory 19)
value fnsum_SUBSET (fixedPointTheory 17)
value FO_METIS_PROVE (metisTools 54)
value FO_METIS_TAC (metisTools 47)
value FOL_CONV (Canon 30), value FOL_CONV (refuteLib 30)
value FOL_FIND (folTools 55)
value FOL_NORM (folTools 60)
value FOL_NORM_TAC (folTools 61)
value FOL_NORM_TTAC (folTools 62)
type fol_problem (folTools 38)
value FOL_REFUTE (folTools 56)
value FOL_SOLVE (folTools 54)
value FOL_TACTIC (folTools 57)
value fol_thms_to_hol (folMapping 36)
value fold (LVTermNet 18), value fold (PIntMap 44), value fold (TypeNet 17), value fold (mlibPatricia 30)
value foldi_CONV (sptreeLib 3)
value foldi_def (sptreeTheory 8)
value foldi_FOLDR_toAList (sptreeTheory 55)
value foldi_tm (sptreeSyntax 20)
value FOLDL (listTheory 15), value FOLDL (rich_listTheory 428), value foldl (KernelSig 32), value foldl (Redblackmap 22), value foldl (Redblackset 27), value foldl (liteLib 39), value foldl (mlibMultiset 21), value foldl (mlibStream 38), value foldl (mlibSubst 28)
value FOLDL2_cong (listTheory 160)
value FOLDL2_def (listTheory 161)
value FOLDL2_FOLDL (listTheory 159)
value FOLDL2_FUPDATE_LIST (finite_mapTheory 130)
value FOLDL2_FUPDATE_LIST_paired (finite_mapTheory 131)
value FOLDL2_ind (listTheory 162)
value FOLDL_APPEND (rich_listTheory 171)
value FOLDL_CONG (listTheory 163)
HOL listLib.FOLDL_CONV (help/Docfiles/listLib.FOLDL_CONV.adoc 0), value FOLDL_CONV (ListConv1 18), value FOLDL_CONV (listLib 32)
value FOLDL_EQ_FOLDR (listTheory 164)
value FOLDL_FILTER (rich_listTheory 172)
value FOLDL_FOLDR_REVERSE (rich_listTheory 173)
value FOLDL_FUPDATE_LIST (finite_mapTheory 132)
value FOLDL_MAP (rich_listTheory 174), value foldl_map (Lib 57)
value FOLDL_MAP2 (rich_listTheory 175)
value FOLDL_PRS (quotient_listTheory 15)
value foldl_reduce_and (wordsTheory 536)
value foldl_reduce_nand (wordsTheory 537)
value foldl_reduce_nor (wordsTheory 538)
value foldl_reduce_or (wordsTheory 539)
value foldl_reduce_xnor (wordsTheory 540)
value foldl_reduce_xor (wordsTheory 541)
value FOLDL_REVERSE (rich_listTheory 176)
value FOLDL_RSP (quotient_listTheory 16)
value FOLDL_SINGLE (rich_listTheory 177)
value FOLDL_SNOC (listTheory 165), value FOLDL_SNOC (rich_listTheory 429)
value FOLDL_SNOC_NIL (rich_listTheory 178)
value foldl_tm (listSyntax 19)
value FOLDL_UNION_BIGUNION (listTheory 166)
value FOLDL_UNION_BIGUNION_paired (listTheory 167)
value FOLDL_ZIP_SAME (listTheory 168)
value FOLDR (listTheory 16), value FOLDR (rich_listTheory 430), value foldr (Redblackmap 21), value foldr (Redblackset 26), value foldr (liteLib 38), value foldr (mlibMultiset 22), value foldr (mlibSubst 29)
value FOLDR_APPEND (rich_listTheory 179)
value FOLDR_CONG (listTheory 169)
value FOLDR_CONS (listTheory 170)
value FOLDR_CONS_NIL (rich_listTheory 180)
HOL listLib.FOLDR_CONV (help/Docfiles/listLib.FOLDR_CONV.adoc 0), value FOLDR_CONV (ListConv1 17), value FOLDR_CONV (listLib 31)
value FOLDR_FILTER (rich_listTheory 181)
value FOLDR_FILTER_REVERSE (rich_listTheory 182)
value FOLDR_FOLDL (rich_listTheory 183)
value FOLDR_FOLDL_REVERSE (rich_listTheory 184)
value FOLDR_MAP (rich_listTheory 185)
value FOLDR_MAP_REVERSE (rich_listTheory 186)
value FOLDR_PERM (sortingTheory 26)
value FOLDR_PRS (quotient_listTheory 17)
value FOLDR_REVERSE (rich_listTheory 187)
value FOLDR_RSP (quotient_listTheory 18)
value FOLDR_SINGLE (rich_listTheory 188)
value FOLDR_SNOC (rich_listTheory 189)
value foldr_tm (listSyntax 20)
structure folMapping
structure folTools
HOL Lib.for (help/Docfiles/Lib.for.adoc 0), value for (Lib 58)
value FOR_def (errorStateMonadTheory 37), value FOR_def (state_transformerTheory 26)
value FOR_ind (errorStateMonadTheory 38), value FOR_ind (state_transformerTheory 27)
value FOR_primitive_def (errorStateMonadTheory 12), value FOR_primitive_def (state_transformerTheory 7)
HOL Lib.for_se (help/Docfiles/Lib.for_se.adoc 0), value for_se (Lib 59)
value for_tm (state_transformerSyntax 9)
constructor Forall (mlibTerm 18), value forall (UnicodeChars 107)
HOL Conv.FORALL_AND_CONV (help/Docfiles/Conv.FORALL_AND_CONV.adoc 0), value FORALL_AND_CONV (Conv 51)
value FORALL_AND_THM (boolTheory 90)
HOL Arith.FORALL_ARITH_CONV (help/Docfiles/Arith.FORALL_ARITH_CONV.adoc 0), value FORALL_ARITH_CONV (Arith 9), value FORALL_ARITH_CONV (Solve 12)
value FORALL_BOOL (boolTheory 91)
HOL unwindLib.FORALL_CONJ_CONV (help/Docfiles/unwindLib.FORALL_CONJ_CONV.adoc 0), value FORALL_CONJ_CONV (unwindLib 27)
HOL unwindLib.FORALL_CONJ_ONCE_CONV (help/Docfiles/unwindLib.FORALL_CONJ_ONCE_CONV.adoc 0), value FORALL_CONJ_ONCE_CONV (unwindLib 28)
HOL unwindLib.FORALL_CONJ_RIGHT_RULE (help/Docfiles/unwindLib.FORALL_CONJ_RIGHT_RULE.adoc 0), value FORALL_CONJ_RIGHT_RULE (unwindLib 29)
HOL ConseqConv.FORALL_CONSEQ_CONV (help/Docfiles/ConseqConv.FORALL_CONSEQ_CONV.adoc 0), value FORALL_CONSEQ_CONV (ConseqConv 208)
value FORALL_DEF (boolTheory 17)
HOL Drule.FORALL_EQ (help/Docfiles/Drule.FORALL_EQ.adoc 0), value FORALL_EQ (Drule 31)
HOL ConseqConv.FORALL_EQ___CONSEQ_CONV (help/Docfiles/ConseqConv.FORALL_EQ___CONSEQ_CONV.adoc 0), value FORALL_EQ___CONSEQ_CONV (ConseqConv 71)
value forall_eq_thm (ConseqConvTheory 46)
value FORALL_EXISTS_THM (Omega_AutomataTheory 33)
HOL Conv.FORALL_IMP_CONV (help/Docfiles/Conv.FORALL_IMP_CONV.adoc 0), value FORALL_IMP_CONV (Conv 68)
value FORALL_IN_CONV (schneiderUtils 22)
value FORALL_LIST (listTheory 171)
HOL Conv.FORALL_NOT_CONV (help/Docfiles/Conv.FORALL_NOT_CONV.adoc 0), value FORALL_NOT_CONV (Conv 50)
value FORALL_NOT_LIST_CONV (quantHeuristicsLibBase 17), value FORALL_NOT_LIST_CONV (quantHeuristicsTools 15)
value FORALL_NUM (arithmeticTheory 123)
value FORALL_NUM_THM (arithmeticTheory 124)
value FORALL_ONE (oneTheory 10)
value FORALL_OPTION (optionTheory 27)
HOL Conv.FORALL_OR_CONV (help/Docfiles/Conv.FORALL_OR_CONV.adoc 0), value FORALL_OR_CONV (Conv 64)
value FORALL_path (pathTheory 41)
value FORALL_PROD (pairTheory 30)
value FORALL_PRS (quotientTheory 41)
value FORALL_REGULAR (quotientTheory 42)
value FORALL_ring (ringTheory 23)
value FORALL_semi_ring (semi_ringTheory 20)
value FORALL_SIMP (boolTheory 92)
value FORALL_SIMP_CONV (Conv 89), value FORALL_SIMP_CONV (Thm_convs 39)
value FORALL_SUM (sumTheory 20)
value FORALL_THM (boolTheory 93)
value FORALL_UNCURRY (pairTheory 31)
value FORALL_UNFREE_CONV (schneiderUtils 23)
value FOREACH_def (errorStateMonadTheory 35), value FOREACH_def (state_transformerTheory 24)
value FOREACH_ind (errorStateMonadTheory 36), value FOREACH_ind (state_transformerTheory 25)
value FOREACH_primitive_def (errorStateMonadTheory 11), value FOREACH_primitive_def (state_transformerTheory 6)
value foreach_tm (state_transformerSyntax 10)
HOL proofManagerLib.forget_history (help/Docfiles/proofManagerLib.forget_history.adoc 0), value forget_history (Manager 22), value forget_history (proofManagerLib 28)
HOL Conv.FORK_CONV (help/Docfiles/Conv.FORK_CONV.adoc 0), value FORK_CONV (Conv 16)
type form (mlibSolver 36)
HOL Feedback.format_ERR (help/Docfiles/Feedback.format_ERR.adoc 0), value format_ERR (Feedback 21)
HOL Feedback.format_MESG (help/Docfiles/Feedback.format_MESG.adoc 0), value format_MESG (Feedback 22)
HOL Feedback.format_WARNING (help/Docfiles/Feedback.format_WARNING.adoc 0), value format_WARNING (Feedback 23)
constructor Formula (mlibTerm 126), type formula (mlibCanon 9), type formula (mlibClause 11), type formula (mlibKernel 9), type formula (mlibLiteralnet 10), type formula (mlibMatch 9), type formula (mlibMetis 17), type formula (mlibModel 10), type formula (mlibSolver 10), type formula (mlibSubst 11), type formula (mlibSubsume 11), type formula (mlibSupport 9), type formula (mlibTerm 18), type formula (mlibTptp 9), type formula (mlibUnits 9)
type formula1 (folMapping 10), type formula1 (folTools 10)
value formula_compare (mlibTerm 79)
value formula_size (mlibTerm 75)
value formula_subst (mlibSubst 20)
value formula_to_string (mlibModel 54), value formula_to_string (mlibTerm 152)
value formula_to_string' (mlibTerm 148)
value FOT_METIS_PROVE (metisTools 55)
value FOT_METIS_TAC (metisTools 48)
value fourth_cancel (extrealTheory 184)
type Fparm (metisTools 25)
value FRAC (fracTheory 23), value frac (fracSyntax 5)
value frac_0_def (fracTheory 5)
value FRAC_0_SAVE (fracTheory 24)
value frac_0_tm (fracSyntax 7)
value FRAC_1_0 (fracTheory 25)
value frac_1_def (fracTheory 6)
value FRAC_1_SAVE (fracTheory 26)
value frac_1_tm (fracSyntax 8)
value FRAC_ABS_SGN (fracTheory 27)
value FRAC_ADD_ASSOC (fracTheory 28)
value FRAC_ADD_CALCULATE (fracTheory 29)
value FRAC_ADD_COMM (fracTheory 30)
value frac_add_def (fracTheory 8)
value FRAC_ADD_EQUIV1 (ratTheory 29)
value FRAC_ADD_RID (fracTheory 31)
value FRAC_ADD_SAVE (fracTheory 32)
value frac_add_tm (fracSyntax 15)
value FRAC_AINV_0 (fracTheory 33)
value FRAC_AINV_ADD (fracTheory 34)
value FRAC_AINV_AINV (fracTheory 35)
value FRAC_AINV_CALCULATE (fracTheory 36)
value frac_ainv_def (fracTheory 9)
value FRAC_AINV_LMUL (fracTheory 37)
value FRAC_AINV_ONEONE (fracTheory 38)
value FRAC_AINV_ONTO (fracTheory 39)
value FRAC_AINV_RMUL (fracTheory 40)
value FRAC_AINV_SAVE (fracTheory 41)
value FRAC_AINV_SUB (fracTheory 42)
value frac_ainv_tm (fracSyntax 13)
value frac_bij (fracTheory 72)
value FRAC_CALC_CONV (fracLib 26)
value FRAC_CALC_TAC (fracLib 29)
value FRAC_CALCEQ_TAC (fracLib 32)
value FRAC_CALCTERM_TAC (fracLib 28)
value FRAC_DIV_CALCULATE (fracTheory 43)
value frac_div_def (fracTheory 10)
value frac_div_tm (fracSyntax 18)
value FRAC_DNM_CONV (fracLib 22)
value frac_dnm_def (fracTheory 11)
value FRAC_DNM_SAVE (fracTheory 45)
value frac_dnm_tm (fracSyntax 11)
value FRAC_DNMPOS (fracTheory 44)
value FRAC_EQ (fracTheory 46)
value FRAC_EQ_ALT (fracTheory 47)
value FRAC_EQ_CONV (fracLib 10)
value FRAC_EQ_TAC (fracLib 12)
value frac_grammars (fracTheory 74)
value FRAC_MINV_CALCULATE (fracTheory 48)
value frac_minv_def (fracTheory 12)
value FRAC_MINV_EQUIV (ratTheory 30)
value FRAC_MINV_SAVE (fracTheory 49)
value frac_minv_tm (fracSyntax 14)
value FRAC_MUL_ASSOC (fracTheory 51)
value FRAC_MUL_COMM (fracTheory 52)
value frac_mul_def (fracTheory 13)
value FRAC_MUL_EQUIV1 (ratTheory 31)
value FRAC_MUL_RID (fracTheory 53)
value FRAC_MUL_SAVE (fracTheory 54)
value frac_mul_tm (fracSyntax 17)
value FRAC_MULT_CALCULATE (fracTheory 50)
value FRAC_NMR_CONV (fracLib 21)
value frac_nmr_def (fracTheory 14)
value FRAC_NMR_SAVE (fracTheory 55)
value frac_nmr_tm (fracSyntax 10)
value FRAC_NMRDNM_TAC (fracLib 23)
value FRAC_NOT0_CONV (fracLib 16)
value FRAC_NOT0_TAC (fracLib 18)
value FRAC_NOT_EQ (fracTheory 56)
value FRAC_NOT_EQ_IMP (fracTheory 57)
value FRAC_NOTEQ_CONV (fracLib 11)
value FRAC_POS_CONV (fracLib 15)
value FRAC_POS_TAC (fracLib 17)
value FRAC_SAVE_CONV (fracLib 34)
value frac_save_def (fracTheory 15)
value FRAC_SAVE_TAC (fracLib 35)
value FRAC_SGN_AINV (fracTheory 58)
value FRAC_SGN_CALCULATE (fracTheory 59)
value FRAC_SGN_CASES (fracTheory 60)
value frac_sgn_def (fracTheory 16)
value FRAC_SGN_IMP_EQGT (fracTheory 61)
value FRAC_SGN_MUL (fracTheory 62)
value FRAC_SGN_MUL2 (fracTheory 63)
value FRAC_SGN_NEG (fracTheory 64)
value FRAC_SGN_NOT_NEG (fracTheory 65)
value FRAC_SGN_POS (fracTheory 66)
value frac_sgn_tm (fracSyntax 12)
value FRAC_SGN_TOTAL (fracTheory 67)
value FRAC_STRICT_CALC_TAC (fracLib 27)
value FRAC_STRICT_CALCEQ_TAC (fracLib 31)
value FRAC_SUB_ADD (fracTheory 68)
value FRAC_SUB_CALCULATE (fracTheory 69)
value frac_sub_def (fracTheory 17)
value FRAC_SUB_SUB (fracTheory 70)
value frac_sub_tm (fracSyntax 16)
value frac_TY_DEF (fracTheory 7)
value frac_tybij (fracTheory 18)
type fracinfo (base_tokens 5)
structure fracLib
structure fracSyntax
structure fracTheory
constructor Fraction (term_tokens 3), value FRACTION (floatTheory 69), value Fraction (ieeeTheory 8), value fraction (DecimalFractionPP 3), value fraction (ieeeTheory 61)
structure fracUtils
value fracwidth (ieeeTheory 62)
type frag (HOLPP 22), type frag (Lib 3), type frag (Parse 10)
value frag_rewrites (simpLib 72)
value FRANGE_alist_to_fmap_SUBSET (alistTheory 35)
value FRANGE_DEF (finite_mapTheory 14)
value FRANGE_DOMSUB_SUBSET (finite_mapTheory 133)
value FRANGE_DRESTRICT_SUBSET (finite_mapTheory 134)
value FRANGE_FEMPTY (finite_mapTheory 135)
value FRANGE_FLOOKUP (finite_mapTheory 136)
value FRANGE_FMAP (finite_mapTheory 137)
value FRANGE_FUNION (finite_mapTheory 138)
value FRANGE_FUNION_SUBSET (finite_mapTheory 139)
value FRANGE_FUPDATE (finite_mapTheory 140)
value FRANGE_FUPDATE_DOMSUB (finite_mapTheory 141)
value FRANGE_FUPDATE_LIST_SUBSET (finite_mapTheory 142)
value FRANGE_FUPDATE_SUBSET (finite_mapTheory 143)
constructor Free (BasicProvers 52)
HOL Term.free_in (help/Docfiles/Term.free_in.adoc 0), value free_in (FinalTerm 12)
HOL Term.free_vars (help/Docfiles/Term.free_vars.adoc 0), value free_vars (FinalTerm 9)
HOL Term.free_vars_lr (help/Docfiles/Term.free_vars_lr.adoc 0), value free_vars_lr (FinalTerm 10)
HOL Term.free_varsl (help/Docfiles/Term.free_varsl.adoc 0), value free_varsl (FinalTerm 16)
HOL hol88Lib.frees (help/Docfiles/hol88Lib.frees.adoc 0), value frees (hol88Lib 18)
HOL hol88Lib.freesl (help/Docfiles/hol88Lib.freesl.adoc 0), value freesl (Canon_Port 5)
HOL Tactic.FREEZE_THEN (help/Docfiles/Tactic.FREEZE_THEN.adoc 0), value FREEZE_THEN (Tactic 10)
value frem (ieeeTheory 63)
value FRESH_VARS (mlibClause 62), value FRESH_VARS (mlibThm 47)
value FRESH_VARSL (mlibThm 48)
value fresult (seq 21)
value from_backend (smpp 23)
value from_list (clauses 44), value from_list (mlibStream 46)
value from_maplets (mlibLiteralnet 21), value from_maplets (mlibSubst 27), value from_maplets (mlibTermnet 20)
type from_ot (OpenTheoryMap 6)
value from_term (clauses 51)
value from_textfile (mlibStream 48)
value from_toList (llistTheory 139)
value fromAInt (Arbrat 18)
value fromAList (sptreeSyntax 13)
value fromAList_def (sptreeTheory 56)
value fromAList_ind (sptreeTheory 57)
value fromAList_primitive_def (sptreeTheory 9)
value fromAList_tm (sptreeSyntax 21)
value fromAList_toAList (sptreeTheory 58)
value fromArbList (OmegaMLShadow 19), value fromArbList (mlibOmega 22)
value fromBinString (Arbnumcore 28)
value fromBinString_def (ASCIInumbersTheory 7)
value fromBinString_tm (ASCIInumbersSyntax 10)
value fromDecString_def (ASCIInumbersTheory 8)
value fromDecString_tm (ASCIInumbersSyntax 11)
value fromHexString (Arbnumcore 26)
value fromHexString_def (ASCIInumbersTheory 9)
value fromHexString_tm (ASCIInumbersSyntax 12)
value fromHOLchar (stringLib 34), value fromHOLchar (stringSyntax 175)
value fromHOLstring (stringLib 36), value fromHOLstring (stringSyntax 177)
value fromInt (Arbintcore 14), value fromInt (Arbnumcore 30), value fromInt (Arbrat 17), value fromInt (mlibArbint 16), value fromInt (mlibArbnum 22), value fromInt (mlibOmegaint 15)
value fromLex (HOLtokens 8)
value fromList (OmegaMLShadow 18), value fromList (Redblackmap 8), value fromList (Redblackset 9), value fromList (llistTheory 24), value fromList (mlibOmega 21), value fromList (seq 24), value fromList (sptreeSyntax 12)
value fromList_def (sptreeTheory 10)
value fromList_tm (sptreeSyntax 22)
value fromMLchar (stringLib 33), value fromMLchar (stringSyntax 174)
value fromMLstring (stringLib 35), value fromMLstring (stringSyntax 176)
value fromNat (Arbintcore 15), value fromNat (Arbrat 19), value fromNat (mlibArbint 17)
value fromNum_def (basis_emitTheory 28)
value fromNum_ind (basis_emitTheory 29)
value fromNum_primitive_def (basis_emitTheory 13)
value fromNum_str (GrammarSpecials 28)
value fromOctString (Arbnumcore 27)
value fromPath_11 (pathTheory 93)
value fromPath_onto (pathTheory 94)
value fromString (Arbintcore 12), value fromString (Arbnumcore 24), value fromString (Arbrat 15), value fromString (mlibArbint 14), value fromString (mlibArbnum 21), value fromString (mlibOmegaint 13)
value fromString_def (integer_wordTheory 38)
value fromString_ind (integer_wordTheory 39)
value fromString_primitive_def (integer_wordTheory 8)
value fromString_tm (integer_wordSyntax 17)
value fromType (Pretype 39)
value FRONT_APPEND (rich_listTheory 190)
value FRONT_CONS (listTheory 172)
value FRONT_CONS_EQ_NIL (listTheory 173)
value FRONT_DEF (listTheory 17)
HOL Lib.front_last (help/Docfiles/Lib.front_last.adoc 0), value front_last (Lib 60)
value FRONT_SNOC (listTheory 174)
value front_tm (listSyntax 21)
type fs (errormonad 3), value fs (bossLib 138), value fs (lcsymtacs 93)
value fsqrt (ieeeTheory 64)
value fsrw_tac (bossLib 130), value fsrw_tac (lcsymtacs 84)
HOL Lib.fst (help/Docfiles/Lib.fst.adoc 0), value FST (pairTheory 32), value fst (Lib 61), value fst (mlibUseful 42)
value fst1_def (OmegaTheory 21)
value FST_ADD_WITH_CARRY (wordsTheory 137)
value fst_nzero_def (OmegaTheory 22)
value FST_o_MMAP (state_transformerTheory 28)
value FST_o_UNIT (state_transformerTheory 29)
value FST_PAIR_MAP (pairTheory 33)
value FST_PRS (quotient_pairTheory 12)
value FST_RSP (quotient_pairTheory 13)
value FST_select_fun (quantHeuristicsLibAbbrev 22)
value fst_tm (pairLib 14), value fst_tm (pairSyntax 11)
value fsub (ieeeTheory 65)
value ft_ind (fmaptreeTheory 24)
value FTC1 (transcTheory 123)
type fterm (clauses 8)
value FTNode_11 (fmaptreeTheory 18)
value FTNode_def (fmaptreeTheory 5)
value ftt (floatTheory 140)
HOL Type.ftyvar (help/Docfiles/Type.ftyvar.adoc 0), value ftyvar (FinalType 36)
value FULL_BBLAST_TAC (blastLib 11)
value FULL_CASE_TAC (BasicProvers 75), value full_case_tac (BasicProvers 76), value full_case_tac (lcsymtacs 30)
value FULL_CONGRUENCE_SIMP_TAC (congLib 128)
value FULL_EXT_CONSEQ_REWRITE_CONV (ConseqConv 130)
value FULL_LEAST_INTRO (whileTheory 12)
value FULL_METIS_PROVE (metisTools 58)
value FULL_METIS_TAC (metisTools 51)
HOL bossLib.FULL_SIMP_TAC (help/Docfiles/bossLib.FULL_SIMP_TAC.adoc 0), HOL simpLib.FULL_SIMP_TAC (help/Docfiles/simpLib.FULL_SIMP_TAC.adoc 0), value FULL_SIMP_TAC (bossLib 91), value FULL_SIMP_TAC (simpLib 172), value full_simp_tac (bossLib 92), value full_simp_tac (lcsymtacs 80), value full_simp_tac (simpLib 173)
value full_skolemize (mlibCanon 23)
HOL Tactic.FULL_STRUCT_CASES_TAC (help/Docfiles/Tactic.FULL_STRUCT_CASES_TAC.adoc 0), value FULL_STRUCT_CASES_TAC (Tactic 45)
constructor Fully (RW 53)
value FUN_CONGRUENCE (mlibThm 53)
HOL Conv.FUN_EQ_CONV (help/Docfiles/Conv.FUN_EQ_CONV.adoc 0), value FUN_EQ_CONV (Conv 79)
value FUN_EQ_THM (boolTheory 94)
value FUN_fmap_CONV (fmapalTacs 15)
value FUN_FMAP_DEF (finite_mapTheory 16)
value FUN_FMAP_EMPTY (finite_mapTheory 155)
value FUN_fmap_thm (fmapalTheory 81)
value FUN_FMAPAL_CONV (fmapalTacs 16)
value FUN_MAP (quotientTheory 7)
value FUN_MAP_I (quotientTheory 43)
value FUN_MAP_THM (quotientTheory 44)
value FUN_QUOTIENT (quotientTheory 45), value fun_quotient (quotient 197)
value FUN_REL (quotientTheory 8)
value FUN_REL_EQ (quotientTheory 46)
value FUN_REL_EQ_REL (quotientTheory 48)
value FUN_REL_EQUALS (quotientTheory 47)
value FUN_REL_IMP (quotientTheory 49)
value FUN_REL_MP (quotientTheory 50)
value func_of_cond_eqn (wfrecUtils 22)
value function_def (posetTheory 11)
value function_names (mlibTerm 94)
value functions (mlibTerm 93)
value FUNION_alist_to_fmap (alistTheory 36)
value FUNION_ASSOC (finite_mapTheory 144)
value FUNION_COMM (finite_mapTheory 145)
value FUNION_CONV (fmapalTacs 24)
value FUNION_DEF (finite_mapTheory 15)
value FUNION_EQ (finite_mapTheory 146)
value FUNION_EQ_FEMPTY (finite_mapTheory 147)
value FUNION_EQ_IMPL (finite_mapTheory 148)
value FUNION_FEMPTY_1 (finite_mapTheory 149)
value FUNION_FEMPTY_2 (finite_mapTheory 150)
value FUNION_FMERGE (finite_mapTheory 151)
value FUNION_FUPDATE_1 (finite_mapTheory 152)
value FUNION_FUPDATE_2 (finite_mapTheory 153)
value FUNION_IDEMPOT (finite_mapTheory 154)
HOL Lib.funpow (help/Docfiles/Lib.funpow.adoc 0), value FUNPOW (arithmeticTheory 16), value funpow (Lib 62), value funpow (mlibUseful 32)
value FUNPOW_0 (arithmeticTheory 125)
value FUNPOW_1 (arithmeticTheory 126)
value FUNPOW_ADD (arithmeticTheory 127)
value FUNPOW_SUC (arithmeticTheory 128)
value funpow_tm (numSyntax 15)
value FUNSET_def (util_probTheory 6)
value FUNSET_DFUNSET (util_probTheory 63)
value FUNSET_EMPTY (util_probTheory 64)
value FUNSET_INTER (util_probTheory 65)
value FUNSET_THM (util_probTheory 66)
value FUPD11_SAME_BASE (finite_mapTheory 156)
value FUPD11_SAME_KEY_AND_BASE (finite_mapTheory 157)
value FUPD11_SAME_NEW_KEY (finite_mapTheory 158)
value FUPD11_SAME_UPDATE (finite_mapTheory 159)
value fupd_actual_ops (Overload 24)
value fupd_at_path_def (fmaptreeTheory 11)
value FUPD_SAME_KEY_UNWIND (finite_mapTheory 185)
value fupdate (smpp 16)
value FUPDATE_COMMUTES (finite_mapTheory 160)
value FUPDATE_CONV (fmapalTacs 35)
value FUPDATE_DEF (finite_mapTheory 17)
value FUPDATE_DRESTRICT (finite_mapTheory 161)
value FUPDATE_ELIM (finite_mapTheory 162)
value FUPDATE_EQ (finite_mapTheory 163)
value FUPDATE_EQ_FUNION (finite_mapTheory 164)
value FUPDATE_EQ_FUPDATE_LIST (finite_mapTheory 165)
value FUPDATE_FUPDATE_LIST_COMMUTES (finite_mapTheory 166)
value FUPDATE_FUPDATE_LIST_MEM (finite_mapTheory 167)
value FUPDATE_LIST (finite_mapTheory 18)
value FUPDATE_LIST_ALL_DISTINCT_APPLY_MEM (finite_mapTheory 168)
value FUPDATE_LIST_ALL_DISTINCT_PERM (finite_mapTheory 169)
value FUPDATE_LIST_ALL_DISTINCT_REVERSE (finite_mapTheory 170)
value FUPDATE_LIST_APPEND (finite_mapTheory 171)
value FUPDATE_LIST_APPEND_COMMUTES (finite_mapTheory 172)
value FUPDATE_LIST_APPLY_HO_THM (finite_mapTheory 173)
value FUPDATE_LIST_APPLY_MEM (finite_mapTheory 174)
value FUPDATE_LIST_APPLY_NOT_MEM (finite_mapTheory 175)
value FUPDATE_LIST_APPLY_NOT_MEM_matchable (finite_mapTheory 176)
value FUPDATE_LIST_CANCEL (finite_mapTheory 177)
value FUPDATE_LIST_EQ_APPEND_REVERSE (alistTheory 37)
value fupdate_list_foldl (finite_mapTheory 259)
value fupdate_list_foldr (finite_mapTheory 260)
value fupdate_list_funion (alistTheory 64)
value fupdate_list_map (finite_mapTheory 261)
value FUPDATE_LIST_SAME_KEYS_UNWIND (finite_mapTheory 178)
value FUPDATE_LIST_SAME_UPDATE (finite_mapTheory 179)
value FUPDATE_LIST_SNOC (finite_mapTheory 180)
value FUPDATE_LIST_THM (finite_mapTheory 181)
value fupdate_NORMALISE_CONV (finite_mapLib 33)
value fupdate_overload_info (term_grammar 104)
value FUPDATE_PURGE (finite_mapTheory 182)
value FUPDATE_SAME_APPLY (finite_mapTheory 183)
value FUPDATE_SAME_LIST_APPLY (finite_mapTheory 184)
value fupdate_specials (term_grammar 140)
value fupdate_t (finite_mapSyntax 14)
constructor Fv (KernelTypes 33), constructor Fv (clauses 8), value FV (mlibTerm 112)
HOL Term.FVL (help/Docfiles/Term.FVL.adoc 0), value FVL (FinalTerm 11), value FVL (mlibTerm 113)
value FVT (mlibTerm 110)
value FVTL (mlibTerm 111)
HOL proofManagerLib.g (help/Docfiles/proofManagerLib.g.adoc 0), value g (proofManagerLib 10)
HOL Type.gamma (help/Docfiles/Type.gamma.adoc 0), value Gamma (UnicodeChars 24), value gamma (FinalType 33), value gamma (UnicodeChars 6)
value GATHER_BOTH_CONV (Thm_convs 16)
value GATHER_CONV (Norm_arith 15)
value GATHER_LEFT_CONV (Thm_convs 17)
value GATHER_NEITHER_CONV (Thm_convs 18)
value GATHER_RIGHT_CONV (Thm_convs 19)
value gauge (transcTheory 14)
value GAUGE_MIN (transcTheory 124)
value GAUGE_MIN_FINITE (integralTheory 43)
value gauge_tm (transcSyntax 13)
value GBIGUNION_IMAGE (util_probTheory 67)
value gcd (Arbnumcore 45), value gcd (CooperMath 9), value gcd (Int_extra 4), value gcd (mlibOmegaint 41), value gcd (mlibUseful 118)
value gcd1thm (int_arithTheory 46)
value gcd21_thm (int_arithTheory 47)
value GCD_0L (gcdTheory 13)
value GCD_0R (gcdTheory 14)
value GCD_1 (gcdTheory 15)
value GCD_ADD_L (gcdTheory 16)
value GCD_ADD_L_THM (gcdTheory 17)
value GCD_ADD_R (gcdTheory 18)
value GCD_ADD_R_THM (gcdTheory 19)
value GCD_CANCEL_MULT (gcdTheory 20)
constructor GCD_CHECK (OmegaMLShadow 5), constructor GCD_CHECK (mlibOmega 8), value gcd_check (OmegaMath 6)
value gcd_check_dfactoid (OmegaMLShadow 22), value gcd_check_dfactoid (mlibOmega 28)
value GCD_COMMON_FACTOR (gcdTheory 21)
value gcd_curried_def (gcdTheory 5)
value gcd_def (gcdTheory 46)
value GCD_EFFICIENTLY (gcdTheory 22)
value GCD_EQ_0 (gcdTheory 23)
value gcd_eq_check (OmegaMath 4)
value gcd_grammars (gcdTheory 49)
value gcd_ind (gcdTheory 47)
value GCD_IS_GCD (gcdTheory 24)
value gcd_le_check (OmegaMath 5)
value GCD_REF (gcdTheory 25)
value GCD_SUCfree_ind (gcdTheory 26)
value GCD_SYM (gcdTheory 27)
value gcd_t (CooperMath 7)
value gcd_tupled_primitive_def (gcdTheory 6)
value gcdl (CooperMath 10)
value gcdset_def (gcdsetTheory 5)
value gcdset_divides (gcdsetTheory 10)
value gcdset_EMPTY (gcdsetTheory 8)
value gcdset_grammars (gcdsetTheory 13)
value gcdset_greatest (gcdsetTheory 11)
value gcdset_INSERT (gcdsetTheory 9)
structure gcdsetTheory
structure gcdTheory
value gcdthm2 (int_arithTheory 48)
constructor GCI (GenPolyCanon 6), type gci (GenPolyCanon 6)
HOL reduceLib.GE_CONV (help/Docfiles/reduceLib.GE_CONV.adoc 0), value GE_CONV (Arithconv 8), value GE_CONV (reduceLib 15)
HOL Thm.GEN (help/Docfiles/Thm.GEN.adoc 0), constructor Gen (Count 11), value GEN (FinalThm 62), value GEN (Q 21)
HOL Thm.GEN_ABS (help/Docfiles/Thm.GEN_ABS.adoc 0), value GEN_ABS (FinalThm 102)
HOL Drule.GEN_ALL (help/Docfiles/Drule.GEN_ALL.adoc 0), HOL hol88Lib.GEN_ALL (help/Docfiles/hol88Lib.GEN_ALL.adoc 0), value GEN_ALL (Drule 50), value GEN_ALL (hol88Lib 19), value gen_all (boolSyntax 129), value gen_all (wfrecUtils 18)
HOL Drule.GEN_ALPHA_CONV (help/Docfiles/Drule.GEN_ALPHA_CONV.adoc 0), value GEN_ALPHA_CONV (Drule 72)
structure Gen_arith
value GEN_ASSUM (ConseqConv 49)
value gen_assums (abstraction 11)
HOL PairedLamda.GEN_BETA_CONV (help/Docfiles/PairedLamda.GEN_BETA_CONV.adoc 0), value GEN_BETA_CONV (PairedLambda 6), value GEN_BETA_CONV (pairLib 77)
value GEN_BETA_RULE (PairedLambda 11), value GEN_BETA_RULE (pairLib 80)
value gen_beta_ss (pairSimps 14)
value GEN_BETA_TAC (PairedLambda 12), value GEN_BETA_TAC (pairLib 81)
value GEN_COND_CASES_TAC (Tactic 46)
value gen_datatype_info (TypeBasePure 31)
value GEN_EQ (ConseqConv 52)
HOL bossLib.GEN_EXISTS_TAC (help/Docfiles/bossLib.GEN_EXISTS_TAC.adoc 0), value GEN_EXISTS_TAC (bossLib 105)
HOL HolKernel.gen_find_term (help/Docfiles/HolKernel.gen_find_term.adoc 0), value gen_find_term (HolKernelDoc 16)
HOL HolKernel.gen_find_terms (help/Docfiles/HolKernel.gen_find_terms.adoc 0), value gen_find_terms (HolKernelDoc 17)
value GEN_FOL_CONV (Canon_Port 15)
value GEN_IMP (ConseqConv 50)
value GEN_LET_CONV (PairedLambda 8)
value GEN_LET_RAND (combinTheory 21)
value GEN_LET_RATOR (combinTheory 22)
value GEN_literal_case_RAND (combinTheory 23)
value GEN_literal_case_RATOR (combinTheory 24)
HOL mesonLib.GEN_MESON_TAC (help/Docfiles/mesonLib.GEN_MESON_TAC.adoc 0), value GEN_MESON_TAC (mesonLib 19)
value GEN_METIS_SOLVE (metisTools 38)
value GEN_METIS_TAC (metisTools 41)
value gen_mk_numeral (Literal 8)
value gen_mk_travrules (Travrules 82)
HOL Definition.gen_new_specification (help/Docfiles/Definition.gen_new_specification.adoc 0)
value gen_overloaded_const (Parse_support 11)
value GEN_PAIR_TAC (jrhUtils 9)
HOL PairRules.GEN_PALPHA_CONV (help/Docfiles/PairRules.GEN_PALPHA_CONV.adoc 0), value GEN_PALPHA_CONV (PairRules 21)
value gen_prim_specification (FinalThm 114)
value GEN_PROVE_TAC (BasicProvers 15)
value gen_remove_mapping (Overload 67)
value gen_remove_ovl_mapping (Parse 111)
value GEN_REWR_TAC (jrhUtils 22)
HOL Rewrite.GEN_REWRITE_CONV (help/Docfiles/Rewrite.GEN_REWRITE_CONV.adoc 0), value GEN_REWRITE_CONV (Ho_Rewrite 10), value GEN_REWRITE_CONV (Rewrite 20)
HOL Rewrite.GEN_REWRITE_RULE (help/Docfiles/Rewrite.GEN_REWRITE_RULE.adoc 0), value GEN_REWRITE_RULE (Ho_Rewrite 11), value GEN_REWRITE_RULE (Rewrite 21), value GEN_REWRITE_RULE (hol88Lib 20)
HOL Rewrite.GEN_REWRITE_TAC (help/Docfiles/Rewrite.GEN_REWRITE_TAC.adoc 0), value GEN_REWRITE_TAC (Ho_Rewrite 12), value GEN_REWRITE_TAC (Rewrite 22), value GEN_REWRITE_TAC (hol88Lib 21)
value GEN_RPOW (transcTheory 125)
value GEN_SAT (minisatProve 3)
HOL Tactic.GEN_TAC (help/Docfiles/Tactic.GEN_TAC.adoc 0), value GEN_TAC (Tactic 26), value gen_tac (Tactic 27), value gen_tac (lcsymtacs 13)
HOL Type.gen_tyvar (help/Docfiles/Type.gen_tyvar.adoc 0), value gen_tyvar (FinalType 6)
value gen_unify (Pretype 23)
HOL Tactical.GEN_VALIDATE (help/Docfiles/Tactical.GEN_VALIDATE.adoc 0), value GEN_VALIDATE (Tactical 58)
HOL Tactical.GEN_VALIDATE_LT (help/Docfiles/Tactical.GEN_VALIDATE_LT.adoc 0), value GEN_VALIDATE_LT (Tactical 59)
value gen_variant (FinalTerm 25), value gen_variant (Lexis 24)
constructor GenAbs (Count 11)
value gencanon (GenPolyCanon 23)
value generalize (mlibTerm 115)
value generalize_schematic_variables (InductiveDefinition 32)
value GENERIC_SMT_TAC (HolSmtLib 6)
value genFromString (Arbnumcore 25)
HOL Thm.GENL (help/Docfiles/Thm.GENL.adoc 0), value GENL (FinalThm 63), value GENL (Q 22)
value GENLIST (listTheory 18), value GENLIST (rich_listTheory 431)
value GENLIST_APPEND (listTheory 175), value GENLIST_APPEND (rich_listTheory 432)
value GENLIST_AUX (listTheory 19)
value GENLIST_AUX_compute (listTheory 176)
value GENLIST_CONS (listTheory 177), value GENLIST_CONS (rich_listTheory 433)
HOL listLib.GENLIST_CONV (help/Docfiles/listLib.GENLIST_CONV.adoc 0), value GENLIST_CONV (ListConv1 43), value GENLIST_CONV (listLib 57)
value GENLIST_EL (listTheory 178)
value GENLIST_EL_MAP (listTheory 179)
value GENLIST_FUN_EQ (listTheory 180), value GENLIST_FUN_EQ (rich_listTheory 434)
value GENLIST_GENLIST_AUX (listTheory 181)
value GENLIST_NUMERALS (listTheory 182)
value GENLIST_PLUS_APPEND (listTheory 183)
value genlist_tm (listSyntax 22)
structure GenPolyCanon
type gentactic (Abbrev 12)
HOL Term.genvar (help/Docfiles/Term.genvar.adoc 0), value genvar (FinalTerm 21)
HOL Term.genvars (help/Docfiles/Term.genvars.adoc 0), value genvars (FinalTerm 22)
HOL pairSyntax.genvarstruct (help/Docfiles/pairSyntax.genvarstruct.adoc 0), value genvarstruct (pairLib 71), value genvarstruct (pairSyntax 84)
constructor Geo (holyHammer 3)
value geq (UnicodeChars 120)
value GEQ_NORM_CONV (Thm_convs 20)
value geq_tm (intSyntax 22), value geq_tm (numSyntax 16), value geq_tm (realSyntax 19)
value get (TypeBasePure 89)
value get_assums (abstraction 7)
value GET_BAG_IN_THMS (bagLib 63), value GET_BAG_IN_THMS (bagSimpleLib 6)
value get_first (Lib 63)
HOL holCheckLib.get_flag_abs (help/Docfiles/holCheckLib.get_flag_abs.adoc 0)
value get_flag_is_cnf (satConfig 12)
value get_flag_is_proved (satConfig 13)
HOL holCheckLib.get_flag_ric (help/Docfiles/holCheckLib.get_flag_ric.adoc 0)
value get_gspec (term_pp_utils 15)
value get_hooks (Theory 51)
value get_infile (satConfig 10)
HOL holCheckLib.get_init (help/Docfiles/holCheckLib.get_init.adoc 0)
value get_min_def (set_relationTheory 14)
HOL holCheckLib.get_name (help/Docfiles/holCheckLib.get_name.adoc 0)
value get_precedence (term_grammar 240)
value get_proof (satConfig 11)
HOL holCheckLib.get_props (help/Docfiles/holCheckLib.get_props.adoc 0)
value get_qp___for_types (quantHeuristicsLib 128), value get_qp___for_types (quantHeuristicsLibBase 170)
value get_resort_list___pred (bagLib 67), value get_resort_list___pred (bagSimpleLib 9)
value get_resort_lists___pred_pair (bagLib 69), value get_resort_lists___pred_pair (bagSimpleLib 11)
value get_resort_position___pred (bagLib 66), value get_resort_position___pred (bagSimpleLib 8)
value get_resort_positions___pred_pair (bagLib 68), value get_resort_positions___pred_pair (bagSimpleLib 10)
HOL holCheckLib.get_results (help/Docfiles/holCheckLib.get_results.adoc 0)
value get_solver (satConfig 9)
HOL holCheckLib.get_state (help/Docfiles/holCheckLib.get_state.adoc 0)
value get_term (satConfig 8)
value get_term_printer (Parse 194)
value get_thm_heads (Canon_Port 6)
value get_tracefn (Feedback 46)
HOL holCheckLib.get_trans (help/Docfiles/holCheckLib.get_trans.adoc 0)
HOL holCheckLib.get_vord (help/Docfiles/holCheckLib.get_vord.adoc 0)
value getArgs (Portable 48)
value getbvs (term_pp_utils 5)
value getc (Coding 4)
value getChar (UTF8 4)
value getEnv (Portable 47)
value getfvs (term_pp_utils 10)
value getItem (mlibPatricia 31)
value gfp_coinduction (fixedPointTheory 20)
value gfp_def (fixedPointTheory 9), value gfp_def (posetTheory 12)
value gfp_greatest_dense (fixedPointTheory 21)
value gfp_greatest_fixedpoint (fixedPointTheory 22)
value gfp_strong_coinduction (fixedPointTheory 23)
value gfp_unique (posetTheory 29)
value give_num_priority (Parse 91), value give_num_priority (term_grammar 202)
constructor GIVEN (Pmatch 8)
value givens (Pmatch 14)
value glb_def (posetTheory 13)
value glb_pred (posetTheory 30)
structure Globals
value GNUMAKE (Systeml 31)
type Goal (jrhTactics 3), type goal (Abbrev 7), type goal (fracLib 4), type goal (fracUtils 4), type goal (intExtensionLib 4), type goal (jbUtils 4), type goal (ratLib 4), type goal (ratUtils 4), type goal (schneiderUtils 4)
value goal_line (Globals 20)
value goal_qtype (CooperSyntax 32)
constructor GOALSTACK (Manager 4), structure goalStack
type Goalstate (jrhTactics 4)
constructor GOALTREE (Manager 4), structure goalTree
value good_cmp_def (comparisonTheory 9)
value good_cmp_thm (comparisonTheory 38)
value good_cmp_trans (comparisonTheory 39)
value GP (seqTheory 18)
value GP_FINITE (seqTheory 19)
HOL PairRules.GPSPEC (help/Docfiles/PairRules.GPSPEC.adoc 0), value GPSPEC (PairRules 64)
type grammar (PEGParse 15), type grammar (ProvideUnicode 4), type grammar (TermParse 5), type grammar (term_grammar 81), type grammar (type_grammar 13)
value grammar_name (term_grammar 143)
value grammar_parse_in_context (Parse 60)
type grammar_rule (term_grammar 74), type grammar_rule (type_grammar 5)
value grammar_rules (term_grammar 138)
value grammar_tokens (term_grammar 183)
exception GrammarError (HOLgrammars 3)
structure GrammarSpecials
value GREAT_NORM_CONV (Thm_convs 21)
value great_tm (intSyntax 21), value great_tm (realSyntax 18)
value GREATER_DEF (arithmeticTheory 17)
value GREATER_EQ (arithmeticTheory 129)
value GREATER_OR_EQ (arithmeticTheory 18)
value GREATER_REWR (totoTacs 14)
value greater_tm (numSyntax 17)
constructor GRND (KernelTypes 26)
constructor GRULE (term_grammar 89)
value grule_encode (term_grammar 251)
value grule_reader (term_grammar 250)
HOL Drule.GSPEC (help/Docfiles/Drule.GSPEC.adoc 0), value GSPEC (Drule 79)
value GSPEC_AND (pred_setTheory 197)
value GSPEC_EQ (pred_setTheory 198)
value GSPEC_EQ2 (pred_setTheory 199)
value GSPEC_ETA (pred_setTheory 200)
value GSPEC_F (pred_setTheory 201)
value GSPEC_F_COND (pred_setTheory 202)
value GSPEC_ID (pred_setTheory 203)
value GSPEC_OR (pred_setTheory 204)
value GSPEC_PRS (quotient_pred_setTheory 31)
value GSPEC_SIMP_CONV (pred_setSimps 5)
value GSPEC_SIMP_ss (pred_setSimps 6)
value GSPEC_T (pred_setTheory 205)
value gspec_tm (pred_setSyntax 18)
value GSPECIFICATION (pred_setTheory 17)
value GSPECIFICATION_applied (pred_setTheory 196)
value GSPECR_def (quotient_pred_setTheory 8)
value GSPECR_RSP (quotient_pred_setTheory 30)
type gstk (goalStack 4)
value GSUBS (Drule 15)
HOL Tactic.GSUBST_TAC (help/Docfiles/Tactic.GSUBST_TAC.adoc 0), value GSUBST_TAC (Tactic 32)
value GSUM_1 (sum_numTheory 10)
value GSUM_ADD (sum_numTheory 11)
value GSUM_curried_def (sum_numTheory 5)
value GSUM_def (sum_numTheory 17)
value GSUM_def_compute (sum_numTheory 18)
value GSUM_EQUAL (sum_numTheory 12)
value GSUM_FUN_EQUAL (sum_numTheory 13)
value GSUM_ind (sum_numTheory 19)
value GSUM_LESS (sum_numTheory 14)
value GSUM_MONO (sum_numTheory 15)
value GSUM_tupled_primitive_def (sum_numTheory 6)
value GSUM_ZERO (sum_numTheory 16)
HOL Conv.GSYM (help/Docfiles/Conv.GSYM.adoc 0), value GSYM (Conv 109)
value gt (proofManagerLib 11)
HOL reduceLib.GT_CONV (help/Docfiles/reduceLib.GT_CONV.adoc 0), value GT_CONV (Arithconv 6), value GT_CONV (reduceLib 13)
value gt_neg_BIT1_thm (inttoTheory 15)
value gt_neg_BIT2_thm (inttoTheory 16)
value gtake (wfrecUtils 6)
type gtree (goalTree 5)
constructor gty_exists (quantHeuristicsLibBase 29)
constructor gty_exists_gap (quantHeuristicsLibBase 29)
constructor gty_exists_point (quantHeuristicsLibBase 29)
constructor gty_forall (quantHeuristicsLibBase 29)
constructor gty_forall_gap (quantHeuristicsLibBase 29)
constructor gty_forall_point (quantHeuristicsLibBase 29)
type guess (quantHeuristicsLibBase 33)
value guess2term (quantHeuristicsLibBase 65)
value guess2thm (quantHeuristicsLibBase 66)
value guess2thm_opt (quantHeuristicsLibBase 67)
type guess_collection (quantHeuristicsLibBase 81)
value guess_collection2list (quantHeuristicsLibBase 98)
value guess_collection___get_exists_weaken (quantHeuristicsLibBase 99)
value guess_collection___get_forall_weaken (quantHeuristicsLibBase 100)
value guess_collection_append (quantHeuristicsLibBase 95)
value guess_collection_flatten (quantHeuristicsLibBase 96)
value guess_collection_guess_type (quantHeuristicsLibBase 91)
value GUESS_EXISTS_def (quantHeuristicsTheory 7)
value GUESS_EXISTS_FORALL_REWRITES (quantHeuristicsTheory 24)
value GUESS_EXISTS_GAP_def (quantHeuristicsTheory 5)
value GUESS_EXISTS_POINT_def (quantHeuristicsTheory 6)
value GUESS_EXISTS_POINT_THM (quantHeuristicsTheory 25)
value GUESS_EXISTS_THM (quantHeuristicsTheory 26)
value guess_extract (quantHeuristicsLibBase 63)
value guess_extract_thm (quantHeuristicsLibBase 64)
value guess_extract_type (quantHeuristicsLibBase 68)
value GUESS_FORALL_def (quantHeuristicsTheory 10)
value GUESS_FORALL_GAP_def (quantHeuristicsTheory 8)
value GUESS_FORALL_POINT_def (quantHeuristicsTheory 9)
value GUESS_FORALL_POINT_THM (quantHeuristicsTheory 27)
value GUESS_FORALL_THM (quantHeuristicsTheory 28)
constructor guess_general (quantHeuristicsLibBase 33)
value guess_has_no_free_vars (quantHeuristicsLibBase 43)
value guess_has_thm (quantHeuristicsLibBase 42)
value guess_has_thm_no_free_vars (quantHeuristicsLibBase 44)
HOL wordsLib.guess_lengths (help/Docfiles/wordsLib.guess_lengths.adoc 0), value guess_lengths (wordsLib 81)
value guess_list2collection (quantHeuristicsLibBase 97)
value GUESS_POINT_THM (quantHeuristicsTheory 29)
value guess_remove_thm (quantHeuristicsLibBase 50)
value GUESS_REWRITES (quantHeuristicsTheory 30)
value GUESS_RULES_BOOL (quantHeuristicsTheory 31)
value GUESS_RULES_COND (quantHeuristicsTheory 32)
value GUESS_RULES_CONJ (quantHeuristicsTheory 33)
value GUESS_RULES_CONSTANT_EXISTS (quantHeuristicsTheory 34)
value GUESS_RULES_CONSTANT_FORALL (quantHeuristicsTheory 35)
value GUESS_RULES_DISJ (quantHeuristicsTheory 36)
value GUESS_RULES_ELIM_UNIT (quantHeuristicsTheory 37)
value GUESS_RULES_EQUATION_EXISTS_GAP (quantHeuristicsTheory 38)
value GUESS_RULES_EQUATION_EXISTS_POINT (quantHeuristicsTheory 39)
value GUESS_RULES_EQUATION_FORALL_POINT (quantHeuristicsTheory 40)
value GUESS_RULES_EQUIV (quantHeuristicsTheory 41)
value GUESS_RULES_EXISTS (quantHeuristicsTheory 42)
value GUESS_RULES_EXISTS___NEW_FV (quantHeuristicsTheory 44)
value GUESS_RULES_EXISTS___NEW_FV_1 (quantHeuristicsTheory 45)
value GUESS_RULES_EXISTS_UNIQUE (quantHeuristicsTheory 43)
value GUESS_RULES_FORALL (quantHeuristicsTheory 46)
value GUESS_RULES_FORALL___NEW_FV (quantHeuristicsTheory 47)
value GUESS_RULES_FORALL___NEW_FV_1 (quantHeuristicsTheory 48)
value GUESS_RULES_IMP (quantHeuristicsTheory 49)
value GUESS_RULES_NEG (quantHeuristicsTheory 50)
value GUESS_RULES_ONE_CASE___EXISTS_GAP (quantHeuristicsTheory 51)
value GUESS_RULES_ONE_CASE___FORALL_GAP (quantHeuristicsTheory 52)
value GUESS_RULES_STRENGTHEN_EXISTS_POINT (quantHeuristicsTheory 53)
value GUESS_RULES_STRENGTHEN_FORALL_GAP (quantHeuristicsTheory 54)
value GUESS_RULES_TRIVIAL_EXISTS_POINT (quantHeuristicsTheory 55)
value GUESS_RULES_TRIVIAL_FORALL_POINT (quantHeuristicsTheory 56)
value GUESS_RULES_TWO_CASES (quantHeuristicsTheory 57)
value GUESS_RULES_WEAKEN_EXISTS_GAP (quantHeuristicsTheory 58)
value GUESS_RULES_WEAKEN_FORALL_POINT (quantHeuristicsTheory 59)
constructor guess_term (quantHeuristicsLibBase 33)
value guess_term2type (quantHeuristicsLibBase 48)
constructor guess_thm (quantHeuristicsLibBase 33)
value GUESS_THM_list2collection (quantHeuristicsLibBase 120)
value guess_thm_to_guess (quantHeuristicsLibBase 71)
value guess_to_string (quantHeuristicsLibBase 75)
type guess_type (quantHeuristicsLibBase 29)
value guess_type2string (quantHeuristicsLibBase 46)
value guess_type2term (quantHeuristicsLibBase 47)
value guess_weaken (quantHeuristicsLibBase 104)
value GUESSES_NEG_DUALITY (quantHeuristicsTheory 17)
value GUESSES_NEG_REWRITE (quantHeuristicsTheory 18)
value GUESSES_UEXISTS_THM1 (quantHeuristicsTheory 19)
value GUESSES_UEXISTS_THM2 (quantHeuristicsTheory 20)
value GUESSES_UEXISTS_THM3 (quantHeuristicsTheory 21)
value GUESSES_UEXISTS_THM4 (quantHeuristicsTheory 22)
value GUESSES_WEAKEN_THM (quantHeuristicsTheory 23)
value guessing_overloads (Globals 27)
value guessing_tyvars (Globals 26)
value guessing_word_lengths (wordsLib 78)
value guessR (TotalDefn 7)
value HABS_CONV (jrhUtils 20)
value HALF_BETA_EXPAND (InductiveDefinition 27)
value half_between (extrealTheory 185)
value HALF_CANCEL (util_probTheory 68), value half_cancel (extrealTheory 186)
value HALF_LT_1 (util_probTheory 69)
HOL Drule.HALF_MK_ABS (help/Docfiles/Drule.HALF_MK_ABS.adoc 0), value HALF_MK_ABS (jrhUtils 6)
HOL PairRules.HALF_MK_PABS (help/Docfiles/PairRules.HALF_MK_PABS.adoc 0), value HALF_MK_PABS (PairRules 100)
value HALF_POS (util_probTheory 70)
constructor HardSpace (term_grammar 14), value HardSpace (Parse 248)
value has_exists (CooperSyntax 19)
value has_forall (CooperSyntax 20)
value has_quant (CooperSyntax 21)
value HAS_SIZE_def (fcpTheory 16)
value has_unbound_uvar (Pretype 12)
HOL Lib.hash (help/Docfiles/Lib.hash.adoc 0), value hash (Lib 64), value hash (mlibOmegaint 40)
value HAVE_BASIS2002 (Systeml 28)
value HD (listTheory 20), value HD (rich_listTheory 435), value hd (mlibStream 21), value hd (seq 35)
value HD_dropWhile (listTheory 186)
value HD_GENLIST (listTheory 184), value HD_GENLIST (rich_listTheory 436)
value HD_GENLIST_COR (listTheory 185)
value hd_opr (Manager 47)
value hd_proj (Manager 48)
value hd_tl (mlibStream 23), value hd_tl (mlibUseful 59)
value hd_tm (listSyntax 23)
value head_var (Preterm 30)
HOL Tactical.HEADGOAL (help/Docfiles/Tactical.HEADGOAL.adoc 0), value HEADGOAL (Tactical 36)
type heap (mlibHeap 8)
value heap_fix (mlibModel 23)
value heuristics_qp (quantHeuristicsLib 141), value heuristics_qp (quantHeuristicsLibBase 153)
value HEX_def (ASCIInumbersTheory 25)
value HEX_ind (ASCIInumbersTheory 26)
value HEX_primitive_def (ASCIInumbersTheory 5)
value hex_tm (ASCIInumbersSyntax 5)
value HEX_UNHEX (ASCIInumbersTheory 24)
value hexstring_of_term (bitstringSyntax 15)
HOL holyHammer.hh (help/Docfiles/holyHammer.hh.adoc 0), value hh (holyHammer 6)
value hh_atp (holyHammer 8)
value hh_goal (holyHammer 9)
value hh_try (holyHammer 7)
structure hhReconstruct
structure hhWriter
value hi (UnicodeChars 139)
HOL Parse.hidden (help/Docfiles/Parse.hidden.adoc 0), value hidden (Parse 226)
HOL Parse.hide (help/Docfiles/Parse.hide.adoc 0), value hide (Parse 219)
value HIGHER_REWRITE_CONV (Ho_Rewrite 16)
HOL Tactic.HINT_EXISTS_TAC (help/Docfiles/Tactic.HINT_EXISTS_TAC.adoc 0), value HINT_EXISTS_TAC (Tactic 97)
structure History, type history (History 2)
value HO_BACKCHAIN_TAC (Tactic 79)
HOL Q.HO_MATCH_ABBREV_TAC (help/Docfiles/Q.HO_MATCH_ABBREV_TAC.adoc 0), value HO_MATCH_ABBREV_TAC (Q 57), value HO_MATCH_ABBREV_TAC (markerLib 29)
value HO_MATCH_ACCEPT_TAC (Tactic 78)
value HO_MATCH_MP (Drule 86)
HOL Tactic.HO_MATCH_MP_TAC (help/Docfiles/Tactic.HO_MATCH_MP_TAC.adoc 0), value HO_MATCH_MP_TAC (Tactic 80), value ho_match_mp_tac (Tactic 81), value ho_match_mp_tac (lcsymtacs 25)
value ho_match_term (HolKernelDoc 35)
value ho_match_term0 (HolKernelDoc 30)
value HO_METIS_PROVE (metisTools 56)
value HO_METIS_TAC (metisTools 49)
structure Ho_Net
value HO_PART_MATCH (Drule 85)
value HO_REWR_CONV (Conv 8)
structure Ho_Rewrite
value HO_SUB_ELIM (int_arithTheory 9)
value HOARE_SPEC_DEF (whileTheory 5)
structure hol88Lib
type hol88subst (hol88Lib 13)
value hol_clock (Globals 36)
value Hol_coreln (CoIndDefLib 5), value Hol_coreln (bossLib 22)
HOL bossLib.Hol_datatype (help/Docfiles/bossLib.Hol_datatype.adoc 0), value Hol_datatype (Datatype 49), value Hol_datatype (bossLib 9)
HOL Defn.Hol_defn (help/Docfiles/Defn.Hol_defn.adoc 0), HOL bossLib.Hol_defn (help/Docfiles/bossLib.Hol_defn.adoc 0), value Hol_defn (Defn 24), value Hol_defn (bossLib 18)
value Hol_defns (Defn 27)
HOL Feedback.HOL_ERR (help/Docfiles/Feedback.HOL_ERR.adoc 0), exception HOL_ERR (Feedback 6)
value hol_literals_to_fol (folMapping 27)
HOL Feedback.HOL_MESG (help/Docfiles/Feedback.HOL_MESG.adoc 0), value HOL_MESG (Feedback 33)
value Hol_mono_coreln (CoIndDefLib 7)
value Hol_mono_reln (IndDefLib 12)
structure Hol_pp
value HOL_PROGRESS_MESG (Feedback 34)
value Hol_Rdefn (Defn 25)
HOL IndDefLib.Hol_reln (help/Docfiles/IndDefLib.Hol_reln.adoc 0), HOL bossLib.Hol_reln (help/Docfiles/bossLib.Hol_reln.adoc 0), value Hol_reln (IndDefLib 10), value Hol_reln (bossLib 21)
value hol_symbols (Lexis 3)
value hol_thm_to_fol (folMapping 30)
HOL Type.hol_type (help/Docfiles/Type.hol_type.adoc 0), type hol_type (Abbrev 4), type hol_type (ConstMapML 5), type hol_type (FinalTerm 4), type hol_type (FinalThm 5), type hol_type (FinalType 3), type hol_type (HolKernelDoc 6), type hol_type (Hol_pp 3), type hol_type (KernelTypes 16), type hol_type (Opentheory 1), type hol_type (Overload 2), type hol_type (PPBackEnd 3), type hol_type (Parse 3), type hol_type (Preterm 3), type hol_type (Psyntax 2), type hol_type (Rsyntax 2), type hol_type (TermParse 4), type hol_type (Theory 3), type hol_type (TheoryPP 10), type hol_type (TypeBase 3), type hol_type (TypeBasePure 2), type hol_type (TypeNet 5), type hol_type (boolSyntax 4), type hol_type (enumTacs 8), type hol_type (fmapalTacs 8), type hol_type (folMapping 12), type hol_type (folTools 14), type hol_type (fracSyntax 3), type hol_type (inttoTacs 8), type hol_type (jbUtils 7), type hol_type (matchTools 9), type hol_type (pairTheory 77), type hol_type (ratSyntax 3), type hol_type (tcTacs 8), type hol_type (totoTacs 8)
HOL Feedback.HOL_WARNING (help/Docfiles/Feedback.HOL_WARNING.adoc 0), value HOL_WARNING (Feedback 35)
value HOL_WARNINGloc (Feedback 36)
HOL holCheckLib.holCheck (help/Docfiles/holCheckLib.holCheck.adoc 0)
value HOLDIR (Globals 3), value HOLDIR (Systeml 19)
structure HOLgrammars
structure holindexData
structure HolKernelDoc
structure HOLPP
structure HolQbfLib
structure HolSatLib
structure HOLset
value HolSmt_grammars (HolSmtTheory 361)
structure HolSmtLib
structure HolSmtTheory
value HOLspecials (HOLtokens 7)
value HOLsym (HOLtokens 6)
structure HOLtokens
type holty (KernelTypes 26)
structure holyHammer
value hookleftarrow (UnicodeChars 79)
value hookrightarrow (UnicodeChars 80)
constructor Horn (mlibCanon 38), type horn (mlibCanon 38)
value host (mlibUseful 189)
value HOT_METIS_PROVE (metisTools 57)
value HOT_METIS_TAC (metisTools 50)
value hparse (ParseDatatype 36)
value hrat_1 (hratTheory 5)
value hrat_ABS_def (hratTheory 6)
value hrat_ABS_REP_CLASS (hratTheory 57)
value hrat_add (hratTheory 9)
value HRAT_ADD_ASSOC (hratTheory 22)
value HRAT_ADD_SYM (hratTheory 23)
value HRAT_ADD_TOTAL (hratTheory 24)
value HRAT_ARCH (hratTheory 25)
value hrat_bijections (hratTheory 10)
value HRAT_DOWN (hrealTheory 29)
value HRAT_DOWN2 (hrealTheory 30)
value HRAT_EQ_LADD (hrealTheory 31)
value HRAT_EQ_LMUL (hrealTheory 32)
value hrat_grammars (hratTheory 60)
value HRAT_GT_L1 (hrealTheory 33)
value HRAT_GT_LMUL1 (hrealTheory 34)
value hrat_inv (hratTheory 11)
value HRAT_INV_MUL (hrealTheory 35)
value HRAT_LDISTRIB (hratTheory 26)
value hrat_lt (hrealTheory 6)
value HRAT_LT_ADD2 (hrealTheory 36)
value HRAT_LT_ADDL (hrealTheory 37)
value HRAT_LT_ADDR (hrealTheory 38)
value HRAT_LT_ANTISYM (hrealTheory 39)
value HRAT_LT_GT (hrealTheory 40)
value HRAT_LT_L1 (hrealTheory 41)
value HRAT_LT_LADD (hrealTheory 42)
value HRAT_LT_LMUL (hrealTheory 43)
value HRAT_LT_LMUL1 (hrealTheory 44)
value HRAT_LT_MUL2 (hrealTheory 45)
value HRAT_LT_NE (hrealTheory 46)
value HRAT_LT_R1 (hrealTheory 47)
value HRAT_LT_RADD (hrealTheory 48)
value HRAT_LT_REFL (hrealTheory 49)
value HRAT_LT_RMUL (hrealTheory 50)
value HRAT_LT_RMUL1 (hrealTheory 51)
value HRAT_LT_TOTAL (hrealTheory 52)
value HRAT_LT_TRANS (hrealTheory 53)
value HRAT_MEAN (hrealTheory 54)
value hrat_mul (hratTheory 12)
value HRAT_MUL_ASSOC (hratTheory 27)
value HRAT_MUL_LID (hratTheory 28)
value HRAT_MUL_LINV (hratTheory 29)
value HRAT_MUL_RID (hrealTheory 55)
value HRAT_MUL_RINV (hrealTheory 56)
value HRAT_MUL_SYM (hratTheory 30)
value HRAT_NOZERO (hratTheory 31)
value hrat_QUOTIENT (hratTheory 58)
value HRAT_RDISTRIB (hrealTheory 57)
value hrat_REP_def (hratTheory 7)
value HRAT_SUCINT (hratTheory 32), value hrat_sucint (hratTheory 13)
value hrat_TY_DEF (hratTheory 8)
value HRAT_UP (hrealTheory 58)
structure hratTheory
value hreal_1 (hrealTheory 7)
value hreal_add (hrealTheory 9)
value HREAL_ADD_ASSOC (hrealTheory 59)
value HREAL_ADD_ISACUT (hrealTheory 60)
value HREAL_ADD_SYM (hrealTheory 61)
value HREAL_ADD_TOTAL (hrealTheory 62)
value HREAL_EQ_ADDL (realaxTheory 30)
value HREAL_EQ_ADDR (realaxTheory 31)
value HREAL_EQ_LADD (realaxTheory 32)
value hreal_grammars (hrealTheory 80)
value hreal_inv (hrealTheory 10)
value HREAL_INV_ISACUT (hrealTheory 63)
value HREAL_LDISTRIB (hrealTheory 64)
value HREAL_LT (hrealTheory 65), value hreal_lt (hrealTheory 11)
value HREAL_LT_ADD2 (realaxTheory 33)
value HREAL_LT_ADDL (realaxTheory 34)
value HREAL_LT_ADDR (realaxTheory 35)
value HREAL_LT_GT (realaxTheory 36)
value HREAL_LT_LADD (realaxTheory 37)
value HREAL_LT_LEMMA (hrealTheory 66)
value HREAL_LT_NE (realaxTheory 38)
value HREAL_LT_REFL (realaxTheory 39)
value HREAL_LT_TOTAL (hrealTheory 67)
value hreal_mul (hrealTheory 12)
value HREAL_MUL_ASSOC (hrealTheory 68)
value HREAL_MUL_ISACUT (hrealTheory 69)
value HREAL_MUL_LID (hrealTheory 70)
value HREAL_MUL_LINV (hrealTheory 71)
value HREAL_MUL_SYM (hrealTheory 72)
value HREAL_NOZERO (hrealTheory 73)
value hreal_of_real (realaxTheory 5)
value hreal_of_treal (realaxTheory 6)
value HREAL_RDISTRIB (realaxTheory 40)
value hreal_sub (hrealTheory 13)
value HREAL_SUB_ADD (hrealTheory 74)
value HREAL_SUB_ISACUT (hrealTheory 75)
value HREAL_SUP (hrealTheory 76), value hreal_sup (hrealTheory 14)
value HREAL_SUP_ISACUT (hrealTheory 77)
value hreal_TY_DEF (hrealTheory 8)
value hreal_tybij (hrealTheory 15)
structure hrealTheory
value hs (UnicodeChars 140)
value html_escape (PPBackEnd 37)
value html_terminal (PPBackEnd 36)
value html_theory (DB 47)
HOL Thm.hyp (help/Docfiles/Thm.hyp.adoc 0), value hyp (FinalThm 14)
value hyp_frees (FinalThm 19)
value hyp_tyvars (FinalThm 20)
value hypset (FinalThm 15)
HOL Lib.I (help/Docfiles/Lib.I.adoc 0), value I (Lib 13), value I (mlibUseful 26), value i (complexTheory 21)
value i2w_0 (integer_wordTheory 40)
value i2w_def (integer_wordTheory 9)
value i2w_DIV (integer_wordTheory 41)
value i2w_INT_MAX (integer_wordTheory 42)
value i2w_INT_MIN (integer_wordTheory 43)
value i2w_itself_def (basis_emitTheory 30)
value i2w_itself_ind (basis_emitTheory 31)
value i2w_itself_primitive_def (basis_emitTheory 14)
value i2w_minus_1 (integer_wordTheory 45)
value i2w_tm (integer_wordSyntax 4)
value i2w_UINT_MAX (integer_wordTheory 44)
value i2w_w2i (integer_wordTheory 46)
value I_DEF (combinTheory 8)
value I_o_f (tcTheory 20)
value I_o_ID (combinTheory 26)
value I_PRS (quotientTheory 56)
value I_RSP (quotientTheory 57)
value I_THM (combinTheory 25)
value I_tm (combinSyntax 6)
value iBIT_cases (numeralTheory 6)
value iBITWISE (numeral_bitTheory 39)
value iBITWISE_def (numeral_bitTheory 9)
value ics_aux_def (canonicalTheory 15), value ics_aux_def (ringNormTheory 36)
value ics_aux_ok (canonicalTheory 48)
constructor Id (term_grammar 169), type id (DiskFilesHeader 3), type id (KernelTypes 13), type id (SharingTables 4), value id (Subst 4)
value id_compare (KernelSig 10)
value ID_EX_TAC (Q 19)
value Id_O (relationTheory 88)
value ID_SPEC (Q 24)
value ID_SPEC_TAC (Q 33), value ID_SPEC_TAC (Tactic 29)
value id_toString (KernelSig 12)
value iDefine_mk_word_ptree (patricia_castsLib 16)
value IDEM (relationTheory 71)
value IDEM_DEF (relationTheory 8)
value IDEM_RC (relationTheory 72)
value IDEM_RTC (relationTheory 73)
value IDEM_SC (relationTheory 74)
value IDEM_STRORD (relationTheory 75)
value IDEM_TC (relationTheory 76)
value idem_tm (boolSyntax 173)
constructor IDENT (Absyn 12), constructor Ident (term_tokens 3)
value IDENTITY_EQUIV (quotientTheory 51), value identity_equiv (quotient 100)
value IDENTITY_QUOTIENT (quotientTheory 52), value identity_quotient (quotient 155)
value iDIV2 (numeral_bitTheory 10)
type idtable (SharingTables 12)
value iDUB (numeralTheory 7)
value iDUB_NUMERAL (numeral_bitTheory 40)
value iDUB_removal (numeralTheory 25)
value ieee_grammars (ieeeTheory 135)
structure ieeeTheory
value IF_CASES_TAC (Tactic 48)
value IF_EQUALS_OPTION (optionTheory 28)
value IF_NONE_EQUALS_OPTION (optionTheory 29)
value IfCases_def (markerTheory 8)
constructor Iff (mlibTerm 18), value iff (UnicodeChars 115)
constructor Ifx (parse_term 19)
constructor IGNORE (Trace 4)
value IGNORE_BIND_DEF (errorStateMonadTheory 13), value IGNORE_BIND_DEF (state_transformerTheory 8)
value IGNORE_BIND_ESGUARD (errorStateMonadTheory 39)
value IGNORE_BIND_FAIL (errorStateMonadTheory 40)
value iiSUC (numeralTheory 11)
value iLf_def (inftreeTheory 5)
value iLOG2_def (numeral_bitTheory 11)
value IM (complexTheory 5)
value IM_COMPLEX_OF_REAL (complexTheory 219)
value IM_DIV_MODU_ASN_BOUNDS (complexTheory 220)
value IM_DIV_MODU_ASN_SIN (complexTheory 221)
value IM_DIV_MODU_BOUNDS (complexTheory 222)
value IM_MODU_ARG (complexTheory 223)
value IMAGE_11 (pred_setTheory 206)
value IMAGE_11_INFINITE (pred_setTheory 207)
value IMAGE_applied (pred_setTheory 224)
value IMAGE_BIGUNION (pred_setTheory 208)
value IMAGE_COMPOSE (pred_setTheory 209)
value IMAGE_CONG (pred_setTheory 210)
HOL pred_setLib.IMAGE_CONV (help/Docfiles/pred_setLib.IMAGE_CONV.adoc 0), value IMAGE_CONV (PFset_conv 9), value IMAGE_CONV (pred_setLib 11)
value image_countable (pred_setTheory 432)
value IMAGE_DEF (pred_setTheory 18)
value IMAGE_DELETE (pred_setTheory 211)
value IMAGE_EL_count_LENGTH (listTheory 187)
value IMAGE_EMPTY (pred_setTheory 212)
value IMAGE_EQ_EMPTY (pred_setTheory 213)
value IMAGE_EQ_SING (pred_setTheory 214)
value IMAGE_FINITE (pred_setTheory 215)
value IMAGE_FRANGE (finite_mapTheory 186)
value IMAGE_I (util_probTheory 71)
value IMAGE_ID (pred_setTheory 216)
value IMAGE_IMAGE (util_probTheory 72)
value IMAGE_IN (pred_setTheory 217)
value IMAGE_INSERT (pred_setTheory 218)
value IMAGE_INTER (pred_setTheory 219)
value IMAGE_PRS (quotient_pred_setTheory 33)
value IMAGE_SING (measureTheory 80)
value IMAGE_string_to_num (patricia_castsTheory 47)
value IMAGE_SUBSET (pred_setTheory 220)
value IMAGE_SUBSET_gen (pred_setTheory 221)
value IMAGE_SURJ (pred_setTheory 222)
value image_tm (pred_setSyntax 21)
value IMAGE_UNION (pred_setTheory 223)
value imageOrd (totoTheory 17)
value IMAGER_def (quotient_pred_setTheory 9)
value IMAGER_RSP (quotient_pred_setTheory 32)
value IMMEDIATE_EVENT (Past_Temporal_LogicTheory 22), value IMMEDIATE_EVENT (Temporal_LogicTheory 65)
value iMOD_2EXP (numeral_bitTheory 12)
constructor Imp (mlibTerm 18), value imp (Term 9), value imp (UnicodeChars 111)
value IMP_AND_RULE (jbUtils 10)
value IMP_ANTISYM_AX (boolTheory 96)
HOL Drule.IMP_ANTISYM_RULE (help/Docfiles/Drule.IMP_ANTISYM_RULE.adoc 0), value IMP_ANTISYM_RULE (Drule 20)
HOL Drule.IMP_CANON (help/Docfiles/Drule.IMP_CANON.adoc 0), value IMP_CANON (Drule 60)
value IMP_CLAUSES (boolTheory 97)
value IMP_CLAUSES_FX (ConseqConvTheory 21)
value IMP_CLAUSES_TX (ConseqConvTheory 22)
value IMP_CLAUSES_XF (ConseqConvTheory 23)
value IMP_CLAUSES_XT (ConseqConvTheory 24)
value IMP_CLAUSES_XX (ConseqConvTheory 25)
value IMP_CONG (boolTheory 98)
value IMP_CONG_cond (ConseqConvTheory 26)
value IMP_CONG_cond_simple (ConseqConvTheory 27)
value IMP_CONG_conj_strengthen (ConseqConvTheory 28)
value IMP_CONG_conj_weaken (ConseqConvTheory 29)
value IMP_CONG_disj_strengthen (ConseqConvTheory 30)
value IMP_CONG_disj_weaken (ConseqConvTheory 31)
value IMP_CONG_imp_strengthen (ConseqConvTheory 32)
value IMP_CONG_imp_weaken (ConseqConvTheory 33)
value IMP_CONG_simple_imp_strengthen (ConseqConvTheory 34)
value IMP_CONG_simple_imp_weaken (ConseqConvTheory 35)
HOL Drule.IMP_CONJ (help/Docfiles/Drule.IMP_CONJ.adoc 0), value IMP_CONJ (Drule 73)
value IMP_CONJ_THM (boolTheory 99)
HOL reduceLib.IMP_CONV (help/Docfiles/reduceLib.IMP_CONV.adoc 0), value IMP_CONV (Boolconv 7), value IMP_CONV (reduceLib 7)
value IMP_DISJ_1 (HolSmtTheory 17)
value IMP_DISJ_2 (HolSmtTheory 18)
value IMP_DISJ_THM (boolTheory 100)
HOL Drule.IMP_ELIM (help/Docfiles/Drule.IMP_ELIM.adoc 0), value IMP_ELIM (Drule 68)
value IMP_EQ_CANON (Cond_rewr 39)
value IMP_EVERY_LUPDATE (listTheory 188)
value IMP_EXISTS_INTRO (quantHeuristicsTools 35)
value IMP_EXISTS_PRECOND_CANON (ConseqConv 62)
value IMP_EXPAND_CONV (Thm_convs 5)
value IMP_F (boolTheory 101)
value IMP_F_EQ_F (boolTheory 102)
value IMP_F_EQ_F_CONV (Thm_convs 6)
value IMP_FALSE (HolSmtTheory 19)
value IMP_FORALL_CONCLUSION_CANON (ConseqConv 61)
value IMP_FORALL_INTRO (quantHeuristicsTools 36)
value IMP_IMP_CONJ_IMP_CONV (Thm_convs 7)
value IMP_IMPLIES (quotientTheory 53)
value IMP_NEG_CONTRA (quantHeuristicsTheory 60)
value IMP_NEXT (Temporal_LogicTheory 66)
value imp_qp (quantHeuristicsLib 134), value imp_qp (quantHeuristicsLibBase 145)
value IMP_QUANT_CANON (ConseqConv 60)
HOL res_quanLib.IMP_RES_FORALL_CONV (help/Docfiles/res_quanLib.IMP_RES_FORALL_CONV.adoc 0), HOL res_quanTools.IMP_RES_FORALL_CONV (help/Docfiles/res_quanTools.IMP_RES_FORALL_CONV.adoc 0), value IMP_RES_FORALL_CONV (res_quanTools 40)
HOL Tactic.IMP_RES_TAC (help/Docfiles/Tactic.IMP_RES_TAC.adoc 0), value IMP_RES_TAC (Tactic 82), value imp_res_tac (Tactic 83), value imp_res_tac (lcsymtacs 68)
HOL Thm_cont.IMP_RES_THEN (help/Docfiles/Thm_cont.IMP_RES_THEN.adoc 0), value IMP_RES_THEN (Thm_cont 30)
value IMP_SUBST_TAC (jrhUtils 13)
HOL Drule.IMP_TRANS (help/Docfiles/Drule.IMP_TRANS.adoc 0), value IMP_TRANS (Drule 19)
value impl_of (abstraction 14)
HOL boolSyntax.implication (help/Docfiles/boolSyntax.implication.adoc 0), value implication (boolSyntax 10)
value implication_concl_qp (quantHeuristicsLib 116), value implication_concl_qp (quantHeuristicsLibParameters 52)
HOL Rewrite.implicit_rewrites (help/Docfiles/Rewrite.implicit_rewrites.adoc 0), value implicit_rewrites (Ho_Rewrite 6), value implicit_rewrites (Rewrite 11)
value implicit_simpls (RW 21)
value implode (Portable 36)
value IMPLODE_11 (stringTheory 63)
value IMPLODE_def (stringTheory 10)
value IMPLODE_EQ_EMPTYSTRING (stringTheory 65)
value IMPLODE_EQ_THM (stringTheory 66)
value IMPLODE_EQNS (stringTheory 64)
value IMPLODE_EXPLODE (stringTheory 67)
value IMPLODE_EXPLODE_I (stringTheory 68)
value IMPLODE_ONTO (stringTheory 69)
value IMPLODE_STRING (stringTheory 70)
value implode_tm (stringLib 9), value implode_tm (stringSyntax 16)
value IMPORT (canonicalTheory 69), value IMPORT (ringNormTheory 57), value IMPORT (ringTheory 58), value IMPORT (semi_ringTheory 57)
value IN_ABS (pred_setTheory 267)
value in_additive_range (int_arithTheory 49)
value in_aset (DeepSyntaxTheory 25)
value IN_BIGINTER (pred_setTheory 268)
value IN_BIGINTER_IMAGE (util_probTheory 81)
value IN_BIGUNION (pred_setTheory 269)
value IN_BIGUNION_IMAGE (util_probTheory 82)
value in_bset (DeepSyntaxTheory 26)
value IN_bt_to_set (enumeralTheory 62)
value in_class (Lexis 9)
value IN_COMPL (pred_setTheory 270)
value IN_CONSTRAINT (CooperSyntax 53)
HOL pred_setLib.IN_CONV (help/Docfiles/pred_setLib.IN_CONV.adoc 0), value IN_CONV (PFset_conv 5), value IN_CONV (enumTacs 25), value IN_CONV (pred_setLib 7)
value IN_COUNT (pred_setTheory 271)
value IN_CROSS (pred_setTheory 272)
value IN_DEF (boolTheory 19)
value IN_DELETE (pred_setTheory 273)
value IN_DELETE_EQ (pred_setTheory 274)
value IN_DELETER (quotient_pred_setTheory 38)
value IN_DFUNSET (util_probTheory 83)
value IN_DIFF (pred_setTheory 275)
value IN_DISJOINT (pred_setTheory 276)
value in_domain (set_relationTheory 71)
value IN_EQ_UNIV_IMP (util_probTheory 84)
value IN_FDOM_CONV (fmapalTacs 32)
value IN_FDOM_FOLDR_UNION (finite_mapTheory 187)
value IN_FRANGE (finite_mapTheory 188)
value IN_FRANGE_alist_to_fmap_suff (alistTheory 38)
value IN_FRANGE_DOMSUB_suff (finite_mapTheory 189)
value IN_FRANGE_DRESTRICT_suff (finite_mapTheory 190)
value IN_FRANGE_FLOOKUP (finite_mapTheory 191)
value IN_FRANGE_FUNION_suff (finite_mapTheory 192)
value IN_FRANGE_FUPDATE_LIST_suff (finite_mapTheory 193)
value IN_FRANGE_FUPDATE_suff (finite_mapTheory 194)
value IN_FRANGE_o_f_suff (finite_mapTheory 195)
value IN_FUN (quotientTheory 54)
value IN_FUNSET (util_probTheory 85)
value IN_GSPECR (quotient_pred_setTheory 39)
value IN_IMAGE (pred_setTheory 277)
value IN_IMAGER (quotient_pred_setTheory 40)
value IN_INFINITE_NOT_FINITE (pred_setTheory 278)
value IN_INSERT (pred_setTheory 279)
value IN_INSERT_EXPAND (pred_setTheory 280)
value IN_INSERTR (quotient_pred_setTheory 41)
value IN_INTER (pred_setTheory 281)
value IN_LINE_SUM_CONV (Norm_arith 16)
value in_list (jbUtils 24)
value IN_LIST_TO_BAG (containerTheory 24)
value IN_LIST_TO_SET (listTheory 191)
value in_max_set (pred_setTheory 433)
value IN_MEASURABLE (measureTheory 95)
value IN_MEASURABLE_BOREL (measureTheory 96)
value IN_MEASURABLE_BOREL_ABS (measureTheory 97)
value IN_MEASURABLE_BOREL_ADD (measureTheory 98)
value IN_MEASURABLE_BOREL_ALL (measureTheory 99)
value IN_MEASURABLE_BOREL_ALL_MEASURE (measureTheory 100)
value IN_MEASURABLE_BOREL_ALT1 (measureTheory 101)
value IN_MEASURABLE_BOREL_ALT2 (measureTheory 102)
value IN_MEASURABLE_BOREL_ALT3 (measureTheory 103)
value IN_MEASURABLE_BOREL_ALT4 (measureTheory 104)
value IN_MEASURABLE_BOREL_ALT5 (measureTheory 105)
value IN_MEASURABLE_BOREL_ALT6 (measureTheory 106)
value IN_MEASURABLE_BOREL_ALT7 (measureTheory 107)
value IN_MEASURABLE_BOREL_ALT8 (measureTheory 108)
value IN_MEASURABLE_BOREL_ALT9 (measureTheory 109)
value IN_MEASURABLE_BOREL_CMUL (measureTheory 110)
value IN_MEASURABLE_BOREL_CMUL_INDICATOR (measureTheory 111)
value IN_MEASURABLE_BOREL_CONST (measureTheory 112)
value IN_MEASURABLE_BOREL_FN_MINUS (measureTheory 113)
value IN_MEASURABLE_BOREL_FN_PLUS (measureTheory 114)
value IN_MEASURABLE_BOREL_INDICATOR (measureTheory 115)
value IN_MEASURABLE_BOREL_LE (measureTheory 116)
value IN_MEASURABLE_BOREL_LT (measureTheory 117)
value IN_MEASURABLE_BOREL_MAX (measureTheory 118)
value IN_MEASURABLE_BOREL_MONO_SUP (measureTheory 119)
value IN_MEASURABLE_BOREL_MUL (measureTheory 120)
value IN_MEASURABLE_BOREL_MUL_INDICATOR (measureTheory 121)
value IN_MEASURABLE_BOREL_MUL_INDICATOR_EQ (measureTheory 122)
value IN_MEASURABLE_BOREL_NEGINF (measureTheory 123)
value IN_MEASURABLE_BOREL_PLUS_MINUS (measureTheory 124)
value IN_MEASURABLE_BOREL_POS_SIMPLE_FN (measureTheory 125)
value IN_MEASURABLE_BOREL_POW (measureTheory 126)
value IN_MEASURABLE_BOREL_SQR (measureTheory 127)
value IN_MEASURABLE_BOREL_SUB (measureTheory 128)
value IN_MEASURABLE_BOREL_SUM (measureTheory 129)
value IN_MEASURE_PRESERVING (measureTheory 130)
value IN_node (enumeralTheory 63)
value IN_NUMSET_OF_PTREE (patriciaTheory 67)
value IN_o (util_probTheory 89)
value IN_PAIR (util_probTheory 86)
value IN_PL_drop (pathTheory 42)
value IN_POW (pred_setTheory 282)
value IN_PREIMAGE (util_probTheory 87)
value IN_PROD_SETS (util_probTheory 88)
value IN_PRS (quotient_pred_setTheory 42)
value IN_psfis (lebesgueTheory 31)
value IN_psfis_eq (lebesgueTheory 32)
value in_ptree (patriciaLib 27)
value IN_PTREE_def (patriciaTheory 16)
value IN_PTREE_EMPTY (patriciaTheory 68)
value IN_PTREE_INSERT_PTREE (patriciaTheory 69)
value IN_PTREE_OF_NUMSET (patriciaTheory 70)
value IN_PTREE_OF_NUMSET_EMPTY (patriciaTheory 71)
value IN_PTREE_REMOVE (patriciaTheory 72)
value in_ptree_tm (patriciaSyntax 25)
value IN_PTREE_UNION_PTREE (patriciaTheory 73)
value IN_PTREEs_def (patricia_castsTheory 16)
value in_ptrees_tm (patricia_castsSyntax 36)
value IN_PTREEw_def (patricia_castsTheory 17)
value in_ptreew_tm (patricia_castsSyntax 24)
value in_range (set_relationTheory 72)
value IN_RDOM (relationTheory 83)
value IN_RDOM_DELETE (relationTheory 84)
value IN_RDOM_RRESTRICT (relationTheory 85)
value IN_RDOM_RUNION (relationTheory 86)
value in_rel_to_reln (set_relationTheory 73)
value IN_RESPECTS (quotientTheory 55)
value IN_RRANGE (relationTheory 87)
value in_rrestrict (set_relationTheory 74)
value IN_RSP (quotient_pred_setTheory 43)
value IN_SET_MAP (quotient_pred_setTheory 44)
value IN_SET_OF_BAG (bagTheory 189)
value IN_SIGMA (measureTheory 131)
value IN_SING (pred_setTheory 283)
value in_subtractive_range (int_arithTheory 50)
value IN_tm (boolSyntax 27), value in_tm (pred_setSyntax 10)
value IN_UNION (pred_setTheory 284)
value IN_UNIV (pred_setTheory 285)
value inc (Portable 33)
value inc_count (Count 50)
constructor INCONSISTENT (HOLPP 9)
value incorporate_consts (Theory 108)
value incorporate_types (Theory 104)
value incr_build (fmapalTheory 55)
value incr_flat (fmapalTheory 56)
value incr_merge (fmapalTheory 137)
value incr_merge_curried (fmapalTheory 57)
value incr_merge_ind (fmapalTheory 138)
value incr_merge_tupled_primitive (fmapalTheory 58)
value incr_sbuild (enumeralTheory 43)
value incr_smerge (enumeralTheory 103)
value incr_smerge_curried (enumeralTheory 44)
value incr_smerge_ind (enumeralTheory 105)
value incr_smerge_OL (enumeralTheory 104)
value incr_smerge_tupled_primitive (enumeralTheory 45)
value incr_sort (fmapalTheory 59)
value incr_sort_CONV (fmapalTacs 11)
value incr_ssort (enumeralTheory 46)
value INCREASING (measureTheory 81)
value INCREASING_ADDITIVE_SUMMABLE (measureTheory 82)
value increasing_def (measureTheory 14)
value INCREASING_PROB (probabilityTheory 41)
value INCREASING_SEQ (util_probTheory 73)
HOL Type.ind (help/Docfiles/Type.ind.adoc 0), value ind (FinalType 30)
value iNd_def (inftreeTheory 6)
value iNd_is_tree (inftreeTheory 15)
value ind_of (Defn 31)
value ind_suffix (Defn 11)
value ind_type_grammars (ind_typeTheory 49)
structure ind_types
structure ind_typeTheory
structure IndDefLib
HOL IndDefRules (help/Docfiles/IndDefRules.adoc 0), structure IndDefRules
value indep_def (probabilityTheory 11)
value INDEP_EMPTY (probabilityTheory 42)
value INDEP_REFL (probabilityTheory 43)
value indep_rv_def (probabilityTheory 12)
value INDEP_SPACE (probabilityTheory 44)
value INDEP_SYM (probabilityTheory 45)
HOL Lib.index (help/Docfiles/Lib.index.adoc 0), value index (Lib 65), value index (Net 19), value index (Raw 12), value index (mlibUseful 63)
value index_11 (quoteTheory 22)
value index_Axiom (quoteTheory 23)
value index_bit0 (fcpTheory 80)
value index_bit1 (fcpTheory 81)
value index_case_cong (quoteTheory 24)
value index_case_def (quoteTheory 6)
value index_comp (fcpTheory 82)
value index_compare_curried_def (quoteTheory 7)
value index_compare_def (quoteTheory 25)
value index_compare_ind (quoteTheory 26)
value index_compare_tupled_primitive_def (quoteTheory 8)
value INDEX_CONV (fcpLib 7)
value index_distinct (quoteTheory 27)
value INDEX_FIND_def (listTheory 21)
value index_induction (quoteTheory 28)
value INDEX_LESS_PRIMES (dividesTheory 25)
value index_lt_def (quoteTheory 9)
value index_nchotomy (quoteTheory 29)
value INDEX_OF_def (listTheory 22)
value index_one (fcpTheory 83)
value index_size_def (quoteTheory 10)
value index_sum (fcpTheory 84)
value index_to_num (fcpLib 5)
value index_TY_DEF (quoteTheory 5)
value index_type (fcpLib 4)
value indicator_fn_def (measureTheory 15)
value INDICATOR_FN_MUL_INTER (measureTheory 83)
value indicator_fn_split (measureTheory 233)
value indicator_fn_suminf (measureTheory 234)
HOL BasicProvers.Induct (help/Docfiles/BasicProvers.Induct.adoc 0), HOL bossLib.Induct (help/Docfiles/bossLib.Induct.adoc 0), value Induct (BasicProvers 62), value Induct (bossLib 34)
HOL BasicProvers.Induct_on (help/Docfiles/BasicProvers.Induct_on.adoc 0), HOL bossLib.Induct_on (help/Docfiles/bossLib.Induct_on.adoc 0), value Induct_on (BasicProvers 64), value Induct_on (bossLib 37)
HOL numLib.INDUCT_TAC (help/Docfiles/numLib.INDUCT_TAC.adoc 0), value INDUCT_TAC (numLib 19)
HOL Prim_rec.INDUCT_THEN (help/Docfiles/Prim_rec.INDUCT_THEN.adoc 0), value INDUCT_THEN (Prim_rec 34)
HOL wordsLib.Induct_word (help/Docfiles/wordsLib.Induct_word.adoc 0), value Induct_word (wordsLib 55)
structure Induction, value INDUCTION (numTheory 14)
value induction_of (TypeBase 20), value induction_of (TypeBasePure 46)
value induction_of0 (TypeBase 38), value induction_of0 (TypeBasePure 65)
value INDUCTION_WF_THM (relationTheory 77)
value INDUCTIVE_INVARIANT_DEF (relationTheory 9)
value INDUCTIVE_INVARIANT_ON_DEF (relationTheory 10)
value INDUCTIVE_INVARIANT_ON_WFREC (relationTheory 78)
value INDUCTIVE_INVARIANT_WFREC (relationTheory 79)
structure InductiveDefinition
value INEQS_FALSE_CONV (Solve 5)
value INF (Sup_Inf 14)
value INF_CLOSE (util_probTheory 76)
value inf_cminus (extrealTheory 187)
value inf_const (extrealTheory 188)
value inf_const_alt (extrealTheory 189)
value inf_const_over_set (extrealTheory 190)
value inf_def (realTheory 8)
value INF_DEF_ALT (util_probTheory 77)
value inf_eq (extrealTheory 191)
value INF_GREATER (util_probTheory 78)
value INF_LE (util_probTheory 79), value inf_le (extrealTheory 192)
value inf_le_imp (extrealTheory 193)
value inf_lt_infty (extrealTheory 194)
value INF_MEASURE_AGREES (measureTheory 84)
value INF_MEASURE_CLOSE (measureTheory 85)
value INF_MEASURE_COUNTABLY_SUBADDITIVE (measureTheory 86)
value inf_measure_def (measureTheory 16)
value INF_MEASURE_EMPTY (measureTheory 87)
value INF_MEASURE_INCREASING (measureTheory 88)
value INF_MEASURE_LE (measureTheory 89)
value INF_MEASURE_NONEMPTY (measureTheory 90)
value INF_MEASURE_OUTER (measureTheory 91)
value INF_MEASURE_POS (measureTheory 92)
value INF_MEASURE_POS0 (measureTheory 93)
value INF_MEASURE_POSITIVE (measureTheory 94)
value inf_min (extrealTheory 195)
value inf_seq (extrealTheory 196)
value inf_suc (extrealTheory 197)
type inference (mlibKernel 14), value inference (mlibThm 26)
type inference' (mlibThm 13)
type inference_collection (quantHeuristicsLibBase 112)
value inference_qp (quantHeuristicsLib 136), value inference_qp (quantHeuristicsLibBase 147)
value inference_to_string (mlibThm 75)
value inference_to_string' (mlibThm 72)
value inferior_overload_on (Parse 105)
value INFINITE_DEF (pred_setTheory 225)
value INFINITE_DIFF_FINITE (pred_setTheory 226)
value INFINITE_EXPLICIT_ENUMERATE (util_probTheory 74)
value INFINITE_INHAB (pred_setTheory 227)
value INFINITE_INJ (util_probTheory 75)
value INFINITE_INT_UNIV (integerTheory 42)
value INFINITE_LIST_UNIV (listTheory 189)
value infinite_num_inj (pred_setTheory 434)
value INFINITE_NUM_UNIV (pred_setTheory 228)
value INFINITE_PAIR_UNIV (pred_setTheory 229)
value infinite_PL (pathTheory 95)
value infinite_pow_uncountable (pred_setTheory 435)
value INFINITE_PRIMES (dividesTheory 26)
value INFINITE_REAL_UNIV (realTheory 53)
value infinite_rest (pred_setTheory 436)
value INFINITE_SUBSET (pred_setTheory 230)
value INFINITE_UNIV (pred_setTheory 231)
value Infinity (ieeeTheory 9)
value INFINITY_AX (boolTheory 7)
value INFINITY_IS_INFINITY (floatTheory 70)
value INFINITY_NOT_NAN (floatTheory 71)
constructor INFIX (term_grammar 74), constructor INFIX (type_grammar 5), constructor Infix (term_grammar 83), value Infix (Parse 237)
type infix_rule (term_grammar 60)
value infixes (mlibTerm 129)
type infixities (mlibParser 40), type infixities (mlibTerm 11)
value Infixl (Parse 235)
value Infixr (Parse 236)
value info (mlibUnits 21)
value info_for_name (Overload 37)
constructor Infs (mlibSolver 54)
value inftree_11 (inftreeTheory 16)
value inftree_Axiom (inftreeTheory 17)
value inftree_bijections (inftreeTheory 8)
value inftree_case_def (inftreeTheory 9)
value inftree_distinct (inftreeTheory 18)
value inftree_grammars (inftreeTheory 30)
value inftree_ind (inftreeTheory 19)
value inftree_nchotomy (inftreeTheory 20)
value inftree_rec_def (inftreeTheory 10)
value inftree_TY_DEF (inftreeTheory 7)
structure inftreeTheory
value init_casesplit_munger (term_pp 12)
type init_data (mlibSolver 77)
value initial_goal (Manager 35), value initial_goal (goalStack 14), value initial_goal (proofManagerLib 47)
value initial_proofs (Manager 50)
value initial_pstack (parse_term 6)
value INITIALISATION (Past_Temporal_LogicTheory 23)
value initialise_typrinter (type_grammar 47)
value initialize (mlibSolver 79)
value initialValue (History 9)
value InitPoint (Past_Temporal_LogicTheory 5)
value INJ_CARD (pred_setTheory 233)
value INJ_COMPOSE (pred_setTheory 234)
value inj_countable (pred_setTheory 437)
value INJ_DEF (pred_setTheory 19)
value INJ_DELETE (pred_setTheory 235)
value INJ_EMPTY (pred_setTheory 236)
value INJ_ID (pred_setTheory 237)
value INJ_IFF (pred_setTheory 238)
value INJ_IMAGE_BIJ (util_probTheory 80)
value inj_image_countable_IFF (pred_setTheory 438)
value INJ_INL (pred_setTheory 239)
value INJ_INR (pred_setTheory 240)
value INJ_INSERT (pred_setTheory 241)
value INJ_INVERSE2 (ind_typeTheory 35)
value INJ_MAP_EQ (listTheory 190)
value INJ_SUBSET (pred_setTheory 242)
value inj_surj (pred_setTheory 439)
value inj_tm (pred_setSyntax 38)
value INJA (ind_typeTheory 9)
value INJA_INJ (ind_typeTheory 31)
value INJECTIVE_IMAGE_FINITE (pred_setTheory 232)
value INJF (ind_typeTheory 10)
value INJF_INJ (ind_typeTheory 32)
value INJN (ind_typeTheory 11)
value INJN_INJ (ind_typeTheory 33)
value INJP (ind_typeTheory 12)
value INJP_INJ (ind_typeTheory 34)
constructor INL (mlibUseful 161), constructor INL (sumSyntax 39), value INL (sumTheory 21)
value INL_11 (sumTheory 22)
value INL_DEF (sumTheory 5)
value INL_NEQ_ELIM (quantHeuristicsTheory 61)
value INL_PRS (quotient_sumTheory 9)
value INL_RSP (quotient_sumTheory 10)
value inl_tm (sumSyntax 4)
value input_line (Portable 68)
constructor INR (mlibUseful 161), constructor INR (sumSyntax 39), value INR (sumTheory 23)
value INR_11 (sumTheory 24)
value INR_DEF (sumTheory 6)
value INR_INL_11 (sumTheory 25)
value INR_NEQ_ELIM (quantHeuristicsTheory 62)
value INR_neq_INL (sumTheory 26)
value INR_PRS (quotient_sumTheory 11)
value INR_RSP (quotient_sumTheory 12)
value inr_tm (sumSyntax 5)
HOL Lib.insert (help/Docfiles/Lib.insert.adoc 0), value insert (ConstMapML 10), value insert (KernelSig 22), value insert (LVTermNet 9), value insert (Lib 66), value insert (Net 17), value insert (Raw 10), value insert (Redblackmap 10), value insert (TypeBasePure 84), value insert (TypeNet 8), value insert (mlibLiteralnet 20), value insert (mlibMultiset 11), value insert (mlibTermnet 19), value insert (mlibUseful 78)
value INSERT_applied (pred_setTheory 254)
value INSERT_COMM (pred_setTheory 243)
value insert_compute (sptreeTheory 59)
value insert_cons (ConstMapML 11)
HOL pred_setLib.INSERT_CONV (help/Docfiles/pred_setLib.INSERT_CONV.adoc 0), value INSERT_CONV (PFset_conv 8), value INSERT_CONV (pred_setLib 10)
value insert_curried_def (sptreeTheory 11)
value INSERT_DEF (pred_setTheory 20), value insert_def (sptreeTheory 60)
value INSERT_DELETE (pred_setTheory 244)
value INSERT_DIFF (pred_setTheory 245)
value INSERT_EQ_SING (pred_setTheory 246)
value insert_ind (sptreeTheory 61)
value INSERT_INSERT (pred_setTheory 247)
value INSERT_INTER (pred_setTheory 248)
value insert_mk_wf (sptreeTheory 62)
value insert_notEmpty (sptreeTheory 63)
value INSERT_PRS (quotient_pred_setTheory 35)
value insert_ptree (patriciaLib 28)
value INSERT_PTREE_def (patriciaTheory 15)
value INSERT_PTREE_IS_PTREE (patriciaTheory 66)
value insert_ptree_tm (patriciaSyntax 26)
value INSERT_PTREEs_def (patricia_castsTheory 14)
value insert_ptrees_tm (patricia_castsSyntax 37)
value INSERT_PTREEw_def (patricia_castsTheory 15)
value insert_ptreew_tm (patricia_castsSyntax 25)
value INSERT_SING_UNION (pred_setTheory 249)
value INSERT_SUBSET (pred_setTheory 250)
value insert_tm (pred_setSyntax 13), value insert_tm (sptreeSyntax 23)
value insert_tupled_primitive_def (sptreeTheory 12)
value INSERT_UNION (pred_setTheory 251), value insert_union (sptreeTheory 64)
value INSERT_UNION_EQ (pred_setTheory 252)
value INSERT_UNIV (pred_setTheory 253)
value insertList (Redblackmap 11)
value INSERTR_def (quotient_pred_setTheory 10)
value INSERTR_RSP (quotient_pred_setTheory 34)
HOL Thm.INST (help/Docfiles/Thm.INST.adoc 0), HOL Term.inst (help/Docfiles/Term.inst.adoc 0), constructor Inst (Count 11), constructor Inst (mlibKernel 14), value INST (FinalThm 56), value INST (Q 47), value INST (hol88Lib 41), value INST (mlibClause 61), value INST (mlibKernel 23), value inst (FinalTerm 62), value inst (hol88Lib 37)
constructor Inst' (mlibThm 13)
value inst_defn (Defn 39)
value inst_fcp_lengths (fcpLib 13)
value inst_filter_qp (quantHeuristicsLibBase 143)
type inst_infos (abstraction 21)
value INST_QUANT_CONV (quantHeuristicsLib 44), value INST_QUANT_CONV (quantHeuristicsLibBase 227)
value inst_thm_fun (abstraction 30)
HOL Drule.INST_TT_HYPS (help/Docfiles/Drule.INST_TT_HYPS.adoc 0), value INST_TT_HYPS (Drule 77)
value INST_TY (matchTools 17)
HOL Drule.INST_TY_TERM (help/Docfiles/Drule.INST_TY_TERM.adoc 0), value INST_TY_TERM (Drule 75), value INST_TY_TERM (hol88Lib 43)
HOL Thm.INST_TYPE (help/Docfiles/Thm.INST_TYPE.adoc 0), value INST_TYPE (FinalThm 32), value INST_TYPE (Q 51), value INST_TYPE (hol88Lib 42)
value inst_type_dterm (clauses 23)
HOL wordsLib.inst_word_lengths (help/Docfiles/wordsLib.inst_word_lengths.adoc 0), value inst_word_lengths (wordsLib 80)
structure Instance
HOL Arith.INSTANCE_T_CONV (help/Docfiles/Arith.INSTANCE_T_CONV.adoc 0), value INSTANCE_T_CONV (Arith 10), value INSTANCE_T_CONV (Instance 2)
value instantiation_qp (quantHeuristicsLib 133), value instantiation_qp (quantHeuristicsLibBase 144)
type instream (Portable 3)
constructor InstType (Count 11)
type int (Arbintcore 3), type int (Arith_cons 3), type int (Int_extra 2), type int (Norm_arith 2), type int (Norm_ineqs 2), type int (Rationals 2), type int (Sol_ranges 2), type int (Solve_ineqs 2), type int (Sup_Inf 2), type int (Term_coeffs 2), type int (mlibArbint 5), type int (mlibOmegaint 5), value INT (integerTheory 43)
value INT_0 (integerTheory 44), value int_0 (integerTheory 11)
value INT_1 (integerTheory 45), value int_1 (integerTheory 12)
value INT_10 (integerTheory 46)
value INT_ABS (integerTheory 5)
value INT_ABS_ABS (integerTheory 47)
value INT_ABS_CALCULATE_0 (intExtensionTheory 8)
value INT_ABS_CALCULATE_NEG (intExtensionTheory 9)
value INT_ABS_CALCULATE_POS (intExtensionTheory 10)
value int_ABS_def (integerTheory 13)
value INT_ABS_EQ (integerTheory 48)
value INT_ABS_EQ0 (integerTheory 49)
value INT_ABS_EQ_ID (integerTheory 50)
value INT_ABS_LE (integerTheory 51)
value INT_ABS_LE0 (integerTheory 52)
value INT_ABS_LT (integerTheory 53)
value INT_ABS_LT0 (integerTheory 54)
value INT_ABS_MUL (integerTheory 55)
value INT_ABS_NEG (integerTheory 56)
value INT_ABS_NOT0POS (intExtensionTheory 11)
value INT_ABS_NUM (integerTheory 57)
value INT_ABS_POS (integerTheory 58)
value INT_ABS_QUOT (integerTheory 59)
value int_ABS_REP_CLASS (integerTheory 347)
value INT_AC_ss (intSimps 24)
value INT_ADD (integerTheory 60), value int_add (integerTheory 16), value int_add (patriciaLib 34)
value INT_ADD2_SUB2 (integerTheory 61)
value INT_ADD_AC_ss (intSimps 23)
value INT_ADD_ASSOC (integerTheory 62)
value INT_ADD_CALCULATE (integerTheory 63)
value INT_ADD_COMM (integerTheory 64)
value INT_ADD_DIV (integerTheory 65)
value INT_ADD_LID (integerTheory 66)
value INT_ADD_LID_UNIQ (integerTheory 67)
value INT_ADD_LINV (integerTheory 68)
value int_add_list (patriciaLib 35)
value INT_ADD_REDUCE (integerTheory 69)
value INT_ADD_RID (integerTheory 70)
value INT_ADD_RID_UNIQ (integerTheory 71)
value INT_ADD_RINV (integerTheory 72)
value INT_ADD_SUB (integerTheory 73)
value INT_ADD_SUB2 (integerTheory 74)
value INT_ADD_SYM (integerTheory 75)
value int_and_def (int_bitwiseTheory 9)
value int_arith_grammars (int_arithTheory 76)
value INT_ARITH_ss (intLib 5), value INT_ARITH_ss (intSimps 27)
structure int_arithTheory
value int_bijections (integerTheory 17)
value int_bit_and (int_bitwiseTheory 25)
value int_bit_bitwise (int_bitwiseTheory 26)
value int_bit_def (int_bitwiseTheory 10)
value int_bit_equiv (int_bitwiseTheory 27)
value int_bit_int_of_bits (int_bitwiseTheory 28)
value int_bit_not (int_bitwiseTheory 29)
value int_bit_or (int_bitwiseTheory 30)
value int_bit_shift_left (int_bitwiseTheory 31)
value int_bit_shift_right (int_bitwiseTheory 32)
value int_bit_xor (int_bitwiseTheory 33)
value int_bitwise_def (int_bitwiseTheory 11)
value int_bitwise_grammars (int_bitwiseTheory 40)
structure int_bitwiseTheory
value INT_BOUND_ORDER (integer_wordTheory 21)
value INT_CALCEQ_TAC (intExtensionLib 11)
value int_calculate (integerRingTheory 26)
value INT_CEILING_def (intrealTheory 5)
value INT_CEILING_tm (intrealSyntax 9)
value int_compset (intReduce 5), value int_compset (intSimps 5)
value INT_DIFFSQ (integerTheory 76)
value INT_DISCRETE (integerTheory 77)
value INT_DIV (integerTheory 78), value int_div (integerTheory 18)
value INT_DIV_0 (integerTheory 95)
value INT_DIV_1 (integerTheory 96)
value INT_DIV_CALCULATE (integerTheory 97)
value INT_DIV_FORALL_P (integerTheory 98)
value INT_DIV_ID (integerTheory 99)
value INT_DIV_LMUL (integerTheory 100)
value INT_DIV_MUL_ID (integerTheory 101)
value INT_DIV_NEG (integerTheory 102)
value INT_DIV_P (integerTheory 103)
value INT_DIV_REDUCE (integerTheory 104)
value INT_DIV_RMUL (integerTheory 105)
value INT_DIV_UNIQUE (integerTheory 106)
value INT_DIVIDES (integerTheory 6)
value INT_DIVIDES_0 (integerTheory 79)
value INT_DIVIDES_1 (integerTheory 80)
value INT_DIVIDES_LADD (integerTheory 81)
value INT_DIVIDES_LMUL (integerTheory 82)
value INT_DIVIDES_LRMUL (int_arithTheory 10)
value INT_DIVIDES_LSUB (integerTheory 83)
value INT_DIVIDES_MOD0 (integerTheory 84)
value INT_DIVIDES_MUL (integerTheory 85)
value INT_DIVIDES_MUL_BOTH (integerTheory 86)
value INT_DIVIDES_NEG (integerTheory 87)
value INT_DIVIDES_RADD (integerTheory 88)
value INT_DIVIDES_REDUCE (integerTheory 89)
value INT_DIVIDES_REFL (integerTheory 90)
value INT_DIVIDES_RELPRIME_MUL (int_arithTheory 11)
value INT_DIVIDES_RMUL (integerTheory 91)
value INT_DIVIDES_RSUB (integerTheory 92)
value INT_DIVIDES_TRANS (integerTheory 93)
value INT_DIVISION (integerTheory 94)
value INT_DOUBLE (integerTheory 107)
value INT_ENTIRE (integerTheory 108)
value INT_EQ_CALCULATE (integerTheory 109)
value INT_EQ_IMP_LE (integerTheory 110)
value INT_EQ_LADD (integerTheory 111)
value INT_EQ_LMUL (integerTheory 112)
value INT_EQ_LMUL2 (integerTheory 113)
value INT_EQ_LMUL_IMP (integerTheory 114)
value INT_EQ_NEG (integerTheory 115)
value INT_EQ_RADD (integerTheory 116)
value INT_EQ_REDUCE (integerTheory 117)
value INT_EQ_RMUL (integerTheory 118)
value INT_EQ_RMUL_EXP (intExtensionTheory 12)
value INT_EQ_RMUL_IMP (integerTheory 119)
value INT_EQ_SUB_LADD (integerTheory 120)
value INT_EQ_SUB_RADD (integerTheory 121)
value int_eq_tm (intSyntax 18)
value INT_EXP (integerTheory 122), value int_exp (integerTheory 19)
value INT_EXP_ADD_EXPONENTS (integerTheory 123)
value INT_EXP_CALCULATE (integerTheory 124)
value INT_EXP_EQ0 (integerTheory 125)
value INT_EXP_MOD (integerTheory 126)
value INT_EXP_MULTIPLY_EXPONENTS (integerTheory 127)
value INT_EXP_NEG (integerTheory 128)
value INT_EXP_REDUCE (integerTheory 129)
value INT_EXP_SUBTRACT_EXPONENTS (integerTheory 130)
structure Int_extra
value INT_FLOOR_def (intrealTheory 6)
value INT_FLOOR_tm (intrealSyntax 8)
value int_ge (integerTheory 20)
value INT_GE_CALCULATE (integerTheory 131)
value INT_GE_REDUCE (integerTheory 132)
value int_gt (integerTheory 21)
value INT_GT0_CONV (fracUtils 13)
value INT_GT0_IMP_NOT0 (intExtensionTheory 13)
value INT_GT_CALCULATE (integerTheory 133)
value INT_GT_REDUCE (integerTheory 134)
value INT_GT_RMUL_EXP (intExtensionTheory 14)
value int_in_ptree (patriciaLib 37)
value INT_INJ (integerTheory 135)
value int_injection (intSyntax 28)
value int_insert_ptree (patriciaLib 38)
value int_interp_p_def (integerRingTheory 5)
value int_is_ring (integerRingTheory 27)
value INT_LDISTRIB (integerTheory 136)
value INT_LE (integerTheory 137), value int_le (integerTheory 22)
value INT_LE_01 (integerTheory 144)
value INT_LE_ADD (integerTheory 145)
value INT_LE_ADD2 (integerTheory 146)
value INT_LE_ADDL (integerTheory 147)
value INT_LE_ADDR (integerTheory 148)
value INT_LE_ANTISYM (integerTheory 149)
value INT_LE_CALCULATE (integerTheory 150)
value INT_LE_DOUBLE (integerTheory 151)
value INT_LE_LADD (integerTheory 152)
value INT_LE_LT (integerTheory 153)
value INT_LE_LT1 (integerTheory 154)
value INT_LE_MONO (integerTheory 155)
value INT_LE_MUL (integerTheory 156)
value INT_LE_NEG (integerTheory 157)
value INT_LE_NEGL (integerTheory 158)
value INT_LE_NEGR (integerTheory 159)
value INT_LE_NEGTOTAL (integerTheory 160)
value INT_LE_RADD (integerTheory 161)
value INT_LE_REDUCE (integerTheory 162)
value INT_LE_REFL (integerTheory 163)
value INT_LE_SQUARE (integerTheory 164)
value INT_LE_SUB_LADD (integerTheory 165)
value INT_LE_SUB_RADD (integerTheory 166)
value INT_LE_TOTAL (integerTheory 167)
value INT_LE_TRANS (integerTheory 168)
value INT_LESS_MOD (integerTheory 138)
value INT_LET_ADD (integerTheory 139)
value INT_LET_ADD2 (integerTheory 140)
value INT_LET_ANTISYM (integerTheory 141)
value INT_LET_TOTAL (integerTheory 142)
value INT_LET_TRANS (integerTheory 143)
value INT_LINEAR_GCD (int_arithTheory 12)
value INT_LNEG_UNIQ (integerTheory 169)
value INT_LT (integerTheory 170), value int_lt (integerTheory 23)
value INT_LT_01 (integerTheory 176)
value INT_LT_ADD (integerTheory 177)
value INT_LT_ADD1 (integerTheory 178)
value INT_LT_ADD2 (integerTheory 179)
value INT_LT_ADD_NEG (intExtensionTheory 15)
value INT_LT_ADD_NUMERAL (int_arithTheory 13)
value INT_LT_ADD_SUB (integerTheory 184)
value INT_LT_ADDL (integerTheory 180)
value INT_LT_ADDNEG (integerTheory 181)
value INT_LT_ADDNEG2 (integerTheory 182)
value INT_LT_ADDR (integerTheory 183)
value INT_LT_ANTISYM (integerTheory 185)
value INT_LT_CALCULATE (integerTheory 186)
value INT_LT_GT (integerTheory 187)
value INT_LT_IMP_LE (integerTheory 188)
value INT_LT_IMP_NE (integerTheory 189)
value INT_LT_LADD (integerTheory 190)
value INT_LT_LADD_IMP (integerTheory 191)
value INT_LT_LE (integerTheory 192)
value INT_LT_LE1 (integerTheory 193)
value INT_LT_MONO (integerTheory 194)
value INT_LT_MUL (integerTheory 195)
value INT_LT_MUL2 (integerTheory 196)
value INT_LT_NEG (integerTheory 197)
value INT_LT_NEGTOTAL (integerTheory 198)
value INT_LT_NZ (integerTheory 199)
value INT_LT_RADD (integerTheory 200)
value INT_LT_REDUCE (integerTheory 201)
value INT_LT_REFL (integerTheory 202)
value INT_LT_RMUL_EXP (intExtensionTheory 16)
value INT_LT_SUB_LADD (integerTheory 203)
value INT_LT_SUB_RADD (integerTheory 204)
value INT_LT_TOTAL (integerTheory 205)
value INT_LT_TRANS (integerTheory 206)
value INT_LTE_ADD (integerTheory 171)
value INT_LTE_ADD2 (integerTheory 172)
value INT_LTE_ANTSYM (integerTheory 173)
value INT_LTE_TOTAL (integerTheory 174)
value INT_LTE_TRANS (integerTheory 175)
value INT_MAX (integerTheory 7), value INT_MAX (integer_wordTheory 22)
value INT_MAX_def (integer_wordTheory 5), value INT_MAX_def (wordsTheory 7)
value INT_MAX_LT (integerTheory 207)
value INT_MAX_LT_DIMWORD (wordsTheory 138)
value INT_MAX_MONOTONIC (integer_wordTheory 23)
value INT_MAX_NUM (integerTheory 208)
value int_max_tm (integer_wordSyntax 7), value int_max_tm (wordsSyntax 32)
value INT_MIN (integerTheory 8), value INT_MIN (integer_wordTheory 24)
value INT_MIN_1 (wordsTheory 139)
value INT_MIN_10 (wordsTheory 140)
value INT_MIN_11 (wordsTheory 141)
value INT_MIN_12 (wordsTheory 142)
value INT_MIN_128 (wordsTheory 143)
value INT_MIN_16 (wordsTheory 144)
value INT_MIN_2 (wordsTheory 145)
value INT_MIN_20 (wordsTheory 146)
value INT_MIN_24 (wordsTheory 147)
value INT_MIN_28 (wordsTheory 148)
value INT_MIN_3 (wordsTheory 149)
value INT_MIN_30 (wordsTheory 150)
value INT_MIN_32 (wordsTheory 151)
value INT_MIN_4 (wordsTheory 152)
value INT_MIN_48 (wordsTheory 153)
value INT_MIN_5 (wordsTheory 154)
value INT_MIN_6 (wordsTheory 155)
value INT_MIN_64 (wordsTheory 156)
value INT_MIN_7 (wordsTheory 157)
value INT_MIN_8 (wordsTheory 158)
value INT_MIN_9 (wordsTheory 159)
value INT_MIN_96 (wordsTheory 160)
value INT_MIN_def (integer_wordTheory 6), value INT_MIN_def (wordsTheory 8)
value INT_MIN_LT (integerTheory 209)
value INT_MIN_LT_DIMWORD (wordsTheory 161)
value INT_MIN_MONOTONIC (integer_wordTheory 25)
value INT_MIN_NUM (integerTheory 210)
value INT_MIN_SUM (wordsTheory 162)
value int_min_tm (integer_wordSyntax 6), value int_min_tm (wordsSyntax 33)
value INT_MOD (integerTheory 211), value int_mod (integerTheory 24)
value INT_MOD0 (integerTheory 212)
value INT_MOD_1 (integerTheory 213)
value INT_MOD_ADD_MULTIPLES (integerTheory 214)
value INT_MOD_BOUNDS (integerTheory 215)
value INT_MOD_CALCULATE (integerTheory 216)
value INT_MOD_COMMON_FACTOR (integerTheory 217)
value INT_MOD_EQ0 (integerTheory 218)
value INT_MOD_FORALL_P (integerTheory 219)
value INT_MOD_ID (integerTheory 220)
value INT_MOD_MINUS1 (integerTheory 221)
value INT_MOD_MOD (integerTheory 222)
value INT_MOD_NEG (integerTheory 223)
value INT_MOD_NEG_NUMERATOR (integerTheory 224)
value INT_MOD_P (integerTheory 225)
value INT_MOD_PLUS (integerTheory 226)
value INT_MOD_REDUCE (integerTheory 227)
value INT_MOD_SUB (integerTheory 228)
value INT_MOD_UNIQUE (integerTheory 229)
value INT_MUL (integerTheory 230), value int_mul (integerTheory 25)
value INT_MUL_AC_ss (intSimps 22)
value INT_MUL_ASSOC (integerTheory 231)
value INT_MUL_CALCULATE (integerTheory 232)
value INT_MUL_COMM (integerTheory 233)
value INT_MUL_DIV (integerTheory 234)
value INT_MUL_EQ_1 (integerTheory 235)
value INT_MUL_LID (integerTheory 236)
value INT_MUL_LZERO (integerTheory 237)
value INT_MUL_POS_SIGN (intExtensionTheory 17)
value INT_MUL_QUOT (integerTheory 238)
value INT_MUL_REDUCE (integerTheory 239)
value INT_MUL_RID (integerTheory 240)
value INT_MUL_RZERO (integerTheory 241)
value INT_MUL_SIGN_CASES (integerTheory 242)
value INT_MUL_SYM (integerTheory 243)
value INT_NE_IMP_LTGT (intExtensionTheory 18)
value int_neg (integerTheory 26)
value INT_NEG_0 (integerTheory 245)
value INT_NEG_ADD (integerTheory 246)
value INT_NEG_EQ (integerTheory 247)
value INT_NEG_EQ0 (integerTheory 248)
value INT_NEG_GE0 (integerTheory 249)
value INT_NEG_GT0 (integerTheory 250)
value INT_NEG_LE0 (integerTheory 251)
value INT_NEG_LMUL (integerTheory 252)
value INT_NEG_LT0 (integerTheory 253)
value INT_NEG_MINUS1 (integerTheory 254)
value INT_NEG_MUL2 (integerTheory 255)
value INT_NEG_RMUL (integerTheory 256)
value INT_NEG_SAME_EQ (integerTheory 257)
value INT_NEG_SUB (integerTheory 258)
value INT_NEGNEG (integerTheory 244)
value INT_NO_ZERODIV (intExtensionTheory 24)
value INT_NORM_CONV (integerRingLib 4)
value INT_NORM_RULE (integerRingLib 10)
value INT_NORM_TAC (integerRingLib 7)
value int_not (int_bitwiseTheory 34)
value INT_NOT0_MUL (intExtensionTheory 19)
value INT_NOT0_SGNNOT0 (intExtensionTheory 20)
value int_not_def (int_bitwiseTheory 12)
value INT_NOT_LE (integerTheory 259)
value INT_NOT_LT (integerTheory 260)
value int_not_not (int_bitwiseTheory 35)
value INT_NOTGT_IMP_EQLT (intExtensionTheory 21)
value INT_NOTLTEQ_GT (intExtensionTheory 22)
value INT_NOTPOS0_NEG (intExtensionTheory 23)
value INT_NUM_CASES (integerTheory 261)
value INT_NUM_COND (int_arithTheory 14)
value INT_NUM_DIVIDES (int_arithTheory 15)
value INT_NUM_EVEN (int_arithTheory 16)
value INT_NUM_EXISTS (int_arithTheory 17)
value INT_NUM_FORALL (int_arithTheory 18)
value INT_NUM_ODD (int_arithTheory 19)
value INT_NUM_SUB (int_arithTheory 20)
value INT_NUM_UEXISTS (int_arithTheory 21)
value INT_NZ_IMP_LT (integerTheory 262)
value int_of_bits_bits_of_int (int_bitwiseTheory 36)
value int_of_bits_def (int_bitwiseTheory 13)
value INT_OF_NUM (integerTheory 263), value int_of_num (integerTheory 349)
value int_of_term (Arith_cons 36), value int_of_term (bitstringSyntax 16), value int_of_term (intSyntax 33), value int_of_term (numSyntax 123), value int_of_term (realSyntax 28)
value int_of_term_hook (EmitML 8)
value int_or_def (int_bitwiseTheory 14)
value int_peek (patriciaLib 33)
value INT_POASQ (integerTheory 264)
value int_polynom_normalize_def (integerRingTheory 6)
value int_polynom_simplify_def (integerRingTheory 7)
value INT_POS (integerTheory 265)
value INT_POS_NZ (integerTheory 266)
value int_ptree_of_list (patriciaLib 39)
value INT_QUOT (integerTheory 267), value int_quot (integerTheory 27)
value INT_QUOT_0 (integerTheory 268)
value INT_QUOT_1 (integerTheory 269)
value INT_QUOT_CALCULATE (integerTheory 270)
value INT_QUOT_ID (integerTheory 271)
value INT_QUOT_NEG (integerTheory 272)
value INT_QUOT_REDUCE (integerTheory 273)
value INT_QUOT_UNIQUE (integerTheory 274)
value int_QUOTIENT (integerTheory 348)
value int_r_canonical_sum_merge_def (integerRingTheory 8)
value int_r_canonical_sum_prod_def (integerRingTheory 9)
value int_r_canonical_sum_scalar2_def (integerRingTheory 10)
value int_r_canonical_sum_scalar3_def (integerRingTheory 11)
value int_r_canonical_sum_scalar_def (integerRingTheory 12)
value int_r_canonical_sum_simplify_def (integerRingTheory 13)
value int_r_ics_aux_def (integerRingTheory 14)
value int_r_interp_cs_def (integerRingTheory 15)
value int_r_interp_m_def (integerRingTheory 16)
value int_r_interp_sp_def (integerRingTheory 17)
value int_r_interp_vl_def (integerRingTheory 18)
value int_r_ivl_aux_def (integerRingTheory 19)
value int_r_monom_insert_def (integerRingTheory 20)
value int_r_spolynom_normalize_def (integerRingTheory 21)
value int_r_spolynom_simplify_def (integerRingTheory 22)
value int_r_varlist_insert_def (integerRingTheory 23)
value INT_RDISTRIB (integerTheory 275)
value INT_REDUCE_ss (intReduce 10), value INT_REDUCE_ss (intSimps 10)
value INT_REM (integerTheory 276), value int_rem (integerTheory 28)
value INT_REM0 (integerTheory 277)
value INT_REM_CALCULATE (integerTheory 279)
value INT_REM_COMMON_FACTOR (integerTheory 280)
value INT_REM_EQ0 (integerTheory 281)
value INT_REM_EQ_MOD (integerTheory 282)
value INT_REM_ID (integerTheory 283)
value INT_REM_NEG (integerTheory 284)
value INT_REM_REDUCE (integerTheory 285)
value INT_REM_UNIQUE (integerTheory 286)
value int_remove (patriciaLib 36)
value INT_REMQUOT (integerTheory 278)
value int_REP_def (integerTheory 14)
value int_rewrites (integerRingTheory 28), value int_rewrites (ratLib 41)
value INT_RING_CONV (integerRingLib 5)
value INT_RING_RULE (integerRingLib 11)
value INT_RING_TAC (integerRingLib 8)
value int_ring_thms (integerRingTheory 29)
value INT_RNEG_UNIQ (integerTheory 287)
value INT_RWTS_ss (intSimps 18)
value INT_SGN_CASES (intExtensionTheory 25)
value INT_SGN_CASES_TAC (intExtensionLib 10)
value INT_SGN_CLAUSES (intExtensionTheory 26)
value INT_SGN_MUL (intExtensionTheory 27)
value INT_SGN_MUL2 (intExtensionTheory 28)
value INT_SGN_NOTPOSNEG (intExtensionTheory 29)
value INT_SGN_TOTAL (intExtensionTheory 30)
value int_shift_left_def (int_bitwiseTheory 15)
value int_shift_right_def (int_bitwiseTheory 16)
value INT_SIZES_CONV (integer_wordLib 7)
HOL Lib.int_sort (help/Docfiles/Lib.int_sort.adoc 0), value int_sort (Lib 67)
value int_ss (intLib 4), value int_ss (intSimps 20)
value INT_SUB (integerTheory 288), value int_sub (integerTheory 29)
value INT_SUB_0 (integerTheory 289)
value INT_SUB_ADD (integerTheory 290)
value INT_SUB_ADD2 (integerTheory 291)
value INT_SUB_CALCULATE (integerTheory 292)
value INT_SUB_LDISTRIB (integerTheory 293)
value INT_SUB_LE (integerTheory 294)
value INT_SUB_LNEG (integerTheory 295)
value INT_SUB_LT (integerTheory 296)
value INT_SUB_LZERO (integerTheory 297)
value INT_SUB_NEG2 (integerTheory 298)
value INT_SUB_RDISTRIB (integerTheory 299)
value INT_SUB_REDUCE (integerTheory 300)
value INT_SUB_REFL (integerTheory 301)
value INT_SUB_RNEG (integerTheory 302)
value INT_SUB_RZERO (integerTheory 303)
value INT_SUB_SUB (integerTheory 304)
value INT_SUB_SUB2 (integerTheory 305)
value INT_SUB_SUB3 (int_arithTheory 22)
value INT_SUB_TRIANGLE (integerTheory 306)
value INT_SUMSQ (integerTheory 307)
value int_to_base64 (mlibUseful 111)
value int_to_bitlist (bitstringSyntax 7)
value int_to_bits (mlibUseful 109)
HOL Lib.int_to_string (help/Docfiles/Lib.int_to_string.adoc 0), value int_to_string (Lib 68), value int_to_string (mlibUseful 107)
value int_ty (intSyntax 5)
value int_TY_DEF (integerTheory 15)
value int_word_nchotomy (integer_wordTheory 47)
value int_xor_def (int_bitwiseTheory 17)
value INT_ZERO_LE_INT_MAX (integer_wordTheory 26)
value INT_ZERO_LT_INT_MAX (integer_wordTheory 27)
value INT_ZERO_LT_INT_MIN (integer_wordTheory 28)
value INT_ZERO_LT_UINT_MAX (integer_wordTheory 29)
structure IntDP_Munge
value integer_grammars (integerTheory 352)
value integer_word_grammars (integer_wordTheory 93)
structure integer_wordLib
structure integer_wordSyntax
structure integer_wordTheory
value integerRing_grammars (integerRingTheory 31)
structure integerRingLib
structure integerRingTheory
structure integerTheory
value INTEGRABLE_ADD (integralTheory 44), value integrable_add (lebesgueTheory 44)
value integrable_add_lemma (lebesgueTheory 45)
value integrable_add_pos (lebesgueTheory 46)
value integrable_bounded (lebesgueTheory 47)
value INTEGRABLE_CAUCHY (integralTheory 45)
value INTEGRABLE_CMUL (integralTheory 46), value integrable_cmul (lebesgueTheory 48)
value INTEGRABLE_COMBINE (integralTheory 47)
value INTEGRABLE_CONST (integralTheory 48), value integrable_const (lebesgueTheory 49)
value INTEGRABLE_CONTINUOUS (integralTheory 49)
value integrable_def (integralTheory 5), value integrable_def (lebesgueTheory 10)
value INTEGRABLE_DINT (integralTheory 50)
value integrable_fn_minus (lebesgueTheory 50)
value integrable_fn_plus (lebesgueTheory 51)
value integrable_indicator (lebesgueTheory 52)
value integrable_infty (lebesgueTheory 53)
value integrable_infty_null (lebesgueTheory 54)
value INTEGRABLE_LIMIT (integralTheory 51)
value integrable_not_infty (lebesgueTheory 55)
value integrable_not_infty_alt (lebesgueTheory 56)
value integrable_not_infty_alt2 (lebesgueTheory 57)
value integrable_not_infty_alt3 (lebesgueTheory 58)
value integrable_plus_minus (lebesgueTheory 59)
value INTEGRABLE_POINT_SPIKE (integralTheory 52)
value integrable_pos (lebesgueTheory 60)
value INTEGRABLE_SPLIT_SIDES (integralTheory 53)
value integrable_sub (lebesgueTheory 61)
value INTEGRABLE_SUBINTERVAL (integralTheory 54)
value INTEGRABLE_SUBINTERVAL_LEFT (integralTheory 55)
value INTEGRABLE_SUBINTERVAL_RIGHT (integralTheory 56)
value integrable_zero (lebesgueTheory 62)
value INTEGRAL_0 (integralTheory 57)
value INTEGRAL_ADD (integralTheory 58), value integral_add (lebesgueTheory 63)
value integral_add_lemma (lebesgueTheory 64)
value INTEGRAL_BY_PARTS (integralTheory 59)
value INTEGRAL_CMUL (integralTheory 60), value integral_cmul (lebesgueTheory 65)
value integral_cmul_indicator (lebesgueTheory 66)
value INTEGRAL_COMBINE (integralTheory 61)
value INTEGRAL_CONST (integralTheory 62)
value integral_def (integralTheory 6), value integral_def (lebesgueTheory 11)
value INTEGRAL_EQ (integralTheory 63)
value integral_grammars (integralTheory 92)
value integral_indicator (lebesgueTheory 67)
value INTEGRAL_LE (integralTheory 64)
value integral_mono (lebesgueTheory 68)
value integral_mspace (lebesgueTheory 69)
value INTEGRAL_MVT1 (integralTheory 65)
value INTEGRAL_NULL (transcTheory 126)
value integral_pos_fn (lebesgueTheory 70)
value integral_sequence (lebesgueTheory 71)
value INTEGRAL_SUB (integralTheory 66)
value integral_zero (lebesgueTheory 72)
structure integralTheory
value INTEGRATION_BY_PARTS (integralTheory 67)
value inter (UnicodeChars 130)
value INTER_applied (pred_setTheory 266)
value INTER_ASSOC (pred_setTheory 255), value inter_assoc (sptreeTheory 66)
value INTER_COMM (pred_setTheory 256)
value INTER_CONV (enumTacs 39)
value inter_countable (pred_setTheory 440)
value INTER_DEF (pred_setTheory 21), value inter_def (sptreeTheory 13)
value INTER_EMPTY (pred_setTheory 257)
value inter_eq (sptreeTheory 67)
value inter_eq_def (sptreeTheory 14)
value inter_eq_tm (sptreeSyntax 24)
value INTER_FINITE (pred_setTheory 258)
value INTER_IDEMPOT (pred_setTheory 259)
value inter_LN (sptreeTheory 65)
value inter_merge (fmapalTheory 139)
value inter_merge_curried (fmapalTheory 60)
value inter_merge_ind (fmapalTheory 140)
value inter_merge_tupled_primitive (fmapalTheory 61)
value INTER_OVER_UNION (pred_setTheory 260)
value INTER_PRS (quotient_pred_setTheory 36)
value INTER_PSPACE (probabilityTheory 46)
value INTER_RSP (quotient_pred_setTheory 37)
value INTER_SUBSET (pred_setTheory 261)
value INTER_SUBSET_EQN (pred_setTheory 262)
value inter_tm (pred_setSyntax 14), value inter_tm (sptreeSyntax 25)
value INTER_UNION (pred_setTheory 263)
value INTER_UNION_COMPL (pred_setTheory 264)
value INTER_UNIV (pred_setTheory 265)
value interactive (Globals 33)
value interactive_ppbackend (Parse 179)
type internal_bound (Sup_Inf 9)
value internal_mult_characterisation (numeralTheory 27)
value internal_mult_def (numeralTheory 12)
value interp_cs_def (canonicalTheory 16), value interp_cs_def (ringNormTheory 37)
value interp_m_def (canonicalTheory 17), value interp_m_def (ringNormTheory 38)
value interp_m_ok (canonicalTheory 49)
value interp_p_def (ringNormTheory 5)
value interp_sp_def (canonicalTheory 18), value interp_sp_def (ringNormTheory 39)
value interp_vl_def (canonicalTheory 19), value interp_vl_def (ringNormTheory 40)
exception Interrupt (Portable 74)
HOL Lib.intersect (help/Docfiles/Lib.intersect.adoc 0), value intersect (CharSet 13), value intersect (Lib 69), value intersect (mlibUseful 81)
value intersection (Redblackset 21)
value interval (mlibUseful 113)
value INTERVAL_ABS (limTheory 56)
value INTERVAL_CLEMMA (limTheory 57)
value INTERVAL_LEMMA (limTheory 58)
value intExtension_grammars (intExtensionTheory 33)
structure intExtensionLib
structure intExtensionTheory
structure intLib
value intOrd (inttoTheory 5)
value intreal_grammars (intrealTheory 10)
structure intrealSyntax
structure intrealTheory
structure intReduce
value INTRO_TUPLED_QUANT_CONV (pairTools 18)
value intround_def (ieeeTheory 66)
value ints (UnicodeChars 123)
structure intSimps
structure intSyntax
value intto (inttoTheory 6)
value intto_CONV (inttoTacs 11)
value intto_grammars (inttoTheory 25)
structure inttoTacs
structure inttoTheory
value inv (Arbrat 29)
value inv23gt0 (floatTheory 141)
value inv_1over (extrealTheory 198)
value inv_DEF (relationTheory 45)
value inv_diag (relationTheory 211)
value inv_EQC (relationTheory 203)
value inv_Id (relationTheory 205)
value inv_image_def (relationTheory 46)
value inv_image_thm (relationTheory 212)
value inv_img_cmp (Lib 70)
value INV_IN_Q (extrealTheory 93)
value inv_inv (relationTheory 213)
value inv_INVOL (relationTheory 204)
value inv_MOVES_OUT (relationTheory 206)
value inv_O (relationTheory 207)
value inv_one (extrealTheory 199)
value inv_pos (extrealTheory 200)
value INV_PRE_EQ (arithmeticTheory 130)
value INV_PRE_LESS (arithmeticTheory 131)
value INV_PRE_LESS_EQ (arithmeticTheory 132)
value inv_RC (relationTheory 208)
value inv_SC (relationTheory 209)
value INV_SUC (numTheory 15)
value INV_SUC_EQ (prim_recTheory 17)
value inv_TC (relationTheory 210)
value inv_TO (totoTheory 107)
value invert_def (comparisonTheory 10)
value invert_eq_EQUAL (comparisonTheory 40)
value INVOL (relationTheory 80)
value INVOL_DEF (relationTheory 11)
value INVOL_ONE_ENO (relationTheory 81)
value INVOL_ONE_ONE (relationTheory 82)
value invtri0_curried_def (numpairTheory 5)
value invtri0_def (numpairTheory 22)
value invtri0_ind (numpairTheory 23)
value invtri0_thm (numpairTheory 24)
value invtri0_tupled_primitive_def (numpairTheory 6)
value invtri_def (numpairTheory 7)
value invtri_le (numpairTheory 25)
value invtri_linverse (numpairTheory 26)
value invtri_linverse_r (numpairTheory 27)
value invtri_lower (numpairTheory 28)
value invtri_unique (numpairTheory 29)
value invtri_upper (numpairTheory 30)
exception Io (Portable 70)
type iparser (mlibParser 43)
type iprinter (mlibParser 44)
HOL PairRules.IPSPEC (help/Docfiles/PairRules.IPSPEC.adoc 0), value IPSPEC (PairRules 60)
HOL PairRules.IPSPECL (help/Docfiles/PairRules.IPSPECL.adoc 0), value IPSPECL (PairRules 61)
value irrefl_trans_implies_antisym (relationTheory 214)
value irreflexive_def (relationTheory 47), value irreflexive_def (set_relationTheory 15)
value irreflexive_inv (relationTheory 216)
value irreflexive_reln_to_rel_conv (set_relationTheory 75)
value irreflexive_reln_to_rel_conv_UNIV (set_relationTheory 76)
value irreflexive_RSUBSET (relationTheory 215)
HOL Tactic.irule (help/Docfiles/Tactic.irule.adoc 0), value irule (Tactic 77)
value is_abbr (markerSyntax 16)
value is_abbrev (markerSyntax 12)
HOL Term.is_abs (help/Docfiles/Term.is_abs.adoc 0), value is_abs (FinalTerm 50)
value is_absval (intSyntax 84), value is_absval (realSyntax 58)
value is_acs (transcSyntax 44)
value is_add (bitstringSyntax 96), value is_add (patriciaSyntax 79)
value is_add_list (patriciaSyntax 80)
value is_add_lists (patricia_castsSyntax 128)
value is_add_listw (patricia_castsSyntax 111)
value is_add_with_carry (wordsSyntax 241)
value is_adds (patricia_castsSyntax 127)
value is_addw (patricia_castsSyntax 110)
value is_align (alignmentSyntax 15)
value is_aligned (alignmentSyntax 16)
value is_all_distinct (bagLib 41), value is_all_distinct (bagSyntax 39), value is_all_distinct (listSyntax 119)
value is_and_el (rich_listSyntax 44)
value is_app (Absyn 80)
value is_append (listSyntax 120)
value is_AQ (Absyn 82), value is_aq (term_tokens 20), value is_aq (type_tokens 23)
HOL boolSyntax.is_arb (help/Docfiles/boolSyntax.is_arb.adoc 0), value is_arb (boolSyntax 107)
value is_arith (numSimps 18)
value is_arith_asm (numSimps 19)
value is_asm_marker (ConseqConv 80)
value is_asn (transcSyntax 45)
value is_atn (transcSyntax 46)
value is_atom (mlibTerm 50)
value is_axiom (mlibThm 30)
value is_bag_ty (bagLib 16), value is_bag_ty (bagSyntax 14)
value is_band (bitstringSyntax 97)
value is_biginter (pred_setSyntax 142)
value is_bigunion (pred_setSyntax 141)
value is_bij (pred_setSyntax 153)
value is_bind (state_transformerSyntax 41)
value is_binder (term_grammar 155)
value is_binop (liteLib 92), value is_binop (mlibTerm 47)
value is_bit (bitSyntax 56)
value is_bit1 (numSyntax 92)
value is_bit2 (numSyntax 93)
value is_bit_count (wordsSyntax 242)
value is_bit_count_upto (wordsSyntax 243)
value is_bit_field_insert (wordsSyntax 244)
value is_bit_modify (bitSyntax 57)
value is_bit_reverse (bitSyntax 58)
value is_bit_set (wordsSyntax 245)
value is_bitify (bitstringSyntax 98)
value is_bits (bitSyntax 59)
value is_bitv (bitSyntax 60)
value is_bitwise (bitSyntax 61), value is_bitwise (bitstringSyntax 99)
value is_bn (sptreeSyntax 61)
value is_bnot (bitstringSyntax 100)
HOL boolSyntax.is_bool_case (help/Docfiles/boolSyntax.is_bool_case.adoc 0), value is_bool_case (boolSyntax 104)
value is_bool_size (basicSizeSyntax 23)
value is_boolify (bitstringSyntax 101), value is_boolify (numposrepSyntax 40)
value is_bor (bitstringSyntax 102)
value is_branch (patriciaSyntax 76)
value is_branching_bit (patriciaSyntax 92)
value is_bs (sptreeSyntax 62)
value is_butlastn (rich_listSyntax 45)
value is_bvar (Term 16)
value is_bxor (bitstringSyntax 103)
value is_byte_align (alignmentSyntax 17)
value is_byte_aligned (alignmentSyntax 18)
value is_C (combinSyntax 39)
value is_card (bagLib 44), value is_card (bagSyntax 42), value is_card (pred_setSyntax 132)
value is_cart_type (fcpSyntax 13)
value is_case (Pmatch 22), value is_case (TypeBase 46), value is_case (TypeBasePure 115)
value is_char_ge (stringSyntax 132)
value is_char_gt (stringSyntax 133)
value is_char_le (stringSyntax 134)
value is_char_lit (Literal 23)
value is_char_literal (Lexis 19), value is_char_literal (stringSyntax 179)
value is_char_lt (stringSyntax 135)
value is_choice (pred_setSyntax 149)
value is_chr (stringLib 26), value is_chr (stringSyntax 136)
value is_classic (PmatchHeuristics 95)
value is_clause (mlibCanon 32)
value is_closest (ieeeTheory 67)
value IS_CLOSEST_EXISTS (floatTheory 74)
value is_cnf (mlibCanon 33)
HOL Term.is_comb (help/Docfiles/Term.is_comb.adoc 0), value is_comb (FinalTerm 49)
value is_compl (pred_setSyntax 131)
value is_concat_word_list (wordsSyntax 246)
HOL boolSyntax.is_cond (help/Docfiles/boolSyntax.is_cond.adoc 0), value is_cond (boolSyntax 103)
HOL boolSyntax.is_conj (help/Docfiles/boolSyntax.is_conj.adoc 0), value is_conj (Absyn 85), value is_conj (boolSyntax 100)
HOL listSyntax.is_cons (help/Docfiles/listSyntax.is_cons.adoc 0), value is_cons (listSyntax 121)
HOL Term.is_const (help/Docfiles/Term.is_const.adoc 0), value is_const (FinalTerm 48), value is_const (mlibTerm 43)
value is_constname (Parse 229)
value is_constraint (CooperSyntax 45)
value is_constructor (TypeBase 42), value is_constructor (TypeBasePure 111)
value is_contradiction (mlibThm 38)
value is_cos (transcSyntax 47)
value is_count (pred_setSyntax 144)
value is_count_list (rich_listSyntax 46)
value is_cross (pred_setSyntax 143)
value is_curry (pairLib 61), value is_curry (pairSyntax 72)
value is_delete (pred_setSyntax 129), value is_delete (sptreeSyntax 63)
value is_denormal (ieeeTheory 68)
value is_depth (patriciaSyntax 88)
value is_depthw (patricia_castsSyntax 119)
value is_dest_string (stringSyntax 137)
value is_diff (bagLib 25), value is_diff (bagSyntax 23), value is_diff (pred_setSyntax 128)
value is_difference (sptreeSyntax 64)
value is_dimindex (fcpSyntax 58), value is_dimindex (wordsSyntax 247)
value is_dimword (wordsSyntax 248)
value is_Dint (transcSyntax 43)
HOL boolSyntax.is_disj (help/Docfiles/boolSyntax.is_disj.adoc 0), value is_disj (Absyn 86), value is_disj (boolSyntax 101)
value is_disjoint (pred_setSyntax 140)
value is_div (intSyntax 68), value is_div (numSyntax 94), value is_div (realSyntax 54)
value is_div2 (numSyntax 95)
value is_div_2exp (bitSyntax 62)
value is_divides (intSyntax 104)
value is_division (transcSyntax 48)
value is_divmod (numSyntax 96)
value is_divmod_2exp (bitSyntax 63)
value is_domain (sptreeSyntax 65)
value is_double (ieeeTheory 69)
value is_double_extended (ieeeTheory 70)
value is_drop (listSyntax 122)
value is_dsize (transcSyntax 49)
value IS_EL (rich_listTheory 437), value is_el (listSyntax 123)
value IS_EL_APPEND (rich_listTheory 438)
value IS_EL_BUTFIRSTN (rich_listTheory 439)
value IS_EL_BUTLASTN (rich_listTheory 440)
HOL listLib.IS_EL_CONV (help/Docfiles/listLib.IS_EL_CONV.adoc 0), value IS_EL_CONV (ListConv1 30), value IS_EL_CONV (listLib 44)
value IS_EL_DEF (rich_listTheory 441)
value IS_EL_FILTER (rich_listTheory 442)
value IS_EL_FIRSTN (rich_listTheory 443)
value IS_EL_FOLDL (rich_listTheory 444)
value IS_EL_FOLDL_MAP (rich_listTheory 445)
value IS_EL_FOLDR (rich_listTheory 446)
value IS_EL_FOLDR_MAP (rich_listTheory 447)
value IS_EL_LASTN (rich_listTheory 448)
value IS_EL_REPLICATE (rich_listTheory 449)
value IS_EL_REVERSE (rich_listTheory 450)
value IS_EL_SEG (rich_listTheory 451)
value IS_EL_SNOC (rich_listTheory 452)
value IS_EL_SOME_EL (rich_listTheory 453)
value is_ell (rich_listSyntax 47)
value is_empty (bagLib 38), value is_empty (bagSyntax 36), value is_empty (mlibClause 36), value is_empty (mlibHeap 12), value is_empty (patriciaSyntax 74), value is_empty (pred_setSyntax 123)
value IS_EMPTY_def (basis_emitTheory 12), value IS_EMPTY_def (patriciaTheory 74)
value is_empty_guess_collection (quantHeuristicsLibBase 94)
value IS_EMPTY_ind (patriciaTheory 75)
value IS_EMPTY_primitive_def (patriciaTheory 17)
value IS_EMPTY_REWRITE (basis_emitTheory 27)
value is_emptystring (Literal 15), value is_emptystring (stringLib 31), value is_emptystring (stringSyntax 138)
HOL boolSyntax.is_eq (help/Docfiles/boolSyntax.is_eq.adoc 0), value is_eq (Absyn 84), value is_eq (boolSyntax 93), value is_eq (mlibTerm 102)
value is_eqc (Canon_Port 4)
value is_even (numSyntax 97)
value is_every (bagLib 47), value is_every (bagSyntax 45), value is_every (listSyntax 124)
value is_every_leaf (patriciaSyntax 85)
value is_every_leafw (patricia_castsSyntax 116)
HOL boolSyntax.is_exists (help/Docfiles/boolSyntax.is_exists.adoc 0), value is_exists (Absyn 90), value is_exists (boolSyntax 98), value is_exists (listSyntax 125)
HOL boolSyntax.is_exists1 (help/Docfiles/boolSyntax.is_exists1.adoc 0), value is_exists1 (Absyn 91), value is_exists1 (boolSyntax 99)
value is_exists_leaf (patriciaSyntax 86)
value is_exists_leafw (patricia_castsSyntax 117)
value is_exp (intSyntax 64), value is_exp (numSyntax 98), value is_exp (transcSyntax 50)
value is_explode (stringLib 29), value is_explode (stringSyntax 140)
value is_extract (stringSyntax 141)
value is_F (Solve 9)
value is_fact (numSyntax 99)
value is_fail (combinSyntax 44)
value is_fapply (finite_mapSyntax 29)
value is_fcp (fcpSyntax 56)
value is_fcp_cons (fcpSyntax 62)
value is_fcp_every (fcpSyntax 65)
value is_fcp_exists (fcpSyntax 64)
value is_fcp_hd (fcpSyntax 60)
value is_fcp_index (fcpSyntax 57)
value is_fcp_map (fcpSyntax 63)
value is_fcp_tl (fcpSyntax 61)
value is_fcp_update (fcpSyntax 59)
value is_fdom (finite_mapSyntax 30)
value is_fempty (finite_mapSyntax 31)
value is_fevery (finite_mapSyntax 32)
value is_field (bitstringSyntax 104)
value is_field_insert (bitstringSyntax 105)
value is_fields (stringSyntax 139)
value is_filter (listSyntax 126)
value is_final_pstack (parse_term 7)
value is_find (patriciaSyntax 78), value is_find (updateSyntax 13)
value is_finds (patricia_castsSyntax 126)
value is_findw (patricia_castsSyntax 109)
value is_fine (transcSyntax 51)
value is_finite (ieeeTheory 71), value is_finite (pred_setSyntax 134)
value IS_FINITE_ALT (floatTheory 75)
value IS_FINITE_ALT1 (floatTheory 76)
value IS_FINITE_CLOSEST (floatTheory 77)
value IS_FINITE_EXPLICIT (floatTheory 78)
value IS_FINITE_FINITE (floatTheory 79)
value IS_FINITE_NONEMPTY (floatTheory 80)
value is_fixwidth (bitstringSyntax 106)
value is_flat (listSyntax 127)
value is_flookup (finite_mapSyntax 33)
value is_fmap_cases (finite_mapTheory 262)
value is_fmap_def (finite_mapTheory 31)
value is_fmap_ind (finite_mapTheory 263)
value is_fmap_rules (finite_mapTheory 264)
value is_fmap_strongind (finite_mapTheory 265)
value is_fmap_ty (finite_mapSyntax 7)
value is_fn (mlibTerm 35)
value is_foldi (sptreeSyntax 66)
value is_foldl (listSyntax 128)
value is_foldr (listSyntax 129)
value is_for (state_transformerSyntax 42)
HOL boolSyntax.is_forall (help/Docfiles/boolSyntax.is_forall.adoc 0), value is_forall (Absyn 89), value is_forall (boolSyntax 97)
value is_foreach (state_transformerSyntax 43)
value is_frac_add (fracSyntax 45)
value is_frac_ainv (fracSyntax 43)
value is_frac_div (fracSyntax 48)
value is_frac_dnm (fracSyntax 41)
value is_frac_minv (fracSyntax 44)
value is_frac_mul (fracSyntax 47)
value is_frac_nmr (fracSyntax 40)
value is_frac_sgn (fracSyntax 42)
value is_frac_sub (fracSyntax 46)
value is_fromAList (sptreeSyntax 67)
value is_fromBinString (ASCIInumbersSyntax 61)
value is_fromDecString (ASCIInumbersSyntax 62)
value is_fromHexString (ASCIInumbersSyntax 63)
value is_fromList (sptreeSyntax 68)
value is_fromString (integer_wordSyntax 62)
value is_front (listSyntax 130)
value is_fst (pairLib 59), value is_fst (pairSyntax 69)
value is_funpow (numSyntax 100)
value is_fupdate (finite_mapSyntax 34)
value is_gauge (transcSyntax 52)
value IS_GCD_0L (gcdTheory 28)
value IS_GCD_0R (gcdTheory 29)
value is_gcd_def (gcdTheory 7)
value IS_GCD_MINUS_L (gcdTheory 30)
value IS_GCD_MINUS_R (gcdTheory 31)
value IS_GCD_REF (gcdTheory 32)
value IS_GCD_SYM (gcdTheory 33)
value IS_GCD_UNIQUE (gcdTheory 34)
HOL Type.is_gen_tyvar (help/Docfiles/Type.is_gen_tyvar.adoc 0), value is_gen_tyvar (FinalType 9)
value is_genlist (listSyntax 131)
HOL Term.is_genvar (help/Docfiles/Term.is_genvar.adoc 0), value is_genvar (FinalTerm 47)
value is_geq (Arith_cons 26), value is_geq (intSyntax 100), value is_geq (numSyntax 101), value is_geq (realSyntax 74)
value is_great (Arith_cons 25), value is_great (intSyntax 96), value is_great (realSyntax 70)
value is_greater (numSyntax 102)
value is_guess (quantHeuristicsLibBase 41)
value is_guess_general (quantHeuristicsLibBase 38)
value is_guess_term (quantHeuristicsLibBase 40)
value is_guess_thm (quantHeuristicsLibBase 39)
value is_guess_tm (quantHeuristicsLibBase 73)
value is_hd (listSyntax 132)
value is_hex (ASCIInumbersSyntax 56)
value is_I (combinSyntax 38)
value is_i2w (integer_wordSyntax 49)
value is_id (Subst 8)
value is_ident (Absyn 79), value is_ident (term_tokens 19), value is_ident (type_tokens 20)
value is_image (bagLib 37), value is_image (bagSyntax 35), value is_image (pred_setSyntax 133)
HOL boolSyntax.is_imp (help/Docfiles/boolSyntax.is_imp.adoc 0), value is_imp (Absyn 87), value is_imp (boolSyntax 94), value is_imp (liteLib 102)
HOL boolSyntax.is_imp_only (help/Docfiles/boolSyntax.is_imp_only.adoc 0), value is_imp_only (boolSyntax 95)
value is_implode (stringLib 28), value is_implode (stringSyntax 142)
value is_IN (boolSyntax 114), value is_in (pred_setSyntax 122)
value is_in_ptree (patriciaSyntax 90)
value is_in_ptrees (patricia_castsSyntax 132)
value is_in_ptreew (patricia_castsSyntax 120)
value is_index (wordsSyntax 249)
value is_infinite (pred_setSyntax 135)
value is_infinity (ieeeTheory 72)
value is_initial (goalStack 16)
value is_inj (pred_setSyntax 151)
value is_injected (intSyntax 38), value is_injected (realSyntax 32)
value is_inl (mlibUseful 162), value is_inl (sumSyntax 32)
value is_inr (mlibUseful 163), value is_inr (sumSyntax 33)
value is_insert (bagLib 32), value is_insert (bagSyntax 30), value is_insert (pred_setSyntax 125), value is_insert (sptreeSyntax 69)
value is_insert_ptree (patriciaSyntax 91)
value is_insert_ptrees (patricia_castsSyntax 133)
value is_insert_ptreew (patricia_castsSyntax 121)
value is_INT_CEILING (intrealSyntax 24)
value is_int_def (intrealTheory 7)
value is_INT_FLOOR (intrealSyntax 20)
value is_int_literal (intSyntax 32)
value is_int_literal_hook (EmitML 7)
value is_int_max (integer_wordSyntax 52), value is_int_max (wordsSyntax 250)
value is_int_min (integer_wordSyntax 51), value is_int_min (wordsSyntax 251)
value is_int_tm (intrealSyntax 10)
value is_integral (ieeeTheory 73)
value is_inter (pred_setSyntax 126), value is_inter (sptreeSyntax 70)
value is_inter_eq (sptreeSyntax 71)
value is_is_int (intrealSyntax 28)
value is_is_none (optionLib 42), value is_is_none (optionSyntax 41)
value is_is_ptree (patriciaSyntax 89)
value is_is_some (optionLib 41), value is_is_some (optionSyntax 40)
value is_is_sublist (rich_listSyntax 48)
value is_is_suffix (rich_listSyntax 49)
value is_isalpha (stringSyntax 143)
value is_isalphanum (stringSyntax 144)
value is_isascii (stringSyntax 145)
value is_iscntrl (stringSyntax 146)
value is_isdigit (stringSyntax 147)
value is_isgraph (stringSyntax 148)
value is_ishexdigit (stringSyntax 149)
value is_isl (sumSyntax 34)
value is_islower (stringSyntax 150)
value is_isprefix (listSyntax 133), value is_isprefix (stringSyntax 151)
value is_isprint (stringSyntax 152)
value is_ispunct (stringSyntax 153)
value is_isr (sumSyntax 35)
value is_isspace (stringSyntax 154)
value is_isupper (stringSyntax 155)
value is_join (state_transformerSyntax 44)
value is_K (combinSyntax 35)
value is_K_1 (combinSyntax 36)
value is_keys (patriciaSyntax 83)
value is_keyss (patricia_castsSyntax 131)
value is_keysw (patricia_castsSyntax 114)
value is_l2n (numposrepSyntax 41)
value is_l2v (fcpSyntax 67)
value is_l2w (wordsSyntax 252)
value is_label (markerSyntax 22)
value is_label_ref (markerSyntax 24)
value is_lam (Absyn 81)
value is_last (listSyntax 134)
value is_lastn (rich_listSyntax 50)
value is_lbtree_def (lbtreeTheory 12)
value is_leaf (patriciaSyntax 75)
value is_least (numSyntax 103)
value is_LEAST_INT (intSyntax 116)
value is_length (listSyntax 135)
value is_leq (Arith_cons 24), value is_leq (intSyntax 92), value is_leq (numSyntax 104), value is_leq (realSyntax 66)
value is_less (Arith_cons 23), value is_less (intSyntax 88), value is_less (numSyntax 105), value is_less (realSyntax 62)
HOL boolSyntax.is_let (help/Docfiles/boolSyntax.is_let.adoc 0), value is_let (boolSyntax 106)
value is_lex (pairSyntax 75)
value is_linv (pred_setSyntax 154)
HOL listSyntax.is_list (help/Docfiles/listSyntax.is_list.adoc 0), value is_list (listSyntax 136)
value is_list_case (listSyntax 137)
value is_list_elem_count (rich_listSyntax 51)
value is_list_to_set (listSyntax 138)
value is_list_type (listSyntax 6)
value is_list_update (updateSyntax 14)
value is_literal (Literal 26), value is_literal (mlibTerm 84), value is_literal (ratSyntax 9)
value is_literal_case (boolSyntax 105)
value is_ln (sptreeSyntax 72), value is_ln (transcSyntax 53)
value is_log2 (bitSyntax 64)
value is_lookup (sptreeSyntax 73)
value is_ls (sptreeSyntax 74)
value is_map (listSyntax 139)
value is_map2 (listSyntax 140)
value is_max (intSyntax 112), value is_max (numSyntax 106), value is_max (realSyntax 82)
value is_max_set (pred_setSyntax 145)
value is_measure (numSyntax 107)
value is_mem (listSyntax 141)
value is_min (intSyntax 108), value is_min (numSyntax 108), value is_min (realSyntax 78)
value is_min_set (pred_setSyntax 146)
value is_minus (Arith_cons 13), value is_minus (intSyntax 54), value is_minus (numSyntax 109), value is_minus (realSyntax 44)
value is_mk_bn (sptreeSyntax 75)
value is_mk_bs (sptreeSyntax 76)
value is_mk_wf (sptreeSyntax 77)
value is_mmap (state_transformerSyntax 45)
value is_mmindex_def (lbtreeTheory 13)
value is_mod (intSyntax 72), value is_mod (numSyntax 110)
value is_mod_2exp (bitSyntax 65)
value is_mod_2exp_eq (bitSyntax 66)
value is_mod_2exp_max (bitSyntax 67)
value is_modify (bitstringSyntax 107)
value is_mult (Arith_cons 14), value is_mult (intSyntax 58), value is_mult (numSyntax 111), value is_mult (realSyntax 48)
value is_n2l (numposrepSyntax 42)
value is_n2s (ASCIInumbersSyntax 59)
value is_n2v (bitstringSyntax 108)
value is_n2w (wordsSyntax 253)
value is_nan (ieeeTheory 74)
value is_narrow (state_transformerSyntax 46)
HOL boolSyntax.is_neg (help/Docfiles/boolSyntax.is_neg.adoc 0), value is_neg (boolSyntax 102), value is_neg (mlibTerm 53)
value is_neg_asm_marker (ConseqConv 84)
value is_neg_eq (BoolExtractShared 6)
value is_negated (intSyntax 44), value is_negated (realSyntax 34)
value is_nil (listSyntax 142)
value is_none (liteLib 20), value is_none (optionLib 36), value is_none (optionSyntax 35)
value IS_NONE_DEF (optionTheory 5)
value IS_NONE_EQ_NONE (optionTheory 30)
value IS_NONE_PRS (quotient_optionTheory 5)
value IS_NONE_RSP (quotient_optionTheory 6)
value is_none_tm (optionLib 15), value is_none_tm (optionSyntax 14)
value is_normal (ieeeTheory 75)
value is_nub (listSyntax 143)
value is_null (listSyntax 144)
value is_Num (intSyntax 42)
value is_num_case (numSyntax 112)
value is_num_const (Arith_cons 34)
value is_num_from_bin_list (numposrepSyntax 43)
value is_num_from_bin_string (ASCIInumbersSyntax 64)
value is_num_from_dec_list (numposrepSyntax 45)
value is_num_from_dec_string (ASCIInumbersSyntax 66)
value is_num_from_hex_list (numposrepSyntax 46)
value is_num_from_hex_string (ASCIInumbersSyntax 67)
value is_num_from_oct_list (numposrepSyntax 44)
value is_num_from_oct_string (ASCIInumbersSyntax 65)
value is_num_literal (Lexis 17)
value is_num_reln (Arith_cons 27)
value IS_NUM_REP (numTheory 5)
value is_num_to_bin_list (numposrepSyntax 47)
value is_num_to_bin_string (ASCIInumbersSyntax 68)
value is_num_to_dec_list (numposrepSyntax 49)
value is_num_to_dec_string (ASCIInumbersSyntax 70)
value is_num_to_hex_list (numposrepSyntax 50)
value is_num_to_hex_string (ASCIInumbersSyntax 71)
value is_num_to_oct_list (numposrepSyntax 48)
value is_num_to_oct_string (ASCIInumbersSyntax 69)
HOL numSyntax.is_numeral (help/Docfiles/numSyntax.is_numeral.adoc 0), value is_numeral (Literal 6), value is_numeral (numSyntax 119)
value is_numeric_type (fcpSyntax 12)
value is_numset_of_ptree (patriciaSyntax 94)
value is_nzcv (wordsSyntax 254)
value is_o (combinSyntax 41)
value is_odd (numSyntax 113)
value is_one (oneSyntax 9)
value is_one_size (basicSizeSyntax 26)
value is_option (optionLib 7), value is_option (optionSyntax 6)
value is_option_case (optionLib 43), value is_option_case (optionSyntax 42)
value is_option_join (optionLib 40), value is_option_join (optionSyntax 39)
value is_option_map (optionLib 39), value is_option_map (optionSyntax 38)
value is_option_size (basicSizeSyntax 27)
value is_or_el (rich_listSyntax 52)
value is_ord (stringLib 27), value is_ord (stringSyntax 156)
value is_outl (sumSyntax 36)
value is_outr (sumSyntax 37)
value is_overloaded (Overload 38)
value is_override (updateSyntax 15)
HOL pairSyntax.is_pabs (help/Docfiles/pairSyntax.is_pabs.adoc 0), value is_pabs (pairLib 64), value is_pabs (pairSyntax 76)
value is_pad_left (listSyntax 145)
value is_pad_right (listSyntax 146)
HOL pairSyntax.is_pair (help/Docfiles/pairSyntax.is_pair.adoc 0), value is_pair (Absyn 88), value is_pair (pairLib 58), value is_pair (pairSyntax 68)
value is_pair_map (pairLib 63), value is_pair_map (pairSyntax 74)
value is_pair_size (basicSizeSyntax 24)
value is_part (sortingSyntax 21)
value is_part3 (sortingSyntax 22)
value is_partition (sortingSyntax 23)
value is_peek (patriciaSyntax 77)
value is_peeks (patricia_castsSyntax 125)
value is_peekw (patricia_castsSyntax 108)
value is_PERM (permLib 7), value is_perm (sortingSyntax 24)
HOL pairSyntax.is_pexists (help/Docfiles/pairSyntax.is_pexists.adoc 0), value is_pexists (pairLib 66), value is_pexists (pairSyntax 79)
value is_pexists1 (pairLib 67), value is_pexists1 (pairSyntax 80)
HOL pairSyntax.is_pforall (help/Docfiles/pairSyntax.is_pforall.adoc 0), value is_pforall (pairLib 65), value is_pforall (pairSyntax 78)
value is_plet (pairSyntax 77)
value is_plus (Arith_cons 12), value is_plus (intSyntax 48), value is_plus (numSyntax 114), value is_plus (realSyntax 38)
value is_pow (pred_setSyntax 139)
value is_pre (Arith_cons 33), value is_pre (numSyntax 115)
value IS_PREFIX (rich_listTheory 191), value is_prefix (mlibUseful 130), value is_prefix (rich_listSyntax 53)
value IS_PREFIX_ANTISYM (rich_listTheory 192)
value IS_PREFIX_APPEND (rich_listTheory 193)
value IS_PREFIX_APPEND1 (rich_listTheory 194)
value IS_PREFIX_APPEND2 (rich_listTheory 195)
value IS_PREFIX_APPEND3 (rich_listTheory 196)
value IS_PREFIX_APPENDS (rich_listTheory 197)
value IS_PREFIX_BUTLAST (rich_listTheory 198)
value IS_PREFIX_IS_SUBLIST (rich_listTheory 199)
value IS_PREFIX_LENGTH (rich_listTheory 200)
value IS_PREFIX_LENGTH_ANTI (rich_listTheory 201)
value IS_PREFIX_NIL (rich_listTheory 202)
value IS_PREFIX_PREFIX (rich_listTheory 203)
value IS_PREFIX_REFL (rich_listTheory 204)
value IS_PREFIX_REVERSE (rich_listTheory 205)
value IS_PREFIX_SNOC (rich_listTheory 206)
value IS_PREFIX_TRANS (rich_listTheory 207)
HOL Arith.is_prenex (help/Docfiles/Arith.is_prenex.adoc 0), value is_prenex (Arith 11), value is_prenex (Prenex 2)
HOL Arith.is_presburger (help/Docfiles/Arith.is_presburger.adoc 0), value is_presburger (Arith 12), value is_presburger (Cooper 8), value is_presburger (Gen_arith 4), value is_presburger (IntDP_Munge 8)
HOL pairSyntax.is_prod (help/Docfiles/pairSyntax.is_prod.adoc 0)
HOL pairSyntax.is_pselect (help/Docfiles/pairSyntax.is_pselect.adoc 0), value is_pselect (pairLib 68), value is_pselect (pairSyntax 81)
value is_psubset (pred_setSyntax 138)
HOL patriciaLib.is_ptree (help/Docfiles/patriciaLib.is_ptree.adoc 0), value is_ptree (patriciaLib 10)
value IS_PTREE_BRANCH (patriciaTheory 76)
value IS_PTREE_def (patriciaTheory 18)
value is_ptree_of_numset (patriciaSyntax 93)
value is_ptree_of_stringset (patricia_castsSyntax 134)
value is_ptree_of_wordset (patricia_castsSyntax 122)
value IS_PTREE_PEEK (patriciaTheory 77)
value is_ptree_tm (patriciaSyntax 24)
value is_ptree_type (patriciaSyntax 7)
value is_pure_literal (Literal 27)
HOL pairSyntax.is_pvar (help/Docfiles/pairSyntax.is_pvar.adoc 0)
value is_qsort (sortingSyntax 25)
value is_qsort3 (sortingSyntax 26)
value is_quot (intSyntax 76)
value is_rat_add (ratSyntax 68)
value is_rat_ainv (ratSyntax 65)
value is_rat_div (ratSyntax 71)
value is_rat_dnm (ratSyntax 61)
value is_rat_geq (ratSyntax 76)
value is_rat_gre (ratSyntax 74)
value is_rat_leq (ratSyntax 75)
value is_rat_les (ratSyntax 73)
value is_rat_minv (ratSyntax 66)
value is_rat_mul (ratSyntax 70)
value is_rat_nmr (ratSyntax 60)
value is_rat_of_num (ratSyntax 63)
value is_rat_sgn (ratSyntax 62)
value is_rat_sub (ratSyntax 69)
value is_read (state_transformerSyntax 47)
value is_real_literal (realSyntax 26)
value is_real_of_int (intrealSyntax 16)
value is_record (TypeBase 52), value is_record (TypeBasePure 120)
value is_record_type (TypeBase 55), value is_record_type (TypeBasePure 123)
value is_reduce_and (wordsSyntax 255)
value is_reduce_nand (wordsSyntax 256)
value is_reduce_nor (wordsSyntax 257)
value is_reduce_or (wordsSyntax 258)
value is_reduce_xnor (wordsSyntax 259)
value is_reduce_xor (wordsSyntax 260)
value is_rem (intSyntax 80)
value IS_REMOVABLE_QUANT_FUN___EXISTS_THM (quantHeuristicsTheory 65)
value IS_REMOVABLE_QUANT_FUN___FORALL_THM (quantHeuristicsTheory 66)
value IS_REMOVABLE_QUANT_FUN_def (quantHeuristicsTheory 11)
value is_remove (patriciaSyntax 81)
value is_removes (patricia_castsSyntax 129)
value is_removew (patricia_castsSyntax 112)
value is_renaming (mlibSubst 25)
value is_replicate (bitstringSyntax 109), value is_replicate (rich_listSyntax 54)
HOL res_quanLib.is_res_abstract (help/Docfiles/res_quanLib.is_res_abstract.adoc 0), HOL res_quanTools.is_res_abstract (help/Docfiles/res_quanTools.is_res_abstract.adoc 0), value is_res_abstract (boolSyntax 113), value is_res_abstract (res_quanTools 29)
HOL res_quanLib.is_res_exists (help/Docfiles/res_quanLib.is_res_exists.adoc 0), HOL res_quanTools.is_res_exists (help/Docfiles/res_quanTools.is_res_exists.adoc 0), value is_res_exists (boolSyntax 110), value is_res_exists (res_quanTools 26)
HOL res_quanLib.is_res_exists_unique (help/Docfiles/res_quanLib.is_res_exists_unique.adoc 0), value is_res_exists_unique (boolSyntax 111), value is_res_exists_unique (res_quanTools 27)
HOL res_quanLib.is_res_forall (help/Docfiles/res_quanLib.is_res_forall.adoc 0), HOL res_quanTools.is_res_forall (help/Docfiles/res_quanTools.is_res_forall.adoc 0), value is_res_forall (boolSyntax 109), value is_res_forall (res_quanTools 25)
HOL res_quanLib.is_res_select (help/Docfiles/res_quanLib.is_res_select.adoc 0), HOL res_quanTools.is_res_select (help/Docfiles/res_quanTools.is_res_select.adoc 0), value is_res_select (boolSyntax 112), value is_res_select (res_quanTools 28)
value is_rest (pred_setSyntax 150)
value is_reverse (listSyntax 147)
value is_rewr (mlibClause 38)
value is_ring_def (ringTheory 5)
value is_rinv (pred_setSyntax 155)
value is_root (transcSyntax 54)
value is_rotate (bitstringSyntax 110)
value is_rpow (transcSyntax 55)
value is_rsum (transcSyntax 56)
value is_S (combinSyntax 37)
value is_s2n (ASCIInumbersSyntax 58)
value is_s2v (bitstringSyntax 111)
value is_s2w (wordsSyntax 261)
value is_saturate_add (wordsSyntax 262)
value is_saturate_i2sw (integer_wordSyntax 54)
value is_saturate_i2w (integer_wordSyntax 55)
value is_saturate_mul (wordsSyntax 263)
value is_saturate_n2w (wordsSyntax 264)
value is_saturate_sub (wordsSyntax 265)
value is_saturate_sw2sw (integer_wordSyntax 56)
value is_saturate_sw2w (integer_wordSyntax 57)
value is_saturate_w2sw (integer_wordSyntax 58)
value is_saturate_w2w (wordsSyntax 266)
value is_sbit (bitSyntax 68)
value is_scanl (rich_listSyntax 55)
value is_scanr (rich_listSyntax 56)
value is_seg (rich_listSyntax 57)
HOL boolSyntax.is_select (help/Docfiles/boolSyntax.is_select.adoc 0), value is_select (Absyn 92), value is_select (boolSyntax 96)
value is_semi_ring_def (semi_ringTheory 5)
value is_set_spec (pred_setSyntax 130)
value is_set_type (pred_setSyntax 6)
value is_shiftl (bitstringSyntax 112)
value is_shiftr (bitstringSyntax 113)
value is_sign_extend (bitSyntax 69), value is_sign_extend (bitstringSyntax 114)
value is_signed_saturate_add (integer_wordSyntax 59)
value is_signed_saturate_sub (integer_wordSyntax 60)
value is_sin (transcSyntax 57)
value is_sing (pred_setSyntax 136)
value is_single (ieeeTheory 76)
value is_single_extended (ieeeTheory 77)
value is_size (patriciaSyntax 87), value is_size (sptreeSyntax 78)
value is_sizew (patricia_castsSyntax 118)
value is_skip (clauses 22)
value is_slice (bitSyntax 70)
value is_snd (pairLib 60), value is_snd (pairSyntax 70)
value is_snoc (listSyntax 148)
value is_some (liteLib 19), value is_some (optionLib 37), value is_some (optionSyntax 36)
value IS_SOME_DEF (optionTheory 6)
value IS_SOME_EQ_NOT_NONE (quantHeuristicsTheory 67)
value IS_SOME_EXISTS (optionTheory 31)
value IS_SOME_PRS (quotient_optionTheory 7)
value is_some_ptree (patricia_castsSyntax 106)
value IS_SOME_RSP (quotient_optionTheory 8)
value IS_SOME_select_fun (quantHeuristicsLibAbbrev 28)
value is_some_tm (optionLib 14), value is_some_tm (optionSyntax 13)
value is_sorted (sortingSyntax 27)
value is_splitl (rich_listSyntax 58)
value is_splitp (rich_listSyntax 59)
value is_splitr (rich_listSyntax 60)
value is_sqrt (transcSyntax 58)
value is_stopped_def (pathTheory 16)
value is_stopped_thm (pathTheory 96)
value is_str (stringSyntax 157)
value is_strcat (stringSyntax 158)
value is_string (stringLib 30), value is_string (stringSyntax 159)
value is_string_case (stringSyntax 160)
value is_string_ge (stringSyntax 161)
value is_string_gt (stringSyntax 162)
value is_string_le (stringSyntax 163)
value is_string_lit (Literal 16)
value is_string_literal (Lexis 18), value is_string_literal (stringSyntax 180)
value is_string_lt (stringSyntax 164)
value is_stringset_of_ptree (patricia_castsSyntax 135)
value is_strlen (stringSyntax 165)
value is_sub (stringSyntax 166)
value is_sub_bag (bagLib 24), value is_sub_bag (bagSyntax 22)
value IS_SUBLIST (rich_listTheory 10)
value IS_SUBLIST_APPEND (rich_listTheory 208)
value IS_SUBLIST_REVERSE (rich_listTheory 209)
value is_sublist_tm (rich_listSyntax 61)
value is_subset (pred_setSyntax 137)
value is_substring (Lib 71), value is_substring (stringSyntax 167)
value is_suc (Arith_cons 30), value is_suc (numSyntax 116)
value IS_SUFFIX (rich_listTheory 11), value is_suffix (rich_listSyntax 62)
value IS_SUFFIX_APPEND (rich_listTheory 210)
value IS_SUFFIX_compute (rich_listTheory 215)
value IS_SUFFIX_CONS2_E (rich_listTheory 211)
value IS_SUFFIX_IS_SUBLIST (rich_listTheory 212)
value IS_SUFFIX_REFL (rich_listTheory 213)
value IS_SUFFIX_REVERSE (rich_listTheory 214)
value is_suffix_tm (rich_listSyntax 63)
value is_sum (listSyntax 149)
value is_sum_image (pred_setSyntax 147)
value IS_SUM_REP (sumTheory 9)
value is_sum_set (pred_setSyntax 148)
value is_sum_size (basicSizeSyntax 25)
value is_surj (pred_setSyntax 152)
value is_sw2sw (wordsSyntax 267)
value is_swap (pairSyntax 71)
value is_T (Solve 8)
value is_take (listSyntax 150)
value is_tan (transcSyntax 59)
value is_tdiv (transcSyntax 60)
value is_temp_binding (Theory 18), value is_temp_binding (TheoryPP 42)
value is_testbit (bitstringSyntax 115)
value is_the (optionLib 38), value is_the (optionSyntax 37)
value is_the_ptree (patricia_castsSyntax 105)
value is_the_value (boolSyntax 108)
value is_times_2exp (bitSyntax 71)
value is_tl (listSyntax 151)
value is_toAList (sptreeSyntax 79)
value is_tochar (stringSyntax 168)
value is_tokens (stringSyntax 169)
value is_toList (sptreeSyntax 80)
value is_tolower (stringSyntax 170)
value is_toString (integer_wordSyntax 61)
value is_toupper (stringSyntax 171)
value is_transform (patriciaSyntax 84)
value is_transformw (patricia_castsSyntax 115)
value is_translate (stringSyntax 172)
value is_traverse (patriciaSyntax 82)
value is_traverses (patricia_castsSyntax 130)
value is_traversew (patricia_castsSyntax 113)
value is_tree_cases (inftreeTheory 21)
value is_tree_def (inftreeTheory 11)
value is_tree_ind (inftreeTheory 22)
value is_tree_rules (inftreeTheory 23)
value is_tree_strongind (inftreeTheory 24)
value is_tvar (type_tokens 22)
value is_ty_antiq (parse_type 18)
HOL Type.is_type (help/Docfiles/Type.is_type.adoc 0), value is_type (FinalType 13)
value is_typed (Absyn 83)
value is_typesymbol (type_tokens 21)
value is_uint_max (integer_wordSyntax 53), value is_uint_max (wordsSyntax 268)
value is_uncurry (pairLib 62), value is_uncurry (pairSyntax 73)
value is_unhex (ASCIInumbersSyntax 57)
value is_union (bagLib 34), value is_union (bagSyntax 32), value is_union (pred_setSyntax 127), value is_union (sptreeSyntax 81)
value is_unit (mlibThm 40), value is_unit (state_transformerSyntax 48)
value is_unit_eq (mlibThm 42)
value is_univ (pred_setSyntax 124)
value is_unzip (listSyntax 152)
value is_unzip_fst (rich_listSyntax 64)
value is_unzip_snd (rich_listSyntax 65)
value is_update (combinSyntax 42)
value is_update_comb (combinSyntax 43)
value is_v2l (fcpSyntax 66)
value is_v2n (bitstringSyntax 116)
value is_v2s (bitstringSyntax 117)
value is_v2w (bitstringSyntax 118)
value IS_VALID (floatTheory 81), value is_valid (ieeeTheory 78)
value IS_VALID_CLOSEST (floatTheory 82)
value IS_VALID_DEFLOAT (floatTheory 83)
value IS_VALID_FINITE (floatTheory 84)
value IS_VALID_NONEMPTY (floatTheory 85)
value IS_VALID_ROUND (floatTheory 86)
value IS_VALID_SPECIAL (floatTheory 87)
HOL Term.is_var (help/Docfiles/Term.is_var.adoc 0), value is_var (FinalTerm 46), value is_var (mlibTerm 32)
HOL Type.is_vartype (help/Docfiles/Type.is_vartype.adoc 0), value is_vartype (FinalType 8)
value is_vconstraint (CooperSyntax 46)
value is_vstruct (pairLib 69), value is_vstruct (pairSyntax 82), value is_vstruct (pairTheory 86)
value is_W (combinSyntax 40)
value is_w2i (integer_wordSyntax 50)
value is_w2l (wordsSyntax 269)
value is_w2n (wordsSyntax 270)
value is_w2s (wordsSyntax 271)
value is_w2v (bitstringSyntax 119)
value is_w2w (wordsSyntax 272)
value is_wf (sptreeSyntax 82)
value is_WFR (wfrecUtils 21)
value is_while (numSyntax 117)
value is_widen (state_transformerSyntax 49)
value is_word_1comp (wordsSyntax 273)
value is_word_2comp (wordsSyntax 274)
value is_word_abs (wordsSyntax 279)
value is_word_add (wordsSyntax 280)
value is_word_and (wordsSyntax 281)
value is_word_asr (wordsSyntax 282)
value is_word_asr_bv (wordsSyntax 283)
value is_word_bit (wordsSyntax 284)
value is_word_bits (wordsSyntax 285)
value is_word_compare (wordsSyntax 286)
value is_word_concat (wordsSyntax 287)
value is_word_div (wordsSyntax 288)
value is_word_extract (wordsSyntax 289)
value is_word_from_bin_list (wordsSyntax 290)
value is_word_from_bin_string (wordsSyntax 291)
value is_word_from_dec_list (wordsSyntax 292)
value is_word_from_dec_string (wordsSyntax 293)
value is_word_from_hex_list (wordsSyntax 294)
value is_word_from_hex_string (wordsSyntax 295)
value is_word_from_oct_list (wordsSyntax 296)
value is_word_from_oct_string (wordsSyntax 297)
value is_word_ge (wordsSyntax 298)
value is_word_gt (wordsSyntax 299)
value is_word_H (wordsSyntax 275)
value is_word_hi (wordsSyntax 300)
value is_word_hs (wordsSyntax 301)
value is_word_join (wordsSyntax 302)
value is_word_L (wordsSyntax 276)
value is_word_L2 (wordsSyntax 277)
value is_word_le (wordsSyntax 303)
value is_word_len (wordsSyntax 304)
value is_word_literal (wordsSyntax 20)
value is_word_lo (wordsSyntax 305)
value is_word_log2 (wordsSyntax 306)
value is_word_ls (wordsSyntax 307)
value is_word_lsb (wordsSyntax 308)
value is_word_lsl (wordsSyntax 309)
value is_word_lsl_bv (wordsSyntax 310)
value is_word_lsr (wordsSyntax 311)
value is_word_lsr_bv (wordsSyntax 312)
value is_word_lt (wordsSyntax 313)
value is_word_max (wordsSyntax 314)
value is_word_min (wordsSyntax 315)
value is_word_mod (wordsSyntax 316)
value is_word_modify (wordsSyntax 317)
value is_word_msb (wordsSyntax 318)
value is_word_mul (wordsSyntax 319)
value is_word_nand (wordsSyntax 320)
value is_word_nor (wordsSyntax 321)
value is_word_or (wordsSyntax 322)
value is_word_ptree_type (patricia_castsSyntax 7)
value is_word_reduce (wordsSyntax 323)
value is_word_replicate (wordsSyntax 324)
value is_word_reverse (wordsSyntax 325)
value is_word_rol (wordsSyntax 326)
value is_word_rol_bv (wordsSyntax 327)
value is_word_ror (wordsSyntax 328)
value is_word_ror_bv (wordsSyntax 329)
value is_word_rrx (wordsSyntax 330)
value is_word_sdiv (wordsSyntax 331)
value is_word_sign_extend (wordsSyntax 332)
value is_word_slice (wordsSyntax 333)
value is_word_smax (wordsSyntax 334)
value is_word_smin (wordsSyntax 335)
value is_word_smod (wordsSyntax 336)
value is_word_srem (wordsSyntax 337)
value is_word_sub (wordsSyntax 338)
value is_word_T (wordsSyntax 278)
value is_word_to_bin_list (wordsSyntax 339)
value is_word_to_bin_string (wordsSyntax 340)
value is_word_to_dec_list (wordsSyntax 341)
value is_word_to_dec_string (wordsSyntax 342)
value is_word_to_hex_list (wordsSyntax 343)
value is_word_to_hex_string (wordsSyntax 344)
value is_word_to_oct_list (wordsSyntax 345)
value is_word_to_oct_string (wordsSyntax 346)
value is_word_type (wordsSyntax 8)
value is_word_xnor (wordsSyntax 347)
value is_word_xor (wordsSyntax 348)
value is_wordempty (patricia_castsSyntax 107)
value is_wordset_of_ptree (patricia_castsSyntax 123)
value is_write (state_transformerSyntax 50)
value is_zero (Arith_cons 35), value is_zero (Literal 5), value is_zero (ieeeTheory 79)
value is_zero_extend (bitstringSyntax 120)
value is_zip (listSyntax 153)
value isacut (hrealTheory 16)
value ISACUT_HRAT (hrealTheory 78)
value isAlpha (UnicodeChars 149)
value isAlpha_def (stringTheory 26)
value isalpha_tm (stringSyntax 17)
value isAlphaNum (UnicodeChars 151)
value isAlphaNum_def (stringTheory 25)
value isalphanum_tm (stringSyntax 18)
value isAscii_def (stringTheory 27)
value isascii_tm (stringSyntax 19)
value isCntrl_def (stringTheory 28)
value iscntrl_tm (stringSyntax 20)
value Isdenormal (ieeeTheory 10)
value isDigit (UnicodeChars 150)
value isDigit_def (stringTheory 29)
value isdigit_tm (stringSyntax 21)
value isDisk (FinalTag 8), value isDisk (Tag 9)
HOL Tag.isEmpty (help/Docfiles/Tag.isEmpty.adoc 0), value isEmpty (CharSet 10), value isEmpty (FinalTag 7), value isEmpty (Redblackmap 18), value isEmpty (Redblackset 14), value isEmpty (Tag 8), value isEmpty (UTF8Set 7)
value isEmpty_toList (sptreeTheory 68)
value isEmpty_toListA (sptreeTheory 69)
value isEmpty_union (sptreeTheory 70)
value ISFINITE (floatTheory 72)
value ISFINITE_LEMMA (floatTheory 73)
value isGraph_def (stringTheory 30)
value isgraph_tm (stringSyntax 22)
value isHexDigit_def (stringTheory 31)
value ishexdigit_tm (stringSyntax 23)
value Isintegral (ieeeTheory 11)
value ISL (sumTheory 7)
value ISL_exists (quantHeuristicsTheory 63)
value ISL_OR_ISR (sumTheory 27)
value ISL_PRS (quotient_sumTheory 13)
value ISL_RSP (quotient_sumTheory 14)
value isl_tm (sumSyntax 6)
value isLower_def (stringTheory 32)
value islower_tm (stringSyntax 24)
value ismet (topologyTheory 7)
value ISMET_R1 (topologyTheory 24)
value isMLIdent (UnicodeChars 153)
value Isnan (ieeeTheory 12)
value Isnormal (ieeeTheory 13)
value ISO (ind_typeTheory 13)
value ISO_FUN (ind_typeTheory 36)
value ISO_REFL (ind_typeTheory 37)
value ISO_USAGE (ind_typeTheory 38)
HOL Drule.ISPEC (help/Docfiles/Drule.ISPEC.adoc 0), value ISPEC (Drule 48), value ISPEC (Q 26)
value ISPEC_THEN (Q 31)
HOL Drule.ISPECL (help/Docfiles/Drule.ISPECL.adoc 0), value ISPECL (Drule 49), value ISPECL (Q 27)
value ISPECL_THEN (Q 32)
value isPREFIX (listTheory 49)
value isPREFIX_DEF (stringTheory 96)
value isPREFIX_IND (stringTheory 97)
value isPREFIX_STRCAT (stringTheory 98)
value isPREFIX_THM (listTheory 409)
value isprefix_tm (listSyntax 24), value isprefix_tm (stringSyntax 25)
value isPrint_def (stringTheory 33)
value isprint_tm (stringSyntax 26)
value isPunct_def (stringTheory 34)
value ispunct_tm (stringSyntax 27)
value iSQR (numeralTheory 8)
value isqrt (Arbnumcore 46)
value iSQRT0_def (logrootTheory 8)
value iSQRT1_def (logrootTheory 9)
value iSQRT2_def (logrootTheory 10)
value iSQRT3_def (logrootTheory 11)
value iSQRT_COMPUTE_CONV (isqrtLib 2)
structure isqrtLib
value ISR (sumTheory 8)
value ISR_exists (quantHeuristicsTheory 64)
value ISR_PRS (quotient_sumTheory 15)
value ISR_RSP (quotient_sumTheory 16)
value isr_tm (sumSyntax 7)
value isSpace_def (stringTheory 35)
value isspace_tm (stringSyntax 28)
value isSubset (Redblackset 16)
value isSymbolic (UnicodeChars 152)
value istopology (topologyTheory 8)
HOL Lib.istream (help/Docfiles/Lib.istream.adoc 0), type istream (Lib 6)
value iSUB_DEF (numeralTheory 9)
value iSUB_THM (numeralTheory 26)
value iSUC (numeral_bitTheory 13)
value isUnix (Systeml 37)
value isUpper_def (stringTheory 36)
value isupper_tm (stringSyntax 29)
value Iszero (ieeeTheory 14)
value IT_EXISTS (Rules 13)
value ITBAG_curried_def (bagTheory 29)
value ITBAG_EMPTY (bagTheory 190)
value ITBAG_IND (bagTheory 191)
value ITBAG_INSERT (bagTheory 192)
value ITBAG_THM (bagTheory 193)
value ITBAG_tupled_primitive_def (bagTheory 30)
value ITEM (HOLtokens 13)
value item_map_def (fmaptreeTheory 12)
value item_thm (fmaptreeTheory 25)
value ITEMS (HOLtokens 12)
value ITERATION (whileTheory 13)
HOL Lib.itlist (help/Docfiles/Lib.itlist.adoc 0), value itlist (Lib 73)
HOL Lib.itlist2 (help/Docfiles/Lib.itlist2.adoc 0), value itlist2 (Lib 72)
value itnet (Net 24), value itnet (Raw 17)
value itself_Axiom (boolTheory 183)
value itself_case_thm (boolTheory 33)
value itself_induction (boolTheory 184)
value itself_TY_DEF (boolTheory 32)
value ITSELF_UNIQUE (boolTheory 103)
value ITSET_curried_def (pred_setTheory 22)
value ITSET_def (pred_setTheory 290)
value ITSET_EMPTY (pred_setTheory 286)
value ITSET_eq_FOLDL_SET_TO_LIST (listTheory 192)
value ITSET_IND (pred_setTheory 287), value ITSET_ind (pred_setTheory 291)
value ITSET_INSERT (pred_setTheory 288)
value ITSET_THM (pred_setTheory 289)
value ITSET_tupled_primitive_def (pred_setTheory 23)
value ivl_aux_def (canonicalTheory 20), value ivl_aux_def (ringNormTheory 41)
value ivl_aux_ok (canonicalTheory 50)
value IVT (limTheory 59)
value IVT2 (limTheory 60)
value iZ (numeralTheory 10)
structure jbUtils
value join (mlibUseful 125)
value JOIN_DEF (errorStateMonadTheory 14), value JOIN_DEF (state_transformerTheory 9), value JOIN_def (patriciaTheory 19)
value JOIN_MAP (errorStateMonadTheory 41), value JOIN_MAP (state_transformerTheory 30)
value JOIN_MAP_JOIN (errorStateMonadTheory 42), value JOIN_MAP_JOIN (state_transformerTheory 31)
value JOIN_MMAP_UNIT (errorStateMonadTheory 43), value JOIN_MMAP_UNIT (state_transformerTheory 32)
value join_simpls (RW 12)
value join_tm (state_transformerSyntax 11)
value JOIN_UNIT (errorStateMonadTheory 44), value JOIN_UNIT (state_transformerTheory 33)
value joint_conditional (probabilityTheory 95)
value joint_distribution3_def (probabilityTheory 13)
value joint_distribution_def (probabilityTheory 14)
value joint_distribution_le (probabilityTheory 96)
value joint_distribution_le2 (probabilityTheory 97)
value joint_distribution_le_1 (probabilityTheory 98)
value joint_distribution_pos (probabilityTheory 99)
value joint_distribution_sum_mul1 (probabilityTheory 100)
value joint_distribution_sums_1 (probabilityTheory 101)
value joint_distribution_sym (probabilityTheory 102)
value JRH_INDUCT_UTIL (boolTheory 104)
structure jrhCore
structure jrhTactics
structure jrhUtils
value justify_divides (int_arithTheory 51)
value justify_divides2 (int_arithTheory 52)
value justify_divides3 (int_arithTheory 53)
HOL Lib.K (help/Docfiles/Lib.K.adoc 0), value K (Lib 14), value K (mlibUseful 27)
value K2 (enumeralTheory 7)
value K_DEF (combinTheory 9)
value K_o_THM (combinTheory 28)
value K_PARTIAL (util_probTheory 90)
value K_PRS (quotientTheory 58)
value K_RSP (quotientTheory 59)
value K_SUBSET (util_probTheory 91)
value K_THM (combinTheory 27)
value K_tm (combinSyntax 4)
value kall_tac (bossLib 120), value kall_tac (lcsymtacs 5)
value kappa (UnicodeChars 11)
constructor kdone (PEGParse 19)
constructor Kepo (holyHammer 3)
type kernelid (KernelSig 8), value kernelid (FinalThm 9)
type kernelname (KernelSig 3), type kernelname (type_grammar 3)
structure KernelSig
structure KernelTypes
type key (LVTermNet 6), type key (PIntMap 23), type key (mlibPatricia 18)
value keys (patriciaLib 21)
value KEYS_def (patriciaTheory 20)
value KEYS_PEEK (patriciaTheory 78)
value keys_tm (patriciaSyntax 18)
value KEYSs_def (patricia_castsTheory 18)
value keyss_tm (patricia_castsSyntax 35)
value KEYSw_def (patricia_castsTheory 19)
value keysw_tm (patricia_castsSyntax 18)
constructor kfailed (PEGParse 19)
value knaster_tarski (posetTheory 31)
value knaster_tarski_gfp (posetTheory 32)
value knaster_tarski_lfp (posetTheory 33)
constructor KNN (holyHammer 3)
value KNOW_TAC (Tactic 89)
HOL Parse.known_constants (help/Docfiles/Parse.known_constants.adoc 0), value known_constants (Overload 63), value known_constants (Parse 227), value known_constants (term_grammar 152)
value known_UserStyles (PPBackEnd 28)
value KoenigsLemma (pred_setTheory 292)
value KoenigsLemma_WF (pred_setTheory 293)
type kont (PEGParse 19)
value kRENAME_TAC (Q 67)
constructor ksym (PEGParse 19)
constructor L (GenPolyCanon 4)
value l2n2 (numposrepTheory 6)
value l2n_11 (patricia_castsTheory 52)
value l2n_2_thms (numposrepTheory 28)
value l2n_APPEND (patricia_castsTheory 53)
value l2n_def (numposrepTheory 7)
value l2n_DIGIT (numposrepTheory 29)
value l2n_dropWhile_0 (numposrepTheory 31)
value l2n_eq_0 (numposrepTheory 32)
value l2n_LENGTH (patricia_castsTheory 54)
value l2n_lt (numposrepTheory 33)
value l2n_n2l (numposrepTheory 34)
value l2n_pow2_compute (numposrepTheory 35)
value l2n_SNOC_0 (numposrepTheory 30)
value l2n_tm (numposrepSyntax 5)
value L2V_def (fcpTheory 17)
value l2v_tm (fcpSyntax 28)
value l2w_def (wordsTheory 16)
value l2w_tm (wordsSyntax 34)
value l2w_w2l (wordsTheory 542)
constructor L_Cflipped (GenPolyCanon 4)
value L_EUCLIDES (gcdTheory 42)
value LABEL_ASSUM (markerLib 52)
value label_def (markerTheory 9)
value label_tm (markerSyntax 8)
value label_ty (markerSyntax 19)
value LABEL_X_ASSUM (markerLib 53)
value labels_def (pathTheory 17)
value labels_LMAP (pathTheory 97)
value labels_plink (pathTheory 98)
value labels_unfold (pathTheory 99)
constructor LAM (Absyn 12)
constructor LAMB (HolKernelDoc 10), constructor LAMB (Psyntax 45), constructor LAMB (Rsyntax 48)
constructor LAMBDA (term_grammar 48), type lambda (HolKernelDoc 10), type lambda (Psyntax 45), type lambda (Rsyntax 48), value Lambda (UnicodeChars 27), value lambda (UnicodeChars 12)
value LAMBDA_PROD (pairTheory 34)
value LAMBDA_PRS (quotientTheory 60)
value LAMBDA_PRS1 (quotientTheory 61)
value LAMBDA_REP_ABS_RSP (quotientTheory 62)
value LAMBDA_RSP (quotientTheory 63)
value LAMBDA_SYSTEM_ADDITIVE (measureTheory 132)
value LAMBDA_SYSTEM_ALGEBRA (measureTheory 133)
value LAMBDA_SYSTEM_CARATHEODORY (measureTheory 134)
value LAMBDA_SYSTEM_COMPL (measureTheory 135)
value lambda_system_def (measureTheory 17)
value LAMBDA_SYSTEM_EMPTY (measureTheory 136)
value LAMBDA_SYSTEM_INCREASING (measureTheory 137)
value LAMBDA_SYSTEM_INTER (measureTheory 138)
value LAMBDA_SYSTEM_POSITIVE (measureTheory 139)
value LAMBDA_SYSTEM_STRONG_ADDITIVE (measureTheory 140)
value LAMBDA_SYSTEM_STRONG_SUM (measureTheory 141)
HOL Conv.LAND_CONV (help/Docfiles/Conv.LAND_CONV.adoc 0), value LAND_CONV (Conv 10), value LAND_CONV (liteLib 117)
value langle (UnicodeChars 85)
value LAPPEND (llistTheory 5)
value LAPPEND_ASSOC (llistTheory 33)
value LAPPEND_EQ_LNIL (llistTheory 34)
value LAPPEND_fromList (llistTheory 36)
value LAPPEND_NIL_2ND (llistTheory 35)
value largest (ieeeTheory 80)
value largest_eqs (mlibClause 43)
value largest_lits (mlibClause 42)
value largest_tms (mlibClause 44)
HOL Lib.last (help/Docfiles/Lib.last.adoc 0), value LAST (rich_listTheory 454), value last (Lib 74)
value LAST_APPEND (rich_listTheory 456)
value LAST_APPEND_CONS (listTheory 193)
value LAST_ASSUM (Tactical 73), value last_assum (Tactical 74), value last_assum (lcsymtacs 36)
value LAST_compute (listTheory 199)
value LAST_CONS (listTheory 194), value LAST_CONS (rich_listTheory 457)
value LAST_CONS_cond (listTheory 195)
HOL listLib.LAST_CONV (help/Docfiles/listLib.LAST_CONV.adoc 0), value LAST_CONV (ListConv1 33), value LAST_CONV (listLib 47)
value LAST_DEF (listTheory 23)
value LAST_EL (listTheory 196)
HOL Conv.LAST_EXISTS_CONV (help/Docfiles/Conv.LAST_EXISTS_CONV.adoc 0), value LAST_EXISTS_CONV (Conv 24)
HOL Conv.LAST_FORALL_CONV (help/Docfiles/Conv.LAST_FORALL_CONV.adoc 0), value LAST_FORALL_CONV (Conv 25)
value last_forall_seq_conv (QbfConv 47)
value LAST_LASTN_LAST (rich_listTheory 229)
value last_plink (pathTheory 100)
value last_pmap (pathTheory 101)
value last_quant_conv (QbfConv 34)
value last_quant_seq_conv (QbfConv 43)
value LAST_REVERSE (listTheory 197)
value last_seg (pathTheory 102)
value LAST_SNOC (listTheory 198)
value last_take (pathTheory 103)
value last_tcerror (Preterm 81)
value last_thm (pathTheory 18)
value last_tm (listSyntax 25)
value LAST_X_ASSUM (Tactical 75), value last_x_assum (Tactical 76), value last_x_assum (lcsymtacs 37)
value lastChar (UTF8 5)
HOL Tactical.LASTGOAL (help/Docfiles/Tactical.LASTGOAL.adoc 0), value LASTGOAL (Tactical 35)
value LASTN (rich_listTheory 12)
value LASTN_1 (rich_listTheory 216)
value LASTN_APPEND1 (rich_listTheory 217)
value LASTN_APPEND2 (rich_listTheory 218)
value LASTN_BUTFIRSTN (rich_listTheory 455)
value LASTN_BUTLASTN (rich_listTheory 219)
value LASTN_compute (rich_listTheory 228)
value LASTN_CONS (rich_listTheory 220)
HOL listLib.LASTN_CONV (help/Docfiles/listLib.LASTN_CONV.adoc 0), value LASTN_CONV (ListConv1 36), value LASTN_CONV (listLib 50)
value LASTN_DROP (rich_listTheory 221)
value LASTN_LASTN (rich_listTheory 222)
value LASTN_LENGTH_APPEND (rich_listTheory 223)
value LASTN_LENGTH_ID (rich_listTheory 224)
value LASTN_MAP (rich_listTheory 225)
value LASTN_REVERSE (rich_listTheory 226)
value LASTN_SEG (rich_listTheory 227)
value lastn_tm (rich_listSyntax 8)
constructor LastTM (term_grammar 14)
value latest (Canon 34), value latest (refuteLib 34)
type lazy (liteLib 81), value lazy (liteLib 82)
value lazy_beta_conv (Term 8)
value lazyfy_thm (computeLib 21), value lazyfy_thm (compute_rules 30)
constructor LBracket (type_tokens 2)
value lbtree_absrep (lbtreeTheory 15)
value lbtree_bisimulation (lbtreeTheory 42)
value lbtree_case_def (lbtreeTheory 16)
value lbtree_case_thm (lbtreeTheory 43)
value lbtree_cases (lbtreeTheory 44)
value lbtree_grammars (lbtreeTheory 64)
value lbtree_strong_bisimulation (lbtreeTheory 45)
value lbtree_TY_DEF (lbtreeTheory 14)
value lbtree_ue_Axiom (lbtreeTheory 46)
structure lbtreeTheory
value lcm (CooperMath 11), value lcm (Int_extra 5)
value LCM_0 (gcdTheory 35)
value LCM_1 (gcdTheory 36)
value LCM_COMM (gcdTheory 37)
value lcm_def (gcdTheory 8)
value lcm_eliminate (int_arithTheory 54)
value LCM_IS_LEAST_COMMON_MULTIPLE (gcdTheory 38)
value LCM_LE (gcdTheory 39)
value LCM_LEAST (gcdTheory 40)
value lcml (CooperMath 12)
value LCOMM_THM (boolTheory 105)
value LCONS (llistTheory 6)
value LCONS_11 (llistTheory 37)
value LCONS_NOT_NIL (llistTheory 38)
structure lcsymtacs
value ldistrib_tm (boolSyntax 174)
value ldquo (UnicodeChars 101)
value LDROP (llistTheory 7)
value LDROP1_THM (llistTheory 39)
value LDROP_ADD (llistTheory 40)
value LDROP_THM (llistTheory 41)
value LE (arithmeticTheory 133)
value LE_0 (integralTheory 68)
value le_01 (extrealTheory 201)
value le_02 (extrealTheory 202)
value le_add (extrealTheory 203)
value le_add2 (extrealTheory 204)
value LE_ADD_LCANCEL (arithmeticTheory 191)
value LE_ADD_RCANCEL (arithmeticTheory 192)
value le_addr (extrealTheory 205)
value le_addr_imp (extrealTheory 206)
value le_antisym (extrealTheory 207)
value le_context_rwt1 (int_arithTheory 55)
value le_context_rwt2 (int_arithTheory 56)
value le_context_rwt3 (int_arithTheory 57)
value le_context_rwt4 (int_arithTheory 58)
value le_context_rwt5 (int_arithTheory 59)
HOL reduceLib.LE_CONV (help/Docfiles/reduceLib.LE_CONV.adoc 0), value LE_CONV (Arithconv 7), value LE_CONV (reduceLib 14)
value le_epsilon (extrealTheory 208)
value LE_EXP_ISO (logrootTheory 17)
value LE_INF (util_probTheory 92), value le_inf (extrealTheory 209)
value le_infty (extrealTheory 210)
value le_int (realTheory 438)
value le_inv (extrealTheory 211)
value le_ladd (extrealTheory 212)
value le_ladd_imp (extrealTheory 213)
value le_ldiv (extrealTheory 214)
value le_lmul_imp (extrealTheory 215)
value le_lneg (extrealTheory 216)
value le_lsub_imp (extrealTheory 217)
value LE_LT (integralTheory 69), value le_lt (extrealTheory 218)
value LE_LT1 (arithmeticTheory 193)
value le_max (extrealTheory 219)
value le_max1 (extrealTheory 220)
value le_max2 (extrealTheory 221)
value le_min (extrealTheory 222)
value le_move_all_right (int_arithTheory 60)
value le_move_right_left (int_arithTheory 61)
value le_mul (extrealTheory 223)
value le_mul_epsilon (extrealTheory 224)
value le_mul_neg (extrealTheory 225)
value LE_MULT_CANCEL_LBARE (arithmeticTheory 194)
value LE_MULT_CANCEL_RBARE (arithmeticTheory 195)
value LE_MULT_LCANCEL (arithmeticTheory 196)
value LE_MULT_RCANCEL (arithmeticTheory 197)
value le_neg (extrealTheory 226)
value le_num (extrealTheory 227)
value LE_NUM_CEILING (realTheory 54)
value LE_NUM_OF_INT (integerTheory 308)
value le_pow2 (extrealTheory 228)
value le_radd (extrealTheory 229)
value le_radd_imp (extrealTheory 230)
value le_rat (realTheory 439)
value le_ratl (realTheory 440)
value le_ratr (realTheory 441)
value le_rdiv (extrealTheory 231)
value le_refl (extrealTheory 232)
value le_rmul_imp (extrealTheory 233)
value LE_SEQ_IMP_LE_LIM (seqTheory 20)
value le_sub_eq (extrealTheory 234)
value le_sub_eq2 (extrealTheory 235)
value le_sub_imp (extrealTheory 236)
value LE_SUB_RCANCEL (arithmeticTheory 198)
value LE_SUC (util_probTheory 93)
value le_sup (extrealTheory 237)
value le_sup_imp (extrealTheory 238)
value le_total (extrealTheory 239)
value le_trans (extrealTheory 240)
constructor LEAF (mlibUseful 171)
value leaf_normalise (OmegaMath 18)
value leaf_tm (patriciaSyntax 10)
value LEAST_BIT_LT (wordsTheory 163)
value LEAST_DEF (whileTheory 6)
value LEAST_ELIM (whileTheory 14)
HOL numLib.LEAST_ELIM_TAC (help/Docfiles/numLib.LEAST_ELIM_TAC.adoc 0), value LEAST_ELIM_TAC (numLib 23)
value LEAST_EQ (whileTheory 15)
value LEAST_EXISTS (whileTheory 16)
value LEAST_EXISTS_IMP (whileTheory 17)
value LEAST_INT_DEF (integerTheory 9)
value LEAST_INT_tm (intSyntax 26)
value LEAST_INTRO (whileTheory 18)
value LEAST_T (whileTheory 19)
value LEAST_THM (bitTheory 97)
value least_tm (numSyntax 18)
value LEAVE_LETS (BasicProvers 22)
value lebesgue_grammars (lebesgueTheory 148)
value lebesgue_monotone_convergence (lebesgueTheory 73)
value lebesgue_monotone_convergence_lemma (lebesgueTheory 74)
value lebesgue_monotone_convergence_subset (lebesgueTheory 75)
structure lebesgueTheory
constructor LEFT (EmitML 10), constructor LEFT (HOLgrammars 4), constructor Left (CooperMath 16), value LEFT (Parse 231)
value LEFT_ABS_VSTRUCT (Rules 18)
value LEFT_ADD_DISTRIB (arithmeticTheory 134)
value LEFT_ADD_DISTRIB_CONV (Thm_convs 22)
value LEFT_AND_CONG (boolTheory 106)
HOL Conv.LEFT_AND_EXISTS_CONV (help/Docfiles/Conv.LEFT_AND_EXISTS_CONV.adoc 0), value LEFT_AND_EXISTS_CONV (Conv 62)
HOL Conv.LEFT_AND_FORALL_CONV (help/Docfiles/Conv.LEFT_AND_FORALL_CONV.adoc 0), value LEFT_AND_FORALL_CONV (Conv 54)
value LEFT_AND_FORALL_THM (boolTheory 107)
value LEFT_AND_OVER_OR (boolTheory 108)
HOL PairRules.LEFT_AND_PEXISTS_CONV (help/Docfiles/PairRules.LEFT_AND_PEXISTS_CONV.adoc 0), value LEFT_AND_PEXISTS_CONV (PairRules 40)
HOL PairRules.LEFT_AND_PFORALL_CONV (help/Docfiles/PairRules.LEFT_AND_PFORALL_CONV.adoc 0), value LEFT_AND_PFORALL_CONV (PairRules 33)
value LEFT_CONJ_TAC (schneiderUtils 24)
value LEFT_DISJ_TAC (schneiderUtils 25)
value LEFT_DIST_NORM_CONV (Thm_convs 8)
value LEFT_EXISTS (Rules 19)
value LEFT_EXISTS_AND_THM (boolTheory 109)
value LEFT_EXISTS_IMP_THM (boolTheory 110)
value LEFT_EXISTS_TAC (schneiderUtils 26)
value LEFT_FORALL_IMP_THM (boolTheory 111)
value LEFT_FORALL_OR_THM (boolTheory 112)
value LEFT_FORALL_TAC (schneiderUtils 27)
value LEFT_ID_DEF (operatorTheory 8)
value LEFT_IMP_AND_INTRO (quantHeuristicsTheory 68)
value LEFT_IMP_AND_INTRO_RULE (quantHeuristicsTools 37)
HOL Conv.LEFT_IMP_EXISTS_CONV (help/Docfiles/Conv.LEFT_IMP_EXISTS_CONV.adoc 0), value LEFT_IMP_EXISTS_CONV (Conv 69)
HOL Conv.LEFT_IMP_FORALL_CONV (help/Docfiles/Conv.LEFT_IMP_FORALL_CONV.adoc 0), value LEFT_IMP_FORALL_CONV (Conv 73)
value LEFT_IMP_OR_INTRO (quantHeuristicsTheory 69)
value LEFT_IMP_OR_INTRO_RULE (quantHeuristicsTools 39)
HOL PairRules.LEFT_IMP_PEXISTS_CONV (help/Docfiles/PairRules.LEFT_IMP_PEXISTS_CONV.adoc 0), value LEFT_IMP_PEXISTS_CONV (PairRules 47)
HOL PairRules.LEFT_IMP_PFORALL_CONV (help/Docfiles/PairRules.LEFT_IMP_PFORALL_CONV.adoc 0), value LEFT_IMP_PFORALL_CONV (PairRules 50)
value LEFT_LEMMA_DISJ_CASES_TAC (schneiderUtils 28)
HOL PairRules.LEFT_LIST_PBETA (help/Docfiles/PairRules.LEFT_LIST_PBETA.adoc 0), value LEFT_LIST_PBETA (PairRules 17)
value LEFT_NO_EXISTS_TAC (schneiderUtils 29)
value LEFT_NO_FORALL_TAC (schneiderUtils 30)
value LEFT_OR_CONG (boolTheory 113)
HOL Conv.LEFT_OR_EXISTS_CONV (help/Docfiles/Conv.LEFT_OR_EXISTS_CONV.adoc 0), value LEFT_OR_EXISTS_CONV (Conv 57)
value LEFT_OR_EXISTS_THM (boolTheory 114)
HOL Conv.LEFT_OR_FORALL_CONV (help/Docfiles/Conv.LEFT_OR_FORALL_CONV.adoc 0), value LEFT_OR_FORALL_CONV (Conv 66)
value LEFT_OR_OVER_AND (boolTheory 115)
HOL PairRules.LEFT_OR_PEXISTS_CONV (help/Docfiles/PairRules.LEFT_OR_PEXISTS_CONV.adoc 0), value LEFT_OR_PEXISTS_CONV (PairRules 36)
HOL PairRules.LEFT_OR_PFORALL_CONV (help/Docfiles/PairRules.LEFT_OR_PFORALL_CONV.adoc 0), value LEFT_OR_PFORALL_CONV (PairRules 44)
HOL PairRules.LEFT_PBETA (help/Docfiles/PairRules.LEFT_PBETA.adoc 0), value LEFT_PBETA (PairRules 16)
value LEFT_RES_EXISTS_REGULAR (quotientTheory 64)
value LEFT_RES_FORALL_REGULAR (quotientTheory 65)
value LEFT_SUB_DISTRIB (arithmeticTheory 135)
value Leftarrow (UnicodeChars 72), value leftarrow (UnicodeChars 68)
value lemma_fn_1 (lebesgueTheory 76)
value lemma_fn_2 (lebesgueTheory 77)
value lemma_fn_3 (lebesgueTheory 78)
value lemma_fn_4 (lebesgueTheory 79)
value lemma_fn_5 (lebesgueTheory 80)
value lemma_fn_in_psfis (lebesgueTheory 81)
value lemma_fn_mono_increasing (lebesgueTheory 82)
value lemma_fn_sup (lebesgueTheory 83)
value lemma_fn_upper_bounded (lebesgueTheory 84)
value lemma_radon_max_in_F (lebesgueTheory 85)
value lemma_radon_seq_conv_sup (lebesgueTheory 86)
value LEN_DEF (listTheory 25)
value LEN_LENGTH_LEM (listTheory 225)
value LENGTH (listTheory 24), value LENGTH (rich_listTheory 458), value length (mlibStream 34), value length (seq 41)
value LENGTH_APPEND (listTheory 200), value LENGTH_APPEND (rich_listTheory 459)
value length_bitify (bitstringTheory 65)
value length_bitify_null (bitstringTheory 66)
value LENGTH_BUTFIRSTN (rich_listTheory 460)
value LENGTH_BUTLAST (rich_listTheory 461)
value LENGTH_BUTLASTN (rich_listTheory 230)
value LENGTH_CONS (listTheory 201), value LENGTH_CONS (rich_listTheory 462)
HOL listLib.LENGTH_CONV (help/Docfiles/listLib.LENGTH_CONV.adoc 0), value LENGTH_CONV (ListConv1 14), value LENGTH_CONV (listLib 28)
value LENGTH_COUNT_LIST (rich_listTheory 231)
value length_def (pathTheory 19)
value LENGTH_DROP (listTheory 202), value length_drop (pathTheory 104)
value LENGTH_dropWhile_LESS_EQ (listTheory 223)
value length_encoded (Coding 16)
value LENGTH_EQ (rich_listTheory 232)
value LENGTH_EQ_CONS (listTheory 203)
value LENGTH_EQ_NIL (listTheory 204), value LENGTH_EQ_NIL (rich_listTheory 463)
value LENGTH_EQ_NUM (listTheory 205)
value LENGTH_EQ_NUM_compute (listTheory 206)
value LENGTH_EQ_SUM (listTheory 207)
value length_field (bitstringTheory 67)
value LENGTH_FILTER_LEQ (rich_listTheory 233)
value LENGTH_FILTER_LEQ_MONO (listTheory 208)
value LENGTH_FILTER_LESS (rich_listTheory 234)
value LENGTH_FIRSTN (rich_listTheory 464)
value length_fixwidth (bitstringTheory 68)
value LENGTH_FLAT (rich_listTheory 235)
value LENGTH_fmap_to_alist (alistTheory 39)
value LENGTH_FOLDL (rich_listTheory 236)
value LENGTH_FOLDR (rich_listTheory 237)
value LENGTH_FRONT (rich_listTheory 238)
value LENGTH_FRONT_CONS (listTheory 209)
value LENGTH_GENLIST (listTheory 210), value LENGTH_GENLIST (rich_listTheory 465)
value LENGTH_l2n (numposrepTheory 24)
value LENGTH_LASTN (rich_listTheory 239)
value LENGTH_LE_NUM (quantHeuristicsTheory 70)
value LENGTH_LE_PLUS (quantHeuristicsTheory 71)
value LENGTH_LEN (listTheory 211)
value LENGTH_listRangeLHI (listRangeTheory 10)
value LENGTH_LUPDATE (listTheory 212)
value LENGTH_MAP (listTheory 213), value LENGTH_MAP (rich_listTheory 466)
value LENGTH_MAP2 (rich_listTheory 240)
value LENGTH_n2l (numposrepTheory 25)
value length_never_zero (pathTheory 105)
value LENGTH_NIL (listTheory 214), value LENGTH_NIL (rich_listTheory 467)
value LENGTH_NIL_SYM (listTheory 215), value LENGTH_NIL_SYM (quantHeuristicsTheory 72)
value LENGTH_NOT_NULL (rich_listTheory 241)
value length_nub_append (listTheory 410)
value LENGTH_o_REVERSE (listTheory 224)
value length_pad_left (bitstringTheory 69)
value length_pad_right (bitstringTheory 70)
value length_pmap (pathTheory 106)
value LENGTH_PRS (quotient_listTheory 19)
value LENGTH_REPLICATE (rich_listTheory 242)
value length_rev_count_list (bitstringTheory 71)
value LENGTH_REVERSE (listTheory 216), value LENGTH_REVERSE (rich_listTheory 468)
value length_rotate (bitstringTheory 72)
value LENGTH_RSP (quotient_listTheory 20)
value LENGTH_SCANL (rich_listTheory 243)
value LENGTH_SCANR (rich_listTheory 244)
value LENGTH_SEG (rich_listTheory 245)
value length_shiftr (bitstringTheory 73)
value length_sign_extend (bitstringTheory 74)
value LENGTH_SNOC (listTheory 217), value LENGTH_SNOC (rich_listTheory 469)
value LENGTH_TAKE (listTheory 218), value length_take (pathTheory 107)
value LENGTH_TAKE_EQ (listTheory 219)
value length_thm (pathTheory 108)
value LENGTH_TL (listTheory 220)
value length_tm (listSyntax 26)
value LENGTH_UNZIP (listTheory 221)
value LENGTH_UNZIP_FST (rich_listTheory 246)
value LENGTH_UNZIP_SND (rich_listTheory 247)
value LENGTH_V2L (fcpTheory 52)
value length_w2v (bitstringTheory 75)
value length_zero_extend (bitstringTheory 76)
value LENGTH_ZIP (listTheory 222), value LENGTH_ZIP (rich_listTheory 470)
value lensel (UnicodeChars 89)
value lenser (UnicodeChars 90)
value leq (UnicodeChars 119)
value LEQ_CONV (Solve_ineqs 9)
value LEQ_DIVIDES_FACT (dividesTheory 27)
value LEQ_PLUS_CONV (Thm_convs 38)
value leq_tm (intSyntax 20), value leq_tm (numSyntax 19), value leq_tm (realSyntax 17)
value les_abs_def (fracTheory 19)
value less1 (Arbnumcore 16), value less1 (mlibArbnum 17)
value less2 (Arbnumcore 17), value less2 (mlibArbnum 18)
value LESS_0 (prim_recTheory 18)
value LESS_0_0 (prim_recTheory 19)
value LESS_0_CASES (arithmeticTheory 136)
value LESS_ADD (arithmeticTheory 137)
value LESS_ADD_1 (arithmeticTheory 138)
value LESS_ADD_NONZERO (arithmeticTheory 139)
value LESS_ADD_SUC (arithmeticTheory 140)
value LESS_ALL (enumeralTheory 8)
value LESS_ALL_OU (enumeralTheory 64)
value LESS_ALL_OU_UO_LEM (enumeralTheory 65)
value LESS_ALL_UO_LEM (enumeralTheory 66)
value LESS_ALT (prim_recTheory 20)
value LESS_ANTISYM (arithmeticTheory 141)
value LESS_CARD_DIFF (pred_setTheory 294)
value LESS_CASES (arithmeticTheory 142)
value LESS_CASES_IMP (arithmeticTheory 143)
HOL wordsLib.LESS_CONV (help/Docfiles/wordsLib.LESS_CONV.adoc 0), value LESS_CONV (wordsLib 22)
value LESS_DEF (prim_recTheory 5)
value LESS_DIV_EQ_ZERO (arithmeticTheory 144)
value LESS_EQ (arithmeticTheory 145)
value LESS_EQ_0 (arithmeticTheory 149)
value LESS_EQ_ADD (arithmeticTheory 150)
value LESS_EQ_ADD_EXISTS (arithmeticTheory 151)
value LESS_EQ_ADD_SUB (arithmeticTheory 152)
value LESS_EQ_ANTISYM (arithmeticTheory 153)
value LESS_EQ_CASES (arithmeticTheory 154)
value LESS_EQ_EXISTS (arithmeticTheory 155)
value LESS_EQ_EXP_MULT (bitTheory 98)
value LESS_EQ_IFF_LESS_SUC (arithmeticTheory 156)
value LESS_EQ_IMP_LESS_SUC (arithmeticTheory 157)
value LESS_EQ_LESS_EQ_MONO (arithmeticTheory 158)
value LESS_EQ_LESS_TRANS (arithmeticTheory 159)
value LESS_EQ_MONO (arithmeticTheory 160)
value LESS_EQ_MONO_ADD_EQ (arithmeticTheory 161)
value LESS_EQ_PLUS (Theorems 18)
value LESS_EQ_REFL (arithmeticTheory 162)
value LESS_EQ_SUB_LESS (arithmeticTheory 163)
value LESS_EQ_SUC_REFL (arithmeticTheory 164)
value LESS_EQ_TRANS (arithmeticTheory 165)
value LESS_EQ_TRANSIT (Theorems 19)
value LESS_EQUAL_ADD (arithmeticTheory 146)
value LESS_EQUAL_ANTISYM (arithmeticTheory 147)
value LESS_EQUAL_DIFF (arithmeticTheory 148)
value LESS_EXP_SUC_MONO (arithmeticTheory 166)
value LESS_IMP_LESS_ADD (arithmeticTheory 167)
value LESS_IMP_LESS_OR_EQ (arithmeticTheory 168)
value LESS_IMP_NOT_0 (intExtensionTheory 31)
value LESS_LEAST (whileTheory 20)
value LESS_LEMMA1 (prim_recTheory 21)
value LESS_LEMMA2 (prim_recTheory 22)
value LESS_LESS_CASES (arithmeticTheory 169)
value LESS_LESS_EQ_TRANS (arithmeticTheory 170)
value LESS_LESS_SUC (arithmeticTheory 171)
value LESS_MOD (arithmeticTheory 172)
value LESS_MONO (prim_recTheory 23)
value LESS_MONO_ADD (arithmeticTheory 173)
value LESS_MONO_ADD_EQ (arithmeticTheory 174)
value LESS_MONO_ADD_INV (arithmeticTheory 175)
value LESS_MONO_EQ (arithmeticTheory 176), value LESS_MONO_EQ (prim_recTheory 24)
value LESS_MONO_MULT (arithmeticTheory 177)
value LESS_MONO_MULT2 (arithmeticTheory 178)
value LESS_MONO_REV (arithmeticTheory 179), value LESS_MONO_REV (prim_recTheory 25)
value LESS_MULT2 (arithmeticTheory 180)
value LESS_MULT_MONO (arithmeticTheory 181)
value LESS_MULT_MONO2 (bitTheory 99)
value LESS_NORM_CONV (Thm_convs 23)
value LESS_NOT_EQ (prim_recTheory 26)
value LESS_NOT_SUC (arithmeticTheory 182)
value LESS_OR (arithmeticTheory 183)
value LESS_OR_EQ (arithmeticTheory 19)
value LESS_OR_EQ_ADD (arithmeticTheory 184)
value LESS_OR_EQ_ALT (arithmeticTheory 185)
value LESS_OR_EQ_GATHER_CONV (Norm_ineqs 8)
value LESS_REFL (prim_recTheory 27)
value LESS_REWR (totoTacs 12)
value less_sorted_eq (sortingTheory 129)
value LESS_STRONG_ADD (arithmeticTheory 186)
value LESS_SUB_ADD_LESS (arithmeticTheory 187)
value LESS_SUC (prim_recTheory 28)
value LESS_SUC_EQ_COR (arithmeticTheory 188)
value LESS_SUC_IMP (prim_recTheory 29)
value LESS_SUC_NOT (arithmeticTheory 189)
value LESS_SUC_REFL (prim_recTheory 30)
value LESS_SUC_SUC (prim_recTheory 31)
value LESS_THM (Omega_AutomataTheory 34), value LESS_THM (prim_recTheory 32)
value less_tm (intSyntax 19), value less_tm (numSyntax 20), value less_tm (realSyntax 16)
value less_to_leq_samel (int_arithTheory 62)
value less_to_leq_samer (int_arithTheory 63)
value LESS_TRANS (arithmeticTheory 190)
value LESS_UO_LEM (enumeralTheory 67)
value LET2_RAND (pairTheory 35)
value LET2_RATOR (pairTheory 36)
value let_add (extrealTheory 241)
value let_add2 (extrealTheory 242)
value let_add2_alt (extrealTheory 243)
value LET_CONG (boolTheory 116)
value let_CONV (PairedLambda 7), value let_CONV (pairLib 78)
value LET_DEF (boolTheory 20)
value LET_ELIM_TAC (BasicProvers 35)
value LET_EQ_TAC (pairLib 116), value LET_EQ_TAC (pairTools 13)
value LET_FORALL_ELIM (combinTheory 29)
value LET_INTRO (pairLib 115), value LET_INTRO (pairTools 11)
value LET_INTRO_TAC (pairLib 120), value LET_INTRO_TAC (pairTools 12)
value let_mul (extrealTheory 244)
value LET_PRS (quotientTheory 66)
value LET_RAND (boolTheory 117)
value LET_RATOR (boolTheory 118)
value LET_RES_ABSTRACT (quotientTheory 67)
value LET_RSP (quotientTheory 68)
value LET_SIMP_CONV (PairedLambda 9), value LET_SIMP_CONV (pairLib 79)
value let_special (GrammarSpecials 7)
value LET_ss (boolSimps 25)
value LET_THM (boolTheory 119)
HOL boolSyntax.let_tm (help/Docfiles/boolSyntax.let_tm.adoc 0), value let_tm (boolSyntax 23)
value let_trans (extrealTheory 245)
value lex (term_tokens 11)
value LEX_ALT (totoTheory 40)
value lex_cmp (Lib 75)
value LEX_CONG (pairTheory 37)
value LEX_DEF (pairTheory 8)
value LEX_DEF_THM (pairTheory 38)
exception LEX_ERR (base_tokens 3)
value lex_list_order (mlibUseful 96)
value LEX_MONO (pairTheory 39)
value lex_order (mlibUseful 92)
value lex_order2 (mlibUseful 93)
value lex_order3 (mlibUseful 94)
value lex_seq_order (mlibUseful 95)
value lex_tm (pairSyntax 17)
value lex_to_toklist (qbuf 13)
structure Lexis
value lextest (term_tokens 24)
value lexTO (totoTheory 18)
value lexTO_ALT (totoTheory 108)
value lexTO_thm (totoTheory 109)
value lextoto (totoTheory 19)
value lextoto_CONV (totoTacs 23)
value Lf_def (lbtreeTheory 5)
value Lf_NOT_Nd (lbtreeTheory 26)
value LFILTER (llistTheory 8)
value LFILTER_APPEND (llistTheory 42)
value LFILTER_EQ_NIL (llistTheory 43)
value LFILTER_NIL (llistTheory 44)
value LFILTER_THM (llistTheory 45)
value LFINITE (llistTheory 46)
value LFINITE_APPEND (llistTheory 47)
value LFINITE_cases (llistTheory 57)
value LFINITE_def (llistTheory 9)
value LFINITE_DROP (llistTheory 48)
value LFINITE_fromList (llistTheory 58)
value LFINITE_HAS_LENGTH (llistTheory 49)
value LFINITE_ind (llistTheory 59)
value LFINITE_INDUCTION (llistTheory 50)
value LFINITE_LLENGTH (llistTheory 51)
value LFINITE_LNTH_NONE (llistTheory 52)
value LFINITE_MAP (llistTheory 53)
value LFINITE_rules (llistTheory 60)
value LFINITE_STRONG_INDUCTION (llistTheory 54)
value LFINITE_strongind (llistTheory 61)
value LFINITE_TAKE (llistTheory 55)
value LFINITE_THM (llistTheory 56)
value LFINITE_toList (llistTheory 62)
value LFINITE_toList_SOME (llistTheory 63)
value LFLATTEN (llistTheory 10)
value LFLATTEN_APPEND (llistTheory 64)
value LFLATTEN_EQ_NIL (llistTheory 65)
value LFLATTEN_SINGLETON (llistTheory 66)
value LFLATTEN_THM (llistTheory 67)
value lfp_def (fixedPointTheory 10), value lfp_def (posetTheory 14)
value lfp_empty (fixedPointTheory 24)
value lfp_fixedpoint (fixedPointTheory 25)
value lfp_fnsum (fixedPointTheory 26)
value lfp_induction (fixedPointTheory 27)
value lfp_least_closed (fixedPointTheory 28)
value lfp_rule_applied (fixedPointTheory 29)
value lfp_strong_induction (fixedPointTheory 30)
value lfp_unique (posetTheory 34)
value Lfrep_def (lbtreeTheory 6)
value lfs (bossLib 135), value lfs (lcsymtacs 90)
value lg_1 (util_probTheory 172)
value lg_2 (util_probTheory 173)
value lg_def (util_probTheory 10)
value lg_inv (util_probTheory 174)
value lg_mul (util_probTheory 175)
value lg_nonzero (util_probTheory 176)
value lg_pow (util_probTheory 177)
HOL boolSyntax.lhand (help/Docfiles/boolSyntax.lhand.adoc 0), value lhand (boolSyntax 65), value lhand (liteLib 96)
value LHD (llistTheory 11)
value LHD_EQ_NONE (llistTheory 70)
value LHD_LAPPEND (llistTheory 71)
value LHD_LCONS (llistTheory 72)
value LHD_THM (llistTheory 73)
value LHDTL_CONS_THM (llistTheory 68)
value LHDTL_EQ_SOME (llistTheory 69)
HOL boolSyntax.lhs (help/Docfiles/boolSyntax.lhs.adoc 0), value lhs (Preterm 29), value lhs (boolSyntax 63), value lhs (mlibTerm 105)
value lhs_coeffs (Term_coeffs 8)
value LHS_CONV (Conv 26)
HOL Lib (help/Docfiles/Lib.adoc 0), structure Lib
structure Lift, value lift (Coding 17), value lift (Subst 7)
value lift_blist_def (EncodeTheory 18)
value lift_blist_suc (EncodeTheory 47)
value lift_bool (boolSyntax 167)
value lift_cases_ss (DatatypeSimps 84)
value lift_cases_stateful_ss (DatatypeSimps 85)
value lift_cases_typeinfos_ss (DatatypeSimps 86)
value lift_char (stringSyntax 182)
value LIFT_COND_ss (boolSimps 16)
value lift_def_syntax (Lift 4)
value lift_list (listSyntax 155)
value lift_num (numSyntax 131)
value lift_of (TypeBasePure 62)
value lift_one (oneSyntax 8)
value lift_option (optionSyntax 44)
value lift_option_def (EncodeTheory 19)
value lift_prod (pairSyntax 86)
value lift_prod_def (EncodeTheory 20)
value lift_string (stringSyntax 183)
value lift_sum (sumSyntax 41)
value lift_sum_def (EncodeTheory 21)
value lift_theorem_by_quotients (quotient 241)
value lift_tree_curried_def (EncodeTheory 22)
value lift_tree_def (EncodeTheory 48)
value lift_tree_tupled_primitive_def (EncodeTheory 23)
value liftpp (smpp 17)
value LIM (limTheory 61), value lim (seqTheory 7)
value LIM_ADD (limTheory 62)
value LIM_CONST (limTheory 63)
value LIM_DIV (limTheory 64)
value LIM_EQUAL (limTheory 65)
value lim_grammars (limTheory 78)
value LIM_INV (limTheory 66)
value LIM_MUL (limTheory 67)
value LIM_NEG (limTheory 68)
value LIM_NULL (limTheory 69)
value LIM_SUB (limTheory 70)
value LIM_TENDS (netsTheory 14)
value LIM_TENDS2 (netsTheory 15)
value LIM_TRANSFORM (limTheory 71)
value LIM_UNIQ (limTheory 72)
value LIM_X (limTheory 73)
type limit (folTools 12), type limit (metisTools 17), type limit (mlibMeter 11), type limit (mlibMetis 19), type limit (mlibSolver 12), value limit (bossLib 74), value limit (metisTools 44), value limit (mlibMetis 44), value limit (simpLib 117)
value limit_to_string (mlibMeter 15)
value limpt (topologyTheory 9)
structure limTheory
value LINE_LENGTH (mlibUseful 142)
HOL unwindLib.line_name (help/Docfiles/unwindLib.line_name.adoc 0), value line_name (unwindLib 44)
HOL unwindLib.line_var (help/Docfiles/unwindLib.line_var.adoc 0), value line_var (unwindLib 45)
value LINEAR_GCD (gcdTheory 41)
value LINEAR_MULT (CooperMath 27)
value linear_order (set_relationTheory 77)
value linear_order_def (set_relationTheory 16)
value linear_order_dom_rng (set_relationTheory 78)
value linear_order_num_order (set_relationTheory 79)
value linear_order_of_countable_po (set_relationTheory 80)
value linear_order_reln_to_rel_conv_UNIV (set_relationTheory 81)
value linear_order_restrict (set_relationTheory 82)
value linear_order_subset (set_relationTheory 83)
value linear_order_to_list_f_def (llistTheory 25)
value linear_order_to_llist (llistTheory 140)
value LINEAR_SUM_CONV (Norm_arith 14)
value LinearOrder (relationTheory 12)
value lineWidth (HOLPP 37), value linewidth (Globals 14), value linewidth (testutils 3)
value link_parents (Theory 103)
value LINV_DEF (pred_setTheory 24)
value linv_tm (pred_setSyntax 41)
value linv_uniq (extrealTheory 246)
value list_11 (listTheory 411)
value LIST_AND_IMP_ELIM_CONV (quantHeuristicsTools 34)
value LIST_APPLY_DEF (listTheory 26)
value LIST_APPLY_o (listTheory 226)
value list_Axiom (listTheory 412)
value list_Axiom_old (listTheory 413)
HOL Drule.LIST_BETA_CONV (help/Docfiles/Drule.LIST_BETA_CONV.adoc 0), value LIST_BETA_CONV (Drule 37)
value LIST_BIND_APPEND (listTheory 227)
value LIST_BIND_DEF (listTheory 27)
value LIST_BIND_ID (listTheory 228)
value LIST_BIND_LIST_BIND (listTheory 229)
value LIST_BIND_MAP (listTheory 230)
value LIST_BIND_THM (listTheory 231)
value list_cache (quotient 48)
value list_case_compute (listTheory 416)
value list_case_cong (listTheory 417)
value list_case_def (listTheory 51)
value list_case_tm (listSyntax 27)
value list_CASES (listTheory 414)
value list_cmp_antisym (comparisonTheory 42)
value list_cmp_cong (comparisonTheory 43)
value list_cmp_curried_def (comparisonTheory 11)
value list_cmp_def (comparisonTheory 44)
value list_cmp_equal_list_rel (comparisonTheory 45)
value list_cmp_good (comparisonTheory 46)
value list_cmp_ind (comparisonTheory 47)
value list_cmp_ListOrd (comparisonTheory 41)
value list_cmp_tupled_primitive_def (comparisonTheory 12)
value list_coder_def (CoderTheory 12)
HOL Lib.list_compare (help/Docfiles/Lib.list_compare.adoc 0), value list_compare (Lib 76)
value list_compare_curried_def (prelimTheory 6)
value list_compare_def (prelimTheory 18)
value list_compare_ind (prelimTheory 19)
value list_compare_tupled_primitive_def (prelimTheory 7)
value list_compset (listLib 15), value list_compset (listSimps 9)
HOL Drule.LIST_CONJ (help/Docfiles/Drule.LIST_CONJ.adoc 0), value LIST_CONJ (Drule 56)
HOL listLib.LIST_CONV (help/Docfiles/listLib.LIST_CONV.adoc 0)
value list_distinct (listTheory 418)
value LIST_ELEM_COUNT_DEF (rich_listTheory 13)
value LIST_ELEM_COUNT_LIST_TO_BAG (containerTheory 25)
value LIST_ELEM_COUNT_MEM (rich_listTheory 248)
value LIST_ELEM_COUNT_THM (rich_listTheory 249)
value list_elem_count_tm (rich_listSyntax 9)
value LIST_EQ (listTheory 232)
value list_EQ_CONV (ListConv1 13), value list_EQ_CONV (listLib 27)
value LIST_EQ_MAP_PAIR (listTheory 233)
value LIST_EQ_REWRITE (listTheory 234)
value LIST_EQ_SIMP_CONV (listLib 12), value LIST_EQ_SIMP_CONV (listSimps 6)
value LIST_EQ_ss (listLib 9), value LIST_EQ_ss (listSimps 3)
value LIST_EQUIV (quotient_listTheory 21), value list_equiv (quotient 123)
value LIST_EXISTS_AND_CONV (Conv 98)
value LIST_EXISTS_IMP_CONV (Conv 99)
value LIST_EXISTS_INTRO_IMP (ConseqConv 55)
value LIST_EXISTS_NOT_CONV (Conv 101)
value LIST_EXISTS_OR_CONV (Conv 100)
value LIST_EXISTS_SIMP_CONV (Conv 97)
value LIST_EXISTS_TAC (Q 18)
HOL listLib.list_FOLD_CONV (help/Docfiles/listLib.list_FOLD_CONV.adoc 0), value list_FOLD_CONV (ListConv1 19), value list_FOLD_CONV (listLib 33)
value LIST_FORALL_AND_CONV (Conv 92)
value LIST_FORALL_IMP_CONV (Conv 93)
value LIST_FORALL_NOT_CONV (Conv 95)
value LIST_FORALL_OR_CONV (Conv 94)
value LIST_FORALL_SIMP_CONV (Conv 91)
value LIST_GEN_EQ (ConseqConv 53)
value LIST_GEN_IMP (ConseqConv 51)
value list_grammars (listTheory 431)
value LIST_IGNORE_BIND_DEF (listTheory 28)
value LIST_INDUCT (ListConv1 7), value LIST_INDUCT (listLib 21), value list_INDUCT (listTheory 415)
HOL listLib.LIST_INDUCT_TAC (help/Docfiles/listLib.LIST_INDUCT_TAC.adoc 0), value LIST_INDUCT_TAC (ListConv1 8), value LIST_INDUCT_TAC (listLib 22)
value list_induction (listTheory 419)
value list_len_qp (quantHeuristicsLib 94), value list_len_qp (quantHeuristicsLibParameters 34)
value LIST_LENGTH_0 (quantHeuristicsTheory 73)
value LIST_LENGTH_1 (quantHeuristicsTheory 74)
value LIST_LENGTH_10 (quantHeuristicsTheory 75)
value LIST_LENGTH_15 (quantHeuristicsTheory 76)
value LIST_LENGTH_2 (quantHeuristicsTheory 77)
value LIST_LENGTH_20 (quantHeuristicsTheory 78)
value LIST_LENGTH_25 (quantHeuristicsTheory 79)
value LIST_LENGTH_3 (quantHeuristicsTheory 80)
value LIST_LENGTH_4 (quantHeuristicsTheory 81)
value LIST_LENGTH_5 (quantHeuristicsTheory 82)
value LIST_LENGTH_7 (quantHeuristicsTheory 83)
value LIST_LENGTH_COMPARE_1 (quantHeuristicsTheory 84)
value LIST_LENGTH_COMPARE_SUC (quantHeuristicsTheory 85)
value LIST_LIFT2_DEF (listTheory 29)
value list_make_comb (Parse_support 19)
value LIST_MAP_I (quotient_listTheory 22)
value list_merge (jbUtils 25)
value list_merge_curried_def (prelimTheory 8)
value list_merge_def (prelimTheory 20)
value list_merge_ind (prelimTheory 21)
value list_merge_tupled_primitive_def (prelimTheory 9)
HOL Term.list_mk_abs (help/Docfiles/Term.list_mk_abs.adoc 0), HOL boolSyntax.list_mk_abs (help/Docfiles/boolSyntax.list_mk_abs.adoc 0), value list_mk_abs (FinalTerm 38), value list_mk_abs (boolSyntax 118)
HOL pairSyntax.list_mk_anylet (help/Docfiles/pairSyntax.list_mk_anylet.adoc 0), value list_mk_anylet (pairSyntax 56)
value list_mk_app (Absyn 57)
value list_mk_append (listSyntax 44)
value list_mk_biginter (pred_setSyntax 69)
value list_mk_bigunion (pred_setSyntax 68)
HOL Term.list_mk_binder (help/Docfiles/Term.list_mk_binder.adoc 0), value list_mk_binder (FinalTerm 37)
HOL Term.list_mk_comb (help/Docfiles/Term.list_mk_comb.adoc 0), value list_mk_comb (FinalTerm 34)
HOL boolSyntax.list_mk_conj (help/Docfiles/boolSyntax.list_mk_conj.adoc 0), value list_mk_conj (Absyn 59), value list_mk_conj (boolSyntax 122), value list_mk_conj (mlibTerm 55)
HOL boolSyntax.list_mk_disj (help/Docfiles/boolSyntax.list_mk_disj.adoc 0), value list_mk_disj (Absyn 60), value list_mk_disj (boolSyntax 123), value list_mk_disj (mlibTerm 59)
HOL Drule.LIST_MK_EXISTS (help/Docfiles/Drule.LIST_MK_EXISTS.adoc 0), HOL boolSyntax.list_mk_exists (help/Docfiles/boolSyntax.list_mk_exists.adoc 0), value LIST_MK_EXISTS (Drule 9), value list_mk_exists (Absyn 64), value list_mk_exists (boolSyntax 120), value list_mk_exists (mlibTerm 66)
value list_mk_exists1 (Absyn 65)
HOL boolSyntax.list_mk_forall (help/Docfiles/boolSyntax.list_mk_forall.adoc 0), value list_mk_forall (Absyn 63), value list_mk_forall (boolSyntax 119), value list_mk_forall (mlibTerm 63)
HOL boolSyntax.list_mk_fun (help/Docfiles/boolSyntax.list_mk_fun.adoc 0), value list_mk_fun (HolKernelDoc 38), value list_mk_fun (boolSyntax 124)
value list_mk_fun_type (wfrecUtils 11)
value list_mk_fupdate (finite_mapSyntax 36)
HOL boolSyntax.list_mk_icomb (help/Docfiles/boolSyntax.list_mk_icomb.adoc 0), value list_mk_icomb (HolKernelDoc 39), value list_mk_icomb (boolSyntax 127), value list_mk_icomb (liteLib 99)
HOL boolSyntax.list_mk_imp (help/Docfiles/boolSyntax.list_mk_imp.adoc 0), value list_mk_imp (Absyn 61), value list_mk_imp (boolSyntax 121)
value list_mk_insert (bagLib 28), value list_mk_insert (bagSyntax 26)
value list_mk_lam (Absyn 58)
value list_mk_lbinop (HolKernelDoc 40)
value list_mk_mult (intSyntax 61), value list_mk_mult (numSyntax 127), value list_mk_mult (realSyntax 51)
HOL pairSyntax.list_mk_pabs (help/Docfiles/pairSyntax.list_mk_pabs.adoc 0), value list_mk_pabs (pairLib 48), value list_mk_pabs (pairSyntax 55)
HOL pairSyntax.list_mk_pair (help/Docfiles/pairSyntax.list_mk_pair.adoc 0), value list_mk_pair (Absyn 62), value list_mk_pair (pairLib 47), value list_mk_pair (pairSyntax 54)
HOL PairRules.LIST_MK_PEXISTS (help/Docfiles/PairRules.LIST_MK_PEXISTS.adoc 0), value LIST_MK_PEXISTS (PairRules 108), value list_mk_pexists (pairLib 50), value list_mk_pexists (pairSyntax 58)
HOL PairRules.LIST_MK_PFORALL (help/Docfiles/PairRules.LIST_MK_PFORALL.adoc 0), value LIST_MK_PFORALL (PairRules 107), value list_mk_pforall (pairLib 49), value list_mk_pforall (pairSyntax 57)
value list_mk_plus (intSyntax 51), value list_mk_plus (numSyntax 126), value list_mk_plus (realSyntax 41)
value list_mk_prod (pairLib 10), value list_mk_prod (pairSyntax 6)
value list_mk_prod_type (wfrecUtils 12)
value list_mk_rbinop (HolKernelDoc 41)
HOL res_quanLib.list_mk_res_exists (help/Docfiles/res_quanLib.list_mk_res_exists.adoc 0), HOL res_quanTools.list_mk_res_exists (help/Docfiles/res_quanTools.list_mk_res_exists.adoc 0), value list_mk_res_exists (boolSyntax 126), value list_mk_res_exists (res_quanTools 31)
HOL res_quanLib.list_mk_res_forall (help/Docfiles/res_quanLib.list_mk_res_forall.adoc 0), HOL res_quanTools.list_mk_res_forall (help/Docfiles/res_quanTools.list_mk_res_forall.adoc 0), value list_mk_res_forall (boolSyntax 125), value list_mk_res_forall (res_quanTools 30)
value list_mk_select (Absyn 66)
value list_mk_sum (sumSyntax 15)
value list_mk_union (bagLib 20), value list_mk_union (bagSyntax 18)
HOL Drule.LIST_MP (help/Docfiles/Drule.LIST_MP.adoc 0), value LIST_MP (Drule 65)
value list_nchotomy (listTheory 420)
value list_no_len_qp (quantHeuristicsLib 93), value list_no_len_qp (quantHeuristicsLibParameters 33)
value LIST_NOT_EQ (listTheory 235), value LIST_NOT_EQ (rich_listTheory 471)
value list_of_pair (Lib 77)
value list_of_ptree (patriciaLib 30)
value list_of_quadruple (Lib 78)
value list_of_seq (Sequence 26)
value list_of_singleton (Lib 79)
value list_of_triple (Lib 80)
value list_ord (liteLib 75)
HOL PairRules.LIST_PBETA_CONV (help/Docfiles/PairRules.LIST_PBETA_CONV.adoc 0), value LIST_PBETA_CONV (PairRules 14)
value list_qp (quantHeuristicsLib 92), value list_qp (quantHeuristicsLibParameters 32)
value LIST_QUOTIENT (quotient_listTheory 23), value list_quotient (quotient 181)
value list_rat_add (ratSyntax 78)
value list_rat_mul (ratSyntax 79)
value LIST_REL_APPEND_IMP (rich_listTheory 250)
value LIST_REL_APPEND_SING (rich_listTheory 251)
value list_rel_butlastn (rich_listTheory 347)
value LIST_REL_cases (listTheory 245)
value LIST_REL_CONJ (listTheory 236)
value LIST_REL_CONS1 (listTheory 237)
value LIST_REL_CONS2 (listTheory 238)
value LIST_REL_def (listTheory 246)
value LIST_REL_EL_EQN (listTheory 239)
value LIST_REL_EQ (quotient_listTheory 24)
value LIST_REL_EVERY_ZIP (listTheory 240)
value LIST_REL_GENLIST (rich_listTheory 252)
value LIST_REL_ind (listTheory 247)
value list_rel_lastn (rich_listTheory 348)
value LIST_REL_LENGTH (listTheory 241)
value LIST_REL_MAP1 (listTheory 242)
value LIST_REL_MAP2 (listTheory 243)
value LIST_REL_mono (listTheory 248)
value LIST_REL_NIL (listTheory 244)
value LIST_REL_REFL (quotient_listTheory 25)
value LIST_REL_REL (quotient_listTheory 26)
value LIST_REL_REPLICATE_same (rich_listTheory 253)
value LIST_REL_rules (listTheory 249)
value LIST_REL_strongind (listTheory 250)
value LIST_REL_trans (listTheory 251)
value list_rplacv_cn (fmapalTheory 141)
value list_rplacv_cn_curried (fmapalTheory 62)
value list_rplacv_cn_ind (fmapalTheory 142)
value list_rplacv_cn_tupled_primitive (fmapalTheory 63)
value list_rplacv_thm (fmapalTheory 143)
value list_rws (listLib 14), value list_rws (listSimps 8)
value list_size_cong (listTheory 421)
value list_size_def (listTheory 52)
HOL bossLib.list_ss (help/Docfiles/bossLib.list_ss.adoc 0), value LIST_ss (listLib 8), value LIST_ss (listSimps 2), value list_ss (bossLib 64)
type list_tactic (Abbrev 11)
HOL listLib.list_thm_database (help/Docfiles/listLib.list_thm_database.adoc 0)
value LIST_TO_BAG_alt (containerTheory 31)
value LIST_TO_BAG_APPEND (containerTheory 26)
value LIST_TO_BAG_def (containerTheory 7)
value LIST_TO_BAG_DISTINCT (containerTheory 27)
value LIST_TO_BAG_EQ_EMPTY (containerTheory 28)
value LIST_TO_BAG_FILTER (containerTheory 29)
value LIST_TO_BAG_MAP (containerTheory 30)
value list_to_bl (enumeralTheory 47)
value list_to_bl_CONV (enumTacs 18)
value list_to_bt (enumeralTheory 48)
value list_to_bt_CONV (enumTacs 19)
value LIST_TO_SET (listTheory 252)
value LIST_TO_SET_APPEND (containerTheory 32), value LIST_TO_SET_APPEND (listTheory 253)
value LIST_TO_SET_DEF (listTheory 30)
value list_to_set_diff (listTheory 422)
value LIST_TO_SET_EQ_EMPTY (listTheory 254)
value LIST_TO_SET_EQ_SING (rich_listTheory 254)
value LIST_TO_SET_FILTER (listTheory 255)
value LIST_TO_SET_FLAT (listTheory 256)
value LIST_TO_SET_GENLIST (listTheory 257)
value LIST_TO_SET_MAP (listTheory 258)
value LIST_TO_SET_REVERSE (listTheory 259)
value LIST_TO_SET_SNOC (listTheory 260)
value LIST_TO_SET_THM (containerTheory 33), value LIST_TO_SET_THM (listTheory 261)
value list_to_set_tm (listSyntax 28)
value list_to_string (wfrecUtils 7)
value list_TY_DEF (listTheory 50)
value list_ty_filter (quantHeuristicsLib 107), value list_ty_filter (quantHeuristicsLibParameters 42)
value LIST_UPDATE_ALL_DISTINCT (updateTheory 12)
value LIST_UPDATE_def (updateTheory 6)
value LIST_UPDATE_ELIM_CONV (updateLib 9)
value LIST_UPDATE_INTRO_CONV (updateLib 8)
value LIST_UPDATE_LOOKUP (updateTheory 13)
value LIST_UPDATE_OVERRIDE (updateTheory 14)
value LIST_UPDATE_SORT_OVERRIDE (updateTheory 15)
value LIST_UPDATE_THMS (updateTheory 16)
value list_update_tm (updateSyntax 6)
type list_validation (Abbrev 10)
value list_variant (quantHeuristicsTools 28)
value list_xmerge (jbUtils 26)
structure ListConv1
HOL DB.listDB (help/Docfiles/DB.listDB.adoc 0), value listDB (DB 30)
value listDir (Portable 53)
value listItems (CharSet 15), value listItems (KernelSig 27), value listItems (LVTermNet 16), value listItems (Net 26), value listItems (Raw 19), value listItems (Redblackmap 17), value listItems (Redblackset 23), value listItems (TypeBasePure 92), value listItems (TypeNet 15), value listItems (UTF8Set 8)
structure listLib
value listName (KernelSig 29)
value ListOrd (totoTheory 5)
value ListOrd_THM (totoTheory 41)
value listorder (totoTheory 110)
value listorder_curried (totoTheory 20)
value listorder_ind (totoTheory 111)
value listorder_tupled_primitive (totoTheory 21)
value listoto (totoTheory 22)
value listoto_CONV (totoTacs 24)
value listRange_grammars (listRangeTheory 21)
value listRangeINC_CONS (listRangeTheory 13)
value listRangeINC_def (listRangeTheory 5)
value listRangeINC_EMPTY (listRangeTheory 14)
value listRangeINC_SING (listRangeTheory 15)
value listRangeLHI_ALL_DISTINCT (listRangeTheory 16)
value listRangeLHI_CONS (listRangeTheory 17)
value listRangeLHI_def (listRangeTheory 6)
value listRangeLHI_EMPTY (listRangeTheory 18)
value listRangeLHI_EQ (listRangeTheory 19)
structure listRangeTheory
constructor LISTRULE (term_grammar 74)
structure listSimps
type listspec (term_grammar 66)
constructor listsym (PEGParse 19)
structure listSyntax
structure listTheory
value listThy (KernelSig 28)
type lit_type (PPBackEnd 8)
structure liteLib
structure Literal, value literal (Coding 5)
value literal_atom (mlibTerm 85)
value literal_case (boolSyntax 22)
value literal_case_CONG (boolTheory 185)
value literal_case_DEF (boolTheory 34)
value literal_case_FORALL_ELIM (combinTheory 43)
value literal_case_id (boolTheory 189)
value literal_case_PRS (quotientTheory 102)
value literal_case_RAND (boolTheory 186)
value literal_case_RATOR (boolTheory 187)
value literal_case_RSP (quotientTheory 103)
value literal_case_ss (boolSimps 29)
value literal_case_THM (boolTheory 188)
value literal_rewrite (mlibTerm 122)
value literal_subterm (mlibTerm 121)
value literal_subterms (mlibTerm 123)
type literalnet (mlibLiteralnet 14)
value literals (mlibClause 35)
value LL_ALL_THM (llistTheory 82)
value LLABEL_RESOLVE (markerLib 54)
value LLENGTH (llistTheory 12)
value LLENGTH_APPEND (llistTheory 74)
value LLENGTH_fromList (llistTheory 77)
value LLENGTH_MAP (llistTheory 75)
value llength_rel_cases (llistTheory 141)
value llength_rel_def (llistTheory 26)
value llength_rel_ind (llistTheory 142)
value llength_rel_rules (llistTheory 143)
value llength_rel_strongind (llistTheory 144)
value LLENGTH_THM (llistTheory 76)
value LLEX_CONG (listTheory 262)
value LLEX_DEF (listTheory 31)
value LLEX_MONO (listTheory 263)
value LLEX_NIL2 (listTheory 264)
value LLEX_not_WF (listTheory 266)
value LLEX_THM (listTheory 265)
value LLEX_total (listTheory 267)
value LLEX_transitive (listTheory 268)
value llist_absrep (llistTheory 28)
value llist_Axiom (llistTheory 145)
value llist_Axiom_1 (llistTheory 146)
value llist_Axiom_1ue (llistTheory 147)
value LLIST_BISIMULATION (llistTheory 78)
value LLIST_BISIMULATION0 (llistTheory 79)
value llist_CASES (llistTheory 148)
value LLIST_EQ (llistTheory 80)
value llist_grammars (llistTheory 159)
value llist_rep_LCONS (llistTheory 149)
value LLIST_STRONG_BISIMULATION (llistTheory 81)
value llist_TY_DEF (llistTheory 27)
value llist_ue_Axiom (llistTheory 150)
structure llistTheory
value LMAP (llistTheory 13)
value LMAP_APPEND (llistTheory 83)
value LMAP_LUNFOLD (llistTheory 84)
value LMAP_MAP (llistTheory 85)
value ln (transcTheory 15)
value LN_1 (transcTheory 127)
value LN_DIV (transcTheory 128)
value LN_EXP (transcTheory 129)
value LN_INJ (transcTheory 130)
value LN_INV (transcTheory 131)
value LN_LE (transcTheory 132)
value LN_LT_X (transcTheory 133)
value LN_MONO_LE (transcTheory 134)
value LN_MONO_LT (transcTheory 135)
value LN_MUL (transcTheory 136)
value LN_POS (transcTheory 137)
value LN_POW (transcTheory 138)
value LN_RPOW (transcTheory 139)
value ln_tm (sptreeSyntax 26), value ln_tm (transcSyntax 14)
value LNIL (llistTheory 14)
value LNTH (llistTheory 15)
value LNTH_EQ (llistTheory 86)
value LNTH_LAPPEND (llistTheory 87)
value LNTH_LDROP (llistTheory 88)
value LNTH_THM (llistTheory 89)
value lo (UnicodeChars 137)
value load_complete (Theory 113)
constructor Loc (locn 17)
constructor Loc_Near (locn 17)
constructor Loc_None (locn 17)
constructor Loc_Unknown (locn 17)
constructor LocA (locn 3)
type located (locn 48)
value locfrag (locn 38)
structure locn, type locn (locn 17), value locn (Preterm 24)
value locn_of_absyn (Absyn 20)
value locn_of_vstruct (Absyn 21)
type locn_point (locn 3)
value locn_point_toString (locn 11)
constructor LocP (locn 3), value locp (locn 36)
constructor LocPBeg (locn 3)
constructor LocPEnd (locn 3)
value LOG (logrootTheory 5)
value log2 (Arbnumcore 12), value log2 (mlibUseful 138)
value LOG2_def (bitTheory 13)
value LOG2_LE_MONO (bitTheory 100)
value log2_tm (bitSyntax 13)
value LOG2_TWOEXP (bitTheory 101)
value LOG2_UNIQUE (bitTheory 102)
value LOG2_w2n (wordsTheory 164)
value LOG2_w2n_lt (wordsTheory 165)
value LOG_1 (logrootTheory 18)
value LOG_ADD (logrootTheory 19)
value LOG_ADD1 (logrootTheory 20)
value LOG_add_digit (logrootTheory 31)
value LOG_BASE (logrootTheory 21)
value LOG_compute (numeral_bitTheory 22)
value LOG_DIV (logrootTheory 22)
value LOG_EQ_0 (logrootTheory 23)
value LOG_exists (logrootTheory 32)
value LOG_EXP (logrootTheory 24)
value LOG_l2n (numposrepTheory 26)
value LOG_l2n_dropWhile (numposrepTheory 27)
value LOG_LE_MONO (logrootTheory 25)
value LOG_MOD (logrootTheory 26)
value LOG_MULT (logrootTheory 27)
value LOG_ROOT (logrootTheory 28)
value LOG_RWT (logrootTheory 29)
value LOG_UNIQUE (logrootTheory 30)
type logic_map (folTools 42)
value logr_1 (util_probTheory 178)
value logr_def (util_probTheory 11)
value logr_div (util_probTheory 179)
value logr_inv (util_probTheory 180)
value LOGR_MONO_LE (extrealTheory 94)
value LOGR_MONO_LE_IMP (extrealTheory 95)
value logr_mul (util_probTheory 181)
value logr_not_infty (extrealTheory 247)
value logroot_grammars (logrootTheory 42)
structure logrootTheory
value lol_set (enumeralTheory 106)
value lol_set_ind (enumeralTheory 107)
value lol_set_primitive (enumeralTheory 49)
value longdoubleleftarrow (UnicodeChars 74)
value longdoublerightarrow (UnicodeChars 73)
value longest_pfx_member (UTF8Set 11)
value longleftarrow (UnicodeChars 69)
value longmapsfrom (UnicodeChars 78)
value longmapsto (UnicodeChars 77)
value longrightarrow (UnicodeChars 70)
value lookup (Ho_Net 15), value lookup (Net 29), value lookup (Raw 21)
value lookup_compute (sptreeTheory 72)
value lookup_curried_def (sptreeTheory 15)
value lookup_def (sptreeTheory 73)
value lookup_delete (sptreeTheory 74)
value lookup_difference (sptreeTheory 75)
value lookup_fromAList (sptreeTheory 76)
value lookup_fromAList_toAList (sptreeTheory 77)
value lookup_fromList (sptreeTheory 78)
value lookup_ind (sptreeTheory 79)
value lookup_insert (sptreeTheory 80)
value lookup_insert1 (sptreeTheory 81)
value lookup_inter (sptreeTheory 82)
value lookup_inter_alt (sptreeTheory 84)
value lookup_inter_assoc (sptreeTheory 85)
value lookup_inter_EQ (sptreeTheory 83), value lookup_inter_eq (sptreeTheory 86)
value lookup_map (sptreeTheory 87)
value lookup_mk_wf (sptreeTheory 88)
value lookup_NONE_domain (sptreeTheory 71)
value lookup_tm (sptreeSyntax 27)
value lookup_tupled_primitive_def (sptreeTheory 16)
value lookup_union (sptreeTheory 89)
value lookup_UserStyle (PPBackEnd 29)
value loose_equality (ParseExtras 4)
value lower (mlibParser 56)
value lower_int_of_rat (Rationals 19)
value LOWEST_SET_BIT (numeral_bitTheory 23)
value LOWEST_SET_BIT_compute (numeral_bitTheory 24)
value LOWEST_SET_BIT_def (bitTheory 14)
constructor LParen (type_tokens 2)
value LPREFIX_ANTISYM (llistTheory 90)
value LPREFIX_APPEND (llistTheory 91)
value LPREFIX_def (llistTheory 16)
value LPREFIX_fromList (llistTheory 97)
value LPREFIX_LCONS (llistTheory 92)
value LPREFIX_LNIL (llistTheory 93)
value LPREFIX_LUNFOLD (llistTheory 94)
value LPREFIX_REFL (llistTheory 95)
value LPREFIX_TRANS (llistTheory 96)
value LRC_def (listTheory 32)
value LRC_MEM (listTheory 269)
value LRC_MEM_right (listTheory 270)
value lrep_ok_cases (llistTheory 151)
value lrep_ok_coind (llistTheory 152)
value lrep_ok_def (llistTheory 29)
value lrep_ok_rules (llistTheory 153)
value lrfs (bossLib 136), value lrfs (lcsymtacs 91)
value lrnext_def (sptreeTheory 90)
value lrnext_ind (sptreeTheory 91)
value lrnext_primitive_def (sptreeTheory 17)
value lrnext_thm (sptreeTheory 92)
constructor LRULE (term_grammar 89)
value lrw (bossLib 134), value lrw (lcsymtacs 89)
value ls (UnicodeChars 138)
value ls_tm (sptreeSyntax 28)
value lsl (UnicodeChars 143)
value LSL_ADD (wordsTheory 166)
value LSL_BITWISE (wordsTheory 167)
value LSL_LIMIT (wordsTheory 168)
value LSL_ONE (wordsTheory 169)
value LSL_UINT_MAX (wordsTheory 170)
value lspine_binop (HolKernelDoc 42)
value lsquo (UnicodeChars 102)
value lsr (UnicodeChars 144)
value lsr_1_word_T (wordsTheory 543)
value LSR_ADD (wordsTheory 171)
value LSR_BITWISE (wordsTheory 172)
value LSR_LESS (wordsTheory 173)
value LSR_LIMIT (wordsTheory 174)
constructor LT (CooperMath 17), value LT (integralTheory 70)
value lt1eqmul (floatTheory 142)
value LT_0 (integralTheory 71)
value lt_01 (extrealTheory 248)
value lt_02 (extrealTheory 249)
value lt_add (extrealTheory 250)
value LT_ADD2 (integerTheory 309), value lt_add2 (extrealTheory 251)
value LT_ADD_LCANCEL (arithmeticTheory 199)
value LT_ADD_RCANCEL (arithmeticTheory 200)
value LT_ADDL (integerTheory 310), value lt_addl (extrealTheory 252)
value LT_ADDR (integerTheory 311)
value lt_antisym (extrealTheory 253)
HOL reduceLib.LT_CONV (help/Docfiles/reduceLib.LT_CONV.adoc 0), value LT_CONV (Arithconv 5), value LT_CONV (reduceLib 12)
value LT_EXP_ISO (logrootTheory 33)
value lt_imp_le (extrealTheory 254)
value lt_imp_ne (extrealTheory 255)
value lt_infty (extrealTheory 256)
value lt_int (realTheory 442)
value lt_justify_multiplication (int_arithTheory 64)
value LT_LADD (integerTheory 312), value lt_ladd (extrealTheory 257)
value lt_ldiv (extrealTheory 258)
value LT_LE (integralTheory 72), value lt_le (extrealTheory 259)
value lt_lmul (extrealTheory 260)
value lt_move_all_left (int_arithTheory 65)
value lt_move_all_right (int_arithTheory 66)
value lt_move_left_left (int_arithTheory 67)
value lt_move_left_right (int_arithTheory 68)
value lt_mul (extrealTheory 261)
value lt_mul2 (extrealTheory 262)
value lt_mul_neg (extrealTheory 263)
value LT_MULT_CANCEL_LBARE (arithmeticTheory 201)
value LT_MULT_CANCEL_RBARE (arithmeticTheory 202)
value LT_MULT_LCANCEL (arithmeticTheory 203)
value LT_MULT_RCANCEL (arithmeticTheory 204)
value lt_neg (extrealTheory 264)
value lt_of_ord (liteLib 73)
value LT_PRIMES (dividesTheory 28)
value lt_radd (extrealTheory 265)
value lt_rat (realTheory 443)
value lt_ratl (realTheory 444)
value lt_ratr (realTheory 445)
value lt_rdiv (extrealTheory 266)
value lt_rdiv_neg (extrealTheory 267)
value lt_refl (extrealTheory 268)
value lt_rmul (extrealTheory 269)
value lt_sub (extrealTheory 270)
value lt_sub_imp (extrealTheory 271)
value LT_SUB_RCANCEL (arithmeticTheory 205)
value LT_SUC (util_probTheory 94)
value LT_SUC_LE (floatTheory 88)
value LT_THRESHOLD_LT_POW_INV (floatTheory 89)
value lt_total (extrealTheory 272)
value lt_trans (extrealTheory 273)
value LT_TWOEXP (bitTheory 103)
value LTAKE (llistTheory 17)
value LTAKE_CONS_EQ_NONE (llistTheory 98)
value LTAKE_CONS_EQ_SOME (llistTheory 99)
value LTAKE_DROP (llistTheory 100)
value LTAKE_EQ (llistTheory 101)
value LTAKE_EQ_NONE_LNTH (llistTheory 102)
value LTAKE_EQ_SOME_CONS (llistTheory 103)
value LTAKE_fromList (llistTheory 115)
value LTAKE_IMP_LDROP (llistTheory 104)
value LTAKE_labels (pathTheory 43)
value LTAKE_LAPPEND1 (llistTheory 105)
value LTAKE_LAPPEND2 (llistTheory 106)
value LTAKE_LENGTH (llistTheory 107)
value LTAKE_LLENGTH_NONE (llistTheory 108)
value LTAKE_LNTH_EL (llistTheory 109)
value LTAKE_NIL_EQ_NONE (llistTheory 110)
value LTAKE_NIL_EQ_SOME (llistTheory 111)
value LTAKE_SNOC_LNTH (llistTheory 112)
value LTAKE_TAKE_LESS (llistTheory 113)
value LTAKE_THM (llistTheory 114)
value lte_add (extrealTheory 274)
value lte_mul (extrealTheory 275)
value lte_trans (extrealTheory 276)
value LTL (llistTheory 18)
value LTL2OMEGA_CONV (temporalLib 12)
value LTL_CONV (temporalLib 13)
value LTL_EQ_NONE (llistTheory 116)
value LTL_LCONS (llistTheory 117)
value LTL_THM (llistTheory 118)
constructor LtoR (mlibRewrite 13)
value lub_def (posetTheory 15)
value lub_pred (posetTheory 35)
value LUNFOLD (llistTheory 19)
value LUNFOLD_EQ (llistTheory 119)
value LUNFOLD_THM (llistTheory 120)
value LUNZIP_THM (llistTheory 20)
value lupdate_append (listTheory 423)
value LUPDATE_APPEND1 (rich_listTheory 255)
value LUPDATE_APPEND2 (rich_listTheory 256), value lupdate_append2 (listTheory 424)
value LUPDATE_compute (listTheory 277)
value LUPDATE_def (listTheory 33)
value LUPDATE_LENGTH (listTheory 271)
value LUPDATE_MAP (listTheory 272)
value LUPDATE_SAME (listTheory 273)
value LUPDATE_SEM (listTheory 274)
value LUPDATE_SNOC (listTheory 275)
value LUPDATE_SOME_MAP (listTheory 276)
structure LVTermNet, type lvtermnet (LVTermNet 4)
constructor LZ_TEXT (Trace 4)
value LZIP_LUNZIP (llistTheory 121)
value LZIP_THM (llistTheory 21)
value m_space_def (measureTheory 18)
value make_aq (Parse_support 13)
value make_aq_binding_occ (Parse_support 15)
value make_atom (Parse_support 16)
value make_binding_occ (Parse_support 14)
value make_case_arrow (Parse_support 33)
value make_constrained (Parse_support 24)
value make_definitions (InductiveDefinition 28)
value make_equiv (quotient 137)
value make_guess___assume (quantHeuristicsLibBase 56)
value make_guess___dummy (quantHeuristicsLibBase 55)
value make_guess___simple (quantHeuristicsLibBase 57)
value make_guess_thm_term (quantHeuristicsLibBase 49)
value make_let (Parse_support 26)
value make_log_file (Systeml 44)
value make_preterm (Parse_support 12)
value make_qconst (Parse_support 18)
value make_quotient (quotient 206)
value make_set_abs (Parse_support 29)
value make_set_guess_thm (quantHeuristicsLibBase 51)
value make_set_guess_thm___assume (quantHeuristicsLibBase 61)
value make_set_guess_thm___dummy (quantHeuristicsLibBase 59)
value make_set_guess_thm___simple (quantHeuristicsLibBase 60)
value make_shared_term (SharingTables 29)
value make_shared_type (SharingTables 26)
value make_vstruct (Parse_support 22)
structure Manager
value many (Coding 19), value many (mlibParser 25), value many (optmonad 23)
value many1 (optmonad 24)
value MAP (listTheory 34), value MAP (rich_listTheory 472), value map (Coding 18), value map (LVTermNet 20), value map (Net 23), value map (PIntMap 40), value map (Raw 16), value map (Redblackmap 23), value map (TypeNet 19), value map (mlibMultiset 25), value map (mlibPatricia 28), value map (mlibStream 26), value map (seq 28)
HOL Lib.map2 (help/Docfiles/Lib.map2.adoc 0), value MAP2 (listTheory 278), value MAP2 (rich_listTheory 473), value map2 (Lib 81)
value MAP2_CONG (listTheory 279)
HOL listLib.MAP2_CONV (help/Docfiles/listLib.MAP2_CONV.adoc 0), value MAP2_CONV (ListConv1 27), value MAP2_CONV (listLib 41)
value MAP2_curried_def (OmegaTheory 5)
value MAP2_def (OmegaTheory 33), value MAP2_def (listTheory 282)
value MAP2_ind (OmegaTheory 34), value MAP2_ind (listTheory 283)
value MAP2_MAP (listTheory 280)
value map2_tm (listSyntax 29)
value MAP2_tupled_primitive_def (OmegaTheory 6)
value MAP2_zero_ADD (OmegaTheory 35)
value MAP2_ZIP (listTheory 281), value MAP2_ZIP (rich_listTheory 474)
value MAP_11 (patricia_castsTheory 48)
value MAP_APPEND (listTheory 284), value MAP_APPEND (rich_listTheory 475)
value MAP_APPEND_MAP_EQ (listTheory 285)
value MAP_CONG (listTheory 286)
HOL listLib.MAP_CONV (help/Docfiles/listLib.MAP_CONV.adoc 0), value MAP_CONV (ListConv1 16), value MAP_CONV (listLib 30)
value map_def (lbtreeTheory 17), value map_def (sptreeTheory 18)
value MAP_ELEM_CONV (fmapalTacs 30)
value MAP_EQ_APPEND (listTheory 287)
value MAP_EQ_CONS (listTheory 288)
value MAP_EQ_EVERY2 (listTheory 289)
value MAP_EQ_f (listTheory 292), value MAP_EQ_f (rich_listTheory 476)
value map_eq_Lf (lbtreeTheory 47)
value map_eq_Nd (lbtreeTheory 48)
value MAP_EQ_NIL (listTheory 290)
value MAP_EQ_SING (listTheory 291)
HOL Tactical.MAP_EVERY (help/Docfiles/Tactical.MAP_EVERY.adoc 0), value MAP_EVERY (Tactical 64), value MAP_EVERY (jrhTactics 35), value map_every (Tactical 65), value map_every (lcsymtacs 70)
value MAP_FILTER (rich_listTheory 257)
HOL Tactical.MAP_FIRST (help/Docfiles/Tactical.MAP_FIRST.adoc 0), value MAP_FIRST (Tactical 66)
value map_fix (mlibModel 18)
value MAP_FLAT (listTheory 293), value MAP_FLAT (rich_listTheory 258)
value MAP_FOLDL (rich_listTheory 259)
value MAP_FOLDR (rich_listTheory 260)
value MAP_FST_funs (rich_listTheory 261)
value MAP_GENLIST (listTheory 294), value MAP_GENLIST (rich_listTheory 477)
value MAP_ID (listTheory 295)
value MAP_KEYS_def (finite_mapTheory 19)
value MAP_KEYS_FEMPTY (finite_mapTheory 196)
value MAP_KEYS_FUPDATE (finite_mapTheory 197)
value MAP_KEYS_I (alistTheory 40)
value MAP_KEYS_using_LINV (finite_mapTheory 198)
value MAP_KEYS_witness (finite_mapTheory 199)
value MAP_LIST_BIND (listTheory 296)
value map_LN (sptreeTheory 93)
value MAP_MAP_o (listTheory 297), value MAP_MAP_o (rich_listTheory 478)
value MAP_o (listTheory 302), value MAP_o (rich_listTheory 480)
value map_order (mlibUseful 90)
value MAP_PRS (quotient_listTheory 27)
value map_replicate (rich_listTheory 349)
value MAP_REVERSE (rich_listTheory 262)
value MAP_RSP (quotient_listTheory 28)
value MAP_SND_FILTER_NEQ (rich_listTheory 263)
value MAP_SNOC (listTheory 298), value MAP_SNOC (rich_listTheory 479)
value MAP_THM (Conv 113), value map_thm (fmaptreeTheory 26)
value MAP_TL (listTheory 299)
value map_tm (listSyntax 30)
value MAP_values_fmap_to_alist (alistTheory 41)
value MAP_ZIP (listTheory 300)
value MAP_ZIP_SAME (listTheory 301)
HOL Lib.mapfilter (help/Docfiles/Lib.mapfilter.adoc 0), value mapfilter (Lib 82)
value mapi (Lib 83), value mapi (PIntMap 42), value mapi (mlibPatricia 29)
type maplet (mlibClause 8), type maplet (mlibLiteralnet 9), type maplet (mlibSubst 9), type maplet (mlibSubsume 9), type maplet (mlibTerm 9), type maplet (mlibTermnet 9), type maplet (mlibUseful 167)
value mapM_cons (errorStateMonadTheory 49), value mapM_cons (state_transformerTheory 40)
value mapM_def (errorStateMonadTheory 21), value mapM_def (state_transformerTheory 17)
value mapM_nil (errorStateMonadTheory 50), value mapM_nil (state_transformerTheory 41)
value mapPartial (seq 29)
value mappr_list (smpp 21)
value maps (mlibStream 27), value maps (mlibUseful 64)
value mapsfrom (UnicodeChars 76)
value mapshape (Lib 84)
value mapsto (UnicodeChars 75)
value marginal_distribution1 (probabilityTheory 103)
value marginal_distribution2 (probabilityTheory 104)
value marginal_joint_zero (probabilityTheory 105)
value marginal_joint_zero3 (probabilityTheory 106)
value marker_grammars (markerTheory 19)
structure markerLib
structure markerSyntax
structure markerTheory
HOL DB.match (help/Docfiles/DB.match.adoc 0), HOL hol88Lib.match (help/Docfiles/hol88Lib.match.adoc 0), value match (DB 26), value match (LVTermNet 12), value match (Net 18), value match (Raw 11), value match (TypeNet 11), value match (hol88Lib 15), value match (mlibLiteralnet 25), value match (mlibMatch 14), value match (mlibTermnet 24)
HOL Q.MATCH_ABBREV_TAC (help/Docfiles/Q.MATCH_ABBREV_TAC.adoc 0), value MATCH_ABBREV_TAC (Q 55), value MATCH_ABBREV_TAC (markerLib 27)
HOL Tactic.MATCH_ACCEPT_TAC (help/Docfiles/Tactic.MATCH_ACCEPT_TAC.adoc 0), value MATCH_ACCEPT_TAC (Tactic 73)
HOL Q.MATCH_ASMSUB_RENAME_TAC (help/Docfiles/Q.MATCH_ASMSUB_RENAME_TAC.adoc 0), value MATCH_ASMSUB_RENAME_TAC (Q 64)
HOL Q.MATCH_ASSUM_ABBREV_TAC (help/Docfiles/Q.MATCH_ASSUM_ABBREV_TAC.adoc 0), value MATCH_ASSUM_ABBREV_TAC (Q 56), value MATCH_ASSUM_ABBREV_TAC (markerLib 28)
HOL Q.MATCH_ASSUM_RENAME_TAC (help/Docfiles/Q.MATCH_ASSUM_RENAME_TAC.adoc 0), value MATCH_ASSUM_RENAME_TAC (Q 62)
value MATCH_FLOAT_FINITE (floatTheory 90)
HOL Q.MATCH_GOALSUB_RENAME_TAC (help/Docfiles/Q.MATCH_GOALSUB_RENAME_TAC.adoc 0), value MATCH_GOALSUB_RENAME_TAC (Q 63)
value match_literals (mlibMatch 16)
HOL Drule.MATCH_MP (help/Docfiles/Drule.MATCH_MP.adoc 0), value MATCH_MP (Drule 83)
HOL Tactic.MATCH_MP_TAC (help/Docfiles/Tactic.MATCH_MP_TAC.adoc 0), value MATCH_MP_TAC (Tactic 74), value match_mp_tac (Tactic 75), value match_mp_tac (lcsymtacs 27)
HOL Q.MATCH_RENAME_TAC (help/Docfiles/Q.MATCH_RENAME_TAC.adoc 0), value MATCH_RENAME_TAC (Q 61)
HOL Term.match_term (help/Docfiles/Term.match_term.adoc 0), value match_term (FinalTerm 71), value match_term (hol88Lib 38), value match_term (wfrecUtils 25)
value match_term_var (quantHeuristicsTools 27)
HOL Term.match_terml (help/Docfiles/Term.match_terml.adoc 0), value match_terml (FinalTerm 69)
HOL Type.match_type (help/Docfiles/Type.match_type.adoc 0), value match_type (FinalType 40), value match_type (hol88Lib 35), value match_type (wfrecUtils 24)
value match_type_in_context (FinalType 45)
value match_type_restr (FinalType 42)
value matched (mlibLiteralnet 26), value matched (mlibTermnet 25)
HOL DB.matcher (help/Docfiles/DB.matcher.adoc 0), value matcher (DB 25)
HOL DB.matches (help/Docfiles/DB.matches.adoc 0), value matches (DB 27)
value matchl (mlibMatch 13)
value matchl_literals (mlibMatch 15)
HOL DB.matchp (help/Docfiles/DB.matchp.adoc 0), value matchp (DB 24)
structure matchTools
value max (Arbintcore 39), value max (Arbrat 41), value max (mlibArbint 42), value max (mlibOmegaint 36), value max (mlibUseful 100)
value MAX_0 (arithmeticTheory 206)
value MAX_ASSOC (arithmeticTheory 207)
constructor Max_bound (Sup_Inf 4)
value MAX_COMM (arithmeticTheory 208), value max_comm (extrealTheory 277)
value MAX_DEF (arithmeticTheory 20), value max_def (realTheory 9)
value max_depth (mesonLib 17)
value max_fn_seq_def (lebesgueTheory 12)
value max_fn_seq_def_compute (lebesgueTheory 87)
value max_fn_seq_mono (lebesgueTheory 88)
value MAX_IDEM (arithmeticTheory 209)
value max_infty (extrealTheory 278)
value MAX_LE (arithmeticTheory 210), value max_le (extrealTheory 279)
value max_le2_imp (extrealTheory 280)
value MAX_LE_X (util_probTheory 95)
value MAX_LEMMA (seqTheory 21)
value MAX_LT (arithmeticTheory 211)
HOL Globals.max_print_depth (help/Docfiles/Globals.max_print_depth.adoc 0), value max_print_depth (Globals 15)
value max_refl (extrealTheory 281)
value MAX_SET_CONV (PFset_conv 11)
value MAX_SET_DEF (pred_setTheory 25)
value MAX_SET_ELIM (pred_setTheory 295)
value MAX_SET_elim_tac (pred_setLib 13)
value MAX_SET_REWRITES (pred_setTheory 296)
value MAX_SET_THM (pred_setTheory 297)
value max_set_tm (pred_setSyntax 32)
value MAX_SET_UNION (pred_setTheory 298)
value max_tm (intSyntax 25), value max_tm (numSyntax 21), value max_tm (realSyntax 21)
value maximal_elements_def (set_relationTheory 17)
value maximal_linear_order (set_relationTheory 85)
value maximal_TC (set_relationTheory 84)
value maximal_union (set_relationTheory 86)
value maybe (mlibParser 33)
value MCLAURIN (transcTheory 140)
value MCLAURIN_ALL_LE (transcTheory 141)
value MCLAURIN_ALL_LT (transcTheory 142)
value MCLAURIN_EXP_LE (transcTheory 143)
value MCLAURIN_EXP_LT (transcTheory 144)
value MCLAURIN_NEG (transcTheory 145)
value MCLAURIN_ZERO (transcTheory 146)
value md5 (mlibPortable 18)
value md5sum (Portable 80)
value MEASUBABLE_BIGUNION_LEMMA (measureTheory 142)
value MEASURABLE_BIGUNION_PROPERTY (measureTheory 143)
value MEASURABLE_BOREL (measureTheory 144)
value MEASURABLE_COMP (measureTheory 145)
value MEASURABLE_COMP_STRONG (measureTheory 146)
value MEASURABLE_COMP_STRONGER (measureTheory 147)
value measurable_def (measureTheory 19)
value MEASURABLE_DIFF_PROPERTY (measureTheory 148)
value MEASURABLE_I (measureTheory 149)
value MEASURABLE_LIFT (measureTheory 150)
value MEASURABLE_POW_TO_POW (measureTheory 151)
value MEASURABLE_POW_TO_POW_IMAGE (measureTheory 152)
value MEASURABLE_PROD_SIGMA (measureTheory 153)
value MEASURABLE_RANGE_REDUCE (measureTheory 154)
value measurable_sequence (lebesgueTheory 89)
value measurable_sets_def (measureTheory 20)
value MEASURABLE_SETS_SUBSET_SPACE (measureTheory 155)
value MEASURABLE_SIGMA (measureTheory 156)
value MEASURABLE_SIGMA_PREIMAGES (measureTheory 157)
value MEASURABLE_SUBSET (measureTheory 158)
value MEASURABLE_UP_LIFT (measureTheory 159)
value MEASURABLE_UP_SIGMA (measureTheory 160)
value MEASURABLE_UP_SUBSET (measureTheory 161)
value measure_absolutely_continuous_def (lebesgueTheory 13)
value MEASURE_ADDITIVE (measureTheory 162)
value measure_cmp (Lib 85)
value MEASURE_COMPL (measureTheory 163)
value MEASURE_COMPL_SUBSET (measureTheory 164)
value MEASURE_COUNTABLE_INCREASING (measureTheory 165)
value MEASURE_COUNTABLY_ADDITIVE (measureTheory 166)
value measure_def (measureTheory 21), value measure_def (prim_recTheory 11)
value MEASURE_DOWN (measureTheory 167)
value MEASURE_EMPTY (measureTheory 168)
value measure_grammars (measureTheory 237)
value measure_preserving_def (measureTheory 22)
value MEASURE_PRESERVING_LIFT (measureTheory 169)
value MEASURE_PRESERVING_SUBSET (measureTheory 170)
value MEASURE_PRESERVING_UP_LIFT (measureTheory 171)
value MEASURE_PRESERVING_UP_SIGMA (measureTheory 172)
value MEASURE_PRESERVING_UP_SUBSET (measureTheory 173)
value MEASURE_REAL_SUM_IMAGE (measureTheory 174)
value MEASURE_SPACE_ADDITIVE (measureTheory 175)
value MEASURE_SPACE_BIGINTER (measureTheory 176)
value MEASURE_SPACE_BIGUNION (measureTheory 177)
value MEASURE_SPACE_CMUL (measureTheory 178)
value measure_space_def (measureTheory 23)
value MEASURE_SPACE_DIFF (measureTheory 179)
value MEASURE_SPACE_EMPTY_MEASURABLE (measureTheory 180)
value measure_space_finite_prod_measure_POW1 (lebesgueTheory 90)
value measure_space_finite_prod_measure_POW2 (lebesgueTheory 91)
value measure_space_finite_prod_measure_POW3 (lebesgueTheory 92)
value MEASURE_SPACE_IN_MSPACE (measureTheory 183)
value MEASURE_SPACE_INCREASING (measureTheory 181)
value MEASURE_SPACE_INTER (measureTheory 182)
value MEASURE_SPACE_MSPACE_MEASURABLE (measureTheory 184)
value MEASURE_SPACE_POSITIVE (measureTheory 185)
value MEASURE_SPACE_REDUCE (measureTheory 186)
value MEASURE_SPACE_RESTRICTED (measureTheory 187)
value MEASURE_SPACE_SUBSET (measureTheory 188)
value MEASURE_SPACE_SUBSET_MSPACE (measureTheory 189)
value MEASURE_SPACE_UNION (measureTheory 190)
value measure_split (measureTheory 235)
value measure_thm (prim_recTheory 50)
value measure_tm (numSyntax 22)
HOL bossLib.measureInduct_on (help/Docfiles/bossLib.measureInduct_on.adoc 0), value measureInduct_on (bossLib 39), value measureInduct_on (numLib 21)
structure measureTheory
HOL Lib.mem (help/Docfiles/Lib.mem.adoc 0), value MEM (listTheory 303), value mem (Lib 86), value mem (PIntMap 36), value mem (mlibPatricia 26), value mem (mlibUseful 77)
value MEM_ALL_DISTINCT_IMP_PERM (patriciaTheory 79)
value MEM_APPEND (listTheory 304)
value MEM_APPEND_lemma (listTheory 305)
value MEM_BAG_TO_LIST (containerTheory 34)
value mem_bf_flatten (lbtreeTheory 49)
value MEM_BUTLASTN (rich_listTheory 264)
value mem_cases (lbtreeTheory 50)
value MEM_COUNT_LIST (rich_listTheory 265)
value mem_def (lbtreeTheory 18), value mem_def (pathTheory 20)
value mem_depth (lbtreeTheory 51)
value MEM_DROP (listTheory 306), value MEM_DROP (rich_listTheory 266)
value MEM_DROP_IMP (rich_listTheory 267)
value MEM_dropWhile_IMP (listTheory 322)
value MEM_EL (listTheory 307)
value MEM_EXISTS (rich_listTheory 268)
value mem_exists_set (listTheory 425)
value MEM_FILTER (listTheory 308)
value MEM_FLAT (listTheory 309)
value MEM_fmap_to_alist (alistTheory 42)
value MEM_fmap_to_alist_FLOOKUP (alistTheory 43)
value MEM_FOLDL (rich_listTheory 269)
value MEM_FOLDL_MAP (rich_listTheory 270)
value MEM_FOLDR (rich_listTheory 271)
value MEM_FOLDR_MAP (rich_listTheory 272)
value MEM_FRONT (rich_listTheory 273)
value MEM_GENLIST (listTheory 310)
value mem_ind (lbtreeTheory 52)
value MEM_LAST (rich_listTheory 274)
value MEM_LAST_FRONT (rich_listTheory 276)
value MEM_LASTN (rich_listTheory 275)
value MEM_listRangeINC (listRangeTheory 11)
value MEM_listRangeLHI (listRangeTheory 12)
value MEM_LUPDATE (listTheory 311)
value MEM_LUPDATE_E (listTheory 312)
value MEM_MAP (listTheory 313)
value mem_mindepth (lbtreeTheory 53)
value MEM_pair_fmap_to_alist_FLOOKUP (alistTheory 44)
value MEM_PERM (sortingTheory 27)
value MEM_REPLICATE (rich_listTheory 277)
value MEM_REVERSE (listTheory 314)
value mem_rules (lbtreeTheory 54)
value MEM_SEG (rich_listTheory 278)
value MEM_SET_TO_LIST (containerTheory 35), value MEM_SET_TO_LIST (listTheory 315)
value MEM_SING_APPEND (rich_listTheory 279)
value MEM_SNOC (listTheory 316)
value MEM_SPLIT (listTheory 317)
value MEM_SPLIT_APPEND_first (listTheory 318)
value MEM_SPLIT_APPEND_last (listTheory 319)
value mem_strongind (lbtreeTheory 55)
value MEM_TAKE (rich_listTheory 280)
value MEM_TAKE_IMP (rich_listTheory 281)
value mem_thm (lbtreeTheory 56), value mem_thm (pathTheory 109)
value mem_to_flookup (alistTheory 65)
value MEM_toAList (sptreeTheory 38)
value MEM_toList (sptreeTheory 39)
value MEM_TRAVERSE (patriciaTheory 80)
value MEM_TRAVERSE_INSERT_PTREE (patriciaTheory 81)
value MEM_TRAVERSE_PEEK (patriciaTheory 82)
value MEM_ZIP (listTheory 320)
value MEM_ZIP_MEM_MAP (listTheory 321)
value member (CharSet 9), value member (Redblackset 17), value member (UTF8Set 9)
value MEMBER_NOT_EMPTY (bagTheory 194), value MEMBER_NOT_EMPTY (pred_setTheory 299)
value memoize (mlibStream 44), value memoize (mlibUseful 180)
constructor Mepo (holyHammer 3)
HOL Tag.merge (help/Docfiles/Tag.merge.adoc 0), value merge (FinalTag 12), value merge (Tag 13), value merge (fmapalTheory 144), value merge (mlibTermorder 30), value merge (mlibUseful 101)
value merge_coeffs (Term_coeffs 5)
value merge_CONV (fmapalTacs 10)
value merge_cs (congLib 78)
value merge_curried (fmapalTheory 64)
value merge_curried_def (mergesortTheory 5)
value merge_def (mergesortTheory 23)
value merge_dep (Dep 22)
value merge_empty (mergesortTheory 24)
value merge_grammars (term_grammar 103), value merge_grammars (type_grammar 44)
value merge_ind (fmapalTheory 145), value merge_ind (mergesortTheory 25)
value merge_nets (Ho_Net 16)
value merge_oinfos (Overload 61)
value merge_out (fmapalTheory 146)
value merge_out_curried (fmapalTheory 65)
value merge_out_ind (fmapalTheory 147)
value merge_out_tupled_primitive (fmapalTheory 66)
value merge_perm (mergesortTheory 26)
value merge_sorted (mergesortTheory 27)
value merge_ss (simpLib 87)
value merge_stable (mergesortTheory 28)
value merge_tail_correct1 (mergesortTheory 29)
value merge_tail_correct2 (mergesortTheory 30)
value merge_tail_curried_def (mergesortTheory 6)
value merge_tail_def (mergesortTheory 31)
value merge_tail_ind (mergesortTheory 32)
value merge_tail_tupled_primitive_def (mergesortTheory 7)
value merge_travrules (Travrules 80)
value merge_tupled_primitive (fmapalTheory 67)
value merge_tupled_primitive_def (mergesortTheory 8)
value mergesort_def (mergesortTheory 13)
value mergesort_grammars (mergesortTheory 58)
value mergesort_mem (mergesortTheory 42)
value mergesort_perm (mergesortTheory 43)
value mergesort_sorted (mergesortTheory 44)
value mergesort_stable (mergesortTheory 45)
value mergesort_STABLE_SORT (mergesortTheory 41)
value mergesort_tail_correct (mergesortTheory 46)
value mergesort_tail_def (mergesortTheory 14)
value mergesortN_correct (mergesortTheory 33)
value mergesortN_curried_def (mergesortTheory 9)
value mergesortN_def (mergesortTheory 34)
value mergesortN_ind (mergesortTheory 35)
value mergesortN_perm (mergesortTheory 36)
value mergesortN_sorted (mergesortTheory 37)
value mergesortN_stable (mergesortTheory 38)
value mergesortN_tail_curried_def (mergesortTheory 10)
value mergesortN_tail_def (mergesortTheory 39)
value mergesortN_tail_ind (mergesortTheory 40)
value mergesortN_tail_tupled_primitive_def (mergesortTheory 11)
value mergesortN_tupled_primitive_def (mergesortTheory 12)
structure mergesortTheory
HOL Feedback.MESG_outstream (help/Docfiles/Feedback.MESG_outstream.adoc 0), value MESG_outstream (Feedback 18)
HOL Feedback.MESG_to_string (help/Docfiles/Feedback.MESG_to_string.adoc 0), value MESG_to_string (Feedback 26)
value meson (mlibMeson 34)
value meson' (mlibMeson 33)
HOL mesonLib.MESON_TAC (help/Docfiles/mesonLib.MESON_TAC.adoc 0), value MESON_TAC (mesonLib 20)
structure mesonLib
type meter (Count 90), type meter (mlibMeter 25), type meter (mlibSolver 13)
type meter_reading (mlibMeter 18), type meter_reading (mlibSolver 14)
value meter_reading_to_string (mlibMeter 22)
value metis (mlibMetis 40)
value metis' (mlibMetis 39)
value METIS_PROVE (bossLib 46), value METIS_PROVE (metisLib 10), value METIS_PROVE (metisTools 62)
value METIS_TAC (bossLib 50), value METIS_TAC (metisLib 9), value METIS_TAC (metisTools 61), value metis_tac (bossLib 51), value metis_tac (lcsymtacs 75)
structure metisLib
structure metisTools
value METRIC_ISMET (topologyTheory 25)
value METRIC_NZ (topologyTheory 26)
value METRIC_POS (topologyTheory 27)
value METRIC_SAME (topologyTheory 28)
value METRIC_SYM (topologyTheory 29)
value METRIC_TRIANGLE (topologyTheory 30)
value metric_TY_DEF (topologyTheory 10)
value metric_tybij (topologyTheory 11)
value METRIC_ZERO (topologyTheory 31)
value mex_def (wotTheory 9)
value mex_less_def (wotTheory 10)
value mex_less_eq_def (wotTheory 11)
value mfupdate_overload_info (term_grammar 106)
value min (Arbintcore 38), value min (Arbrat 40), value min (mlibArbint 41), value min (mlibOmegaint 35), value min (mlibUseful 99)
value MIN_0 (arithmeticTheory 212)
value MIN_ASSOC (arithmeticTheory 213)
constructor Min_bound (Sup_Inf 4)
value MIN_CNF (normalForms 251)
value MIN_COMM (arithmeticTheory 214), value min_comm (extrealTheory 282)
value MIN_DEF (arithmeticTheory 21), value min_def (realTheory 10)
value min_grammar (term_grammar 102), value min_grammar (type_grammar 18)
value min_grammars (Parse 264)
value MIN_IDEM (arithmeticTheory 215)
value min_infty (extrealTheory 283)
value MIN_LE (arithmeticTheory 216), value min_le (extrealTheory 284)
value min_le1 (extrealTheory 285)
value min_le2 (extrealTheory 286)
value min_le2_imp (extrealTheory 287)
value MIN_LT (arithmeticTheory 217)
value MIN_MAX_EQ (arithmeticTheory 218)
value MIN_MAX_LE (arithmeticTheory 219)
value MIN_MAX_LT (arithmeticTheory 220)
value MIN_MAX_PRED (arithmeticTheory 221)
value min_refl (extrealTheory 288)
value MIN_SET_DEF (pred_setTheory 26)
value MIN_SET_ELIM (pred_setTheory 300)
value MIN_SET_LEM (pred_setTheory 301)
value MIN_SET_LEQ_MAX_SET (pred_setTheory 302)
value MIN_SET_THM (pred_setTheory 303)
value min_set_tm (pred_setSyntax 33)
value MIN_SET_UNION (pred_setTheory 304)
value min_tm (intSyntax 24), value min_tm (numSyntax 23), value min_tm (realSyntax 20)
value min_var_occur_CONV (quantHeuristicsTools 26)
value mindepth_def (lbtreeTheory 19)
value mindepth_depth (lbtreeTheory 57)
value mindepth_thm (lbtreeTheory 58)
value minimal_def (util_probTheory 12)
value minimal_elements_def (set_relationTheory 18)
value MINIMAL_EXISTS (util_probTheory 96)
value MINIMAL_EXISTS0 (util_probTheory 97)
value minimal_linear_order (set_relationTheory 88)
value minimal_linear_order_unique (set_relationTheory 89)
value minimal_TC (set_relationTheory 87)
value minimal_union (set_relationTheory 90)
value minimise_divides (CooperMath 41)
value minimize_flag (hhReconstruct 4)
structure minisatProve
value MINISCOPE_EXISTS_CONV (Conv 102)
value MINISCOPE_FORALL_CONV (Conv 96)
value minprint (Parse 198)
value minus (UnicodeChars 121), value minus (ieeeTheory 81)
value Minus_infinity (ieeeTheory 15), value minus_infinity (ieeeTheory 82)
value minus_tm (intSyntax 11), value minus_tm (numSyntax 24), value minus_tm (realSyntax 11)
value Minus_zero (ieeeTheory 16), value minus_zero (ieeeTheory 83)
value mjoin (mlibUseful 54)
value mk (Nonce 4)
value mk_abbrev (markerSyntax 10)
value MK_ABBREVS_OLDSTYLE (markerLib 38)
HOL Drule.MK_ABS (help/Docfiles/Drule.MK_ABS.adoc 0), HOL Term.mk_abs (help/Docfiles/Term.mk_abs.adoc 0), value MK_ABS (Drule 7), value Mk_abs (FinalThm 97), value mk_abs (FinalTerm 36), value mk_abs (Psyntax 10), value mk_abs (Rsyntax 10)
value MK_ABS_CONV (liteLib 119)
value MK_ABSL_CONV (liteLib 118)
value mk_absval (intSyntax 85), value mk_absval (realSyntax 59)
value MK_AC_LCOMM (Drule 97)
value mk_acs (transcSyntax 63)
value mk_add (bitstringSyntax 122), value mk_add (patriciaSyntax 36)
value mk_add_list (patriciaSyntax 37)
value mk_add_lists (patricia_castsSyntax 64)
value mk_add_listw (patricia_castsSyntax 47)
value mk_add_with_carry (wordsSyntax 350)
value mk_adds (patricia_castsSyntax 63)
value mk_addw (patricia_castsSyntax 46)
value mk_align (alignmentSyntax 20)
value mk_aligned (alignmentSyntax 21)
value mk_all_distinct (bagLib 39), value mk_all_distinct (bagSyntax 37), value mk_all_distinct (listSyntax 45)
value mk_and_el (rich_listSyntax 67)
HOL pairSyntax.mk_anylet (help/Docfiles/pairSyntax.mk_anylet.adoc 0), value mk_anylet (pairSyntax 33)
value mk_app (Absyn 25)
value mk_append (listSyntax 46)
value mk_AQ (Absyn 23)
HOL boolSyntax.mk_arb (help/Docfiles/boolSyntax.mk_arb.adoc 0), value mk_arb (boolSyntax 49)
value mk_asm_marker (ConseqConv 81)
value mk_asm_marker_random (ConseqConv 82)
value mk_asn (transcSyntax 64)
value mk_atn (transcSyntax 65)
value mk_axiom_thm (FinalThm 108)
value mk_b (bitstringSyntax 37)
value mk_bag (bagLib 49), value mk_bag (bagSyntax 47)
value mk_band (bitstringSyntax 123)
value mk_biginter (pred_setSyntax 67)
value mk_bigunion (pred_setSyntax 66)
value mk_bij (pred_setSyntax 80)
value mk_bind (state_transformerSyntax 19)
value mk_binder (Absyn 38), value mk_binder (HolKernelDoc 43)
value MK_BINOP (liteLib 120), value mk_binop (HolKernelDoc 44), value mk_binop (liteLib 91), value mk_binop (mlibTerm 45)
value mk_bit (bitSyntax 22), value mk_bit (bitstringSyntax 38)
value mk_bit1 (numSyntax 36)
value mk_bit2 (numSyntax 37)
value mk_bit_count (wordsSyntax 352)
value mk_bit_count_upto (wordsSyntax 351)
value mk_bit_field_insert (wordsSyntax 353)
value mk_bit_modify (bitSyntax 23)
value mk_bit_reverse (bitSyntax 24)
value mk_bit_set (wordsSyntax 354)
value mk_bitify (bitstringSyntax 124)
value mk_bits (bitSyntax 25)
value mk_bitv (bitSyntax 26)
value mk_bitwise (bitSyntax 27), value mk_bitwise (bitstringSyntax 125)
value mk_bn (sptreeSyntax 84)
value mk_BN_curried_def (sptreeTheory 19)
value mk_BN_def (sptreeTheory 94)
value mk_BN_ind (sptreeTheory 95)
value mk_bn_tm (sptreeSyntax 29)
value mk_BN_tupled_primitive_def (sptreeTheory 20)
value mk_bnot (bitstringSyntax 126)
HOL boolSyntax.mk_bool_case (help/Docfiles/boolSyntax.mk_bool_case.adoc 0), value mk_bool_case (boolSyntax 47)
value mk_bool_size (basicSizeSyntax 11)
value mk_boolify (bitstringSyntax 127), value mk_boolify (numposrepSyntax 16)
value mk_bor (bitstringSyntax 128)
value MK_BOUNDED (BoundedRewrites 8)
value mk_branch (patriciaSyntax 33)
value mk_branching_bit (patriciaSyntax 49)
value mk_bs (sptreeSyntax 85)
value mk_BS_curried_def (sptreeTheory 21)
value mk_BS_def (sptreeTheory 96)
value mk_BS_ind (sptreeTheory 97)
value mk_bs_tm (sptreeSyntax 30)
value mk_BS_tupled_primitive_def (sptreeTheory 22)
value mk_bstring (bitstringSyntax 39)
value mk_butlastn (rich_listSyntax 68)
value mk_bxor (bitstringSyntax 129)
value mk_byte_align (alignmentSyntax 22)
value mk_byte_aligned (alignmentSyntax 23)
value mk_C (combinSyntax 17)
value mk_card (bagLib 42), value mk_card (bagSyntax 40), value mk_card (pred_setSyntax 57)
value mk_cart_type (fcpSyntax 6)
value mk_case (Pmatch 20), value mk_case (TypeBase 44), value mk_case (TypeBasePure 113)
value mk_case_abs_thm_tyinfo (DatatypeSimps 77)
value mk_case_cong_thm_tyinfo (DatatypeSimps 24)
value mk_case_elim_thm_tyinfo (DatatypeSimps 43)
value mk_case_rand_thm_tyinfo (DatatypeSimps 75)
value mk_case_rator_thm_tyinfo (DatatypeSimps 76)
value mk_char_ge (stringSyntax 49)
value mk_char_gt (stringSyntax 50)
value mk_char_le (stringSyntax 51)
value mk_char_lt (stringSyntax 52)
value mk_choice (pred_setSyntax 76)
value mk_chr (stringLib 14), value mk_chr (stringSyntax 53)
value mk_clause (mlibClause 33)
value mk_cmeasure (numSyntax 38)
HOL Thm.MK_COMB (help/Docfiles/Thm.MK_COMB.adoc 0), HOL Term.mk_comb (help/Docfiles/Term.mk_comb.adoc 0), value MK_COMB (FinalThm 41), value Mk_comb (FinalThm 96), value mk_comb (FinalTerm 35), value mk_comb (Psyntax 11), value mk_comb (Rsyntax 11)
HOL Tactic.MK_COMB_TAC (help/Docfiles/Tactic.MK_COMB_TAC.adoc 0), value MK_COMB_TAC (Tactic 67), value MK_COMB_TAC (jrhUtils 10)
value mk_compl (pred_setSyntax 56)
value mk_concat_word_list (wordsSyntax 355)
HOL boolSyntax.mk_cond (help/Docfiles/boolSyntax.mk_cond.adoc 0), value mk_cond (Psyntax 12), value mk_cond (Rsyntax 12), value mk_cond (boolSyntax 46)
value mk_cond_rewrs (Cond_rewr 38)
value mk_congset (congLib 72)
HOL boolSyntax.mk_conj (help/Docfiles/boolSyntax.mk_conj.adoc 0), value MK_CONJ (liteLib 145), value mk_conj (Absyn 30), value mk_conj (Psyntax 13), value mk_conj (Rsyntax 13), value mk_conj (boolSyntax 42)
HOL listSyntax.mk_cons (help/Docfiles/listSyntax.mk_cons.adoc 0), value mk_cons (listSyntax 47)
HOL Term.mk_const (help/Docfiles/Term.mk_const.adoc 0), value mk_const (FinalTerm 31), value mk_const (Psyntax 9), value mk_const (Rsyntax 9), value mk_const (mlibTerm 41)
value MK_CONSTRAINT (CooperSyntax 51), value mk_constraint (CooperSyntax 44)
value mk_consumer (Portable 19)
value mk_cos (transcSyntax 66)
value mk_count (pred_setSyntax 71)
value mk_count_list (rich_listSyntax 69)
value mk_cross (pred_setSyntax 70)
value mk_curry (pairLib 23), value mk_curry (pairSyntax 23)
value mk_datatype_info (TypeBasePure 14)
value mk_defn (Defn 22)
value mk_defns (Defn 26)
value mk_delete (pred_setSyntax 53), value mk_delete (sptreeSyntax 86)
value mk_depth (patriciaSyntax 45)
value mk_DEPTH_CONSEQ_CONV_CACHE (ConseqConv 95)
value mk_DEPTH_CONSEQ_CONV_CACHE_OPT (ConseqConv 107)
value mk_depthw (patricia_castsSyntax 55)
value mk_dest_string (stringSyntax 54)
value mk_diff (bagLib 21), value mk_diff (bagSyntax 19), value mk_diff (pred_setSyntax 52)
value mk_difference (sptreeSyntax 87)
value mk_dimindex (fcpSyntax 32), value mk_dimindex (wordsSyntax 356)
value mk_dimword (wordsSyntax 357)
value mk_Dint (transcSyntax 62)
HOL boolSyntax.mk_disj (help/Docfiles/boolSyntax.mk_disj.adoc 0), value MK_DISJ (liteLib 144), value mk_disj (Absyn 31), value mk_disj (Psyntax 14), value mk_disj (Rsyntax 14), value mk_disj (boolSyntax 43)
value mk_disjoint (pred_setSyntax 65)
value mk_div (intSyntax 70), value mk_div (numSyntax 39), value mk_div (realSyntax 56)
value mk_div2 (numSyntax 40)
value mk_div_2exp (bitSyntax 28)
value mk_divides (intSyntax 106)
value mk_division (transcSyntax 67)
value mk_divmod (numSyntax 41)
value mk_divmod_2exp (bitSyntax 29)
value mk_domain (sptreeSyntax 88)
value mk_drop (listSyntax 48)
value mk_dsize (transcSyntax 68)
value mk_el (listSyntax 49)
value mk_ell (rich_listSyntax 70)
value mk_empty (patriciaSyntax 31), value mk_empty (pred_setSyntax 45)
HOL boolSyntax.mk_eq (help/Docfiles/boolSyntax.mk_eq.adoc 0), value mk_eq (Absyn 29), value mk_eq (Psyntax 15), value mk_eq (Rsyntax 15), value mk_eq (boolSyntax 36), value mk_eq (mlibTerm 100)
value mk_even (numSyntax 42)
value mk_every (bagLib 45), value mk_every (bagSyntax 43), value mk_every (listSyntax 50)
value mk_every_leaf (patriciaSyntax 42)
value mk_every_leafw (patricia_castsSyntax 52)
HOL Drule.MK_EXISTS (help/Docfiles/Drule.MK_EXISTS.adoc 0), HOL boolSyntax.mk_exists (help/Docfiles/boolSyntax.mk_exists.adoc 0), value MK_EXISTS (Drule 8), value MK_EXISTS (liteLib 147), value mk_exists (Absyn 35), value mk_exists (Psyntax 17), value mk_exists (Rsyntax 17), value mk_exists (boolSyntax 40), value mk_exists (listSyntax 51)
HOL boolSyntax.mk_exists1 (help/Docfiles/boolSyntax.mk_exists1.adoc 0), value mk_exists1 (Absyn 36), value mk_exists1 (Psyntax 18), value mk_exists1 (Rsyntax 18), value mk_exists1 (boolSyntax 41)
value mk_exists_leaf (patriciaSyntax 43)
value mk_exists_leafw (patricia_castsSyntax 53)
value mk_exp (intSyntax 65), value mk_exp (numSyntax 43), value mk_exp (transcSyntax 69)
value mk_explode (stringLib 17), value mk_explode (stringSyntax 55)
value mk_extract (stringSyntax 56)
value mk_fact (numSyntax 44)
value mk_fail (combinSyntax 21)
value mk_fakeconst_name (GrammarSpecials 10)
value mk_fapply (finite_mapSyntax 16)
value mk_fcp (fcpSyntax 30)
value mk_fcp_cons (fcpSyntax 36)
value mk_fcp_def (basis_emitTheory 15)
value mk_fcp_every (fcpSyntax 39)
value mk_fcp_exists (fcpSyntax 38)
value mk_fcp_hd (fcpSyntax 34)
value mk_fcp_index (fcpSyntax 31)
value mk_fcp_map (fcpSyntax 37)
value mk_fcp_tl (fcpSyntax 35)
value mk_fcp_update (fcpSyntax 33)
value mk_fdom (finite_mapSyntax 17)
value mk_fempty (finite_mapSyntax 18)
value mk_field (bitstringSyntax 130)
value mk_field_insert (bitstringSyntax 131)
value mk_fields (stringSyntax 57)
value mk_filter (listSyntax 52)
value mk_find (patriciaSyntax 35), value mk_find (updateSyntax 17)
value mk_finds (patricia_castsSyntax 62)
value mk_findw (patricia_castsSyntax 45)
value mk_fine (transcSyntax 70)
value mk_finite (pred_setSyntax 59)
value mk_fixedwidth (bitstringSyntax 42)
value mk_fixwidth (bitstringSyntax 132)
value mk_flat (listSyntax 53)
value mk_flookup (finite_mapSyntax 19)
value mk_fmap_ty (finite_mapSyntax 6)
value mk_foldi (sptreeSyntax 89)
value mk_foldl (listSyntax 54)
value mk_foldr (listSyntax 55)
value mk_for (state_transformerSyntax 20)
HOL boolSyntax.mk_forall (help/Docfiles/boolSyntax.mk_forall.adoc 0), value MK_FORALL (liteLib 146), value mk_forall (Absyn 34), value mk_forall (Psyntax 16), value mk_forall (Rsyntax 16), value mk_forall (boolSyntax 39)
value mk_foreach (state_transformerSyntax 21)
value mk_frac_add (fracSyntax 25)
value mk_frac_ainv (fracSyntax 23)
value mk_frac_div (fracSyntax 28)
value mk_frac_dnm (fracSyntax 21)
value mk_frac_minv (fracSyntax 24)
value mk_frac_mul (fracSyntax 27)
value mk_frac_nmr (fracSyntax 20)
value mk_frac_sgn (fracSyntax 22)
value mk_frac_sub (fracSyntax 26)
value mk_fromAList (sptreeSyntax 90)
value mk_fromBinString (ASCIInumbersSyntax 27)
value mk_fromDecString (ASCIInumbersSyntax 28)
value mk_fromHexString (ASCIInumbersSyntax 29)
value mk_fromList (sptreeSyntax 91)
value mk_fromString (integer_wordSyntax 32)
value mk_front (listSyntax 56)
value mk_fst (pairLib 21), value mk_fst (pairSyntax 20)
value mk_fun_ty (Pretype 13)
value mk_functional (Pmatch 16)
value mk_funpow (numSyntax 45)
value mk_fupdate (finite_mapSyntax 20)
value mk_gauge (transcSyntax 71)
value mk_genlist (listSyntax 57)
value mk_geq (Arith_cons 18), value mk_geq (intSyntax 102), value mk_geq (numSyntax 46), value mk_geq (realSyntax 76)
value mk_Goalstate (jrhTactics 14)
value mk_great (Arith_cons 17), value mk_great (intSyntax 98), value mk_great (realSyntax 72)
value mk_greater (numSyntax 47)
value mk_guess (quantHeuristicsLibBase 52)
value mk_guess_opt (quantHeuristicsLibBase 53)
value mk_hd (listSyntax 58)
value mk_hex (ASCIInumbersSyntax 22)
HOL Feedback.mk_HOL_ERR (help/Docfiles/Feedback.mk_HOL_ERR.adoc 0), value mk_HOL_ERR (Feedback 7)
value mk_HOL_ERRloc (Feedback 8)
value mk_I (combinSyntax 16)
value mk_i2w (integer_wordSyntax 19)
HOL boolSyntax.mk_icomb (help/Docfiles/boolSyntax.mk_icomb.adoc 0), value mk_icomb (boolSyntax 56), value mk_icomb (liteLib 98)
value mk_ident (Absyn 24)
value mk_image (bagLib 35), value mk_image (bagSyntax 33), value mk_image (pred_setSyntax 58)
HOL boolSyntax.mk_imp (help/Docfiles/boolSyntax.mk_imp.adoc 0), value mk_imp (Absyn 32), value mk_imp (Psyntax 20), value mk_imp (Rsyntax 20), value mk_imp (boolSyntax 37)
value mk_implode (stringLib 16), value mk_implode (stringSyntax 58)
value mk_IN (boolSyntax 57), value mk_in (pred_setSyntax 44)
value mk_in_ptree (patriciaSyntax 47)
value mk_in_ptrees (patricia_castsSyntax 68)
value mk_in_ptreew (patricia_castsSyntax 56)
value mk_index (wordsSyntax 358)
value mk_induction (Induction 5)
value mk_infinite (pred_setSyntax 60)
value mk_inj (pred_setSyntax 78)
value mk_injected (intSyntax 36), value mk_injected (realSyntax 30)
value mk_inl (sumSyntax 17)
value mk_inr (sumSyntax 18)
value mk_insert (bagLib 29), value mk_insert (bagSyntax 27), value mk_insert (pred_setSyntax 47), value mk_insert (sptreeSyntax 92)
value mk_insert_ptree (patriciaSyntax 48)
value mk_insert_ptrees (patricia_castsSyntax 69)
value mk_insert_ptreew (patricia_castsSyntax 57)
value mk_INT_CEILING (intrealSyntax 22)
value mk_INT_FLOOR (intrealSyntax 18)
value mk_int_max (integer_wordSyntax 22), value mk_int_max (wordsSyntax 359)
value mk_int_min (integer_wordSyntax 21), value mk_int_min (wordsSyntax 360)
value mk_int_numeric_type (fcpSyntax 5)
value mk_int_word_type (wordsSyntax 12)
value mk_inter (pred_setSyntax 50), value mk_inter (sptreeSyntax 93)
value mk_inter_eq (sptreeSyntax 94)
value mk_is_int (intrealSyntax 26)
value mk_is_none (optionLib 24), value mk_is_none (optionSyntax 23)
value mk_is_ptree (patriciaSyntax 46)
value mk_is_some (optionLib 23), value mk_is_some (optionSyntax 22)
value mk_is_sublist (rich_listSyntax 71)
value mk_is_suffix (rich_listSyntax 72)
value mk_isalpha (stringSyntax 59)
value mk_isalphanum (stringSyntax 60)
value mk_isascii (stringSyntax 61)
value mk_iscntrl (stringSyntax 62)
value mk_isdigit (stringSyntax 63)
value mk_isgraph (stringSyntax 64)
value mk_ishexdigit (stringSyntax 65)
value mk_isl (sumSyntax 19)
value mk_islower (stringSyntax 66)
value mk_isprefix (listSyntax 59), value mk_isprefix (stringSyntax 67)
value mk_isprint (stringSyntax 68)
value mk_ispunct (stringSyntax 69)
value mk_isr (sumSyntax 20)
value mk_isspace (stringSyntax 70)
HOL Lib.mk_istream (help/Docfiles/Lib.mk_istream.adoc 0), value mk_istream (Lib 87)
value mk_isupper (stringSyntax 71)
value mk_itself (boolSyntax 50)
value mk_join (state_transformerSyntax 22)
value mk_K (combinSyntax 13)
value mk_K_1 (combinSyntax 14)
value mk_keys (patriciaSyntax 40)
value mk_keyss (patricia_castsSyntax 67)
value mk_keysw (patricia_castsSyntax 50)
value mk_l2n (numposrepSyntax 17)
value mk_l2v (fcpSyntax 41)
value mk_l2w (wordsSyntax 361)
value MK_LABEL (markerLib 42), value mk_label (markerSyntax 20)
value mk_lam (Absyn 26)
value mk_last (listSyntax 60)
value mk_lastn (rich_listSyntax 73)
value mk_leaf (patriciaSyntax 32)
value mk_least (numSyntax 48)
value mk_LEAST_INT (intSyntax 118)
value mk_length (listSyntax 61)
value mk_leq (Arith_cons 16), value mk_leq (intSyntax 94), value mk_leq (numSyntax 49), value mk_leq (realSyntax 68)
value mk_less (Arith_cons 15), value mk_less (intSyntax 90), value mk_less (numSyntax 50), value mk_less (realSyntax 64)
HOL boolSyntax.mk_let (help/Docfiles/boolSyntax.mk_let.adoc 0), value mk_let (Psyntax 21), value mk_let (Rsyntax 21), value mk_let (boolSyntax 45)
value mk_lex (pairSyntax 26)
value mk_linv (pred_setSyntax 81)
HOL listSyntax.mk_list (help/Docfiles/listSyntax.mk_list.adoc 0), value mk_list (listSyntax 62)
value mk_list_case (listSyntax 63)
value mk_list_elem_count (rich_listSyntax 74)
value mk_list_to_set (listSyntax 64)
value mk_list_type (listSyntax 4)
value mk_list_update (updateSyntax 18)
value mk_literal (mlibTerm 82)
value mk_literal_case (boolSyntax 48)
value mk_ln (sptreeSyntax 95), value mk_ln (transcSyntax 72)
value mk_local_grms (Parse 215)
value mk_log2 (bitSyntax 30)
value mk_lookup (sptreeSyntax 96)
value mk_ls (sptreeSyntax 97)
value mk_map (listSyntax 65)
value mk_map2 (listSyntax 66)
value mk_max (intSyntax 114), value mk_max (numSyntax 51), value mk_max (realSyntax 84)
value mk_max_set (pred_setSyntax 72)
value mk_measure (numSyntax 52)
value mk_mem (listSyntax 67)
value mk_meter (Count 92)
value mk_min (intSyntax 110), value mk_min (numSyntax 53), value mk_min (realSyntax 80)
value mk_min_set (pred_setSyntax 73)
value mk_minus (Arith_cons 7), value mk_minus (intSyntax 56), value mk_minus (numSyntax 54), value mk_minus (realSyntax 46)
value mk_mk_bn (sptreeSyntax 98)
value mk_mk_bs (sptreeSyntax 99)
value mk_mk_wf (sptreeSyntax 100)
value mk_mmap (state_transformerSyntax 23)
value mk_mod (intSyntax 74), value mk_mod (numSyntax 55)
value mk_mod_2exp (bitSyntax 31)
value mk_mod_2exp_eq (bitSyntax 32)
value mk_mod_2exp_max (bitSyntax 33)
value mk_modify (bitstringSyntax 133)
value mk_monad_type (state_transformerSyntax 5)
value mk_monop (HolKernelDoc 45)
value mk_mult (Arith_cons 8), value mk_mult (intSyntax 59), value mk_mult (numSyntax 56), value mk_mult (realSyntax 49)
value mk_n2l (numposrepSyntax 18)
value mk_n2s (ASCIInumbersSyntax 25)
value mk_n2v (bitstringSyntax 134)
value mk_n2w (wordsSyntax 362)
value mk_narrow (state_transformerSyntax 24)
HOL boolSyntax.mk_neg (help/Docfiles/boolSyntax.mk_neg.adoc 0), value mk_neg (boolSyntax 44)
value mk_neg___idempot (BoolExtractShared 7)
value mk_negated (intSyntax 45), value mk_negated (realSyntax 35)
value mk_nil (listSyntax 68)
value mk_nondatatype_info (TypeBasePure 33)
value mk_none (optionLib 18), value mk_none (optionSyntax 17)
value mk_nub (listSyntax 69)
value mk_null (listSyntax 70)
value mk_Num (intSyntax 40)
value mk_num_case (numSyntax 57)
value mk_num_from_bin_list (numposrepSyntax 19)
value mk_num_from_bin_string (ASCIInumbersSyntax 30)
value mk_num_from_dec_list (numposrepSyntax 21)
value mk_num_from_dec_string (ASCIInumbersSyntax 32)
value mk_num_from_hex_list (numposrepSyntax 22)
value mk_num_from_hex_string (ASCIInumbersSyntax 33)
value mk_num_from_oct_list (numposrepSyntax 20)
value mk_num_from_oct_string (ASCIInumbersSyntax 31)
value mk_num_to_bin_list (numposrepSyntax 23)
value mk_num_to_bin_string (ASCIInumbersSyntax 34)
value mk_num_to_dec_list (numposrepSyntax 25)
value mk_num_to_dec_string (ASCIInumbersSyntax 36)
value mk_num_to_hex_list (numposrepSyntax 26)
value mk_num_to_hex_string (ASCIInumbersSyntax 37)
value mk_num_to_oct_list (numposrepSyntax 24)
value mk_num_to_oct_string (ASCIInumbersSyntax 35)
value mk_num_var (Arith_cons 38)
HOL numSyntax.mk_numeral (help/Docfiles/numSyntax.mk_numeral.adoc 0), value mk_numeral (numSyntax 120)
value mk_numeric_type (fcpSyntax 4)
value mk_numset_of_ptree (patriciaSyntax 51)
value mk_nvec (bitstringSyntax 40)
value mk_nzcv (wordsSyntax 363)
value mk_o (combinSyntax 19)
value mk_odd (numSyntax 58)
value mk_one_case (oneSyntax 7)
value mk_one_size (basicSizeSyntax 14)
value mk_option (optionLib 5), value mk_option (optionSyntax 4)
value mk_option_case (optionLib 25), value mk_option_case (optionSyntax 24)
value mk_option_join (optionLib 22), value mk_option_join (optionSyntax 21)
value mk_option_map (optionLib 21), value mk_option_map (optionSyntax 20)
value mk_option_size (basicSizeSyntax 15)
value mk_or_el (rich_listSyntax 75)
HOL Thm.mk_oracle_thm (help/Docfiles/Thm.mk_oracle_thm.adoc 0), value mk_oracle_thm (FinalThm 107)
value mk_ord (stringLib 15), value mk_ord (stringSyntax 72)
value mk_outl (sumSyntax 21)
value mk_outr (sumSyntax 22)
value mk_override (updateSyntax 19)
HOL PairRules.MK_PABS (help/Docfiles/PairRules.MK_PABS.adoc 0), HOL pairSyntax.mk_pabs (help/Docfiles/pairSyntax.mk_pabs.adoc 0), value MK_PABS (PairRules 99), value mk_pabs (pairLib 26), value mk_pabs (pairSyntax 27), value mk_pabs (pairTheory 87)
value mk_pad_left (listSyntax 71)
value mk_pad_right (listSyntax 72)
HOL PairRules.MK_PAIR (help/Docfiles/PairRules.MK_PAIR.adoc 0), HOL pairSyntax.mk_pair (help/Docfiles/pairSyntax.mk_pair.adoc 0), value MK_PAIR (PairRules 4), value mk_pair (Absyn 33), value mk_pair (pairLib 20), value mk_pair (pairSyntax 19)
value mk_pair_map (pairLib 25), value mk_pair_map (pairSyntax 25)
value mk_pair_size (basicSizeSyntax 12)
value mk_parse_entry (holindexData 49)
value mk_part (sortingSyntax 29)
value mk_part3 (sortingSyntax 30)
value mk_partition (sortingSyntax 31)
value mk_pattern_fn (Pmatch 17), value mk_pattern_fn (TypeBase 48)
value mk_peek (patriciaSyntax 34)
value mk_peeks (patricia_castsSyntax 61)
value mk_peekw (patricia_castsSyntax 44)
value mk_perm (sortingSyntax 32)
value mk_PERSISTENT_DEPTH_CONSEQ_CONV_CACHE_OPT (ConseqConv 108)
HOL PairRules.MK_PEXISTS (help/Docfiles/PairRules.MK_PEXISTS.adoc 0), value MK_PEXISTS (PairRules 102), value mk_pexists (pairLib 28), value mk_pexists (pairSyntax 29)
value mk_pexists1 (pairLib 29), value mk_pexists1 (pairSyntax 30)
HOL PairRules.MK_PFORALL (help/Docfiles/PairRules.MK_PFORALL.adoc 0), value MK_PFORALL (PairRules 101), value mk_pforall (pairLib 27), value mk_pforall (pairSyntax 28)
value mk_plet (pairSyntax 32)
value mk_plus (Arith_cons 6), value mk_plus (intSyntax 49), value mk_plus (numSyntax 59), value mk_plus (realSyntax 39)
value mk_pow (pred_setSyntax 64)
value mk_ppstream (HOLPP 25)
value mk_pre (Arith_cons 31), value mk_pre (numSyntax 60)
value mk_prec_matrix (parse_term 25)
value mk_prefix (mlibUseful 131), value mk_prefix (rich_listSyntax 76)
value mk_preorder (Travrules 28)
HOL Term.mk_primed_var (help/Docfiles/Term.mk_primed_var.adoc 0), value mk_primed_var (FinalTerm 28), value mk_primed_var (Psyntax 8), value mk_primed_var (Rsyntax 8)
HOL pairSyntax.mk_prod (help/Docfiles/pairSyntax.mk_prod.adoc 0), value mk_prod (pairLib 8), value mk_prod (pairSyntax 4)
value mk_prod_type (wfrecUtils 10)
HOL PairRules.MK_PSELECT (help/Docfiles/PairRules.MK_PSELECT.adoc 0), value MK_PSELECT (PairRules 103), value mk_pselect (pairLib 30), value mk_pselect (pairSyntax 31)
value mk_psubset (pred_setSyntax 63)
HOL patriciaLib.mk_ptree (help/Docfiles/patriciaLib.mk_ptree.adoc 0), value mk_ptree (patriciaLib 9)
value mk_ptree_of_numset (patriciaSyntax 50)
value mk_ptree_of_stringset (patricia_castsSyntax 70)
value mk_ptree_of_wordset (patricia_castsSyntax 58)
value mk_ptree_type (patriciaSyntax 5)
value mk_qsort (sortingSyntax 33)
value mk_qsort3 (sortingSyntax 34)
value mk_quadop (HolKernelDoc 46)
value mk_quant_heuristic_cache (quantHeuristicsLibBase 130)
value mk_quot (intSyntax 78)
value mk_rat_add (ratSyntax 37)
value mk_rat_ainv (ratSyntax 34)
value mk_rat_div (ratSyntax 40)
value mk_rat_dnm (ratSyntax 30)
value mk_rat_minv (ratSyntax 35)
value mk_rat_mul (ratSyntax 39)
value mk_rat_nmr (ratSyntax 29)
value mk_rat_of_num (ratSyntax 32)
value mk_rat_sgn (ratSyntax 31)
value mk_rat_sub (ratSyntax 38)
value mk_Rdefn (Defn 23)
value mk_read (state_transformerSyntax 25)
value mk_real_of_int (intrealSyntax 14)
value MK_REC_INJ (ind_typeTheory 39)
value mk_record (TypeBase 50), value mk_record (TypeBasePure 118)
value mk_recordtype_constructor (RecordType 4)
value mk_reduce_and (wordsSyntax 364)
value mk_reduce_nand (wordsSyntax 365)
value mk_reduce_nor (wordsSyntax 366)
value mk_reduce_or (wordsSyntax 367)
value mk_reduce_xnor (wordsSyntax 368)
value mk_reduce_xor (wordsSyntax 369)
value mk_rem (intSyntax 82)
value mk_remove (patriciaSyntax 38)
value mk_removes (patricia_castsSyntax 65)
value mk_removew (patricia_castsSyntax 48)
value mk_replicate (bitstringSyntax 135), value mk_replicate (rich_listSyntax 77)
HOL res_quanLib.mk_res_abstract (help/Docfiles/res_quanLib.mk_res_abstract.adoc 0), HOL res_quanTools.mk_res_abstract (help/Docfiles/res_quanTools.mk_res_abstract.adoc 0), value mk_res_abstract (boolSyntax 55), value mk_res_abstract (res_quanTools 19)
HOL res_quanLib.mk_res_exists (help/Docfiles/res_quanLib.mk_res_exists.adoc 0), HOL res_quanTools.mk_res_exists (help/Docfiles/res_quanTools.mk_res_exists.adoc 0), value mk_res_exists (boolSyntax 52), value mk_res_exists (res_quanTools 16)
HOL res_quanLib.mk_res_exists_unique (help/Docfiles/res_quanLib.mk_res_exists_unique.adoc 0), value mk_res_exists_unique (boolSyntax 53), value mk_res_exists_unique (res_quanTools 17)
HOL res_quanLib.mk_res_forall (help/Docfiles/res_quanLib.mk_res_forall.adoc 0), HOL res_quanTools.mk_res_forall (help/Docfiles/res_quanTools.mk_res_forall.adoc 0), value mk_res_forall (boolSyntax 51), value mk_res_forall (res_quanTools 15)
HOL res_quanLib.mk_res_select (help/Docfiles/res_quanLib.mk_res_select.adoc 0), HOL res_quanTools.mk_res_select (help/Docfiles/res_quanTools.mk_res_select.adoc 0), value mk_res_select (boolSyntax 54), value mk_res_select (res_quanTools 18)
value mk_rest (pred_setSyntax 77)
value mk_reverse (listSyntax 73)
value mk_rewrites (Ho_Rewrite 4), value mk_rewrites (Rewrite 6)
value mk_ring_thm (ringLib 5)
value mk_rinv (pred_setSyntax 82)
value mk_root (transcSyntax 73)
value mk_rotate (bitstringSyntax 136)
value mk_rpow (transcSyntax 74)
value mk_rsum (transcSyntax 75)
value MK_RULES (RW 9)
value mk_S (combinSyntax 15)
value mk_s2n (ASCIInumbersSyntax 24)
value mk_s2v (bitstringSyntax 137)
value mk_s2w (wordsSyntax 370)
value mk_saturate_add (wordsSyntax 371)
value mk_saturate_i2sw (integer_wordSyntax 24)
value mk_saturate_i2w (integer_wordSyntax 25)
value mk_saturate_mul (wordsSyntax 372)
value mk_saturate_n2w (wordsSyntax 373)
value mk_saturate_sub (wordsSyntax 374)
value mk_saturate_sw2sw (integer_wordSyntax 26)
value mk_saturate_sw2w (integer_wordSyntax 27)
value mk_saturate_w2sw (integer_wordSyntax 28)
value mk_saturate_w2w (wordsSyntax 375)
value mk_sbit (bitSyntax 34)
value mk_scanl (rich_listSyntax 78)
value mk_scanr (rich_listSyntax 79)
value mk_seg (rich_listSyntax 80)
HOL boolSyntax.mk_select (help/Docfiles/boolSyntax.mk_select.adoc 0), value mk_select (Absyn 37), value mk_select (Psyntax 19), value mk_select (Rsyntax 19), value mk_select (boolSyntax 38)
value mk_seq (Sequence 34)
HOL Lib.mk_set (help/Docfiles/Lib.mk_set.adoc 0), value mk_set (Lib 88), value mk_set (pred_setSyntax 49)
value mk_set_spec (pred_setSyntax 55)
value mk_set_type (pred_setSyntax 4)
value mk_shiftl (bitstringSyntax 138)
value mk_shiftr (bitstringSyntax 139)
value mk_sign_extend (bitSyntax 35), value mk_sign_extend (bitstringSyntax 140)
value mk_signed_saturate_add (integer_wordSyntax 29)
value mk_signed_saturate_sub (integer_wordSyntax 30)
value mk_simpls (RW 8)
HOL simpLib.mk_simpset (help/Docfiles/simpLib.mk_simpset.adoc 0), value mk_simpset (simpLib 112)
value mk_sin (transcSyntax 76)
value mk_sing (pred_setSyntax 61)
value mk_size (patriciaSyntax 44), value mk_size (sptreeSyntax 101)
value mk_sizew (patricia_castsSyntax 54)
value mk_slice (bitSyntax 36)
value mk_snd (pairLib 22), value mk_snd (pairSyntax 21)
value mk_snoc (listSyntax 74)
value mk_solver_node (mlibSolver 47)
value mk_some (optionLib 19), value mk_some (optionSyntax 18)
value mk_some_ptree (patricia_castsSyntax 43)
value mk_sorted (sortingSyntax 35)
value mk_splitl (rich_listSyntax 81)
value mk_splitp (rich_listSyntax 82)
value mk_splitr (rich_listSyntax 83)
value mk_sptree_ty (sptreeSyntax 9)
value mk_sqrt (transcSyntax 77)
HOL holCheckLib.mk_state (help/Docfiles/holCheckLib.mk_state.adoc 0)
value mk_str (stringSyntax 73)
value mk_strcat (stringSyntax 74)
value mk_string (stringLib 18), value mk_string (stringSyntax 75)
value mk_string_case (stringSyntax 76)
value mk_string_ge (stringSyntax 77)
value mk_string_gt (stringSyntax 78)
value mk_string_le (stringSyntax 79)
value mk_string_lit (Literal 18)
value mk_string_lt (stringSyntax 80)
value mk_stringset_of_ptree (patricia_castsSyntax 71)
value mk_strlen (stringSyntax 81)
value mk_sub (stringSyntax 82)
value mk_sub_bag (bagLib 22), value mk_sub_bag (bagSyntax 20)
value mk_subset (pred_setSyntax 62)
value mk_substring (stringSyntax 83)
value mk_suc (Arith_cons 28), value mk_suc (numSyntax 61)
value mk_suffix (rich_listSyntax 84)
value mk_sum (listSyntax 75), value mk_sum (sumSyntax 12)
value mk_sum_case (sumSyntax 23)
value mk_sum_image (pred_setSyntax 74)
value mk_sum_set (pred_setSyntax 75)
value mk_sum_size (basicSizeSyntax 13)
value mk_sum_type (wfrecUtils 9)
value mk_surj (pred_setSyntax 79)
value mk_sw2sw (wordsSyntax 376)
value mk_swap (pairSyntax 22)
value mk_take (listSyntax 76)
value mk_tan (transcSyntax 78)
value mk_tdiv (transcSyntax 79)
value mk_testbit (bitstringSyntax 141)
value mk_the (optionLib 20), value mk_the (optionSyntax 19)
value mk_the_ptree (patricia_castsSyntax 42)
value mk_theorem_parse_entries (holindexData 51)
HOL Thm.mk_thm (help/Docfiles/Thm.mk_thm.adoc 0), value mk_thm (FinalThm 106)
HOL Term.mk_thy_const (help/Docfiles/Term.mk_thy_const.adoc 0), value mk_thy_const (FinalTerm 33)
HOL Type.mk_thy_type (help/Docfiles/Type.mk_thy_type.adoc 0), value mk_thy_type (FinalType 14)
value mk_time (Portable 41)
value mk_times_2exp (bitSyntax 37)
value mk_tl (listSyntax 77)
value mk_toAList (sptreeSyntax 102)
value mk_tochar (stringSyntax 84)
value mk_tokens (stringSyntax 85)
value mk_toList (sptreeSyntax 103)
value mk_tolower (stringSyntax 86)
value mk_toString (integer_wordSyntax 31)
value mk_toupper (stringSyntax 87)
value mk_transform (patriciaSyntax 41)
value mk_transformw (patricia_castsSyntax 51)
value mk_translate (stringSyntax 88)
value mk_traverse (patriciaSyntax 39)
value mk_traverses (patricia_castsSyntax 66)
value mk_traversew (patricia_castsSyntax 49)
value mk_travrules (Travrules 88)
value mk_triop (HolKernelDoc 47)
HOL Type.mk_type (help/Docfiles/Type.mk_type.adoc 0), value mk_type (FinalType 11), value mk_type (Psyntax 6), value mk_type (Rsyntax 6)
value mk_type_exists_thm_tyinfo (DatatypeSimps 53)
value mk_type_forall_thm_tyinfo (DatatypeSimps 54)
value mk_type_quant_thms_tyinfo (DatatypeSimps 55)
value mk_type_rewrites_tyinfo (DatatypeSimps 36)
value mk_typed (Absyn 27)
value mk_uint_max (integer_wordSyntax 23), value mk_uint_max (wordsSyntax 377)
value mk_uncurry (pairLib 24), value mk_uncurry (pairSyntax 24)
value mk_unhex (ASCIInumbersSyntax 23)
value mk_union (bagLib 27), value mk_union (bagSyntax 25), value mk_union (pred_setSyntax 51), value mk_union (sptreeSyntax 104)
value mk_unit (state_transformerSyntax 26)
value mk_univ (pred_setSyntax 46)
value mk_unzip (listSyntax 78)
value mk_unzip_fst (rich_listSyntax 85)
value mk_unzip_snd (rich_listSyntax 86)
value mk_update (combinSyntax 20)
value mk_update_parse_entry (holindexData 50)
value mk_v2l (fcpSyntax 40)
value mk_v2n (bitstringSyntax 142)
value mk_v2s (bitstringSyntax 143)
value mk_v2w (bitstringSyntax 144)
HOL Term.mk_var (help/Docfiles/Term.mk_var.adoc 0), value mk_var (FinalTerm 27), value mk_var (Psyntax 7), value mk_var (Rsyntax 7)
HOL Type.mk_vartype (help/Docfiles/Type.mk_vartype.adoc 0), value mk_vartype (FinalType 5)
value mk_vec (bitstringSyntax 41)
value mk_vstruct (wfrecUtils 17)
value mk_W (combinSyntax 18)
value mk_w2i (integer_wordSyntax 20)
value mk_w2l (wordsSyntax 378)
value mk_w2n (wordsSyntax 379)
value mk_w2s (wordsSyntax 380)
value mk_w2v (bitstringSyntax 145)
value mk_w2w (wordsSyntax 381)
value mk_wf (sptreeSyntax 105)
value mk_wf_def (sptreeTheory 23)
value mk_wf_eq (sptreeTheory 98)
value mk_wf_tm (sptreeSyntax 31)
value mk_while (numSyntax 62)
value mk_widen (state_transformerSyntax 27)
value mk_word (wordsSyntax 14)
value mk_word_1comp (wordsSyntax 382)
value mk_word_2comp (wordsSyntax 383)
value mk_word_abs (wordsSyntax 388)
value mk_word_add (wordsSyntax 389)
value mk_word_and (wordsSyntax 390)
value mk_word_asr (wordsSyntax 391)
value mk_word_asr_bv (wordsSyntax 392)
value mk_word_bit (wordsSyntax 393)
value mk_word_bits (wordsSyntax 394)
value mk_word_compare (wordsSyntax 395)
value mk_word_concat (wordsSyntax 396)
value mk_word_div (wordsSyntax 397)
value mk_word_extract (wordsSyntax 398)
value mk_word_from_bin_list (wordsSyntax 399)
value mk_word_from_bin_string (wordsSyntax 400)
value mk_word_from_dec_list (wordsSyntax 401)
value mk_word_from_dec_string (wordsSyntax 402)
value mk_word_from_hex_list (wordsSyntax 403)
value mk_word_from_hex_string (wordsSyntax 404)
value mk_word_from_oct_list (wordsSyntax 405)
value mk_word_from_oct_string (wordsSyntax 406)
value mk_word_ge (wordsSyntax 407)
value mk_word_gt (wordsSyntax 408)
value mk_word_H (wordsSyntax 384)
value mk_word_hi (wordsSyntax 409)
value mk_word_hs (wordsSyntax 410)
value mk_word_join (wordsSyntax 411)
value mk_word_L (wordsSyntax 385)
value mk_word_L2 (wordsSyntax 386)
value mk_word_le (wordsSyntax 412)
value mk_word_len (wordsSyntax 413)
value mk_word_lo (wordsSyntax 414)
value mk_word_log2 (wordsSyntax 415)
value mk_word_ls (wordsSyntax 416)
value mk_word_lsb (wordsSyntax 417)
value mk_word_lsl (wordsSyntax 418)
value mk_word_lsl_bv (wordsSyntax 419)
value mk_word_lsr (wordsSyntax 420)
value mk_word_lsr_bv (wordsSyntax 421)
value mk_word_lt (wordsSyntax 422)
value mk_word_max (wordsSyntax 423)
value mk_word_min (wordsSyntax 424)
value mk_word_mod (wordsSyntax 425)
value mk_word_modify (wordsSyntax 426)
value mk_word_msb (wordsSyntax 427)
value mk_word_mul (wordsSyntax 428)
value mk_word_nand (wordsSyntax 429)
value mk_word_nor (wordsSyntax 430)
value mk_word_or (wordsSyntax 431)
value mk_word_ptree (patricia_castsLib 9)
value mk_word_ptree_type (patricia_castsSyntax 5)
value mk_word_reduce (wordsSyntax 432)
value mk_word_replicate (wordsSyntax 433)
value mk_word_replicate_ty (wordsSyntax 434)
value mk_word_reverse (wordsSyntax 435)
value mk_word_rol (wordsSyntax 436)
value mk_word_rol_bv (wordsSyntax 437)
value mk_word_ror (wordsSyntax 438)
value mk_word_ror_bv (wordsSyntax 439)
value mk_word_rrx (wordsSyntax 440)
value mk_word_sdiv (wordsSyntax 441)
value mk_word_sign_extend (wordsSyntax 442)
HOL wordsLib.mk_word_size (help/Docfiles/wordsLib.mk_word_size.adoc 0), value mk_word_size (wordsLib 61)
value mk_word_slice (wordsSyntax 443)
value mk_word_smax (wordsSyntax 444)
value mk_word_smin (wordsSyntax 445)
value mk_word_smod (wordsSyntax 446)
value mk_word_srem (wordsSyntax 447)
value mk_word_sub (wordsSyntax 448)
value mk_word_T (wordsSyntax 387)
value mk_word_to_bin_list (wordsSyntax 449)
value mk_word_to_bin_string (wordsSyntax 450)
value mk_word_to_dec_list (wordsSyntax 451)
value mk_word_to_dec_string (wordsSyntax 452)
value mk_word_to_hex_list (wordsSyntax 453)
value mk_word_to_hex_string (wordsSyntax 454)
value mk_word_to_oct_list (wordsSyntax 455)
value mk_word_to_oct_string (wordsSyntax 456)
value mk_word_type (wordsSyntax 6)
value mk_word_xnor (wordsSyntax 457)
value mk_word_xor (wordsSyntax 458)
value mk_wordempty (patricia_castsSyntax 41)
value mk_wordi (wordsSyntax 15)
value mk_wordii (wordsSyntax 16)
value mk_wordset_of_ptree (patricia_castsSyntax 59)
value mk_write (state_transformerSyntax 28)
value mk_xable (Systeml 8)
value mk_zero_extend (bitstringSyntax 146)
value mk_zip (listSyntax 79)
constructor MkComb (Count 11)
value mkDict (Redblackmap 7)
value ml (mlibPortable 9)
value ML_SYSNAME (Systeml 33)
structure mlibArbint
structure mlibArbnum
structure mlibCanon
structure mlibClause
structure mlibClauseset
structure mlibHeap
structure mlibKernel
structure mlibLiteralnet
structure mlibMatch
constructor mlibMeson (mlibMetis 24), structure mlibMeson
structure mlibMeter
structure mlibMetis
structure mlibModel
structure mlibMultiset
structure mlibOmega
structure mlibOmegaint
structure mlibParser
structure mlibPatricia
structure mlibPortable
constructor mlibResolution (mlibClause 74), constructor mlibResolution (mlibMetis 24), structure mlibResolution
structure mlibRewrite
structure mlibSolver
structure mlibStream
structure mlibSubst
structure mlibSubsume
structure mlibSupport
constructor mlibTerm (mlibTerm 126), structure mlibTerm
structure mlibTermnet
structure mlibTermorder
structure mlibThm
structure mlibTptp
structure mlibUnits
structure mlibUseful
HOL Lib.mlquote (help/Docfiles/Lib.mlquote.adoc 0), value mlquote (Lib 89)
constructor MLSIG (EmitML 17)
value MLSIGSTRUCT (EmitML 26)
structure MLstring
constructor MLSTRUCT (EmitML 17)
value mlt1_all_accessible (bagTheory 255)
value mlt1_def (bagTheory 37)
value mlt1_INSERT_CANCEL (bagTheory 254)
value mlt_dominates_thm1 (bagTheory 266)
value mlt_dominates_thm2 (bagTheory 267)
value mlt_INSERT_CANCEL (bagTheory 257)
value mlt_INSERT_CANCEL_I (bagTheory 258)
value mlt_list_def (containerTheory 8)
value mlt_NOT_REFL (bagTheory 259)
value mlt_UNION_CANCEL_EQN (bagTheory 260)
value mlt_UNION_EMPTY_EQN (bagTheory 261)
value mlt_UNION_LCANCEL (bagTheory 262)
value mlt_UNION_LCANCEL_I (bagTheory 263)
value mlt_UNION_RCANCEL (bagTheory 264)
value mlt_UNION_RCANCEL_I (bagTheory 265)
value mltLT_SING0 (bagTheory 256)
value mmap (errormonad 18), value mmap (mlibUseful 53), value mmap (optmonad 21), value mmap (seqmonad 21), value mmap (stmonad 9)
value MMAP_COMP (errorStateMonadTheory 45), value MMAP_COMP (state_transformerTheory 34)
value MMAP_DEF (errorStateMonadTheory 15), value MMAP_DEF (state_transformerTheory 10)
value MMAP_ID (errorStateMonadTheory 46), value MMAP_ID (state_transformerTheory 35)
value MMAP_JOIN (errorStateMonadTheory 47), value MMAP_JOIN (state_transformerTheory 36)
value mmap_tm (state_transformerSyntax 12)
value MMAP_UNIT (errorStateMonadTheory 48), value MMAP_UNIT (state_transformerTheory 37)
value mmindex_EXISTS (lbtreeTheory 59)
value mmindex_unique (lbtreeTheory 60)
exception Mod (Portable 72), value mod (Arbintcore 23), value mod (Arbnumcore 43), value mod (mlibArbint 25), value mod (mlibArbnum 30), value mod (mlibOmegaint 22)
value mod2 (Arbnumcore 11), value mod2 (mlibArbnum 13)
value MOD_1 (arithmeticTheory 234)
value MOD_2 (arithmeticTheory 235)
value MOD_2EXP (numeral_bitTheory 25)
value MOD_2EXP_def (bitTheory 17)
value MOD_2EXP_DIMINDEX (wordsTheory 175)
value MOD_2EXP_EQ (numeral_bitTheory 26)
value MOD_2EXP_EQ_def (bitTheory 15)
value mod_2exp_eq_tm (bitSyntax 14)
value MOD_2EXP_LT (bitTheory 104)
value MOD_2EXP_MAX (numeral_bitTheory 27)
value MOD_2EXP_MAX_def (bitTheory 16)
value mod_2exp_max_tm (bitSyntax 16)
value MOD_2EXP_MONO (bitTheory 105)
value mod_2exp_tm (bitSyntax 15)
value MOD_ADD_1 (bitTheory 106)
value MOD_COMMON_FACTOR (arithmeticTheory 236)
value MOD_COMPLEMENT (wordsTheory 176)
HOL reduceLib.MOD_CONV (help/Docfiles/reduceLib.MOD_CONV.adoc 0), value MOD_CONV (Arithconv 18), value MOD_CONV (reduceLib 25)
value MOD_DIMINDEX (wordsTheory 177), value mod_dimindex (wordsTheory 544)
value MOD_ELIM (arithmeticTheory 237)
value MOD_EQ_0 (arithmeticTheory 238)
value MOD_EQ_0_DIVISOR (arithmeticTheory 239)
value MOD_LEQ (bitTheory 107)
value MOD_LESS (arithmeticTheory 240)
value MOD_LESS_EQ (arithmeticTheory 241)
value MOD_LIFT_PLUS (arithmeticTheory 242)
value MOD_LIFT_PLUS_IFF (arithmeticTheory 243)
value MOD_MOD (arithmeticTheory 244)
value MOD_MULT (arithmeticTheory 245)
value MOD_MULT_MOD (arithmeticTheory 246)
value MOD_ONE (arithmeticTheory 247)
value MOD_P (arithmeticTheory 248)
value MOD_P_UNIV (arithmeticTheory 250)
value MOD_PLUS (arithmeticTheory 249)
value MOD_PLUS_1 (bitTheory 108)
value MOD_PLUS_LEFT (bitTheory 109)
value MOD_PLUS_RIGHT (bitTheory 110)
value MOD_ss (numSimps 13)
value MOD_SUB (arithmeticTheory 251)
value MOD_SUC (arithmeticTheory 252)
value MOD_SUC_IFF (arithmeticTheory 253)
value MOD_TIMES (arithmeticTheory 254)
value MOD_TIMES2 (arithmeticTheory 255)
value MOD_TIMES_SUB (arithmeticTheory 256)
value mod_tm (intSyntax 14), value mod_tm (numSyntax 25)
value MOD_UNIQUE (arithmeticTheory 257)
value MOD_ZERO_GT (bitTheory 111)
type model (mlibModel 33)
value MODEQ_0 (arithmeticTheory 222)
value MODEQ_0_CONG (arithmeticTheory 223)
value MODEQ_DEF (arithmeticTheory 22)
value MODEQ_INTRO_CONG (arithmeticTheory 224)
value MODEQ_MOD (arithmeticTheory 225)
value MODEQ_MULT_CONG (arithmeticTheory 226)
value MODEQ_NONZERO_MODEQUALITY (arithmeticTheory 227)
value MODEQ_NUMERAL (arithmeticTheory 228)
value MODEQ_PLUS_CONG (arithmeticTheory 229)
value MODEQ_REFL (arithmeticTheory 230)
value MODEQ_SYM (arithmeticTheory 231)
value MODEQ_THM (arithmeticTheory 232)
value MODEQ_TRANS (arithmeticTheory 233)
value modhat_def (OmegaTheory 23)
value modify_def (bitstringTheory 21)
value modify_tm (bitstringSyntax 55)
value modu (complexTheory 22)
value MODU_0 (complexTheory 224)
value MODU_1 (complexTheory 225)
value MODU_CASES (complexTheory 226)
value MODU_COMPLEX_INV (complexTheory 227)
value MODU_COMPLEX_POW (complexTheory 228)
value MODU_CONJ (complexTheory 229)
value MODU_DIV (complexTheory 230)
value MODU_MUL (complexTheory 231)
value MODU_NEG (complexTheory 232)
value MODU_NUM (complexTheory 233)
value MODU_NZ (complexTheory 234)
value MODU_POS (complexTheory 235)
value MODU_POW2 (complexTheory 236)
value MODU_REAL (complexTheory 237)
value MODU_SCALAR_LMUL (complexTheory 238)
value MODU_SUB (complexTheory 239)
value MODU_UNIT (complexTheory 240)
value MODU_ZERO (complexTheory 241)
value modulo_fix (mlibModel 21)
value monad_bind (parmonadsyntax 3)
value monad_par (parmonadsyntax 4)
structure monadsyntax
HOL computeLib.monitoring (help/Docfiles/computeLib.monitoring.adoc 0), value monitoring (Defn 9), value monitoring (Rewrite 17), value monitoring (computeLib 7)
value mono (seqTheory 8)
value MONO_ALL (boolTheory 120)
value MONO_AND (boolTheory 121)
value MONO_COND (boolTheory 122)
value mono_decreasing_def (extrealTheory 37)
value mono_decreasing_suc (extrealTheory 289)
value MONO_EVERY (listTheory 323), value MONO_every (llistTheory 122)
value MONO_EVERY_LEAF (patriciaTheory 83)
value MONO_EXISTS (boolTheory 123), value MONO_EXISTS (listTheory 324), value MONO_exists (llistTheory 123)
value MONO_IMP (boolTheory 124)
value mono_increasing_converges_to_sup (extrealTheory 290)
value mono_increasing_def (extrealTheory 38)
value mono_increasing_suc (extrealTheory 291)
value MONO_NOT (boolTheory 125)
value MONO_NOT_EQ (boolTheory 126)
value MONO_OR (boolTheory 127)
value MONO_SUC (seqTheory 22)
value MONO_TAC (InductiveDefinition 13)
value MONOID_APPEND_NIL (rich_listTheory 282)
value MONOID_CONJ_T (operatorTheory 17)
value MONOID_DEF (operatorTheory 9)
value MONOID_DISJ_F (operatorTheory 18)
value monom_insert_curried_def (canonicalTheory 21)
value monom_insert_def (canonicalTheory 51), value monom_insert_def (ringNormTheory 42)
value monom_insert_ind (canonicalTheory 52)
value monom_insert_ok (canonicalTheory 53)
value monom_insert_tupled_primitive_def (canonicalTheory 22)
type monoset (CoIndDefLib 3), type monoset (IndDefLib 3), type monoset (InductiveDefinition 11)
value MONOTONE_CONVERGENCE (measureTheory 191)
value MONOTONE_CONVERGENCE2 (measureTheory 192)
value MONOTONE_CONVERGENCE_BIGINTER (measureTheory 193)
value MONOTONE_CONVERGENCE_BIGINTER2 (measureTheory 194)
value monotone_def (fixedPointTheory 11)
value monotonic_def (posetTheory 16)
constructor MORE_CONTEXT (Trace 4)
value MORE_EVENT (Past_Temporal_LogicTheory 24), value MORE_EVENT (Temporal_LogicTheory 67)
value MOSMLDIR (Systeml 27)
value move_add (CooperThms 6)
value move_BAG_UNION_over_eq (bagTheory 268)
value move_conj_left (CooperSyntax 42), value move_conj_left (markerLib 14)
value move_conj_right (markerLib 15)
value move_disj_left (markerLib 16)
value move_disj_right (markerLib 17)
value MOVE_EXISTS_IMP_THM (quantHeuristicsTheory 86)
value move_left_conj (markerTheory 14)
value move_left_disj (markerTheory 15)
value MOVE_NOT_DOWN_CONV (Norm_bool 6)
value move_quants_up (CooperSyntax 36)
value move_right_conj (markerTheory 16)
value move_right_disj (markerTheory 17)
value move_start (locn 41)
value move_stmarked_conj_left (markerLib 9)
value move_stmarked_conj_right (markerLib 10)
value move_stmarked_disj_left (markerLib 11)
value move_stmarked_disj_right (markerLib 12)
value move_sub (int_arithTheory 69)
value move_terms_from (CooperMath 23)
value MOVE_VCOEFF_TO_FRONT (OmegaMath 14)
HOL Thm.MP (help/Docfiles/Thm.MP.adoc 0), constructor Mp (Count 11), value MP (FinalThm 30)
value MP2_TAC (schneiderUtils 31)
value MP_CANON (Drule 62)
value MP_GENEQ_CANON (Drule 61)
value MP_LEQ_CANON (Drule 63)
value MP_REQ_CANON (Drule 64)
HOL Tactic.MP_TAC (help/Docfiles/Tactic.MP_TAC.adoc 0), value MP_TAC (Tactic 21), value mp_tac (Tactic 22), value mp_tac (lcsymtacs 26)
type Mparm (metisTools 26)
value mr1 (topologyTheory 12)
value MR1_ADD (topologyTheory 32)
value MR1_ADD_LT (topologyTheory 33)
value MR1_ADD_POS (topologyTheory 34)
value MR1_BETWEEN1 (topologyTheory 35)
value MR1_BOUNDED (netsTheory 16)
value MR1_DEF (topologyTheory 36)
value MR1_LIMPT (topologyTheory 37)
value MR1_SUB (topologyTheory 38)
value MR1_SUB_LE (topologyTheory 39)
value MR1_SUB_LT (topologyTheory 40)
constructor MS_Multi (parse_term 19)
constructor MS_Other (parse_term 19)
type mset (mlibMultiset 8)
value mtop (topologyTheory 13)
value mtop_istopology (topologyTheory 49)
value MTOP_LIMPT (topologyTheory 41)
value MTOP_OPEN (topologyTheory 42)
value MTOP_TENDS (netsTheory 17)
value MTOP_TENDS_UNIQ (netsTheory 18)
value mu (UnicodeChars 13)
value mul_assoc (extrealTheory 292)
value MUL_CANON_CONV (NumRelNorms 6), value MUL_CANON_CONV (numSimps 24)
value mul_comm (extrealTheory 293)
HOL reduceLib.MUL_CONV (help/Docfiles/reduceLib.MUL_CONV.adoc 0), value MUL_CONV (Arithconv 15), value MUL_CONV (reduceLib 22)
value MUL_IN_Q (extrealTheory 96)
value mul_le (extrealTheory 294)
value mul_let (extrealTheory 295)
value mul_lneg (extrealTheory 296)
value mul_lone (extrealTheory 297)
value mul_lt (extrealTheory 298)
value mul_lte (extrealTheory 299)
value mul_lzero (extrealTheory 300)
value mul_not_infty (extrealTheory 301)
value mul_not_infty2 (extrealTheory 302)
value mul_rneg (extrealTheory 303)
value mul_rone (extrealTheory 304)
value mul_rzero (extrealTheory 305)
value MULi (basis_emitTheory 6)
value MULT (arithmeticTheory 23)
value MULT_0 (arithmeticTheory 258)
value MULT_ASSOC (arithmeticTheory 259), value mult_assoc (ringTheory 26), value mult_assoc (semi_ringTheory 24)
value MULT_ASSOC_CONV (Thm_convs 24)
value MULT_CLAUSES (arithmeticTheory 260)
value MULT_COMM (Theorems 12), value MULT_COMM (arithmeticTheory 261)
value MULT_COMM_CONV (Thm_convs 25)
value MULT_DIV (arithmeticTheory 262)
value MULT_EQ_0 (arithmeticTheory 263)
value MULT_EQ_1 (arithmeticTheory 264)
value MULT_EQ_DIV (arithmeticTheory 265)
value MULT_EQ_ID (arithmeticTheory 266)
value MULT_EXP_MONO (arithmeticTheory 267)
value MULT_INCREASES (arithmeticTheory 268)
value mult_ints (realTheory 446)
value MULT_LEFT_1 (arithmeticTheory 269)
value MULT_LEQ_BY_CONST_CONV (Solve_ineqs 8)
value MULT_LEQ_SUC (Theorems 14)
value MULT_LESS_EQ_SUC (arithmeticTheory 270)
value MULT_MINUS_ONE (integer_wordTheory 30)
value MULT_MONO_EQ (arithmeticTheory 271)
value MULT_ONE (Theorems 10)
value mult_one_left (ringTheory 27), value mult_one_left (semi_ringTheory 25)
value mult_one_right (ringTheory 28), value mult_one_right (semi_ringTheory 26)
value mult_permute (semi_ringTheory 27)
value mult_rat (realTheory 447)
value mult_ratl (realTheory 448)
value mult_ratr (realTheory 449)
value MULT_RIGHT_1 (arithmeticTheory 272)
value mult_rotate (semi_ringTheory 28)
value MULT_SUC (Theorems 11), value MULT_SUC (arithmeticTheory 273)
value MULT_SUC_EQ (arithmeticTheory 274)
value MULT_SYM (arithmeticTheory 275), value mult_sym (ringTheory 29), value mult_sym (semi_ringTheory 29)
value mult_tm (intSyntax 12), value mult_tm (numSyntax 26), value mult_tm (realSyntax 12)
value MULT_ZERO (Theorems 8)
value mult_zero_left (ringTheory 30), value mult_zero_left (semi_ringTheory 30)
value mult_zero_right (ringTheory 31), value mult_zero_right (semi_ringTheory 31)
value multiDefine (TotalDefn 34)
value multiplication_theorems (Norm_arith 10)
structure mungeTools
constructor MUTREC (DefnBase 5)
structure Mutual
value MUTUAL_INDUCT_TAC (Mutual 20)
value MUTUAL_INDUCT_THEN (Mutual 19)
value MVT (limTheory 74)
value MVT_LEMMA (limTheory 75)
value mwhile (mlibUseful 55)
value MWHILE_DEF (state_transformerTheory 11)
type mx_order (parse_term 20)
type mx_src (parse_term 19)
value MY_MP_TAC (schneiderUtils 32)
value n2l_BOUND (numposrepTheory 36)
value n2l_curried_def (numposrepTheory 8)
value n2l_def (numposrepTheory 37)
value n2l_ind (numposrepTheory 38)
value n2l_l2n (numposrepTheory 39)
value n2l_pow2_compute (numposrepTheory 40)
value n2l_tm (numposrepSyntax 6)
value n2l_tupled_primitive_def (numposrepTheory 9)
value n2s_11 (string_numTheory 9)
value n2s_compute (ASCIInumbersTheory 32)
value n2s_def (ASCIInumbersTheory 10), value n2s_def (string_numTheory 10)
value n2s_ind (string_numTheory 11)
value n2s_onto (string_numTheory 12)
value n2s_primitive_def (string_numTheory 5)
value n2s_s2n (ASCIInumbersTheory 33), value n2s_s2n (string_numTheory 13)
value n2s_tm (ASCIInumbersSyntax 8)
value n2v_def (bitstringTheory 22)
value n2v_tm (bitstringSyntax 56)
value n2w_11 (wordsTheory 545)
value n2w_BITS (wordsTheory 546)
value n2w_def (wordsTheory 17)
value n2w_dimword (wordsTheory 549)
value n2w_DIV (wordsTheory 547)
HOL wordsLib.n2w_INTRO_TAC (help/Docfiles/wordsLib.n2w_INTRO_TAC.adoc 0), value n2w_INTRO_TAC (wordsLib 41)
value n2w_itself_def (wordsTheory 550)
value n2w_itself_ind (wordsTheory 551)
value n2w_itself_primitive_def (wordsTheory 18)
value n2w_mod (wordsTheory 552)
value n2w_sub (wordsTheory 553)
value n2w_sub_eq_0 (wordsTheory 554)
value n2w_SUC (wordsTheory 548)
value n2w_tm (wordsSyntax 35)
value n2w_v2n (bitstringTheory 77)
value n2w_v2w_CONV (bitstringLib 24)
value n2w_w2n (wordsTheory 555)
value name_compare (KernelSig 4)
value name_from_def (IndDefLib 8)
value name_of (Defn 29), value name_of (KernelSig 16)
value name_of_const (liteLib 106)
value name_of_id (KernelSig 11)
value name_ss (simpLib 88)
value name_toMLString (KernelSig 6)
value name_toString (KernelSig 5)
value named_merge_ss (simpLib 90)
value named_rewrites (simpLib 89)
value nameStrm (Lexis 21)
value napp_def (numpairTheory 8)
value napp_thm (numpairTheory 31)
value NARROW_def (errorStateMonadTheory 16), value NARROW_def (state_transformerTheory 12)
value narrow_tm (state_transformerSyntax 13)
value nat_elim__magic (arithmeticTheory 29)
value nat_elim_term (GrammarSpecials 27)
value nat_order_iso_thm (set_relationTheory 91)
value nats (UnicodeChars 122)
constructor NBayes (holyHammer 3)
value NBOOL_COND_RAND_CONV (IntDP_Munge 6)
value nchars (mlibUseful 122)
value nchotomy_of (TypeBase 27), value nchotomy_of (TypeBasePure 53)
value nconds_of_congrule (Opening 79)
value ncons_11 (numpairTheory 32)
value ncons_def (numpairTheory 9)
value ncons_not_nnil (numpairTheory 33)
value Nd_11 (lbtreeTheory 27)
value Nd_def (lbtreeTheory 7)
value ndefs (defCNF 62)
value Ndrep_def (lbtreeTheory 8)
value ne_01 (extrealTheory 306)
value ne_02 (extrealTheory 307)
value near (locn 43)
constructor NeedArg (clauses 26)
value neg (UnicodeChars 112)
value neg_0 (extrealTheory 308)
value neg_BIT1_lt_thm (inttoTheory 17)
value neg_BIT2_lt_thm (inttoTheory 18)
value NEG_DET_AUTOMATA (Omega_AutomataTheory 35)
HOL Drule.NEG_DISCH (help/Docfiles/Drule.NEG_DISCH.adoc 0), value NEG_DISCH (Drule 44)
value neg_eq0 (extrealTheory 309)
value neg_filter (quantHeuristicsLib 102), value neg_filter (quantHeuristicsLibBase 237)
value NEG_IFF_1_1 (HolSmtTheory 20)
value NEG_IFF_1_2 (HolSmtTheory 21)
value NEG_IFF_2_1 (HolSmtTheory 22)
value NEG_IFF_2_2 (HolSmtTheory 23)
constructor Neg_inf (Sup_Inf 4)
value neg_int_of_num_def (basis_emitTheory 16)
value neg_lg (util_probTheory 182)
value neg_logr (util_probTheory 183)
value neg_lt_BIT1_thm (inttoTheory 20)
value neg_lt_BIT2_thm (inttoTheory 21)
value neg_minus1 (extrealTheory 310)
value neg_mul2 (extrealTheory 311)
value neg_mult (ringTheory 32)
value neg_neg (extrealTheory 312)
value NEG_NEG_ELIM_CONV (quantHeuristicsLibBase 9), value NEG_NEG_ELIM_CONV (quantHeuristicsTools 7)
value NEG_NEG_INTRO_CONV (quantHeuristicsLibBase 8), value NEG_NEG_INTRO_CONV (quantHeuristicsTools 6)
value neg_neg_thm (inttoTheory 22)
value neg_rat (realTheory 450)
value neg_sub (extrealTheory 313)
value NEG_SUM_CONV (OmegaMath 15)
value neg_ZERO_eq_ZERO_thm (inttoTheory 19)
value negate (Arbintcore 28), value negate (Arbrat 30), value negate (mlibArbint 30), value negate (mlibTerm 90)
value negate_coeffs (Term_coeffs 4)
HOL Arith.NEGATE_CONV (help/Docfiles/Arith.NEGATE_CONV.adoc 0), value NEGATE_CONV (Arith 13), value NEGATE_CONV (Solve 10)
value negate_tm (intSyntax 8), value negate_tm (realSyntax 8)
HOL boolSyntax.negation (help/Docfiles/boolSyntax.negation.adoc 0), value negation (boolSyntax 19)
value NEGATION_NORMAL_FORM (Past_Temporal_LogicTheory 25)
value negative (mlibTerm 88)
constructor Negative_horn (mlibCanon 38)
value negative_set_def (lebesgueTheory 14)
value neginf_def (DeepSyntaxTheory 12)
value neginf_disj1_implies_exoriginal (DeepSyntaxTheory 27)
value neginf_exoriginal_eq_rhs (DeepSyntaxTheory 28)
value neginf_exoriginal_implies_rhs (DeepSyntaxTheory 29)
value neginf_ok (DeepSyntaxTheory 30)
constructor NEGN (CooperSyntax 28)
value neigh (topologyTheory 14)
constructor NEITHER (CooperSyntax 27)
value neq (UnicodeChars 113)
HOL reduceLib.NEQ_CONV (help/Docfiles/reduceLib.NEQ_CONV.adoc 0), value NEQ_CONV (Arithconv 4), value NEQ_CONV (reduceLib 11)
value NEQ_VARS (mlibClause 63)
value NEST_LEMMA (seqTheory 23)
value NEST_LEMMA_UNIQ (seqTheory 24)
value NESTED_ASM_CASES_TAC (jbUtils 17)
value NESTED_REAL_SUM_IMAGE_REVERSE (real_sigmaTheory 8)
constructor NESTREC (DefnBase 5)
structure Net, type net (Ho_Net 10), type net (Net 13), type net (Raw 6)
value NET_ABS (netsTheory 19)
value NET_ADD (netsTheory 20)
value NET_CONV_BOUNDED (netsTheory 21)
value NET_CONV_IBOUNDED (netsTheory 22)
value NET_CONV_NZ (netsTheory 23)
value NET_DIV (netsTheory 24)
value NET_INV (netsTheory 25)
value NET_LE (netsTheory 26)
value NET_MUL (netsTheory 27)
value NET_NEG (netsTheory 28)
value NET_NULL (netsTheory 29)
value NET_NULL_ADD (netsTheory 30)
value NET_NULL_CMUL (netsTheory 31)
value NET_NULL_MUL (netsTheory 32)
value net_of (Rewrite 9)
value NET_SUB (netsTheory 33)
value nets_grammars (netsTheory 36)
structure netsTheory
constructor NEUTR (clauses 8)
value new (mlibModel 36), value new (mlibResolution 27), value new (mlibSupport 34)
value new_abbreviation (type_grammar 40)
value new_absyn_postprocessor (term_grammar 125)
HOL Theory.new_axiom (help/Docfiles/Theory.new_axiom.adoc 0), value new_axiom (Theory 21)
value new_binary_tyop (type_grammar 29)
HOL boolSyntax.new_binder (help/Docfiles/boolSyntax.new_binder.adoc 0), value new_binder (Psyntax 43), value new_binder (Rsyntax 43), value new_binder (boolSyntax 157)
HOL boolSyntax.new_binder_definition (help/Docfiles/boolSyntax.new_binder_definition.adoc 0), value new_binder_definition (boolSyntax 162)
value new_buffer (qbuf 5)
value new_coinductive_definition (CoIndDefLib 10)
value new_compset (computeLib 10)
HOL Theory.new_constant (help/Docfiles/Theory.new_constant.adoc 0), value new_constant (Psyntax 41), value new_constant (Rsyntax 41), value new_constant (Theory 20), value new_constant (boolSyntax 155)
value new_data_store (holindexData 18)
value new_data_substore (holindexData 19)
value new_datatype (Datatype 21)
HOL Definition.new_definition (help/Docfiles/Definition.new_definition.adoc 0), value new_definition (Q 48)
value new_exporter (ThmSetData 4)
value new_goal (goalStack 17)
value NEW_GOAL_TAC (jbUtils 20)
value new_goalstack (Manager 12), value new_goalstack (proofManagerLib 14)
value new_goaltree (Manager 13), value new_goaltree (proofManagerLib 15)
value new_gtree (goalTree 11)
value new_history (History 6)
value new_id (KernelSig 13)
value new_inductive_definition (InductiveDefinition 17)
HOL boolSyntax.new_infix (help/Docfiles/boolSyntax.new_infix.adoc 0), value new_infix (Psyntax 42), value new_infix (Rsyntax 42), value new_infix (boolSyntax 156)
value new_infix_type (boolSyntax 151)
HOL boolSyntax.new_infixl_definition (help/Docfiles/boolSyntax.new_infixl_definition.adoc 0), value new_infixl_definition (Q 49), value new_infixl_definition (boolSyntax 160)
HOL boolSyntax.new_infixr_definition (help/Docfiles/boolSyntax.new_infixr_definition.adoc 0), value new_infixr_definition (Q 50), value new_infixr_definition (boolSyntax 161)
value new_int (mlibUseful 181)
value new_ints (mlibUseful 182)
value new_let_thms (BasicProvers 36)
value new_list_rec_definition (ListConv1 12), value new_list_rec_definition (listLib 26)
value new_map (folTools 43)
value new_meter (mlibMeter 26)
value new_pseudo_constr (EmitML 6)
HOL Prim_rec.new_recursive_definition (help/Docfiles/Prim_rec.new_recursive_definition.adoc 0), value new_recursive_definition (Prim_rec 22)
value NEW_SKOLEM_CONST (normalForms 190)
value NEW_SKOLEM_CONST_RULE (normalForms 191)
HOL Definition.new_specification (help/Docfiles/Definition.new_specification.adoc 0), value new_specification (Rsyntax 44), value new_specification (bossLib 29), value new_specification (pairLib 122)
value new_storage_attribute (ThmSetData 10)
value new_table (KernelSig 21)
HOL Theory.new_theory (help/Docfiles/Theory.new_theory.adoc 0), value new_theory (Theory 13)
value new_tyop (type_grammar 39)
HOL Theory.new_type (help/Docfiles/Theory.new_type.adoc 0), value new_type (Psyntax 40), value new_type (Rsyntax 40), value new_type (Theory 19), value new_type (boolSyntax 150)
HOL Definition.new_type_definition (help/Docfiles/Definition.new_type_definition.adoc 0), value new_type_definition (boolSyntax 159)
value new_units (mlibClauseset 29), value new_units (mlibResolution 31)
value new_uvar (Pretype 9)
value new_var (mlibTerm 70)
value new_vars (mlibTerm 71)
value Newmans_lemma (relationTheory 90)
structure newtypeTools
HOL Lib.next (help/Docfiles/Lib.next.adoc 0), value NEXT (Temporal_LogicTheory 8), value next (Lib 90)
value NEXT_AS_CO_BUECHI (Omega_AutomataTheory 36)
value NEXT_INWARDS_NORMAL_FORM (Past_Temporal_LogicTheory 26)
value NEXT_LARGER_PRIME (dividesTheory 29)
value NEXT_LINORD (Temporal_LogicTheory 68)
value nf_def (relationTheory 48)
value nfoldl_def (numpairTheory 10)
value nfoldl_thm (numpairTheory 34)
value nfst_def (numpairTheory 11)
value nfst_le (numpairTheory 35)
value nfst_npair (numpairTheory 36)
value nightmare_curried_def (OmegaTheory 24)
value nightmare_def (OmegaTheory 72)
value nightmare_EXISTS (OmegaTheory 71)
value nightmare_implies_LHS (OmegaTheory 73)
value nightmare_ind (OmegaTheory 74)
value nightmare_tupled_primitive_def (OmegaTheory 25)
constructor NIL (mlibStream 8)
value NIL_PRS (quotient_listTheory 29)
value NIL_RSP (quotient_listTheory 30)
value nil_tm (listSyntax 31)
value nlen_def (numpairTheory 12)
value nlen_thm (numpairTheory 37)
value nlist_cases (numpairTheory 38)
value nlist_ind (numpairTheory 39)
value nlistrec_curried_def (numpairTheory 13)
value nlistrec_thm (numpairTheory 40)
value nlistrec_tupled_primitive_def (numpairTheory 14)
value nmap_def (numpairTheory 15)
value nmap_thm (numpairTheory 41)
value NMR (fracTheory 71)
value nnf (mlibCanon 15)
value NNF_CONJ (HolSmtTheory 24)
value NNF_CONV (Canon 12), value NNF_CONV (normalForms 81), value NNF_CONV (refuteLib 12)
value NNF_CONV' (normalForms 80)
value NNF_DISJ (HolSmtTheory 25)
value NNF_NOT_NOT (HolSmtTheory 26)
value NNF_SKOLEM_CONV (Canon 13), value NNF_SKOLEM_CONV (refuteLib 13)
value NNFC_CONV (Canon_Port 8)
constructor NO_CONCL (OmegaMLShadow 11), constructor NO_CONCL (mlibOmega 14)
HOL Conv.NO_CONV (help/Docfiles/Conv.NO_CONV.adoc 0), value NO_CONV (Conv 28)
value no_ctxt_std_qp (quantHeuristicsLib 111), value no_ctxt_std_qp (quantHeuristicsLibParameters 46)
value NO_EVENT (Temporal_LogicTheory 78)
value NO_FUTURE_EVENT (Past_Temporal_LogicTheory 27)
exception no_gcd (mlibOmega 25)
HOL Tactical.NO_LT (help/Docfiles/Tactical.NO_LT.adoc 0), value NO_LT (Tactical 45)
value NO_PAST_EVENT (Past_Temporal_LogicTheory 28)
exception NO_PROOFS (Manager 9)
value NO_STRIP_FULL_SIMP_TAC (bossLib 100), value NO_STRIP_FULL_SIMP_TAC (simpLib 177)
value NO_STRIP_REV_FULL_SIMP_TAC (bossLib 101), value NO_STRIP_REV_FULL_SIMP_TAC (simpLib 178)
HOL Tactical.NO_TAC (help/Docfiles/Tactical.NO_TAC.adoc 0), value NO_TAC (Tactical 43)
HOL Thm_cont.NO_THEN (help/Docfiles/Thm_cont.NO_THEN.adoc 0), value NO_THEN (Thm_cont 9)
type node_data (mlibSolver 44)
value non (mlibUseful 36)
constructor Non_equality (mlibCanon 37)
constructor Non_horn (mlibCanon 38)
HOL Arith.non_presburger_subterms (help/Docfiles/Arith.non_presburger_subterms.adoc 0), value non_presburger_subterms (Arith 14), value non_presburger_subterms (Cooper 9), value non_presburger_subterms (Gen_arith 3), value non_presburger_subterms (IntDP_Munge 9)
constructor Non_propositional (mlibCanon 36)
HOL EmitTeX.non_type_definitions (help/Docfiles/EmitTeX.non_type_definitions.adoc 0), value non_type_definitions (EmitTeX 8)
HOL EmitTeX.non_type_theorems (help/Docfiles/EmitTeX.non_type_theorems.adoc 0), value non_type_theorems (EmitTeX 9)
value nonagg_c (term_tokens 22)
constructor NONASSOC (HOLgrammars 4), value NONASSOC (Parse 233)
structure Nonce
value NONE_DEF (optionTheory 7)
value NONE_PRS (quotient_optionTheory 9)
value NONE_RSP (quotient_optionTheory 10)
value none_tm (optionLib 9), value none_tm (optionSyntax 8)
constructor NONREC (DefnBase 5)
value nonzero (mlibMultiset 26)
exception Noparse (mlibParser 19)
constructor NoPhrasing (term_grammar 24), value NoPhrasing (Parse 262)
value NORE_EXPAND_QUANT_INSTANTIATE_CONV (quantHeuristicsLib 31), value NORE_EXPAND_QUANT_INSTANTIATE_CONV (quantHeuristicsLibBase 211)
value NORE_QUANT_INSTANTIATE_CONSEQ_CONV (quantHeuristicsLib 36), value NORE_QUANT_INSTANTIATE_CONSEQ_CONV (quantHeuristicsLibBase 221)
value NORE_QUANT_INSTANTIATE_CONV (quantHeuristicsLib 25), value NORE_QUANT_INSTANTIATE_CONV (quantHeuristicsLibBase 210)
value norm (mlibSubst 22)
value NORM_0 (arithmeticTheory 276)
structure Norm_arith
structure Norm_bool
value NORM_CONS_APPEND_CONV (listLib 11), value NORM_CONS_APPEND_CONV (listSimps 5)
structure Norm_ineqs
value norm_quote (Portable 77)
HOL Term.norm_subst (help/Docfiles/Term.norm_subst.adoc 0), value norm_subst (FinalTerm 72)
value NORM_TAC (BasicProvers 26)
value NORM_ZERO_AND_ONE_CONV (Norm_arith 20)
value normal_real (extrealTheory 314)
structure normalForms
value normalForms_grammars (normalFormsTheory 12)
structure normalFormsTheory
value normalise (OmegaShell 4)
value NORMALISE_ASM_PERM_TAC (permLib 106)
value NORMALISE_MULT (OmegaMath 16)
value normalize (polyTheory 6)
value normalizes (floatTheory 6)
HOL boolSimps.NORMEQ_ss (help/Docfiles/boolSimps.NORMEQ_ss.adoc 0), value NORMEQ_ss (boolSimps 62)
constructor Not (mlibTerm 18), constructor not (PEGParse 3)
value not2eqz (floatTheory 143)
value NOT_0w (wordsTheory 178)
value NOT_ADD_EMPTY (patriciaTheory 84)
value NOT_ALL_EL_SOME_EL (rich_listTheory 481)
value NOT_ALWAYS (Temporal_LogicTheory 69)
value NOT_AND (CooperThms 19), value NOT_AND (boolTheory 128)
value NOT_AND_CONV (quantHeuristicsLibBase 21), value NOT_AND_CONV (quantHeuristicsTools 19)
value NOT_AND_IMP (CooperThms 21)
value NOT_BAG_IN (bagTheory 195)
value NOT_BEFORE (Temporal_LogicTheory 70)
value NOT_BIT (bitTheory 112)
value NOT_BIT_GT_BITWISE (bitTheory 115)
value NOT_BIT_GT_LOG2 (bitTheory 116)
value NOT_BIT_GT_TWOEXP (bitTheory 117)
value NOT_BITS (bitTheory 113)
value NOT_BITS2 (bitTheory 114)
value NOT_CLAUSES (boolTheory 129)
value NOT_CLAUSES_F (ConseqConvTheory 36)
value NOT_CLAUSES_T (ConseqConvTheory 37)
value NOT_CLAUSES_X (ConseqConvTheory 38)
value NOT_CONJ_NORM_CONV (Thm_convs 9)
value NOT_CONS_NIL (listTheory 325), value NOT_CONS_NIL (rich_listTheory 482)
HOL reduceLib.NOT_CONV (help/Docfiles/reduceLib.NOT_CONV.adoc 0), value NOT_CONV (Boolconv 4), value NOT_CONV (reduceLib 4)
value NOT_DEF (boolTheory 21)
value NOT_DISJ_NORM_CONV (Thm_convs 10)
value not_elementof (UnicodeChars 133)
HOL Thm.NOT_ELIM (help/Docfiles/Thm.NOT_ELIM.adoc 0), value NOT_ELIM (FinalThm 89)
value NOT_ELIM2 (satTheory 11)
value NOT_EMPTY_INSERT (pred_setTheory 305)
value NOT_EMPTY_SING (pred_setTheory 306)
value NOT_EQ_FAPPLY (finite_mapTheory 200)
value NOT_EQ_FEMPTY_FUPDATE (finite_mapTheory 201)
value NOT_EQ_LESS_IMP (totoTheory 42)
value NOT_EQ_LIST (listTheory 326), value NOT_EQ_LIST (rich_listTheory 483)
HOL Drule.NOT_EQ_SYM (help/Docfiles/Drule.NOT_EQ_SYM.adoc 0), value NOT_EQ_SYM (Drule 45)
value NOT_EQUAL_SETS (pred_setTheory 307)
value NOT_EVENTUAL (Temporal_LogicTheory 71)
value NOT_EVERY (listTheory 327), value not_every (pathTheory 110)
value NOT_EXISTS (listTheory 328), value not_exists (pathTheory 111)
HOL Conv.NOT_EXISTS_CONV (help/Docfiles/Conv.NOT_EXISTS_CONV.adoc 0), value NOT_EXISTS_CONV (Conv 48)
value NOT_EXISTS_LIST_CONV (quantHeuristicsLibBase 11), value NOT_EXISTS_LIST_CONV (quantHeuristicsTools 9)
value NOT_EXISTS_THM (boolTheory 130)
value NOT_EXP_0 (arithmeticTheory 277)
value NOT_F (boolTheory 131)
value NOT_F_T (Theorems 21)
value NOT_FALSE (HolSmtTheory 27)
value NOT_FDOM_DRESTRICT (finite_mapTheory 202)
value NOT_FDOM_FAPPLY_FEMPTY (finite_mapTheory 203)
value NOT_FINITE_IMP_dimindex_1 (fcpTheory 53)
value NOT_FINITE_IMP_dimword_2 (wordsTheory 179)
HOL Conv.NOT_FORALL_CONV (help/Docfiles/Conv.NOT_FORALL_CONV.adoc 0), value NOT_FORALL_CONV (Conv 47)
value NOT_FORALL_LIST_CONV (quantHeuristicsLibBase 10), value NOT_FORALL_LIST_CONV (quantHeuristicsTools 8)
value NOT_FORALL_THM (boolTheory 132)
value NOT_GEQ_NORM_CONV (Thm_convs 26)
value NOT_GREAT_NORM_CONV (Thm_convs 27)
value NOT_GREATER (arithmeticTheory 278)
value NOT_GREATER_EQ (arithmeticTheory 279)
value not_iff (UnicodeChars 116)
value NOT_IMP (boolTheory 133)
value NOT_IMPLIES (quotientTheory 69)
value NOT_IN_BAG_DIFF (bagTheory 196)
value NOT_IN_EMPTY (pred_setTheory 309)
value NOT_IN_EMPTY_BAG (bagTheory 197)
value NOT_IN_FINITE (pred_setTheory 310)
value NOT_IN_nt (enumeralTheory 68)
value NOT_IN_RDOM (tcTheory 21)
value NOT_IN_SUB_BAG_INSERT (bagTheory 198)
value NOT_INSERT_EMPTY (pred_setTheory 308)
value NOT_INT_DIVIDES (int_arithTheory 23)
value NOT_INT_DIVIDES_POS (int_arithTheory 24)
value NOT_INT_MIN_ZERO (wordsTheory 180)
HOL Thm.NOT_INTRO (help/Docfiles/Thm.NOT_INTRO.adoc 0), value NOT_INTRO (FinalThm 88)
value NOT_INVOL (relationTheory 89)
value NOT_IS_SOME_EQ_NONE (optionTheory 32)
value NOT_ISL_ISR (sumTheory 28)
value NOT_ISR_ISL (sumTheory 29)
value NOT_KEY_LEFT_AND_RIGHT (patriciaTheory 85)
value NOT_LEQ (arithmeticTheory 280)
value NOT_LEQ_NORM_CONV (Thm_convs 28)
value NOT_LESS (arithmeticTheory 281), value not_less (int_arithTheory 70)
value NOT_LESS_0 (prim_recTheory 33)
value NOT_LESS_EQ (prim_recTheory 34)
value NOT_LESS_EQUAL (arithmeticTheory 282)
value NOT_LESS_NORM_CONV (Thm_convs 29)
value NOT_LFINITE_APPEND (llistTheory 124)
value NOT_LFINITE_DROP (llistTheory 125)
value NOT_LFINITE_NO_LENGTH (llistTheory 126)
value NOT_LFINITE_TAKE (llistTheory 127)
value NOT_LT_DIVIDES (dividesTheory 30)
value NOT_LT_ZERO_EQ_ZERO (arithmeticTheory 283)
value NOT_MEM_CONS (HolSmtTheory 28)
value NOT_MEM_NIL (HolSmtTheory 29)
value NOT_mlt_EMPTY (bagTheory 199)
value NOT_MOD2_LEM (bitTheory 118)
value NOT_MOD2_LEM2 (bitTheory 119)
value NOT_NEXT (Temporal_LogicTheory 72)
value NOT_NIL_CONS (listTheory 329), value NOT_NIL_CONS (rich_listTheory 484)
value NOT_NIL_SNOC (rich_listTheory 283)
value NOT_NONE_SOME (optionTheory 33)
value NOT_NOT (satTheory 12)
value NOT_NOT_ELIM (HolSmtTheory 30)
value NOT_NOT_INTRO_CONV (Solve 7)
value NOT_NOT_NORM_CONV (Thm_convs 11)
value NOT_NOT_P (CooperThms 17)
value NOT_NULL_MEM (listTheory 330)
value NOT_NULL_SNOC (rich_listTheory 284)
value NOT_NUM_EQ (arithmeticTheory 284)
value NOT_NUM_EQ_NORM_CONV (Thm_convs 30)
value NOT_ODD_EQ_EVEN (arithmeticTheory 285)
value NOT_OR (CooperThms 18)
value NOT_OR_CONV (quantHeuristicsLibBase 20), value NOT_OR_CONV (quantHeuristicsTools 18)
HOL PairRules.NOT_PEXISTS_CONV (help/Docfiles/PairRules.NOT_PEXISTS_CONV.adoc 0), value NOT_PEXISTS_CONV (PairRules 27)
HOL PairRules.NOT_PFORALL_CONV (help/Docfiles/PairRules.NOT_PFORALL_CONV.adoc 0), value NOT_PFORALL_CONV (PairRules 26)
value NOT_PRIME_0 (dividesTheory 31)
value NOT_PRIME_1 (dividesTheory 32)
value NOT_PSUBSET_EMPTY (pred_setTheory 311)
value NOT_SBEFORE (Temporal_LogicTheory 73)
value NOT_SING_EMPTY (pred_setTheory 312)
value NOT_SNOC_NIL (rich_listTheory 285)
value NOT_SOME_EL_ALL_EL (rich_listTheory 485)
value NOT_SOME_NONE (optionTheory 34)
value NOT_ss (boolSimps 12)
value NOT_STRICTLY_DECREASING (arithmeticTheory 286)
value NOT_SUC (numTheory 16)
value NOT_SUC_ADD_LESS_EQ (arithmeticTheory 287)
value NOT_SUC_LESS_EQ (arithmeticTheory 288)
value NOT_SUC_LESS_EQ_0 (arithmeticTheory 289)
value NOT_SUNTIL (Temporal_LogicTheory 74)
value NOT_SWHEN (Temporal_LogicTheory 75)
value NOT_T_F (Theorems 20)
value not_tm (CooperSyntax 3)
value NOT_UINTMAXw (wordsTheory 181)
value NOT_UNIV_PSUBSET (pred_setTheory 313)
value NOT_UNTIL (Temporal_LogicTheory 76)
value NOT_WHEN (Temporal_LogicTheory 77)
value NOT_ZERO_ADD1 (bitTheory 120)
value NOT_ZERO_LT_ZERO (arithmeticTheory 290)
constructor NotElim (Count 11)
value noteteeszegtz (floatTheory 144)
constructor NotEvenIfRand (term_grammar 30), value NotEvenIfRand (Parse 257)
exception NotFound (KernelSig 20), exception NotFound (PIntMap 24), exception NotFound (Redblackmap 5), exception NotFound (Redblackset 5), exception NotFound (mlibPatricia 19)
value nothing (mlibParser 27), value nothing (smpp 9)
value notify_on_tyvar_guess (Globals 28)
value notify_on_word_length_guess (wordsLib 79)
HOL wordsLib.notify_word_length_guesses (help/Docfiles/wordsLib.notify_word_length_guesses.adoc 0)
constructor NotIntro (Count 11)
value npair (numpairTheory 42)
value npair_11 (numpairTheory 43)
value npair_cases (numpairTheory 44)
value npair_def (numpairTheory 16)
value NRC (arithmeticTheory 24)
value NRC_0 (arithmeticTheory 291)
value NRC_1 (arithmeticTheory 292)
value NRC_ADD_E (arithmeticTheory 293)
value NRC_ADD_EQN (arithmeticTheory 294)
value NRC_ADD_I (arithmeticTheory 295)
value NRC_LRC (listTheory 331)
value NRC_RTC (arithmeticTheory 296)
value NRC_SUC_RECURSE_LEFT (arithmeticTheory 297)
value nsnd_def (numpairTheory 17)
value nsnd_le (numpairTheory 45)
value nsnd_npair (numpairTheory 46)
constructor nt (PEGParse 3)
HOL Tactic.NTAC (help/Docfiles/Tactic.NTAC.adoc 0), value NTAC (Tactic 70), value ntac (Tactic 71), value ntac (lcsymtacs 16)
HOL Tactical.NTH_GOAL (help/Docfiles/Tactical.NTH_GOAL.adoc 0), value NTH_GOAL (Tactical 34)
value nth_label_def (pathTheory 21)
value nth_label_def_compute (pathTheory 114)
value nth_label_drop (pathTheory 115)
value nth_label_LNTH (pathTheory 112)
value nth_label_LTAKE (pathTheory 113)
value nth_label_pgenerate (pathTheory 116)
value nth_label_pmap (pathTheory 117)
value nth_label_take (pathTheory 118)
value nth_min_curried_def (set_relationTheory 19)
value nth_min_def (set_relationTheory 92)
value nth_min_def_compute (set_relationTheory 93)
value nth_min_ind (set_relationTheory 94)
value nth_min_tupled_primitive_def (set_relationTheory 20)
type nthy_rec (Overload 5)
HOL Drule.Ntimes (help/Docfiles/Drule.Ntimes.adoc 0), value Ntimes (BoundedRewrites 10)
value nu (UnicodeChars 14)
value nub_append (listTheory 426)
value nub_def (listTheory 53)
value nub_set (listTheory 427)
value nub_tm (listSyntax 32)
value NULL (listTheory 332), value NULL (rich_listTheory 486), value null (mlibStream 20), value null (mlibSubst 18), value null (mlibTermorder 26), value null (seq 34)
value NULL_DEF (listTheory 35), value NULL_DEF (rich_listTheory 487)
value NULL_EQ (listTheory 333)
value NULL_EQ_NIL (rich_listTheory 488)
value NULL_FILTER (listTheory 334)
value NULL_FOLDL (rich_listTheory 286)
value NULL_FOLDR (rich_listTheory 287)
value NULL_GENLIST (listTheory 335)
HOL Lib.null_intersection (help/Docfiles/Lib.null_intersection.adoc 0), value null_intersection (Lib 91)
value NULL_LENGTH (listTheory 336)
value null_oinfo (Overload 13)
HOL Tactical.NULL_OK_LT (help/Docfiles/Tactical.NULL_OK_LT.adoc 0), value NULL_OK_LT (Tactical 31)
value NULL_PRS (quotient_listTheory 31)
value NULL_RSP (quotient_listTheory 32)
value null_set_def (measureTheory 24)
value null_tm (listSyntax 33)
value NULL_V2L (fcpTheory 54)
type num (Arbintcore 5), type num (Arbnumcore 3), type num (Arbrat 5), type num (CooperMath 3), type num (Literal 3), type num (Theory 9), type num (mlibArbint 7), type num (mlibArbnum 5), type num (patriciaLib 6), type num (patricia_castsLib 6), type num (wordsSyntax 4), value Num (integerTheory 10), value num (numSyntax 4)
value num2ccode_11 (ieeeTheory 115)
value num2ccode_ccode2num (ieeeTheory 117)
value num2ccode_ONTO (ieeeTheory 116)
value num2ccode_thm (ieeeTheory 118)
value num2cpn_11 (totoTheory 112)
value num2cpn_cpn2num (totoTheory 114)
value num2cpn_ONTO (totoTheory 113)
value num2cpn_thm (totoTheory 115)
value num2ordering_11 (prelimTheory 22)
value num2ordering_ONTO (prelimTheory 23)
value num2ordering_ordering2num (prelimTheory 24)
value num2ordering_thm (prelimTheory 25)
value num2roundmode_11 (ieeeTheory 119)
value num2roundmode_ONTO (ieeeTheory 120)
value num2roundmode_roundmode2num (ieeeTheory 121)
value num2roundmode_thm (ieeeTheory 122)
value NUM_2D_BIJ (util_probTheory 98)
value NUM_2D_BIJ_BIG_SQUARE (util_probTheory 99)
value NUM_2D_BIJ_INV (util_probTheory 100)
value NUM_2D_BIJ_NZ (util_probTheory 101)
value NUM_2D_BIJ_NZ_ALT (util_probTheory 102)
value NUM_2D_BIJ_NZ_ALT2 (util_probTheory 103)
value NUM_2D_BIJ_NZ_ALT2_INV (util_probTheory 104)
value NUM_2D_BIJ_NZ_ALT_INV (util_probTheory 105)
value NUM_2D_BIJ_NZ_INV (util_probTheory 106)
value NUM_2D_BIJ_SMALL_SQUARE (util_probTheory 107)
value num_Axiom (prim_recTheory 51)
value num_Axiom_old (prim_recTheory 52)
value num_bin_list (numposrepTheory 41)
value num_bin_string (ASCIInumbersTheory 34)
value num_canonical_sum_merge_def (numRingTheory 5)
value num_canonical_sum_prod_def (numRingTheory 6)
value num_canonical_sum_scalar2_def (numRingTheory 7)
value num_canonical_sum_scalar3_def (numRingTheory 8)
value num_canonical_sum_scalar_def (numRingTheory 9)
value num_canonical_sum_simplify_def (numRingTheory 10)
value num_case_compute (arithmeticTheory 387)
value num_case_cong (arithmeticTheory 388)
value num_case_def (arithmeticTheory 30)
value num_case_tm (numSyntax 27)
value num_CASES (arithmeticTheory 386)
value NUM_CEILING_def (realTheory 5)
value NUM_CEILING_LE (realTheory 55)
value num_cmp_antisym (comparisonTheory 48)
value num_cmp_def (comparisonTheory 13)
value num_cmp_good (comparisonTheory 49)
value num_cmp_numOrd (comparisonTheory 50)
value num_coder_def (CoderTheory 13)
value num_compset (reduceLib 32)
value NUM_COND_RAND_CONV (Thm_convs 41)
value NUM_COND_RATOR_CONV (Thm_convs 40)
HOL numLib.num_CONV (help/Docfiles/numLib.num_CONV.adoc 0), structure Num_conv, value num_CONV (Num_conv 14), value num_CONV (numLib 15)
value num_countable (pred_setTheory 441)
value num_dec_list (numposrepTheory 42)
value num_dec_string (ASCIInumbersTheory 35)
HOL ConseqConv.NUM_DEPTH_CONSEQ_CONV (help/Docfiles/ConseqConv.NUM_DEPTH_CONSEQ_CONV.adoc 0), value NUM_DEPTH_CONSEQ_CONV (ConseqConv 181)
value num_dt_11 (totoTheory 118)
value num_dt_Axiom (totoTheory 119)
value num_dt_case_cong (totoTheory 120)
value num_dt_case_def (totoTheory 27)
value num_dt_distinct (totoTheory 121)
value num_dt_induction (totoTheory 122)
value num_dt_nchotomy (totoTheory 123)
value num_dt_size_def (totoTheory 28)
value num_dt_TY_DEF (totoTheory 26)
value num_dtOrd (totoTheory 116)
value num_dtOrd_curried (totoTheory 24)
value num_dtOrd_ind (totoTheory 117)
value num_dtOrd_tupled_primitive (totoTheory 25)
value NUM_EQ_NORM_CONV (Thm_convs 31)
value NUM_FLOOR_def (realTheory 6)
value NUM_FLOOR_DIV (realTheory 56)
value NUM_FLOOR_DIV_LOWERBOUND (realTheory 57)
value NUM_FLOOR_EQNS (realTheory 58)
value NUM_FLOOR_LE (realTheory 59)
value NUM_FLOOR_LE2 (realTheory 60)
value NUM_FLOOR_LET (realTheory 61)
value NUM_FLOOR_LOWER_BOUND (realTheory 62)
value NUM_FLOOR_upper_bound (realTheory 63)
value num_from_bin_list_def (numposrepTheory 10)
value num_from_bin_list_tm (numposrepSyntax 7)
value num_from_bin_string_def (ASCIInumbersTheory 11)
value num_from_bin_string_tm (ASCIInumbersSyntax 13)
value num_from_dec_list_def (numposrepTheory 11)
value num_from_dec_list_tm (numposrepSyntax 9)
value num_from_dec_string_def (ASCIInumbersTheory 12)
value num_from_dec_string_tm (ASCIInumbersSyntax 15)
value num_from_hex_list_def (numposrepTheory 12)
value num_from_hex_list_tm (numposrepSyntax 10)
value num_from_hex_string_def (ASCIInumbersTheory 13)
value num_from_hex_string_tm (ASCIInumbersSyntax 16)
value num_from_oct_list_def (numposrepTheory 13)
value num_from_oct_list_tm (numposrepSyntax 8)
value num_from_oct_string_def (ASCIInumbersTheory 14)
value num_from_oct_string_tm (ASCIInumbersSyntax 14)
value num_grammars (numTheory 18)
value num_hex_list (numposrepTheory 43)
value num_hex_string (ASCIInumbersTheory 36)
value num_ics_aux_def (numRingTheory 11)
value NUM_IN_Q (extrealTheory 97)
value num_injection (GrammarSpecials 29)
value num_interp_cs_def (numRingTheory 12)
value num_interp_m_def (numRingTheory 13)
value num_interp_sp_def (numRingTheory 14)
value num_interp_vl_def (numRingTheory 15)
value num_ISO_DEF (numTheory 10)
value num_ivl_aux_def (numRingTheory 16)
value num_MAX (integralTheory 90)
value num_monom_insert_def (numRingTheory 17)
value NUM_NEGINT_EXISTS (integerTheory 313)
value NUM_NORM_CONV (numRingLib 4)
value NUM_NORM_RULE (numRingLib 10)
value NUM_NORM_TAC (numRingLib 7)
value num_not_infty (extrealTheory 315)
value num_oct_list (numposrepTheory 44)
value num_oct_string (ASCIInumbersTheory 37)
value num_of_bits_def (int_bitwiseTheory 37)
value num_of_bits_ind (int_bitwiseTheory 38)
value num_of_bits_primitive_def (int_bitwiseTheory 18)
value NUM_OF_INT (integerTheory 314)
value num_order_def (set_relationTheory 21)
value num_order_finite_prefix (set_relationTheory 95)
value num_params (type_grammar 42)
value NUM_POSINT (integerTheory 315)
value NUM_POSINT_EX (integerTheory 316)
value NUM_POSINT_EXISTS (integerTheory 317)
value NUM_POSTINT_EX (integerTheory 318)
value num_pre_CONV (totoTacs 27)
value num_qp (quantHeuristicsLib 90), value num_qp (quantHeuristicsLibParameters 30)
value NUM_REDEPTH_CONSEQ_CONV (ConseqConv 183)
value NUM_RELN_NORM_CONV (Norm_arith 7)
value num_rewrites (numRingTheory 23)
value NUM_RING_CONV (numRingLib 5)
value NUM_RING_RULE (numRingLib 11)
value NUM_RING_TAC (numRingLib 8)
value num_ring_thms (numRingTheory 24)
value num_semi_ring (numRingTheory 25)
value NUM_SET_WOP (pred_setTheory 314)
value num_spolynom_normalize_def (numRingTheory 18)
value num_spolynom_simplify_def (numRingTheory 19)
value Num_tm (intSyntax 27)
value num_to_bin_list_def (numposrepTheory 14)
value num_to_bin_list_tm (numposrepSyntax 11)
value num_to_bin_string_def (ASCIInumbersTheory 15)
value num_to_bin_string_tm (ASCIInumbersSyntax 17)
value num_to_dec_list_def (numposrepTheory 15)
value num_to_dec_list_tm (numposrepSyntax 13)
value num_to_dec_string_def (ASCIInumbersTheory 16)
value num_to_dec_string_tm (ASCIInumbersSyntax 19)
value num_to_dt_primitive (totoTheory 29)
value num_to_hex_list_def (numposrepTheory 16)
value num_to_hex_list_tm (numposrepSyntax 14)
value num_to_hex_string_def (ASCIInumbersTheory 17)
value num_to_hex_string_tm (ASCIInumbersSyntax 20)
value num_to_oct_list_def (numposrepTheory 17)
value num_to_oct_list_tm (numposrepSyntax 12)
value num_to_oct_string_def (ASCIInumbersTheory 18)
value num_to_oct_string_tm (ASCIInumbersSyntax 18)
value num_to_pair_def (pred_setTheory 45)
value num_to_string_def (patricia_castsTheory 37)
value num_to_string_string_to_num (patricia_castsTheory 55)
value num_ty (Arith_cons 5), value num_ty (CooperSyntax 4)
value num_TY_DEF (numTheory 11)
value num_ty_filter (quantHeuristicsLib 106), value num_ty_filter (quantHeuristicsLibParameters 41)
value num_varlist_insert_def (numRingTheory 20)
value numbers (Lexis 6)
constructor Numeral (term_tokens 3)
value numeral_add (numeralTheory 30)
value numeral_bit_grammars (numeral_bitTheory 46)
value NUMERAL_BIT_MODF (numeral_bitTheory 29)
value NUMERAL_BIT_MODIFY (numeral_bitTheory 30)
value NUMERAL_BIT_REV (numeral_bitTheory 31)
value NUMERAL_BIT_REVERSE (numeral_bitTheory 32)
structure numeral_bitTheory
value NUMERAL_BITWISE (numeral_bitTheory 28)
value NUMERAL_conv (Opentheory 71)
value NUMERAL_DEF (arithmeticTheory 25)
value numeral_distrib (numeralTheory 31)
value numeral_div2 (numeralTheory 32)
value NUMERAL_DIV_2EXP (numeral_bitTheory 33)
value numeral_drop (pathTheory 119)
value numeral_eq (numeralTheory 33)
value numeral_evenodd (numeralTheory 34)
value numeral_exp (numeralTheory 35)
value numeral_fact (numeralTheory 36)
value numeral_funpow (numeralTheory 37)
value numeral_grammars (numeralTheory 50)
value NUMERAL_iDIV2 (numeral_bitTheory 38)
value numeral_iisuc (numeralTheory 38)
value numeral_ilog2 (numeral_bitTheory 41)
value numeral_imod_2exp (numeral_bitTheory 42)
value numeral_info (term_grammar 141)
value NUMERAL_LESS_THM (wordsTheory 182)
value numeral_log2 (numeral_bitTheory 43)
value numeral_lt (numeralTheory 39)
value numeral_lte (numeralTheory 40)
value numeral_MAX (numeralTheory 28)
value numeral_MIN (numeralTheory 29)
value numeral_mod2 (numeral_bitTheory 44)
value numeral_mult (numeralTheory 41)
value NUMERAL_MULT_EQ_DIV (arithmeticTheory 298)
value numeral_pre (numeralTheory 42)
value numeral_root2 (logrootTheory 39)
value NUMERAL_SFUNPOW_FDUB (numeral_bitTheory 34)
value NUMERAL_SFUNPOW_iDIV2 (numeral_bitTheory 35)
value NUMERAL_SFUNPOW_iDUB (numeral_bitTheory 36)
value numeral_sqrt (logrootTheory 40)
value numeral_sub (numeralTheory 43)
value numeral_suc (numeralTheory 44)
value numeral_texp_help (numeralTheory 45)
value NUMERAL_TIMES_2EXP (numeral_bitTheory 37)
value numeral_tm (numSyntax 28)
value numeralOrd (totoTheory 124)
structure numeralTheory
value Numerator (Rationals 10), value numerator (Arbrat 11)
value numErrors (mungeTools 17)
value numItems (KernelSig 26), value numItems (LVTermNet 15), value numItems (Redblackmap 16), value numItems (Redblackset 19), value numItems (TypeNet 14)
structure numLib
value numOrd (totoTheory 23)
value numOrd_CONV (totoTacs 26)
value NUMPAIR (ind_typeTheory 14)
value NUMPAIR_DEST (ind_typeTheory 15)
value numpair_grammars (numpairTheory 57)
value NUMPAIR_INJ (ind_typeTheory 40)
value NUMPAIR_INJ_LEMMA (ind_typeTheory 41)
structure numpairTheory
value numposrep_grammars (numposrepTheory 46)
structure numposrepLib
structure numposrepSyntax
structure numposrepTheory
structure NumRelNorms
value numRing_grammars (numRingTheory 27)
structure numRingLib
structure numRingTheory
value NUMSET_OF_PTREE_def (patriciaTheory 21)
value NUMSET_OF_PTREE_EMPTY (patriciaTheory 86)
value NUMSET_OF_PTREE_PTREE_OF_NUMSET (patriciaTheory 87)
value NUMSET_OF_PTREE_PTREE_OF_NUMSET_EMPTY (patriciaTheory 88)
value numset_of_ptree_tm (patriciaSyntax 29)
structure numSimps
value NUMSUM (ind_typeTheory 16)
value NUMSUM_DEST (ind_typeTheory 17)
value NUMSUM_INJ (ind_typeTheory 42)
structure numSyntax
structure numTheory
value numto (totoTheory 30)
value numto_CONV (totoTacs 18)
value nzcv_def (wordsTheory 19)
value nzcv_tm (wordsSyntax 36)
value o_ABS_L (combinTheory 44)
value o_ABS_R (combinTheory 45)
value O_ASSOC (relationTheory 91), value o_ASSOC (combinTheory 46)
value O_DEF (relationTheory 13), value o_DEF (combinTheory 13)
value o_f_bt_map (fmapalTheory 148)
value o_f_CONV (fmapalTacs 33)
value o_f_DEF (finite_mapTheory 32)
value o_f_DOMSUB (finite_mapTheory 266)
value o_f_FAPPLY (finite_mapTheory 267)
value o_f_FDOM (finite_mapTheory 268)
value o_f_FEMPTY (finite_mapTheory 269)
value o_f_fmap (fmapalTheory 149)
value o_f_FRANGE (finite_mapTheory 270)
value o_f_FUNION (finite_mapTheory 271)
value o_f_FUPDATE (finite_mapTheory 272)
value o_f_o_f (finite_mapTheory 273)
value O_Id (relationTheory 92)
value O_MONO (relationTheory 93)
value o_PRS (quotientTheory 104)
value O_REMPTY_O (tcTheory 22)
value o_RSP (quotientTheory 105)
value o_THM (combinTheory 47)
value o_tm (combinSyntax 9)
value o_UNCURRY_R (pairTheory 60)
type object (OpenTheoryCommon 6)
value object_compare (OpenTheoryCommon 17)
HOL pairSyntax.occs_in (help/Docfiles/pairSyntax.occs_in.adoc 0)
constructor OConst (OpenTheoryCommon 6)
value ODD (arithmeticTheory 26), value odd (mlibUseful 115)
value ODD_ADD (arithmeticTheory 299)
value ODD_CONV (Arithconv 10), value ODD_CONV (reduceLib 16)
value ODD_DOUBLE (arithmeticTheory 300)
value ODD_EVEN (arithmeticTheory 301)
value ODD_EXISTS (arithmeticTheory 302)
value ODD_MOD2_LEM (bitTheory 121)
value ODD_MULT (arithmeticTheory 303)
value ODD_OR_EVEN (arithmeticTheory 304)
value odd_tm (numSyntax 29)
value of_length_def (EncodeVarTheory 6)
value of_length_exists_suc (EncodeVarTheory 16)
value of_length_exists_zero (EncodeVarTheory 17)
value of_length_univ_suc (EncodeVarTheory 18)
value of_length_univ_zero (EncodeVarTheory 19)
value OFU (fmapalTheory 6)
value oi_strip_comb (Overload 69)
value oi_strip_combP (Overload 70)
value oinfo_ops (Overload 16)
value OK (testutils 4), value ok (errormonad 9), value ok (optmonad 7), value ok (seqmonad 7), value ok (stmonad 6)
value OK_curried_def (defCNFTheory 7)
value OK_def (defCNFTheory 18)
value ok_identifier (Lexis 14)
value OK_ind (defCNFTheory 19)
value ok_sml_identifier (Lexis 16)
value ok_symbolic (Lexis 15)
value OK_tupled_primitive_def (defCNFTheory 8)
value OKDEF_def (defCNFTheory 6)
value OKDEF_SNOC (defCNFTheory 17)
value okpath_cases (pathTheory 120)
value okpath_co_ind (pathTheory 121)
value okpath_def (pathTheory 22)
value okpath_drop (pathTheory 122)
value okpath_f_def (pathTheory 23)
value okpath_monotone (pathTheory 123)
value okpath_parallel_comp (pathTheory 124)
value okpath_plink (pathTheory 125)
value okpath_pmap (pathTheory 126)
value okpath_seg (pathTheory 127)
value okpath_take (pathTheory 128)
value okpath_thm (pathTheory 129)
value okpath_unfold (pathTheory 130)
value OL (enumeralTheory 9)
value OL_bt (enumeralTheory 10)
value OL_bt_lb (enumeralTheory 11)
value OL_bt_lb_ub (enumeralTheory 12)
value OL_bt_to_ol (enumeralTheory 73)
value OL_bt_to_ol_lb (enumeralTheory 74)
value OL_bt_to_ol_lb_ub (enumeralTheory 75)
value OL_bt_to_ol_ub (enumeralTheory 76)
value OL_bt_ub (enumeralTheory 13)
value OL_DIFF_IMP (enumeralTheory 69)
value OL_ENUMERAL (enumeralTheory 70)
value OL_INTER_IMP (enumeralTheory 71)
value ol_set (enumeralTheory 108)
value OL_sublists (enumeralTheory 77)
value OL_sublists_curried (enumeralTheory 14)
value OL_sublists_ind (enumeralTheory 78)
value OL_sublists_tupled_primitive (enumeralTheory 15)
value OL_UNION_IMP (enumeralTheory 72)
value old (Globals 21)
value old_ARITH_ss (bossLib 68), value old_ARITH_ss (numSimps 28), value old_arith_ss (bossLib 63)
structure OldAbbrevTactics
value OLEAST_def (whileTheory 7)
value OLEAST_EQNS (whileTheory 21)
value OLEAST_INTRO (whileTheory 22)
constructor OList (OpenTheoryCommon 6)
structure Omega, value Omega (UnicodeChars 33), value omega (UnicodeChars 22)
value Omega_Automata_grammars (Omega_AutomataTheory 46)
structure Omega_AutomataTheory
value omega_cache (intSimps 30)
value OMEGA_CONJ_CLOSURE (Omega_AutomataTheory 37)
value OMEGA_CONV (Omega 4)
value OMEGA_DISJ_CLOSURE (Omega_AutomataTheory 38)
value Omega_grammars (OmegaTheory 93)
value OMEGA_PROVE (Omega 5)
value OMEGA_ss (intSimps 28)
value OMEGA_TAC (Omega 6)
value OmegaEq (OmegaMath 27)
structure OmegaMath
structure OmegaMLShadow
structure OmegaShell
structure OmegaSimple
structure OmegaSymbolic
structure OmegaTheory
constructor OMITTED (Pmatch 8)
value on (BasicProvers 49)
constructor OName (OpenTheoryCommon 6)
HOL Drule.Once (help/Docfiles/Drule.Once.adoc 0), constructor Once (RW 53), value Once (BoundedRewrites 11)
HOL Rewrite.ONCE_ASM_REWRITE_RULE (help/Docfiles/Rewrite.ONCE_ASM_REWRITE_RULE.adoc 0), value ONCE_ASM_REWRITE_RULE (Ho_Rewrite 27), value ONCE_ASM_REWRITE_RULE (Rewrite 36)
HOL Rewrite.ONCE_ASM_REWRITE_TAC (help/Docfiles/Rewrite.ONCE_ASM_REWRITE_TAC.adoc 0), value ONCE_ASM_REWRITE_TAC (Ho_Rewrite 36), value ONCE_ASM_REWRITE_TAC (Rewrite 48), value once_asm_rewrite_tac (Rewrite 49), value once_asm_rewrite_tac (lcsymtacs 23)
value ONCE_ASM_RW_RULE (RW 89)
value ONCE_ASM_RW_TAC (RW 103)
value ONCE_CONSEQ_HO_REWRITE_CONV (ConseqConv 122)
value ONCE_CONSEQ_HO_REWRITE_TAC (ConseqConv 236)
value ONCE_CONSEQ_REWRITE_CONV (ConseqConv 121)
value ONCE_CONSEQ_REWRITE_TAC (ConseqConv 235)
value ONCE_DEPTH (RW 48)
HOL ConseqConv.ONCE_DEPTH_CONSEQ_CONV (help/Docfiles/ConseqConv.ONCE_DEPTH_CONSEQ_CONV.adoc 0), value ONCE_DEPTH_CONSEQ_CONV (ConseqConv 180)
value ONCE_DEPTH_CONSEQ_CONV_TAC (ConseqConv 232)
HOL Conv.ONCE_DEPTH_CONV (help/Docfiles/Conv.ONCE_DEPTH_CONV.adoc 0), value ONCE_DEPTH_CONV (Conv 43), value ONCE_DEPTH_CONV (liteLib 132)
value ONCE_DEPTH_QCONV (liteLib 133)
value ONCE_REWRITE1_TAC (jbUtils 13)
HOL Rewrite.ONCE_REWRITE_CONV (help/Docfiles/Rewrite.ONCE_REWRITE_CONV.adoc 0), value ONCE_REWRITE_CONV (Ho_Rewrite 18), value ONCE_REWRITE_CONV (Rewrite 26)
HOL Rewrite.ONCE_REWRITE_RULE (help/Docfiles/Rewrite.ONCE_REWRITE_RULE.adoc 0), value ONCE_REWRITE_RULE (Ho_Rewrite 23), value ONCE_REWRITE_RULE (Rewrite 32)
HOL Rewrite.ONCE_REWRITE_TAC (help/Docfiles/Rewrite.ONCE_REWRITE_TAC.adoc 0), value ONCE_REWRITE_TAC (Ho_Rewrite 32), value ONCE_REWRITE_TAC (Rewrite 42), value once_rewrite_tac (Rewrite 43), value once_rewrite_tac (lcsymtacs 22)
value ONCE_RW_CONV (RW 75)
value ONCE_RW_RULE (RW 83)
value ONCE_RW_TAC (RW 97)
value ONE (arithmeticTheory 305), value one (Arbintcore 8), value one (Arbnumcore 6), value one (Arbrat 9), value one (mlibArbint 10), value one (mlibArbnum 8), value one (mlibOmegaint 8), value one (oneTheory 11)
value one_Axiom (oneTheory 12), value one_axiom (oneTheory 13)
value one_case_def (oneTheory 7)
value one_case_thm (oneTheory 14)
value one_case_tm (oneSyntax 6)
value one_DEF (oneTheory 5)
value ONE_DIVIDES_ALL (dividesTheory 33)
value one_grammars (oneTheory 18)
value one_induction (oneTheory 15)
value ONE_LE_TWOEXP (bitTheory 122), value ONE_LE_TWOEXP (integer_wordTheory 31)
value ONE_LT_dimword (wordsTheory 183)
value ONE_LT_EXP (arithmeticTheory 306)
value ONE_LT_MULT (arithmeticTheory 307)
value ONE_LT_MULT_IMP (arithmeticTheory 308)
value ONE_LT_PRIME (dividesTheory 34)
value ONE_LT_PRIMES (dividesTheory 35)
value ONE_MINUS_HALF (util_probTheory 108)
value ONE_MOD (arithmeticTheory 309)
value ONE_MOD_IFF (arithmeticTheory 310)
value ONE_MULT (Theorems 9)
value one_negative (mlibSolver 70)
value ONE_ONE_DEF (boolTheory 22)
value one_one_of (TypeBase 32), value one_one_of (TypeBasePure 55)
value ONE_ONE_THM (boolTheory 134)
value ONE_ONE_UNBOUNDED (arithmeticTheory 311)
value ONE_PASS_SORT_CONV (Norm_arith 17)
value ONE_PLUS (Theorems 2)
value one_positive (mlibSolver 71)
value one_prim_rec (oneTheory 16)
value ONE_RPOW (transcTheory 147)
value one_size_def (basicSizeTheory 6)
value one_size_tm (basicSizeSyntax 8)
value one_tm (intSyntax 7), value one_tm (oneSyntax 5), value one_tm (realSyntax 7)
value one_ty (oneSyntax 4)
value one_TY_DEF (oneTheory 6)
value onecount_characterisation (numeralTheory 46)
value onecount_def (numeralTheory 13)
structure oneSyntax
structure oneTheory
value ONEWAY_SKOLEM_CONV (Canon 11), value ONEWAY_SKOLEM_CONV (refuteLib 11)
value only_if_everything (mlibSolver 67)
constructor OnlyIfNecessary (term_grammar 30), value OnlyIfNecessary (Parse 253)
value onlylowers_satisfiable (OmegaTheory 75)
value onlyuppers_satisfiable (OmegaTheory 76)
value onto_apto (totoTheory 125)
value ONTO_DEF (boolTheory 23)
value ONTO_THM (boolTheory 135)
constructor ONum (OpenTheoryCommon 6)
value oo (mlibUseful 30)
HOL Type.op_arity (help/Docfiles/Type.op_arity.adoc 0), value op_arity (FinalType 18)
HOL Lib.op_insert (help/Docfiles/Lib.op_insert.adoc 0), value op_insert (Lib 93)
HOL Lib.op_intersect (help/Docfiles/Lib.op_intersect.adoc 0), value op_intersect (Lib 94)
HOL Lib.op_mem (help/Docfiles/Lib.op_mem.adoc 0), value op_mem (Lib 95)
HOL Lib.op_mk_set (help/Docfiles/Lib.op_mk_set.adoc 0), value op_mk_set (Lib 96)
HOL Lib.op_set_diff (help/Docfiles/Lib.op_set_diff.adoc 0), value op_set_diff (Lib 97)
HOL Lib.op_U (help/Docfiles/Lib.op_U.adoc 0), value op_U (Lib 92)
HOL Lib.op_union (help/Docfiles/Lib.op_union.adoc 0), value op_union (Lib 98)
constructor OPEN (EmitML 17)
value open_in (Portable 69)
value open_interval_def (extrealTheory 39)
value open_intervals_set_def (extrealTheory 40)
value OPEN_NEIGH (topologyTheory 43)
value open_out (Portable 66)
value OPEN_OWN_NEIGH (topologyTheory 44)
value OPEN_SUBOPEN (topologyTheory 45)
value OPEN_UNOPEN (topologyTheory 46)
constructor OPENING (Trace 4), structure Opening
structure Opentheory
value OpenTheory_const_name (OpenTheoryMap 19)
value OpenTheory_tyop_name (OpenTheoryMap 18)
structure OpenTheoryCommon
structure OpenTheoryMap
value operator_grammars (operatorTheory 20)
structure operatorTheory
value opp_def (ringTheory 33)
value OPP_IN_Q (extrealTheory 98)
value ops_to_n2w (bitstringTheory 78)
value ops_to_v2w (bitstringTheory 79)
value OPTION_ALL_CONG (optionTheory 35)
value OPTION_ALL_def (optionTheory 8)
value OPTION_ALL_MONO (optionTheory 36)
value option_app (liteLib 22)
value OPTION_APPLY_def (optionTheory 9)
value OPTION_APPLY_MAP2 (optionTheory 37)
value OPTION_APPLY_o (optionTheory 38)
value option_Axiom (optionTheory 61)
value OPTION_BIND_cong (optionTheory 40)
value OPTION_BIND_def (optionTheory 10)
value OPTION_BIND_EQUALS_OPTION (optionTheory 39)
value option_case_compute (optionTheory 65)
value option_case_cong (optionTheory 66)
value option_case_def (optionTheory 22)
value option_case_ID (optionTheory 63)
value option_case_SOME_ID (optionTheory 64)
value option_case_tm (optionLib 16), value option_case_tm (optionSyntax 15)
value option_CASES (optionTheory 77), value option_cases (liteLib 21)
value OPTION_CHOICE_def (optionTheory 11)
value OPTION_CHOICE_EQ_NONE (optionTheory 41)
value option_CLAUSES (optionTheory 62)
value option_cmp2_antisym (comparisonTheory 52)
value option_cmp2_cong (comparisonTheory 53)
value option_cmp2_curried_def (comparisonTheory 14)
value option_cmp2_def (comparisonTheory 54)
value option_cmp2_good (comparisonTheory 55)
value option_cmp2_ind (comparisonTheory 56)
value option_cmp2_TO_inv (comparisonTheory 51)
value option_cmp2_tupled_primitive_def (comparisonTheory 15)
value option_cmp_antisym (comparisonTheory 57)
value option_cmp_cong (comparisonTheory 58)
value option_cmp_curried_def (comparisonTheory 16)
value option_cmp_def (comparisonTheory 59)
value option_cmp_good (comparisonTheory 60)
value option_cmp_ind (comparisonTheory 61)
value option_cmp_tupled_primitive_def (comparisonTheory 17)
value option_coder_def (CoderTheory 14)
value OPTION_EQUIV (quotient_optionTheory 11), value option_equiv (quotient 130)
value OPTION_FLAT (fmapalTheory 82)
value OPTION_FLAT_ind (fmapalTheory 83)
value OPTION_FLAT_primitive (fmapalTheory 7)
value option_grammars (optionTheory 74)
value OPTION_GUARD_COND (optionTheory 42)
value OPTION_GUARD_def (optionTheory 12)
value OPTION_GUARD_EQ_THM (optionTheory 43)
value OPTION_IGNORE_BIND_def (optionTheory 13)
value OPTION_IGNORE_BIND_thm (optionTheory 44)
value option_Induct (optionTheory 76)
value option_induction (optionTheory 67)
value OPTION_JOIN_DEF (optionTheory 14)
value OPTION_JOIN_EQ_SOME (optionTheory 45)
value option_join_tm (optionLib 13), value option_join_tm (optionSyntax 12)
value OPTION_MAP2_cong (optionTheory 49)
value OPTION_MAP2_DEF (optionTheory 15)
value OPTION_MAP2_NONE (optionTheory 46)
value OPTION_MAP2_SOME (optionTheory 47)
value OPTION_MAP2_THM (optionTheory 48)
value OPTION_MAP_COMPOSE (optionTheory 50)
value OPTION_MAP_CONG (optionTheory 51)
value OPTION_MAP_DEF (optionTheory 16)
value OPTION_MAP_EQ_NONE (optionTheory 52)
value OPTION_MAP_EQ_NONE_both_ways (optionTheory 53)
value OPTION_MAP_EQ_SOME (optionTheory 54)
value OPTION_MAP_I (quotient_optionTheory 12)
value OPTION_MAP_PRS (quotient_optionTheory 13)
value OPTION_MAP_RSP (quotient_optionTheory 14)
value option_map_tm (optionLib 12), value option_map_tm (optionSyntax 11)
value option_nchotomy (optionTheory 68)
value option_qp (quantHeuristicsLib 91), value option_qp (quantHeuristicsLibParameters 31)
value OPTION_QUOTIENT (quotient_optionTheory 15), value option_quotient (quotient 189)
value OPTION_REL_def (quotient_optionTheory 17)
value OPTION_REL_EQ (quotient_optionTheory 16)
value option_REP_ABS_DEF (optionTheory 20)
value OPTION_rws (optionLib 46), value option_rws (optionLib 45)
value option_size_def (basicSizeTheory 7)
value option_size_tm (basicSizeSyntax 9)
value OPTION_ss (optionSimps 2)
value option_TY_DEF (optionTheory 21)
value option_ty_filter (quantHeuristicsLib 104), value option_ty_filter (quantHeuristicsLibParameters 39)
value OPTION_UPDATE (fmapalTheory 8)
value optional (mlibParser 28), value optional (optmonad 20), value optional (seqmonad 20)
structure optionLib
type optionset (mungeTools 4)
structure optionSimps
structure optionSyntax
structure optionTheory
value optmin_curried_def (lbtreeTheory 20)
value optmin_def (lbtreeTheory 61)
value optmin_ind (lbtreeTheory 62)
value optmin_tupled_primitive_def (lbtreeTheory 21)
structure optmonad, type optmonad (optmonad 3)
value optoks (mlibParser 45)
value OPTREL_def (optionTheory 17)
value OPTREL_MONO (optionTheory 55)
value OPTREL_refl (optionTheory 56)
value optry (fmapalTheory 68)
value optry_list (fmapalTheory 150)
value optry_list_curried (fmapalTheory 69)
value optry_list_ind (fmapalTheory 151)
value optry_list_tupled_primitive (fmapalTheory 70)
value optset_mathmode (mungeTools 13)
value optset_nomath (mungeTools 14)
value optset_unoverloads (mungeTools 15)
value optset_width (mungeTools 12)
constructor Or (mlibTerm 18), value OR (HOLtokens 11), value or (UnicodeChars 141)
value OR_CLAUSES (boolTheory 136)
value OR_CLAUSES_FX (ConseqConvTheory 39)
value OR_CLAUSES_TX (ConseqConvTheory 40)
value OR_CLAUSES_XF (ConseqConvTheory 41)
value OR_CLAUSES_XT (ConseqConvTheory 42)
value OR_CLAUSES_XX (ConseqConvTheory 43)
value OR_CONG (boolTheory 137)
HOL reduceLib.OR_CONV (help/Docfiles/reduceLib.OR_CONV.adoc 0), value OR_CONV (Boolconv 6), value OR_CONV (reduceLib 6)
value OR_DEF (boolTheory 24)
value OR_DUAL (satTheory 13)
value OR_DUAL2 (satTheory 14)
value OR_DUAL3 (satTheory 15)
HOL listLib.OR_EL_CONV (help/Docfiles/listLib.OR_EL_CONV.adoc 0), value OR_EL_CONV (ListConv1 32), value OR_EL_CONV (listLib 46)
value OR_EL_DEF (rich_listTheory 14)
value OR_EL_FOLDL (rich_listTheory 288)
value OR_EL_FOLDR (rich_listTheory 289)
value or_el_tm (rich_listSyntax 10)
value OR_ELIM_THM (boolTheory 138)
HOL Conv.OR_EXISTS_CONV (help/Docfiles/Conv.OR_EXISTS_CONV.adoc 0), value OR_EXISTS_CONV (Conv 56)
value OR_F_CONV (Thm_convs 12)
HOL Conv.OR_FORALL_CONV (help/Docfiles/Conv.OR_FORALL_CONV.adoc 0), value OR_FORALL_CONV (Conv 65)
value OR_IMP_THM (boolTheory 139)
value OR_INTRO_THM1 (boolTheory 140)
value OR_INTRO_THM2 (boolTheory 141)
value OR_LESS (arithmeticTheory 312)
value OR_NEXT (Temporal_LogicTheory 79)
value OR_NOT_CONV (quantHeuristicsLibBase 23), value OR_NOT_CONV (quantHeuristicsTools 21)
HOL PairRules.OR_PEXISTS_CONV (help/Docfiles/PairRules.OR_PEXISTS_CONV.adoc 0), value OR_PEXISTS_CONV (PairRules 35)
HOL PairRules.OR_PFORALL_CONV (help/Docfiles/PairRules.OR_PFORALL_CONV.adoc 0), value OR_PFORALL_CONV (PairRules 43)
constructor Oracle (Count 11)
value ORACLE_DEF_CNF_CONV (normalForms 170)
value ORACLE_PURE_DEF_CNF_CONV (normalForms 169)
value oracle_qp (quantHeuristicsLib 143), value oracle_qp (quantHeuristicsLibBase 154)
value ORD_11 (stringTheory 71)
value ORD_BOUND (stringTheory 72)
value ORD_CHR (stringTheory 73)
value ORD_CHR_COMPUTE (stringTheory 74)
value ORD_CHR_CONV (stringLib 38)
value ORD_CHR_RWT (stringTheory 75)
value ord_of_lt (liteLib 74)
value ORD_ONTO (stringTheory 76)
value ORD_REWRITE (mlibRewrite 39)
value ord_tm (stringLib 8), value ord_tm (stringSyntax 30)
value ORDER (polyTheory 22), value Order (relationTheory 14)
value ORDER_DECOMP (polyTheory 23)
value ORDER_DIFF (polyTheory 24)
value ORDER_DIVIDES (polyTheory 25)
value ORDER_MUL (polyTheory 26)
value ORDER_POLY (polyTheory 27)
value ORDER_ROOT (polyTheory 28)
value ORDER_THM (polyTheory 29)
value order_to_string (mlibUseful 89)
value ORDER_UNIQUE (polyTheory 30)
value ordered_resolution (mlibMetis 32)
type ordering (mlibUseful 88)
value ordering2num_11 (prelimTheory 26)
value ordering2num_num2ordering (prelimTheory 28)
value ordering2num_ONTO (prelimTheory 27)
value ordering2num_thm (prelimTheory 29)
value ordering_Axiom (prelimTheory 30)
value ordering_BIJ (prelimTheory 10)
value ordering_CASE (prelimTheory 11)
value ordering_case_cong (prelimTheory 32)
value ordering_case_def (prelimTheory 33)
value ordering_distinct (prelimTheory 34)
value ordering_eq_dec (prelimTheory 35)
value ordering_EQ_ordering (prelimTheory 31)
value ordering_induction (prelimTheory 36)
value ordering_nchotomy (prelimTheory 37)
value ordering_size_def (prelimTheory 13)
value ordering_TY_DEF (prelimTheory 12)
value ordof (Portable 37)
HOL Tactical.ORELSE (help/Docfiles/Tactical.ORELSE.adoc 0), value ORELSE (Tactical 20), value ORELSE (jrhTactics 17)
HOL ConseqConv.ORELSE_CONSEQ_CONV (help/Docfiles/ConseqConv.ORELSE_CONSEQ_CONV.adoc 0), value ORELSE_CONSEQ_CONV (ConseqConv 203)
HOL Tactical.ORELSE_LT (help/Docfiles/Tactical.ORELSE_LT.adoc 0), value ORELSE_LT (Tactical 21)
HOL Thm_cont.ORELSE_TCL (help/Docfiles/Thm_cont.ORELSE_TCL.adoc 0), value ORELSE_TCL (Thm_cont 5), value ORELSE_TCL (jrhTactics 43)
HOL Conv.ORELSEC (help/Docfiles/Conv.ORELSEC.adoc 0), value ORELSEC (Conv 31), value ORELSEC (RJBConv 7)
value orelsef (liteLib 30)
type orient (mlibRewrite 13)
constructor ORIG (TypeBasePure 11)
value ORL (fmapalTheory 84)
value ORL_bt (fmapalTheory 89)
value ORL_bt_curried (fmapalTheory 9)
value ORL_bt_ind (fmapalTheory 90)
value ORL_bt_lb (fmapalTheory 91)
value ORL_bt_lb_curried (fmapalTheory 10)
value ORL_bt_lb_ind (fmapalTheory 92)
value ORL_bt_lb_tupled_primitive (fmapalTheory 11)
value ORL_bt_lb_ub (fmapalTheory 93)
value ORL_bt_lb_ub_curried (fmapalTheory 12)
value ORL_bt_lb_ub_ind (fmapalTheory 94)
value ORL_bt_lb_ub_tupled_primitive (fmapalTheory 13)
value ORL_bt_tupled_primitive (fmapalTheory 14)
value ORL_bt_ub (fmapalTheory 95)
value ORL_bt_ub_curried (fmapalTheory 15)
value ORL_bt_ub_ind (fmapalTheory 96)
value ORL_bt_ub_tupled_primitive (fmapalTheory 16)
value ORL_curried (fmapalTheory 17)
value ORL_DRESTRICT_COMPL_IMP (fmapalTheory 85)
value ORL_DRESTRICT_IMP (fmapalTheory 86)
value ORL_FMAPAL (fmapalTheory 87)
value ORL_FUNION_IMP (fmapalTheory 88)
value ORL_ind (fmapalTheory 97)
value ORL_sublists (fmapalTheory 98)
value ORL_sublists_curried (fmapalTheory 18)
value ORL_sublists_ind (fmapalTheory 99)
value ORL_sublists_tupled_primitive (fmapalTheory 19)
value ORL_tupled_primitive (fmapalTheory 20)
value ORWL (fmapalTheory 21)
value ORWL_bt_to_orl (fmapalTheory 103)
value ORWL_DRESTRICT (fmapalTacs 26)
value ORWL_DRESTRICT_COMPL (fmapalTacs 27)
value ORWL_DRESTRICT_COMPL_THM (fmapalTheory 100)
value ORWL_DRESTRICT_THM (fmapalTheory 101)
value ORWL_FUNION (fmapalTacs 23)
value ORWL_FUNION_THM (fmapalTheory 102)
value ORWL_TO_FMAPAL (fmapalTacs 20)
value OS (Systeml 29)
constructor OTerm (OpenTheoryCommon 6)
constructor OThm (OpenTheoryCommon 6)
type otname (OpenTheoryMap 4), type otname (Opentheory 4)
value otname_cmp (OpenTheoryMap 9)
value otname_to_string (OpenTheoryMap 7)
constructor OType (OpenTheoryCommon 6)
constructor OTypeOp (OpenTheoryCommon 6)
value OU (enumeralTheory 16)
value OU_ASSOC (enumeralTheory 79)
value OU_EMPTY (enumeralTheory 80)
value outer_measure_space_def (measureTheory 25)
value OUTER_MEASURE_SPACE_POSITIVE (measureTheory 195)
value OUTL (sumTheory 10)
value outl_tm (sumSyntax 8)
value output (Portable 64)
value output_idtable (SharingTables 32)
value output_profile_result (Profile 18)
value output_profile_results (Profile 19)
value output_termtable (SharingTables 45)
value output_typetable (SharingTables 37)
HOL wordsLib.output_words_as (help/Docfiles/wordsLib.output_words_as.adoc 0), value output_words_as (wordsLib 68)
HOL wordsLib.output_words_as_bin (help/Docfiles/wordsLib.output_words_as_bin.adoc 0), value output_words_as_bin (wordsLib 69)
HOL wordsLib.output_words_as_dec (help/Docfiles/wordsLib.output_words_as_dec.adoc 0), value output_words_as_dec (wordsLib 72)
HOL wordsLib.output_words_as_hex (help/Docfiles/wordsLib.output_words_as_hex.adoc 0), value output_words_as_hex (wordsLib 71)
HOL wordsLib.output_words_as_oct (help/Docfiles/wordsLib.output_words_as_oct.adoc 0), value output_words_as_oct (wordsLib 70)
value outputc (Portable 67)
value OUTR (sumTheory 11)
value outr_tm (sumSyntax 9)
type outstream (Portable 4)
constructor OVar (OpenTheoryCommon 6)
value overflow (integer_wordTheory 48)
type overinfo (Preterm 5)
structure Overload
exception OVERLOAD_ERR (Overload 28)
type overload_info (Overload 10), type overload_info (Parse_support 9), type overload_info (term_grammar 6), value overload_info (term_grammar 142)
HOL Parse.overload_info_for (help/Docfiles/Parse.overload_info_for.adoc 0), value overload_info_for (Parse 117)
HOL Parse.overload_on (help/Docfiles/Parse.overload_on.adoc 0), value overload_on (Parse 104)
value overload_on_by_nametype (Parse 106)
constructor Overloaded (Preterm 10)
type overloaded_op_info (Overload 6)
value overloading_of_nametype (Overload 42)
value overloading_of_term (Overload 39)
value overloading_of_termP (Overload 40)
value overloading_resolution (Preterm 55)
constructor OverloadUpdate (ProvideUnicode 9)
value OVERRIDE_def (updateTheory 17)
value OVERRIDE_ind (updateTheory 18)
type override_map (EmitTeX 14), type override_map (mungeTools 6)
value OVERRIDE_primitive_def (updateTheory 7)
value override_tm (updateSyntax 7)
value OVERRIDE_UPDATES_CONV (updateLib 11)
constructor OVL (ProvideUnicode 33)
constructor OvlNoType (Preterm 76)
value OWHILE_def (whileTheory 8)
value OWHILE_ENDCOND (whileTheory 23)
value OWHILE_EQ_NONE (whileTheory 24)
value OWHILE_IND (whileTheory 25)
value OWHILE_INV_IND (whileTheory 26)
value OWHILE_THM (whileTheory 27)
value OWHILE_WHILE (whileTheory 28)
value OWL (enumeralTheory 17)
value OWL_bt_to_ol (enumeralTheory 84)
value OWL_DIFF (enumTacs 41)
value OWL_DIFF_THM (enumeralTheory 81)
value OWL_INTER (enumTacs 38)
value OWL_INTER_THM (enumeralTheory 82)
value OWL_TO_ENUMERAL (enumTacs 27)
value OWL_UNION (enumTacs 35)
value OWL_UNION_THM (enumeralTheory 83)
HOL proofManagerLib.p (help/Docfiles/proofManagerLib.p.adoc 0), value p (proofManagerLib 46)
value p001 (HolSmtTheory 61)
value p002 (HolSmtTheory 62)
value p003 (HolSmtTheory 63)
value p004 (HolSmtTheory 64)
value p005 (HolSmtTheory 65)
value p006 (HolSmtTheory 66)
value p007 (HolSmtTheory 67)
value p008 (HolSmtTheory 68)
value p009 (HolSmtTheory 69)
value P_EUCLIDES (gcdTheory 45)
HOL PairRules.P_FUN_EQ_CONV (help/Docfiles/PairRules.P_FUN_EQ_CONV.adoc 0), value P_FUN_EQ_CONV (PairRules 98)
HOL PairRules.P_PCHOOSE_TAC (help/Docfiles/PairRules.P_PCHOOSE_TAC.adoc 0), value P_PCHOOSE_TAC (PairRules 82)
HOL PairRules.P_PCHOOSE_THEN (help/Docfiles/PairRules.P_PCHOOSE_THEN.adoc 0), value P_PCHOOSE_THEN (PairRules 80)
HOL PairRules.P_PGEN_TAC (help/Docfiles/PairRules.P_PGEN_TAC.adoc 0), value P_PGEN_TAC (PairRules 68)
HOL PairRules.P_PSKOLEM_CONV (help/Docfiles/PairRules.P_PSKOLEM_CONV.adoc 0), value P_PSKOLEM_CONV (PairRules 87)
value p_space_def (probabilityTheory 15)
HOL PairRules.PABS (help/Docfiles/PairRules.PABS.adoc 0), value PABS (PairRules 5)
HOL PairRules.PABS_CONV (help/Docfiles/PairRules.PABS_CONV.adoc 0), value PABS_CONV (PairRules 6)
value PABS_ELIM_CONV (pairTools 20)
value PABS_INTRO_CONV (pairTools 21)
HOL pairSyntax.paconv (help/Docfiles/pairSyntax.paconv.adoc 0), value paconv (PairRules 23)
value PAD_LEFT (listTheory 36)
value pad_left_extend (bitstringTheory 80)
value pad_left_tm (listSyntax 34)
value PAD_RIGHT (listTheory 37)
value pad_right_tm (listSyntax 35)
value padded_fixedwidth_of_int (bitstringSyntax 33)
value padRight (UTF8 8)
HOL Lib.pair (help/Docfiles/Lib.pair.adoc 0), value PAIR (pairTheory 9), value pair (Lib 99), value pair (mlibUseful 44)
value PAIR0_ss (pairSimps 4)
value pair_Axiom (pairTheory 61)
value pair_case_cong (pairTheory 63)
value pair_CASE_def (pairTheory 15), value pair_case_def (pairTheory 64)
value pair_case_thm (pairTheory 65)
value pair_CASES (pairTheory 62)
value pair_cmp_antisym (comparisonTheory 62)
value pair_cmp_cong (comparisonTheory 63)
value pair_cmp_def (comparisonTheory 18)
value pair_cmp_good (comparisonTheory 64)
value pair_cmp_lexTO (comparisonTheory 65)
value pair_compare (Lib 100)
HOL PairRules.PAIR_CONV (help/Docfiles/PairRules.PAIR_CONV.adoc 0), value PAIR_CONV (PairRules 24)
value pair_def (util_probTheory 13)
value pair_default_qp (quantHeuristicsLib 82), value pair_default_qp (quantHeuristicsLibParameters 22)
value PAIR_EQ (pairTheory 40)
value PAIR_EQ_EXPAND (quantHeuristicsTheory 87)
value PAIR_EQ_SIMPLE_EXPAND (quantHeuristicsTheory 88)
value PAIR_EQUIV (quotient_pairTheory 14), value pair_equiv (quotient 107)
value PAIR_EX (pairTools 9)
value PAIR_FST_SND_EQ (pairTheory 41)
value PAIR_FUN_THM (pairTheory 42)
value pair_grammars (pairTheory 72)
value pair_induction (pairTheory 66)
value PAIR_MAP (pairTheory 10)
value PAIR_MAP_I (quotient_pairTheory 15)
value PAIR_MAP_PRS (quotient_pairTheory 16)
value PAIR_MAP_RSP (quotient_pairTheory 17)
value PAIR_MAP_THM (pairTheory 43)
value pair_map_tm (pairLib 18), value pair_map_tm (pairSyntax 16)
HOL Lib.pair_of_list (help/Docfiles/Lib.pair_of_list.adoc 0), value pair_of_list (Lib 101)
value pair_qp (quantHeuristicsLib 80), value pair_qp (quantHeuristicsLibParameters 20)
value PAIR_QUOTIENT (quotient_pairTheory 18), value pair_quotient (quotient 163)
value PAIR_REL (quotient_pairTheory 5)
value PAIR_REL_EQ (quotient_pairTheory 19)
value PAIR_REL_REFL (quotient_pairTheory 20)
value PAIR_REL_THM (quotient_pairTheory 21)
value pair_rws (pairTheory 74)
value PAIR_select_fun (quantHeuristicsLibAbbrev 25)
value pair_size_def (basicSizeTheory 8)
value pair_size_tm (basicSizeSyntax 6)
value PAIR_ss (pairSimps 7)
value pair_to_num_def (pred_setTheory 46)
value pair_to_num_formula (pred_setTheory 442)
value pair_to_num_inv (pred_setTheory 443)
value pair_ty_filter (quantHeuristicsLib 105), value pair_ty_filter (quantHeuristicsLibParameters 40)
value PAIR_UNIV (util_probTheory 110)
HOL pairLib.PairCases_on (help/Docfiles/pairLib.PairCases_on.adoc 0), value PairCases_on (bossLib 38), value PairCases_on (pairLib 111), value PairCases_on (pairTools 4)
HOL PairedLambda.PAIRED_BETA_CONV (help/Docfiles/PairedLambda.PAIRED_BETA_CONV.adoc 0), value PAIRED_BETA_CONV (PairedLambda 4), value PAIRED_BETA_CONV (pairLib 75), value PAIRED_BETA_CONV (pairTheory 88)
value PAIRED_BETA_THM (util_probTheory 109)
HOL PairedLambda.PAIRED_ETA_CONV (help/Docfiles/PairedLambda.PAIRED_ETA_CONV.adoc 0), value PAIRED_ETA_CONV (PairedLambda 5), value PAIRED_ETA_CONV (pairLib 76)
value paired_exists_ss (pairSimps 13)
value paired_forall_ss (pairSimps 12)
structure PairedLambda
structure pairLib
structure PairRules
structure pairSimps
structure pairSyntax
structure pairTheory
structure pairTools
value pairwise_def (pred_setTheory 47)
value pairwise_SUBSET (pred_setTheory 444)
value pairwise_UNION (pred_setTheory 445)
HOL PairRules.PALPHA (help/Docfiles/PairRules.PALPHA.adoc 0), value PALPHA (PairRules 22)
HOL PairRules.PALPHA_CONV (help/Docfiles/PairRules.PALPHA_CONV.adoc 0), value PALPHA_CONV (PairRules 20)
value PALWAYS (Past_Temporal_LogicTheory 6)
constructor Papp (clauses 4)
value par_prec (parmonadsyntax 6)
value parallel_comp_def (pathTheory 24)
constructor PARAM (type_grammar 9)
value param_eq (abstraction 16)
type parameters (folMapping 18), type parameters (folTools 23), type parameters (metisTools 27), type parameters (mlibClause 16), type parameters (mlibClauseset 12), type parameters (mlibLiteralnet 12), type parameters (mlibMeson 11), type parameters (mlibMetis 29), type parameters (mlibModel 27), type parameters (mlibResolution 14), type parameters (mlibSupport 12), type parameters (mlibTermnet 12), type parameters (mlibTermorder 13)
value parameters_to_string (mlibMetis 36)
value PARAMODULATE (mlibClause 71)
constructor Paramodulation (mlibClause 74)
value params_of (Defn 34)
value parens (Lexis 8)
type ParenStyle (Parse 8), type ParenStyle (term_grammar 30)
HOL Theory.parents (help/Docfiles/Theory.parents.adoc 0), value parents (Theory 34)
value parm (mlibClauseset 24)
structure parmonadsyntax
type Parmupdate (mlibMeson 21), type parmupdate (folTools 29), type parmupdate (mlibClause 22), type parmupdate (mlibResolution 19), type parmupdate (mlibSupport 20)
constructor ParoundName (term_grammar 30), value ParoundName (Parse 254)
constructor ParoundPrec (term_grammar 30), value ParoundPrec (Parse 255)
constructor PARSE (TotalDefn 35), structure Parse, value parse (ParseDatatype 19)
value parse_absyn (Defn 53)
type parse_entry (holindexData 38)
value parse_entry___add_to_data_store (holindexData 60)
value parse_entry___force_index (holindexData 57)
value parse_entry___full_index (holindexData 58)
value parse_entry___set_comment (holindexData 56)
value parse_entry___set_content (holindexData 54)
value parse_entry___set_label (holindexData 52)
value parse_entry___set_latex (holindexData 55)
value parse_entry___set_options (holindexData 53)
value parse_formula (mlibTerm 142)
value parse_formula' (mlibTerm 138)
value parse_fraction (base_tokens 20)
HOL Parse.parse_from_grammars (help/Docfiles/Parse.parse_from_grammars.adoc 0), value parse_from_grammars (Parse 63)
value parse_hdf_file (AssembleHolindexParser 2)
HOL Parse.parse_in_context (help/Docfiles/Parse.parse_in_context.adoc 0), value parse_in_context (Parse 58)
value parse_infixes (mlibParser 48)
value parse_left_infix (mlibParser 46)
value parse_numeric_literal (base_tokens 19)
value parse_preterm_in_context (Parse 59)
value parse_quote (Defn 54)
type parse_result (DiskFilesHeader 11)
value parse_right_infix (mlibParser 47)
structure Parse_support
structure parse_term, value parse_term (mlibTerm 141), value parse_term (parse_term 13)
value parse_term' (mlibTerm 137)
structure parse_type, value parse_type (parse_type 10)
structure ParseDatatype
structure ParseExtras
value parseOpts (mungeTools 8)
type parser (mlibParser 31)
exception ParseTermError (parse_term 11)
value PART3_DEF (sortingTheory 5)
value PART3_FILTER (sortingTheory 28)
value part3_tm (sortingSyntax 5)
value PART_DEF (sortingTheory 7)
value PART_LENGTH (sortingTheory 29)
value PART_LENGTH_LEM (sortingTheory 30)
HOL Drule.PART_MATCH (help/Docfiles/Drule.PART_MATCH.adoc 0), value PART_MATCH (Drule 81)
HOL Drule.PART_MATCH_A (help/Docfiles/Drule.PART_MATCH_A.adoc 0), value PART_MATCH_A (Drule 82)
value PART_MEM (sortingTheory 31)
HOL PairRules.PART_PMATCH (help/Docfiles/PairRules.PART_PMATCH.adoc 0), value PART_PMATCH (PairRules 112)
value part_tm (sortingSyntax 6)
HOL Lib.partial (help/Docfiles/Lib.partial.adoc 0), value partial (Lib 102), value partial (mlibUseful 16)
value PARTIAL_EQUIV_def (quotientTheory 9)
value partial_map (mlibStream 40)
value partial_maps (mlibStream 41), value partial_maps (mlibUseful 65)
value partial_order_def (set_relationTheory 22)
value partial_order_dom_rng (set_relationTheory 96)
value partial_order_linear_order (set_relationTheory 97)
value partial_order_reln_to_rel_conv (set_relationTheory 98)
value partial_order_reln_to_rel_conv_UNIV (set_relationTheory 99)
value partial_order_subset (set_relationTheory 100)
HOL Lib.partition (help/Docfiles/Lib.partition.adoc 0), value partition (Lib 103)
value partition_CARD (pred_setTheory 446)
value PARTITION_DEF (sortingTheory 6), value partition_def (pred_setTheory 48)
value partition_elements_disjoint (pred_setTheory 448)
value partition_elements_interrelate (pred_setTheory 449)
value partition_ssfrags (simpLib 93)
value partition_SUBSET (pred_setTheory 447)
value partition_tm (sortingSyntax 7)
value PARTs_HAVE_PROP (sortingTheory 32)
constructor PASS (Lib 4)
value Past_Temporal_Logic_grammars (Past_Temporal_LogicTheory 52)
structure Past_Temporal_LogicTheory
HOL Q.PAT_ABBREV_TAC (help/Docfiles/Q.PAT_ABBREV_TAC.adoc 0), value PAT_ABBREV_TAC (OldAbbrevTactics 6), value PAT_ABBREV_TAC (Q 54), value PAT_ABBREV_TAC (markerLib 26)
HOL Tactical.PAT_ASSUM (help/Docfiles/Tactical.PAT_ASSUM.adoc 0), value PAT_ASSUM (Q 38), value PAT_ASSUM (Tactical 81)
HOL Conv.PAT_CONV (help/Docfiles/Conv.PAT_CONV.adoc 0), value PAT_CONV (Conv 111)
value pat_of (Pmatch 13)
value PAT_UNDISCH_TAC (Q 36)
value path_absrep_bijections (pathTheory 26)
value path_Axiom (pathTheory 131)
value path_bisimulation (pathTheory 132)
value path_cases (pathTheory 133)
HOL Conv.PATH_CONV (help/Docfiles/Conv.PATH_CONV.adoc 0), value PATH_CONV (Conv 114)
value path_follow_def (lbtreeTheory 22)
value path_grammars (pathTheory 158)
value path_rep_bijections_thm (pathTheory 134)
value path_TY_DEF (pathTheory 25)
structure pathTheory
value patricia_casts_grammars (patricia_castsTheory 64)
structure patricia_castsLib
structure patricia_castsSyntax
structure patricia_castsTheory
value patricia_grammars (patriciaTheory 142)
structure patriciaLib
structure patriciaSyntax
structure patriciaTheory
constructor Pattern (Preterm 10), type Pattern (folMapping 34), type pattern (Defn 7), type pattern (Pmatch 8), type pattern (clauses 4)
value PBEFORE (Past_Temporal_LogicTheory 7)
value PBEFORE_EXPRESSIVE (Past_Temporal_LogicTheory 29)
HOL PairRules.PBETA_CONV (help/Docfiles/PairRules.PBETA_CONV.adoc 0), value PBETA_CONV (PairRules 10)
HOL PairRules.PBETA_RULE (help/Docfiles/PairRules.PBETA_RULE.adoc 0), value PBETA_RULE (PairRules 11)
HOL PairRules.PBETA_TAC (help/Docfiles/PairRules.PBETA_TAC.adoc 0), value PBETA_TAC (PairRules 12)
HOL pairSyntax.pbody (help/Docfiles/pairSyntax.pbody.adoc 0), value pbody (pairLib 40), value pbody (pairSyntax 45)
value pbvar (pairLib 39), value pbvar (pairSyntax 44)
HOL PairRules.PCHOOSE (help/Docfiles/PairRules.PCHOOSE.adoc 0), value PCHOOSE (PairRules 79)
HOL PairRules.PCHOOSE_TAC (help/Docfiles/PairRules.PCHOOSE_TAC.adoc 0), value PCHOOSE_TAC (PairRules 83)
HOL PairRules.PCHOOSE_THEN (help/Docfiles/PairRules.PCHOOSE_THEN.adoc 0), value PCHOOSE_THEN (PairRules 81)
value pconcat_def (pathTheory 27)
value pconcat_eq_pcons (pathTheory 135)
value pconcat_eq_stopped (pathTheory 136)
value pconcat_thm (pathTheory 137)
value pcons_11 (pathTheory 138)
value pcons_def (pathTheory 28)
value pdest_eq (Preterm 28)
value peek (KernelSig 24), value peek (LVTermNet 11), value peek (Redblackmap 14), value peek (Redblackset 13), value peek (TypeNet 10), value peek (mlibClause 54), value peek (mlibRewrite 18), value peek (patriciaLib 16)
value PEEK_ADD (patriciaTheory 89)
value PEEK_curried_def (patriciaTheory 22)
value PEEK_def (patriciaTheory 94)
value PEEK_ind (patriciaTheory 95)
value PEEK_INSERT_PTREE (patriciaTheory 90)
value PEEK_NONE (patriciaTheory 91)
value PEEK_REMOVE (patriciaTheory 92)
value peek_tm (patriciaSyntax 12)
value PEEK_TRANSFORM (patriciaTheory 93)
value PEEK_tupled_primitive_def (patriciaTheory 23)
value PEEKs_def (patricia_castsTheory 20)
value peeks_tm (patricia_castsSyntax 29)
value PEEKw_def (patricia_castsTheory 21)
value peekw_tm (patricia_castsSyntax 12)
constructor PEG (PEGParse 15)
value pegexec (PEGParse 33)
structure PEGParse
type pegsym (PEGParse 3)
value PEIRCE (boolTheory 142)
value pending_updates (Parse 214)
value per_def (set_relationTheory 23)
value per_delete (set_relationTheory 101)
value per_restrict_def (set_relationTheory 24)
value per_restrict_per (set_relationTheory 102)
value percent_to_string (mlibUseful 136)
value PERM3 (sortingTheory 33)
value PERM3_FILTER (sortingTheory 34)
value PERM_ADD (patriciaTheory 96)
value PERM_ALL_DISTINCT (sortingTheory 35)
value PERM_alt (sortingTheory 92)
value PERM_APPEND (sortingTheory 36)
value PERM_APPEND_IFF (sortingTheory 37)
value PERM_CONG (sortingTheory 38)
value PERM_CONG_2 (sortingTheory 39)
value PERM_CONG_APPEND_IFF (sortingTheory 40)
value PERM_CONS_EQ_APPEND (sortingTheory 41)
value PERM_CONS_IFF (sortingTheory 42)
value PERM_DEF (sortingTheory 8)
value PERM_DELETE_PTREE (patriciaTheory 97)
value PERM_ELIM_DUPLICATES_CONV (permLib 22)
value PERM_EQC (sortingTheory 43)
value PERM_EQUIVALENCE (sortingTheory 44)
value PERM_EQUIVALENCE_ALT_DEF (sortingTheory 45)
value PERM_FILTER (sortingTheory 46)
value PERM_fmap_to_alist (alistTheory 45)
value PERM_FUN_APPEND (sortingTheory 47)
value PERM_FUN_APPEND_APPEND_1 (sortingTheory 48)
value PERM_FUN_APPEND_APPEND_2 (sortingTheory 49)
value PERM_FUN_APPEND_C (sortingTheory 50)
value PERM_FUN_APPEND_CONS (sortingTheory 51)
value PERM_FUN_APPEND_IFF (sortingTheory 52)
value PERM_FUN_CONG (sortingTheory 53)
value PERM_FUN_CONS (sortingTheory 54)
value PERM_FUN_CONS_11_APPEND (sortingTheory 55)
value PERM_FUN_CONS_11_SWAP_AT_FRONT (sortingTheory 56)
value PERM_FUN_CONS_APPEND_1 (sortingTheory 57)
value PERM_FUN_CONS_APPEND_2 (sortingTheory 58)
value PERM_FUN_CONS_IFF (sortingTheory 59)
value PERM_FUN_SPLIT (sortingTheory 60)
value PERM_FUN_SWAP_AT_FRONT (sortingTheory 61)
value PERM_IND (sortingTheory 62)
value PERM_INSERT_PTREE (patriciaTheory 98)
value PERM_INTRO (sortingTheory 63)
value PERM_LENGTH (sortingTheory 64)
value PERM_lifts_equalities (sortingTheory 93)
value PERM_lifts_invariants (sortingTheory 94)
value PERM_lifts_monotonicities (sortingTheory 95)
value PERM_lifts_transitive_relations (sortingTheory 96)
value PERM_LIST_TO_BAG (containerTheory 36)
value PERM_LIST_TO_SET (sortingTheory 65)
value PERM_MAP (sortingTheory 66)
value PERM_MEM_EQ (sortingTheory 67)
value PERM_MONO (sortingTheory 68)
value PERM_NIL (sortingTheory 69)
value PERM_NORMALISE_CONV (permLib 73)
value PERM_NOT_ADD (patriciaTheory 99)
value PERM_NOT_REMOVE (patriciaTheory 100)
value PERM_QSORT3 (sortingTheory 70)
value PERM_REFL (sortingTheory 71)
value PERM_REMOVE (patriciaTheory 101)
value PERM_REVERSE (sortingTheory 72)
value PERM_REVERSE_EQ (sortingTheory 73)
value PERM_REWR (sortingTheory 74)
value PERM_REWR_CONV (permLib 98)
value PERM_RTC (sortingTheory 75)
value PERM_SET_TO_LIST_count_COUNT_LIST (sortingTheory 76)
value PERM_SIMPLE_ss (permLib 103)
value PERM_SING (sortingTheory 77)
value PERM_SINGLE_SWAP_APPEND (sortingTheory 78)
value PERM_SINGLE_SWAP_CONS (sortingTheory 79)
value PERM_SINGLE_SWAP_DEF (sortingTheory 9)
value PERM_SINGLE_SWAP_I (sortingTheory 80)
value PERM_SINGLE_SWAP_REFL (sortingTheory 81)
value PERM_SINGLE_SWAP_SYM (sortingTheory 82)
value PERM_SINGLE_SWAP_TC_CONS (sortingTheory 83)
value PERM_SPLIT (permLib 84), value PERM_SPLIT (sortingTheory 84)
value PERM_ss (permLib 102)
value PERM_STRONG_IND (sortingTheory 85)
value PERM_SUM (sortingTheory 86)
value PERM_SWAP_AT_FRONT (sortingTheory 87)
value PERM_SWAP_L_AT_FRONT (sortingTheory 88)
value PERM_SYM (sortingTheory 89)
value PERM_TAKE_DROP_CONV (permLib 35)
value PERM_TC (sortingTheory 90)
value PERM_tm (permLib 5), value perm_tm (sortingSyntax 8)
value PERM_TRANS (sortingTheory 91)
value PERM_transitive (sortingTheory 97)
structure permLib
value permutations (Streams 9)
value perturb (mlibModel 49)
HOL PairRules.PETA_CONV (help/Docfiles/PairRules.PETA_CONV.adoc 0), value PETA_CONV (PairRules 19)
value PEVENTUAL (Past_Temporal_LogicTheory 8)
HOL PairRules.PEXISTENCE (help/Docfiles/PairRules.PEXISTENCE.adoc 0), value PEXISTENCE (PairRules 85)
HOL PairRules.PEXISTS (help/Docfiles/PairRules.PEXISTS.adoc 0), value PEXISTS (PairRules 78)
HOL PairRules.PEXISTS_AND_CONV (help/Docfiles/PairRules.PEXISTS_AND_CONV.adoc 0), value PEXISTS_AND_CONV (PairRules 38)
HOL PairRules.PEXISTS_CONV (help/Docfiles/PairRules.PEXISTS_CONV.adoc 0), value PEXISTS_CONV (PairRules 72)
HOL PairRules.PEXISTS_EQ (help/Docfiles/PairRules.PEXISTS_EQ.adoc 0), value PEXISTS_EQ (PairRules 105)
HOL PairRules.PEXISTS_IMP (help/Docfiles/PairRules.PEXISTS_IMP.adoc 0), value PEXISTS_IMP (PairRules 109)
HOL PairRules.PEXISTS_IMP_CONV (help/Docfiles/PairRules.PEXISTS_IMP_CONV.adoc 0), value PEXISTS_IMP_CONV (PairRules 49)
HOL PairRules.PEXISTS_NOT_CONV (help/Docfiles/PairRules.PEXISTS_NOT_CONV.adoc 0), value PEXISTS_NOT_CONV (PairRules 28)
HOL PairRules.PEXISTS_OR_CONV (help/Docfiles/PairRules.PEXISTS_OR_CONV.adoc 0), value PEXISTS_OR_CONV (PairRules 31)
HOL PairRules.PEXISTS_RULE (help/Docfiles/PairRules.PEXISTS_RULE.adoc 0), value PEXISTS_RULE (PairRules 75)
HOL PairRules.PEXISTS_TAC (help/Docfiles/PairRules.PEXISTS_TAC.adoc 0), value PEXISTS_TAC (PairRules 84)
value PEXISTS_THM (pairTheory 44)
HOL PairRules.PEXISTS_UNIQUE_CONV (help/Docfiles/PairRules.PEXISTS_UNIQUE_CONV.adoc 0), value PEXISTS_UNIQUE_CONV (PairRules 86)
HOL PairRules.PEXT (help/Docfiles/PairRules.PEXT.adoc 0), value PEXT (PairRules 97)
HOL PairRules.PFORALL_AND_CONV (help/Docfiles/PairRules.PFORALL_AND_CONV.adoc 0), value PFORALL_AND_CONV (PairRules 30)
HOL PairRules.PFORALL_EQ (help/Docfiles/PairRules.PFORALL_EQ.adoc 0), value PFORALL_EQ (PairRules 104)
HOL PairRules.PFORALL_IMP_CONV (help/Docfiles/PairRules.PFORALL_IMP_CONV.adoc 0), value PFORALL_IMP_CONV (PairRules 46)
HOL PairRules.PFORALL_NOT_CONV (help/Docfiles/PairRules.PFORALL_NOT_CONV.adoc 0), value PFORALL_NOT_CONV (PairRules 29)
HOL PairRules.PFORALL_OR_CONV (help/Docfiles/PairRules.PFORALL_OR_CONV.adoc 0), value PFORALL_OR_CONV (PairRules 42)
value PFORALL_THM (pairTheory 45)
structure PFset_conv
value PFUN_EQ_RULE (pairLib 114), value PFUN_EQ_RULE (pairTools 7)
constructor Pfx (parse_term 19)
HOL PairRules.PGEN (help/Docfiles/PairRules.PGEN.adoc 0), value PGEN (PairRules 66), value PGEN (pairLib 112), value PGEN (pairTools 5)
HOL PairRules.PGEN_TAC (help/Docfiles/PairRules.PGEN_TAC.adoc 0), value PGEN_TAC (PairRules 69), value PGEN_TAC (pairLib 113), value PGEN_TAC (pairTools 6)
value pgenerate_11 (pathTheory 139)
value pgenerate_def (pathTheory 29)
value pgenerate_infinite (pathTheory 140)
value pgenerate_not_stopped (pathTheory 141)
value pgenerate_onto (pathTheory 142)
HOL PairRules.PGENL (help/Docfiles/PairRules.PGENL.adoc 0), value PGENL (PairRules 67)
structure PGspec
type phase (TotalDefn 35)
value phase1_CONV (CooperMath 84)
value phase2_CONV (CooperMath 85)
value phase3_CONV (CooperMath 86)
value phase4_CONV (CooperCore 2), value phase4_CONV (jrhCore 2)
value phase5_CONV (CooperCore 3), value phase5_CONV (jrhCore 3)
value phase6_CONV (CooperShell 3)
value pheu_classic (PmatchHeuristics 13)
value pheu_constr_prefix (PmatchHeuristics 15)
value pheu_cqba (PmatchHeuristics 17)
value pheu_first_col (PmatchHeuristics 18)
value pheu_first_row (PmatchHeuristics 14)
value pheu_last_col (PmatchHeuristics 19)
value pheu_manual (PmatchHeuristics 29)
value pheu_qba (PmatchHeuristics 16)
value pheu_rank (PmatchHeuristics 43)
value Phi (UnicodeChars 31), value phi (UnicodeChars 20)
value PHP (pred_setTheory 315)
type PhraseBlockStyle (Parse 7), type PhraseBlockStyle (term_grammar 24)
value Pi (UnicodeChars 30), value pi (UnicodeChars 16), value pi (transcTheory 16)
value PI2 (transcTheory 148)
value PI2_BOUNDS (transcTheory 149)
value PI_POS (transcTheory 150)
value pi_tm (transcSyntax 15)
value PINST (liteLib 121), value PINST (matchTools 18), value pinst (matchTools 16)
structure PIntMap
value PL_0 (pathTheory 44)
value PL_def (pathTheory 5)
value PL_downward_closed (pathTheory 45)
value PL_drop (pathTheory 46)
value PL_pcons (pathTheory 47)
value PL_pmap (pathTheory 48)
value PL_seg (pathTheory 49)
value PL_stopped_at (pathTheory 50)
value PL_take (pathTheory 51)
value PL_thm (pathTheory 52)
value plink_def (pathTheory 30)
value plist_mk_rbinop (Preterm 33)
HOL Lib.pluck (help/Docfiles/Lib.pluck.adoc 0), value pluck (Lib 104)
value plus1 (Arbnumcore 14), value plus1 (mlibArbnum 15)
HOL bossLib.plus2 (help/Docfiles/bossLib.plus2.adoc 0), value plus2 (Arbnumcore 15), value plus2 (mlibArbnum 16)
value plus_assoc (ringTheory 34), value plus_assoc (semi_ringTheory 32)
value Plus_infinity (ieeeTheory 17), value plus_infinity (ieeeTheory 84)
value plus_permute (semi_ringTheory 33)
value plus_rotate (semi_ringTheory 34)
value plus_sym (ringTheory 35), value plus_sym (semi_ringTheory 35)
value plus_tm (intSyntax 10), value plus_tm (numSyntax 30), value plus_tm (realSyntax 10)
value PLUS_ZERO (Theorems 4), value Plus_zero (ieeeTheory 18), value plus_zero (ieeeTheory 85)
value PLUS_ZERO_CONV (Thm_convs 32)
value plus_zero_left (ringTheory 36), value plus_zero_left (semi_ringTheory 36)
value plus_zero_right (ringTheory 37), value plus_zero_right (semi_ringTheory 37)
constructor PM_EQUAL (parse_term 20)
constructor PM_GREATER (parse_term 20)
constructor PM_LESS (parse_term 20)
constructor PM_LG (parse_term 20)
value pmap_def (pathTheory 31)
value pmap_thm (pathTheory 143)
structure Pmatch
type pmatch_heuristic (PmatchHeuristics 7), value pmatch_heuristic (PmatchHeuristics 83)
value pmatch_heuristic_cases_cmp (PmatchHeuristics 54)
type pmatch_heuristic_fun (PmatchHeuristics 64)
value pmatch_heuristic_list (PmatchHeuristics 76)
type pmatch_heuristic_res_compare (PmatchHeuristics 53)
value pmatch_heuristic_size_cmp (PmatchHeuristics 55)
HOL PairRules.PMATCH_MP (help/Docfiles/PairRules.PMATCH_MP.adoc 0), value PMATCH_MP (PairRules 114)
HOL PairRules.PMATCH_MP_TAC (help/Docfiles/PairRules.PMATCH_MP_TAC.adoc 0), value PMATCH_MP_TAC (PairRules 113)
structure PmatchHeuristics
value PNEXT (Past_Temporal_LogicTheory 9)
value PNEXT_INWARDS_NORMAL_FORM (Past_Temporal_LogicTheory 30)
value pnf (mlibCanon 19)
value pointer_eq (Portable 56), value pointer_eq (Systeml 38), value pointer_eq (mlibPortable 12)
value pointwise_lift_def (posetTheory 17)
constructor POLY (KernelTypes 26), value POLY (Systeml 21)
value POLY_ADD (polyTheory 31)
value POLY_ADD_CLAUSES (polyTheory 32)
value poly_add_def (polyTheory 7)
value POLY_ADD_RZERO (polyTheory 33)
value POLY_CMUL (polyTheory 34)
value POLY_CMUL_CLAUSES (polyTheory 35)
value poly_cmul_def (polyTheory 8)
value POLY_CONT (polyTheory 36)
value poly_def (polyTheory 9)
value POLY_DIFF (polyTheory 37)
value POLY_DIFF_ADD (polyTheory 39)
value POLY_DIFF_AUX_ADD (polyTheory 40)
value POLY_DIFF_AUX_CMUL (polyTheory 41)
value poly_diff_aux_def (polyTheory 10)
value POLY_DIFF_AUX_ISZERO (polyTheory 42)
value POLY_DIFF_AUX_MUL_LEMMA (polyTheory 43)
value POLY_DIFF_AUX_NEG (polyTheory 44)
value POLY_DIFF_CLAUSES (polyTheory 45)
value POLY_DIFF_CMUL (polyTheory 46)
value poly_diff_def (polyTheory 11)
value POLY_DIFF_EXP (polyTheory 47)
value POLY_DIFF_EXP_PRIME (polyTheory 48)
value POLY_DIFF_ISZERO (polyTheory 49)
value POLY_DIFF_LEMMA (polyTheory 50)
value POLY_DIFF_MUL (polyTheory 51)
value POLY_DIFF_MUL_LEMMA (polyTheory 52)
value POLY_DIFF_NEG (polyTheory 53)
value POLY_DIFF_WELLDEF (polyTheory 54)
value POLY_DIFF_ZERO (polyTheory 55)
value POLY_DIFFERENTIABLE (polyTheory 38)
value poly_divides (polyTheory 12)
value POLY_DIVIDES_ADD (polyTheory 56)
value POLY_DIVIDES_EXP (polyTheory 57)
value POLY_DIVIDES_REFL (polyTheory 58)
value POLY_DIVIDES_SUB (polyTheory 59)
value POLY_DIVIDES_SUB2 (polyTheory 60)
value POLY_DIVIDES_TRANS (polyTheory 61)
value POLY_DIVIDES_ZERO (polyTheory 62)
value POLY_ENTIRE (polyTheory 63)
value POLY_ENTIRE_LEMMA (polyTheory 64)
value POLY_EXP (polyTheory 65)
value POLY_EXP_ADD (polyTheory 66)
value poly_exp_def (polyTheory 13)
value POLY_EXP_DIVIDES (polyTheory 67)
value POLY_EXP_EQ_0 (polyTheory 68)
value POLY_EXP_PRIME_EQ_0 (polyTheory 69)
value poly_grammars (polyTheory 100)
value POLY_IVT_NEG (polyTheory 70)
value POLY_IVT_POS (polyTheory 71)
value POLY_LDFLAGS (Systeml 24)
value POLY_LDFLAGS_STATIC (Systeml 25)
value POLY_LENGTH_MUL (polyTheory 72)
value POLY_LINEAR_DIVIDES (polyTheory 73)
value POLY_LINEAR_REM (polyTheory 74)
value POLY_MONO (polyTheory 75)
value POLY_MUL (polyTheory 76)
value POLY_MUL_ASSOC (polyTheory 77)
value POLY_MUL_CLAUSES (polyTheory 78)
value poly_mul_def (polyTheory 14)
value POLY_MUL_LCANCEL (polyTheory 79)
value POLY_MVT (polyTheory 80)
value POLY_NEG (polyTheory 81)
value POLY_NEG_CLAUSES (polyTheory 82)
value poly_neg_def (polyTheory 15)
value POLY_NORMALIZE (polyTheory 83)
value POLY_ORDER (polyTheory 84), value poly_order (polyTheory 16)
value POLY_ORDER_EXISTS (polyTheory 85)
value POLY_PRIME_EQ_0 (polyTheory 87)
value POLY_PRIMES (polyTheory 86)
value POLY_ROOTS_FINITE (polyTheory 88)
value POLY_ROOTS_FINITE_LEMMA (polyTheory 89)
value POLY_ROOTS_FINITE_SET (polyTheory 90)
value POLY_ROOTS_INDEX_LEMMA (polyTheory 91)
value POLY_ROOTS_INDEX_LENGTH (polyTheory 92)
value POLY_SQUAREFREE_DECOMP (polyTheory 93)
value POLY_SQUAREFREE_DECOMP_ORDER (polyTheory 94)
value POLY_VERSION (Systeml 23)
value POLY_ZERO (polyTheory 95)
value POLY_ZERO_LEMMA (polyTheory 96)
value POLYC (Systeml 22)
value POLYMLLIBDIR (Systeml 20)
HOL Type.polymorphic (help/Docfiles/Type.polymorphic.adoc 0), value polymorphic (FinalType 24)
value polynom_11 (ringNormTheory 43)
value polynom_Axiom (ringNormTheory 44)
value polynom_case_cong (ringNormTheory 45)
value polynom_case_def (ringNormTheory 7)
value polynom_distinct (ringNormTheory 46)
value polynom_induction (ringNormTheory 47)
value polynom_nchotomy (ringNormTheory 48)
value polynom_normalize_def (ringNormTheory 8)
value polynom_normalize_ok (ringNormTheory 49)
value polynom_simplify_def (ringNormTheory 9)
value polynom_simplify_ok (ringNormTheory 50)
value polynom_size_def (ringNormTheory 10)
value polynom_TY_DEF (ringNormTheory 6)
structure polyTheory
HOL Tactical.POP_ASSUM (help/Docfiles/Tactical.POP_ASSUM.adoc 0), value POP_ASSUM (Tactical 78), value POP_ASSUM (jrhTactics 27), value pop_assum (Tactical 79), value pop_assum (lcsymtacs 33)
HOL Tactical.POP_ASSUM_LIST (help/Docfiles/Tactical.POP_ASSUM_LIST.adoc 0), value POP_ASSUM_LIST (Tactical 82), value POP_ASSUM_LIST (jrhTactics 28)
value POP_NO_ASSUM (schneiderUtils 33)
value POP_NO_TAC (schneiderUtils 34)
constructor poplist (PEGParse 19)
structure Portable
value pos (mlibUseful 137)
value pos_def (realTheory 11)
value pos_fn_integral_add (lebesgueTheory 93)
value pos_fn_integral_cmul (lebesgueTheory 94)
value pos_fn_integral_cmul_indicator (lebesgueTheory 95)
value pos_fn_integral_cmul_infty (lebesgueTheory 96)
value pos_fn_integral_def (lebesgueTheory 15)
value pos_fn_integral_disjoint_sets (lebesgueTheory 97)
value pos_fn_integral_disjoint_sets_sum (lebesgueTheory 98)
value pos_fn_integral_indicator (lebesgueTheory 99)
value pos_fn_integral_mono (lebesgueTheory 100)
value pos_fn_integral_mono_mspace (lebesgueTheory 101)
value pos_fn_integral_mspace (lebesgueTheory 102)
value pos_fn_integral_pos (lebesgueTheory 103)
value pos_fn_integral_pos_simple_fn (lebesgueTheory 104)
value pos_fn_integral_split (lebesgueTheory 105)
value pos_fn_integral_sum (lebesgueTheory 106)
value pos_fn_integral_sum_cmul_indicator (lebesgueTheory 107)
value pos_fn_integral_suminf (lebesgueTheory 108)
value pos_fn_integral_zero (lebesgueTheory 109)
constructor Pos_inf (Sup_Inf 4)
value pos_pos_thm (inttoTheory 23)
value pos_simple_fn_add (lebesgueTheory 110)
value pos_simple_fn_add_alt (lebesgueTheory 111)
value pos_simple_fn_cmul (lebesgueTheory 112)
value pos_simple_fn_cmul_alt (lebesgueTheory 113)
value pos_simple_fn_def (measureTheory 26)
value pos_simple_fn_indicator (lebesgueTheory 114)
value pos_simple_fn_indicator_alt (lebesgueTheory 115)
value pos_simple_fn_integral_add (lebesgueTheory 116)
value pos_simple_fn_integral_add_alt (lebesgueTheory 117)
value pos_simple_fn_integral_cmul (lebesgueTheory 118)
value pos_simple_fn_integral_cmul_alt (lebesgueTheory 119)
value pos_simple_fn_integral_def (lebesgueTheory 16)
value pos_simple_fn_integral_indicator (lebesgueTheory 120)
value pos_simple_fn_integral_mono (lebesgueTheory 121)
value pos_simple_fn_integral_not_infty (lebesgueTheory 122)
value pos_simple_fn_integral_present (lebesgueTheory 123)
value pos_simple_fn_integral_sub (lebesgueTheory 124)
value pos_simple_fn_integral_sum (lebesgueTheory 125)
value pos_simple_fn_integral_sum_alt (lebesgueTheory 126)
value pos_simple_fn_integral_unique (lebesgueTheory 127)
value pos_simple_fn_integral_zero (lebesgueTheory 128)
value pos_simple_fn_integral_zero_alt (lebesgueTheory 129)
value pos_simple_fn_le (lebesgueTheory 130)
value pos_simple_fn_max (lebesgueTheory 131)
value pos_simple_fn_not_infty (lebesgueTheory 132)
value pos_simple_fn_thm1 (lebesgueTheory 133)
value POS_SUMMABLE (util_probTheory 111)
value poset_antisym (posetTheory 36)
value poset_def (posetTheory 18)
value poset_grammars (posetTheory 41)
value poset_nonempty (posetTheory 37)
value poset_refl (posetTheory 38)
value poset_trans (posetTheory 39)
structure posetTheory
value posinf_def (DeepSyntaxTheory 13)
value posinf_disj1_implies_exoriginal (DeepSyntaxTheory 31)
value posinf_exoriginal_eq_rhs (DeepSyntaxTheory 32)
value posinf_exoriginal_implies_rhs (DeepSyntaxTheory 33)
value posinf_ok (DeepSyntaxTheory 34)
value positive (mlibTerm 89)
value positive_def (measureTheory 27)
value POSITIVE_PROB (probabilityTheory 47)
value positive_product_implication (int_arithTheory 71)
type posn (mungeTools 5)
value possibly_def (probabilityTheory 16)
value post_process_term (Parse 46), value post_process_term (Preterm 70)
value pow (Arbnumcore 41), value pow (realTheory 12)
value pow2_sqrt (extrealTheory 316)
value POW_0 (realTheory 64), value pow_0 (extrealTheory 317)
value POW_1 (realTheory 65), value pow_1 (extrealTheory 318)
value POW_2 (realTheory 66), value pow_2 (extrealTheory 319)
value POW_2_LE1 (realTheory 67)
value POW_2_LT (realTheory 68)
value POW_2_SQRT (transcTheory 151)
value POW_ABS (realTheory 69)
value POW_ADD (realTheory 70), value pow_add (extrealTheory 320)
value POW_ALGEBRA (measureTheory 196)
value POW_DEF (pred_setTheory 27)
value POW_EMPTY (pred_setTheory 316)
value POW_EQ (realTheory 71)
value POW_EQNS (pred_setTheory 317)
value POW_HALF_MONO (util_probTheory 112)
value POW_HALF_POS (util_probTheory 113)
value POW_HALF_SER (util_probTheory 114)
value POW_HALF_SMALL (util_probTheory 115)
value POW_INSERT (pred_setTheory 318)
value POW_INV (realTheory 72)
value POW_LE (realTheory 73), value pow_le (extrealTheory 321)
value pow_le_mono (extrealTheory 322)
value POW_LT (realTheory 74), value pow_lt (extrealTheory 323)
value pow_lt2 (extrealTheory 324)
value POW_M1 (realTheory 75)
value POW_MINUS1 (realTheory 76), value pow_minus1 (extrealTheory 325)
value POW_MUL (realTheory 77), value pow_mul (extrealTheory 326)
value POW_NEG_ODD (extrealTheory 99), value pow_neg_odd (extrealTheory 327)
value pow_no_surj (pred_setTheory 450)
value pow_not_infty (extrealTheory 328)
value POW_NZ (realTheory 78)
value POW_ONE (realTheory 79)
value POW_PLUS1 (realTheory 80)
value POW_POS (realTheory 81)
value POW_POS_EVEN (extrealTheory 100), value pow_pos_even (extrealTheory 329)
value pow_pos_le (extrealTheory 330)
value POW_POS_LT (realTheory 82), value pow_pos_lt (extrealTheory 331)
value pow_rat (realTheory 451)
value POW_ROOT_POS (transcTheory 152)
value POW_SIGMA_ALGEBRA (measureTheory 197)
value pow_tm (pred_setSyntax 25)
value POW_ZERO (realTheory 83), value pow_zero (extrealTheory 332)
value POW_ZERO_EQ (realTheory 84)
value pow_zero_imp (extrealTheory 333)
value POWDIFF (powserTheory 12)
value POWDIFF_LEMMA (powserTheory 13)
value powers (mlibStream 16)
value powr_def (util_probTheory 14)
value POWREV (powserTheory 14)
value powser_grammars (powserTheory 24)
value POWSER_INSIDE (powserTheory 15)
value POWSER_INSIDEA (powserTheory 16)
structure powserTheory
type pp (folMapping 8), type pp (folTools 8), type pp (mlibClause 9), type pp (mlibClauseset 8), type pp (mlibLiteralnet 8), type pp (mlibMeter 8), type pp (mlibModel 8), type pp (mlibParser 15), type pp (mlibResolution 8), type pp (mlibRewrite 8), type pp (mlibSolver 8), type pp (mlibSubst 8), type pp (mlibSubsume 8), type pp (mlibSupport 8), type pp (mlibTerm 8), type pp (mlibTermnet 8), type pp (mlibTermorder 8), type pp (mlibThm 8), type pp (mlibUnits 8), type pp (mlibUseful 141), value pp (mlibHeap 18)
value pp_array_types (type_pp 9)
value pp_binop (mlibUseful 146)
value pp_bool (mlibUseful 150)
value pp_bracket (mlibUseful 144)
value pp_char (mlibUseful 147)
value pp_clause (mlibClause 84)
value pp_clauseset (mlibClauseset 48)
type pp_color (PPBackEnd 9)
value pp_compset (computeLib 47)
value pp_cost_fn (mlibSolver 57)
value pp_datatype_as_ML (EmitML 15)
value pp_defn (DefnBase 17)
value pp_defn_as_ML (EmitML 14)
value pp_dep (Dep 25)
type pp_element (Parse 6), type pp_element (term_grammar 14)
value pp_elements_ok (term_grammar 38)
value pp_flags (Globals 22)
value pp_formula (mlibTerm 150)
value pp_formula' (mlibTerm 146)
value pp_goal (goalStack 25)
value pp_gstk (goalStack 26)
value pp_gtree (goalTree 18)
value pp_holset (HOLset 3)
value pp_inference (mlibThm 68)
value pp_inference' (mlibThm 69)
value pp_infixes (mlibParser 51)
value pp_int (Arbint 4), value pp_int (mlibUseful 151)
value pp_left_infix (mlibParser 49)
value pp_lifter_def (Lift 6)
value pp_limit (mlibMeter 14)
value pp_list (mlibUseful 155)
value pp_literalnet (mlibLiteralnet 31)
value pp_logic_map (folTools 49)
value pp_map (mlibUseful 143)
value pp_maplet (mlibUseful 168)
value pp_meter (mlibMeter 32)
value pp_meter_reading (mlibMeter 21)
value pp_model (mlibModel 52)
value pp_mset (mlibMultiset 28)
value pp_num (Arbnum 6)
value pp_num_types (type_pp 8)
value pp_order (mlibUseful 153)
value pp_pair (mlibUseful 156)
value pp_porder (mlibUseful 154)
value pp_pretype (Pretype 46)
value pp_proof (Manager 54), value pp_proof (mlibThm 70), value pp_proof (proofManagerLib 71)
value pp_proofs (Manager 55), value pp_proofs (proofManagerLib 72)
value pp_rat (Arbrat 46)
value pp_real (mlibUseful 152)
value pp_resolution (mlibResolution 37)
value pp_rewrites (Rewrite 15)
value pp_rewrs (mlibClause 58), value pp_rewrs (mlibRewrite 34)
value pp_right_infix (mlibParser 50)
value pp_sequence (mlibUseful 145)
value pp_sig (TheoryPP 17)
value pp_sig_hook (TheoryPP 15)
value pp_simpls (RW 14)
value pp_simpset (simpLib 209)
value pp_solver_node (mlibSolver 48)
value pp_sos (mlibSupport 37)
value pp_ssfrag (simpLib 208)
value pp_string (mlibUseful 148)
value pp_struct (TheoryPP 28)
type pp_style (PPBackEnd 10)
value pp_subst (mlibSubst 30)
value pp_subsume (mlibSubsume 33)
value pp_sum (mlibUseful 164)
HOL Tag.pp_tag (help/Docfiles/Tag.pp_tag.adoc 0), value pp_tag (FinalTag 13), value pp_tag (Tag 15)
value pp_term (Hol_pp 17), value pp_term (Parse 180), value pp_term (mlibTerm 149), value pp_term (term_pp 4)
value pp_term' (mlibTerm 145)
value pp_term_as_ML (EmitML 13)
value pp_term_as_tex (EmitTeX 19)
value pp_term_ptree (patriciaLib 55)
value pp_term_without_overloads (Parse 121)
HOL Parse.pp_term_without_overloads_on (help/Docfiles/Parse.pp_term_without_overloads_on.adoc 0), value pp_term_without_overloads_on (Parse 120)
value pp_termnet (mlibTermnet 30)
value pp_termorder (mlibTermorder 38)
value pp_theorem_as_tex (EmitTeX 21)
value pp_theory (Hol_pp 19)
value pp_theory_as_html (DB 45)
value pp_thm (Hol_pp 18), value pp_thm (Parse 182), value pp_thm (Theory 102), value pp_thm (mlibThm 67)
value pp_to_disk (FinalTag 14), value pp_to_disk (Tag 16)
value pp_to_string (HOLPP 36)
value pp_triple (mlibUseful 157)
value pp_tyinfo (TypeBasePure 40)
value pp_type (Hol_pp 16), value pp_type (Parse 181), value pp_type (TheoryPP 13), value pp_type (type_pp 3)
value pp_type_as_ML (EmitML 12)
value pp_type_as_tex (EmitTeX 20)
value pp_type_with_depth (type_pp 5)
value pp_type_without_abbrevs (Parse 123)
value pp_unit (mlibUseful 149)
value pp_units (mlibUnits 22)
value pp_with_bquotes (Parse 184)
structure PPBackEnd
constructor PPBlock (term_grammar 14), value PPBlock (Parse 251)
type ppconsumer (HOLPP 5)
value pprint (Portable 30)
type pprinters (TermParse 10)
value pps_from_iface (HOLPP 26)
type ppstream (Abbrev 17), type ppstream (HOLPP 4), type ppstream (Hol_pp 2), type ppstream (PPBackEnd 4), type ppstream (Parse 11), type ppstream (Theory 6), type ppstream (TheoryPP 11), type ppstream (TypeBasePure 5), type ppstream (term_grammar 4)
type ppstream_interface (HOLPP 13)
HOL Lib.ppstring (help/Docfiles/Lib.ppstring.adoc 0), value ppstring (Lib 105)
value ppwrite (DiskThms 3)
value pr_list (Portable 24), value pr_list (smpp 20)
value pr_list_to_ppstream (Portable 26)
value PRE (prim_recTheory 35)
value pre_aplextoto (totoTheory 126)
HOL reduceLib.PRE_CONV (help/Docfiles/reduceLib.PRE_CONV.adoc 0), value PRE_CONV (Arithconv 12), value PRE_CONV (reduceLib 19)
value PRE_DEF (prim_recTheory 6)
value PRE_ELIM_THM (arithmeticTheory 313)
value PRE_SUB (arithmeticTheory 314)
value PRE_SUB1 (arithmeticTheory 315)
value PRE_SUC_EQ (arithmeticTheory 316)
value pre_tm (numSyntax 31)
type pre_vc (DiskFilesHeader 6)
exception PrecConflict (parse_term 10)
value precheck (mesonLib 12)
type pred (Ho_Rewrite 38), type pred (Rewrite 51)
HOL Tactical.PRED_ASSUM (help/Docfiles/Tactical.PRED_ASSUM.adoc 0), value PRED_ASSUM (Tactical 80)
value PRED_SET_AC_ss (pred_setSimps 4)
value pred_set_grammars (pred_setTheory 455)
value PRED_SET_ss (pred_setLib 15), value PRED_SET_ss (pred_setSimps 3)
structure pred_setLib
structure pred_setSimps
structure pred_setSyntax
structure pred_setTheory
type PREDICTOR (holyHammer 3)
value preds_image_def (wotTheory 12)
HOL Parse.prefer_form_with_tok (help/Docfiles/Parse.prefer_form_with_tok.adoc 0), value prefer_form_with_tok (Parse 94), value prefer_form_with_tok (term_grammar 233)
value prefer_form_with_toklist (term_grammar 235)
HOL intLib.prefer_int (help/Docfiles/intLib.prefer_int.adoc 0), value prefer_int (intLib 7)
value prefer_num (numLib 42)
value prefer_word (wordsLib 64)
value preferred_output_base (base_tokens 17)
value prefine (mesonLib 11)
constructor PREFIX (term_grammar 74), constructor Prefix (term_grammar 83), value PREFIX (rich_listTheory 290), value Prefix (Parse 238)
value PREFIX_DEF (rich_listTheory 15)
value PREFIX_FOLDR (rich_listTheory 291)
type prefix_rule (term_grammar 52)
value prefix_tm (rich_listSyntax 11)
value prefixes_is_prefix_total (rich_listTheory 350)
value prefixes_lprefix_total (llistTheory 154)
value PREIMAGE_ALT (util_probTheory 116)
value PREIMAGE_BIGUNION (util_probTheory 117)
value PREIMAGE_COMP (util_probTheory 118)
value PREIMAGE_COMPL (util_probTheory 119)
value PREIMAGE_COMPL_INTER (util_probTheory 120)
value PREIMAGE_CROSS (util_probTheory 121)
value PREIMAGE_def (util_probTheory 7)
value PREIMAGE_DIFF (util_probTheory 122)
value PREIMAGE_DISJOINT (util_probTheory 123)
value PREIMAGE_EMPTY (util_probTheory 124)
value PREIMAGE_I (util_probTheory 125)
value PREIMAGE_INTER (util_probTheory 126)
value PREIMAGE_K (util_probTheory 127)
value PREIMAGE_REAL_COMPL1 (util_probTheory 128)
value PREIMAGE_REAL_COMPL2 (util_probTheory 129)
value PREIMAGE_REAL_COMPL3 (util_probTheory 130)
value PREIMAGE_REAL_COMPL4 (util_probTheory 131)
value PREIMAGE_SUBSET (util_probTheory 132)
value PREIMAGE_UNION (util_probTheory 133)
value PREIMAGE_UNIV (util_probTheory 134)
value prelim_grammars (prelimTheory 39)
structure prelimTheory
structure PreListEncode
structure Prenex, value prenex (mlibCanon 18)
HOL Arith.PRENEX_CONV (help/Docfiles/Arith.PRENEX_CONV.adoc 0), value PRENEX_CONV (Arith 15), value PRENEX_CONV (Canon 19), value PRENEX_CONV (Canon_Port 13), value PRENEX_CONV (OmegaMath 20), value PRENEX_CONV (Prenex 3), value PRENEX_CONV (normalForms 98), value PRENEX_CONV (refuteLib 19)
value PRENEX_NEXT_NORMAL_FORM (Past_Temporal_LogicTheory 31)
constructor PREORDER (Travrules 23), type preorder (Travrules 23), value PreOrder (relationTheory 15)
value PRESIMP_CONV (Canon_Port 11)
structure Preterm, type preterm (DiskFilesHeader 7), type preterm (Parse_support 3), type preterm (Preterm 10), type preterm (TermParse 8), value Preterm (Parse 53), value preterm (TermParse 14)
type preterm_in_env (Parse_support 7)
value preterm_to_term (TermParse 17)
type prethm (DiskFilesHeader 9)
value prettify (mlibTptp 21)
value prettify_fol (folMapping 39)
value prettify_formula (folMapping 40)
value prettify_vars (normalForms 31)
value PRETTIFY_VARS_CONV (normalForms 32)
value prettyprint_grammar (term_grammar 247), value prettyprint_grammar (type_grammar 46)
value prettyprint_grammar_rules (term_grammar 244)
structure Pretype, type pretype (Absyn 3), type pretype (DiskFilesHeader 5), type pretype (ParseDatatype 3), type pretype (Parse_support 2), type pretype (Preterm 2), type pretype (Pretype 3)
value pretypeToType (ParseDatatype 8)
constructor PRFS (Manager 8)
value prheu_arity (PmatchHeuristics 49)
value prheu_constr_prefix (PmatchHeuristics 47)
value prheu_first_row (PmatchHeuristics 46)
value prheu_small_branching_factor (PmatchHeuristics 48)
value prim_delete_const (FinalTerm 92)
value prim_delete_type (FinalType 60)
value prim_find_subterm (BasicProvers 58)
value prim_get (TypeBasePure 88)
value prim_insert (ConstMapML 9)
HOL Tactic.prim_irule (help/Docfiles/Tactic.prim_irule.adoc 0), value prim_irule (Tactic 76)
HOL Term.prim_mk_const (help/Docfiles/Term.prim_mk_const.adoc 0), value prim_mk_const (FinalTerm 32)
value prim_mk_eq (Term 11)
value prim_mk_imp (Term 12)
value prim_mk_set (pred_setSyntax 48)
value prim_mk_set_spec (pred_setSyntax 54)
value prim_new_const (FinalTerm 91)
value prim_new_type (FinalType 59)
structure Prim_rec, value PRIM_REC (prim_recTheory 7)
value PRIM_REC_EQN (prim_recTheory 36)
value PRIM_REC_FUN (prim_recTheory 8)
value prim_rec_grammars (prim_recTheory 54)
value PRIM_REC_THM (prim_recTheory 37)
structure prim_recTheory
value prim_specification (FinalThm 113)
value PRIM_STP_TAC (BasicProvers 40)
value PRIM_TC_SIMP_CONV (TotalDefn 17)
value PRIM_TC_SIMP_TAC (TotalDefn 18)
value prim_type_definition (FinalThm 112)
HOL Term.prim_variant (help/Docfiles/Term.prim_variant.adoc 0), value prim_variant (FinalTerm 24)
value PRIM_WF_REL_TAC (TotalDefn 19)
value PRIM_WF_TAC (TotalDefn 16)
value primDefine (TotalDefn 30)
HOL Lib.prime (help/Docfiles/Lib.prime.adoc 0), value prime (Lib 106)
value PRIME_2 (dividesTheory 39)
value PRIME_3 (dividesTheory 40)
value prime_def (dividesTheory 7)
value prime_divides_only_self (dividesTheory 48)
value PRIME_FACTOR (dividesTheory 41)
value PRIME_FACTOR_DIVIDES (primeFactorTheory 15)
value PRIME_FACTORIZATION (primeFactorTheory 10)
value PRIME_FACTORS_1 (primeFactorTheory 11)
value PRIME_FACTORS_def (primeFactorTheory 5)
value PRIME_FACTORS_EXIST (primeFactorTheory 12)
value PRIME_FACTORS_EXP (primeFactorTheory 13)
value PRIME_FACTORS_MULT (primeFactorTheory 14)
value PRIME_GCD (gcdTheory 43)
value PRIME_INDEX (dividesTheory 42)
value PRIME_IS_GCD (gcdTheory 44)
value PRIME_POS (dividesTheory 43)
value primeFactor_grammars (primeFactorTheory 18)
structure primeFactorTheory
value primePRIMES (dividesTheory 47)
value primes (mlibUseful 117)
value PRIMES_11 (dividesTheory 36)
value PRIMES_def (dividesTheory 5)
value PRIMES_NO_GAP (dividesTheory 37)
value PRIMES_ONTO (dividesTheory 38)
value primHol_datatype (Datatype 44)
value primInduct (BasicProvers 60)
HOL Globals.priming (help/Docfiles/Globals.priming.adoc 0), value priming (Globals 25)
value primitive_inference (mlibThm 22)
constructor PRIMREC (DefnBase 5)
value print_apropos (DB 33)
value PRINT_CONV (Conv 112)
HOL EmitTeX.print_datatypes (help/Docfiles/EmitTeX.print_datatypes.adoc 0), value print_datatypes (EmitTeX 11)
value print_find (DB 34)
HOL Parse.print_from_grammars (help/Docfiles/Parse.print_from_grammars.adoc 0), value print_from_grammars (Parse 66)
value print_map (Overload 19)
value print_match (DB 35)
value print_monads (parmonadsyntax 8)
value print_profile_result (Profile 15)
value print_profile_results (Profile 16)
value print_rat (Rationals 17)
HOL goalStack.print_tac (help/Docfiles/goalStack.print_tac.adoc 0), value print_tac (goalStack 12)
HOL Parse.print_term (help/Docfiles/Parse.print_term.adoc 0), value print_term (Hol_pp 26), value print_term (Parse 208)
HOL EmitTeX.print_term_as_tex (help/Docfiles/EmitTeX.print_term_as_tex.adoc 0), value print_term_as_tex (EmitTeX 23)
HOL Parse.print_term_by_grammar (help/Docfiles/Parse.print_term_by_grammar.adoc 0), value print_term_by_grammar (Parse 70)
value print_term_grammar (Parse 75)
HOL EmitTeX.print_theorem_as_tex (help/Docfiles/EmitTeX.print_theorem_as_tex.adoc 0), value print_theorem_as_tex (EmitTeX 25)
HOL EmitTeX.print_theories_as_tex_doc (help/Docfiles/EmitTeX.print_theories_as_tex_doc.adoc 0), value print_theories_as_tex_doc (EmitTeX 28)
HOL DB.print_theory (help/Docfiles/DB.print_theory.adoc 0), value print_theory (DB 39)
value print_theory_as_html (DB 46)
HOL EmitTeX.print_theory_as_tex (help/Docfiles/EmitTeX.print_theory_as_tex.adoc 0), value print_theory_as_tex (EmitTeX 26)
value print_theory_to_file (DB 41)
value print_theory_to_outstream (DB 42)
value print_thm (Hol_pp 27), value print_thm (Parse 206)
value print_thy_loads (Globals 34)
value print_type (Hol_pp 25), value print_type (Parse 207)
HOL EmitTeX.print_type_as_tex (help/Docfiles/EmitTeX.print_type_as_tex.adoc 0), value print_type_as_tex (EmitTeX 24)
value print_with_style (Parse 201)
type printmap_data (Overload 11)
value privileged_abbrevs (type_grammar 22)
value PROB (probabilityTheory 48)
value PROB_ADDITIVE (probabilityTheory 49)
value PROB_COMPL (probabilityTheory 50)
value PROB_COMPL_LE1 (probabilityTheory 51)
value PROB_COUNTABLY_ADDITIVE (probabilityTheory 52)
value PROB_COUNTABLY_SUBADDITIVE (probabilityTheory 53)
value PROB_COUNTABLY_ZERO (probabilityTheory 54)
value prob_def (probabilityTheory 17)
value PROB_DISCRETE_EVENTS (probabilityTheory 55)
value PROB_DISCRETE_EVENTS_COUNTABLE (probabilityTheory 56)
value PROB_EMPTY (probabilityTheory 57)
value PROB_EQ_BIGUNION_IMAGE (probabilityTheory 59)
value PROB_EQ_COMPL (probabilityTheory 60)
value PROB_EQUIPROBABLE_FINITE_UNIONS (probabilityTheory 58)
value PROB_FINITELY_ADDITIVE (probabilityTheory 61)
value PROB_INCREASING (probabilityTheory 62)
value PROB_INCREASING_UNION (probabilityTheory 63)
value PROB_INDEP (probabilityTheory 64)
value PROB_LE_1 (probabilityTheory 65)
value PROB_ONE_INTER (probabilityTheory 66)
value PROB_POSITIVE (probabilityTheory 67)
value PROB_REAL_SUM_IMAGE (probabilityTheory 68)
value PROB_REAL_SUM_IMAGE_FN (probabilityTheory 69)
value PROB_REAL_SUM_IMAGE_SPACE (probabilityTheory 70)
value PROB_SPACE (probabilityTheory 71)
value PROB_SPACE_ADDITIVE (probabilityTheory 72)
value PROB_SPACE_COUNTABLY_ADDITIVE (probabilityTheory 73)
value prob_space_def (probabilityTheory 18)
value PROB_SPACE_INCREASING (probabilityTheory 74)
value PROB_SPACE_POSITIVE (probabilityTheory 75)
value PROB_SUBADDITIVE (probabilityTheory 76)
value PROB_UNIV (probabilityTheory 77)
value prob_x_eq_1_imp_prob_y_eq_0 (probabilityTheory 107)
value PROB_ZERO_UNION (probabilityTheory 78)
value probability_grammars (probabilityTheory 110)
structure probabilityTheory
value probably_def (probabilityTheory 19)
value PROD_ALL_CONG (pairTheory 46)
value PROD_ALL_def (pairTheory 11)
value PROD_ALL_MONO (pairTheory 47)
value PROD_ALL_THM (pairTheory 48)
value prod_coder_def (CoderTheory 15)
value PROD_IMAGE_DEF (pred_setTheory 28)
value PROD_IMAGE_THM (pred_setTheory 319)
value prod_measure3_def (lebesgueTheory 17)
value prod_measure_def (lebesgueTheory 18)
value prod_measure_space3_def (lebesgueTheory 19)
value prod_measure_space_def (lebesgueTheory 20)
value PROD_SET_DEF (pred_setTheory 29)
value PROD_SET_EMPTY (pred_setTheory 320)
value PROD_SET_IMAGE_REDUCTION (pred_setTheory 321)
value PROD_SET_THM (pred_setTheory 322)
value prod_sets3_def (lebesgueTheory 21)
value prod_sets_def (util_probTheory 15)
value prod_TY_DEF (pairTheory 16)
constructor PRODUCE (Trace 4)
structure Profile, value profile (Profile 5)
value profile_no_exn (Profile 8)
value profile_with_exn (Profile 6)
value profile_with_exn_name (Profile 7)
value project (History 11)
value prolog (mlibMeson 42)
value prolog' (mlibMeson 41)
value PROLOG_SOLVE (metisTools 35)
type proof (Manager 4), type proof (proofManagerLib 3), value proof (mlibThm 27)
value proof_to_string (mlibThm 76)
value proof_to_string' (mlibThm 73)
structure proofManagerLib
type proofs (Defn 5), type proofs (Manager 8), type proofs (proofManagerLib 4)
type prop (mlibCanon 36)
value PROP_CNF_CONV (Canon 22), value PROP_CNF_CONV (Canon_Port 10), value PROP_CNF_CONV (refuteLib 22)
value PROP_DNF_CONV (Canon 23), value PROP_DNF_CONV (refuteLib 23)
value PROP_TAC (schneiderUtils 35)
constructor Propositional (mlibCanon 36)
value protect (Systeml 6)
HOL BasicProvers.PROVE (help/Docfiles/BasicProvers.PROVE.adoc 0), HOL bossLib.PROVE (help/Docfiles/bossLib.PROVE.adoc 0), HOL Tactical.prove (help/Docfiles/Tactical.prove.adoc 0), value PROVE (BasicProvers 12), value PROVE (bossLib 45), value prove (HolQbfLib 4), value prove (Q 46), value prove (Tactical 5), value prove (mlibMetis 45), value prove (mlibUnits 19)
value PROVE1_TAC (jbUtils 14)
HOL Drule.prove_abs_fn_one_one (help/Docfiles/Drule.prove_abs_fn_one_one.adoc 0), HOL Prim_rec.prove_abs_fn_one_one (help/Docfiles/Prim_rec.prove_abs_fn_one_one.adoc 0), value prove_abs_fn_one_one (Drule 92)
HOL Drule.prove_abs_fn_onto (help/Docfiles/Drule.prove_abs_fn_onto.adoc 0), HOL Prim_rec.prove_abs_fn_onto (help/Docfiles/Prim_rec.prove_abs_fn_onto.adoc 0), value prove_abs_fn_onto (Drule 91)
HOL Prim_rec.prove_case_elim_thm (help/Docfiles/Prim_rec.prove_case_elim_thm.adoc 0), value prove_case_elim_thm (Prim_rec 48)
HOL Prim_rec.prove_case_eq_thm (help/Docfiles/Prim_rec.prove_case_eq_thm.adoc 0), value prove_case_eq_thm (Prim_rec 49)
HOL Prim_rec.prove_case_rand_thm (help/Docfiles/Prim_rec.prove_case_rand_thm.adoc 0), value prove_case_rand_thm (Prim_rec 47)
HOL Prim_rec.prove_cases_thm (help/Docfiles/Prim_rec.prove_cases_thm.adoc 0), value prove_cases_thm (Prim_rec 43)
HOL Prim_rec.prove_constructors_distinct (help/Docfiles/Prim_rec.prove_constructors_distinct.adoc 0), value prove_constructors_distinct (Prim_rec 45)
HOL Prim_rec.prove_constructors_one_one (help/Docfiles/Prim_rec.prove_constructors_one_one.adoc 0), value prove_constructors_one_one (Prim_rec 46)
HOL Drule.PROVE_HYP (help/Docfiles/Drule.PROVE_HYP.adoc 0), value PROVE_HYP (Drule 54)
HOL Prim_rec.prove_induction_thm (help/Docfiles/Prim_rec.prove_induction_thm.adoc 0), value prove_induction_thm (Prim_rec 36)
value prove_inductive_relations_exist (InductiveDefinition 16)
HOL holCheckLib.prove_model (help/Docfiles/holCheckLib.prove_model.adoc 0)
value prove_monotonicity_hyps (InductiveDefinition 23)
value prove_nonschematic_inductive_relations_exist (InductiveDefinition 21)
HOL Prim_rec.prove_rec_fn_exists (help/Docfiles/Prim_rec.prove_rec_fn_exists.adoc 0), value prove_rec_fn_exists (Prim_rec 35)
value prove_recordtype_thms (RecordType 6)
HOL Drule.prove_rep_fn_one_one (help/Docfiles/Drule.prove_rep_fn_one_one.adoc 0), value prove_rep_fn_one_one (Drule 89)
HOL Drule.prove_rep_fn_onto (help/Docfiles/Drule.prove_rep_fn_onto.adoc 0), value prove_rep_fn_onto (Drule 90)
HOL BasicProvers.PROVE_TAC (help/Docfiles/BasicProvers.PROVE_TAC.adoc 0), HOL bossLib.PROVE_TAC (help/Docfiles/bossLib.PROVE_TAC.adoc 0), value PROVE_TAC (BasicProvers 13), value PROVE_TAC (bossLib 48), value prove_tac (BasicProvers 14), value prove_tac (bossLib 49), value prove_tac (lcsymtacs 76)
value prove_tcs (Defn 44)
value prove_thm (schneiderUtils 52)
type prover (mlibMetis 24)
type prover_parameters (mlibMetis 28)
value proveTotal (TotalDefn 8)
structure ProvideUnicode
HOL unwindLib.PRUNE_CONV (help/Docfiles/unwindLib.PRUNE_CONV.adoc 0), value PRUNE_CONV (unwindLib 30)
HOL unwindLib.PRUNE_ONCE_CONV (help/Docfiles/unwindLib.PRUNE_ONCE_CONV.adoc 0), value PRUNE_ONCE_CONV (unwindLib 31)
HOL unwindLib.PRUNE_ONE_CONV (help/Docfiles/unwindLib.PRUNE_ONE_CONV.adoc 0), value PRUNE_ONE_CONV (unwindLib 32)
HOL unwindLib.PRUNE_RIGHT_RULE (help/Docfiles/unwindLib.PRUNE_RIGHT_RULE.adoc 0), value PRUNE_RIGHT_RULE (unwindLib 33)
HOL unwindLib.PRUNE_SOME_CONV (help/Docfiles/unwindLib.PRUNE_SOME_CONV.adoc 0), value PRUNE_SOME_CONV (unwindLib 34)
HOL unwindLib.PRUNE_SOME_RIGHT_RULE (help/Docfiles/unwindLib.PRUNE_SOME_RIGHT_RULE.adoc 0), value PRUNE_SOME_RIGHT_RULE (unwindLib 35)
value PSBEFORE (Past_Temporal_LogicTheory 10)
value PSBEFORE_EXPRESSIVE (Past_Temporal_LogicTheory 32)
HOL PairRules.PSELECT_CONV (help/Docfiles/PairRules.PSELECT_CONV.adoc 0), value PSELECT_CONV (PairRules 74)
HOL PairRules.PSELECT_ELIM (help/Docfiles/PairRules.PSELECT_ELIM.adoc 0), value PSELECT_ELIM (PairRules 77)
HOL PairRules.PSELECT_EQ (help/Docfiles/PairRules.PSELECT_EQ.adoc 0), value PSELECT_EQ (PairRules 106)
HOL PairRules.PSELECT_INTRO (help/Docfiles/PairRules.PSELECT_INTRO.adoc 0), value PSELECT_INTRO (PairRules 76)
HOL PairRules.PSELECT_RULE (help/Docfiles/PairRules.PSELECT_RULE.adoc 0), value PSELECT_RULE (PairRules 73)
structure PSet_ind
value pseudo_constr_rws (EmitML 5)
value psfis_add (lebesgueTheory 134)
value psfis_cmul (lebesgueTheory 135)
value psfis_def (lebesgueTheory 22)
value psfis_indicator (lebesgueTheory 136)
value psfis_intro (lebesgueTheory 137)
value psfis_mono (lebesgueTheory 138)
value psfis_not_infty (lebesgueTheory 139)
value psfis_pos (lebesgueTheory 140)
value psfis_present (lebesgueTheory 141)
value psfis_sub (lebesgueTheory 142)
value psfis_sum (lebesgueTheory 143)
value psfis_unique (lebesgueTheory 144)
value psfis_zero (lebesgueTheory 145)
value psfs_def (lebesgueTheory 23)
value Psi (UnicodeChars 32), value psi (UnicodeChars 21)
HOL PairRules.PSKOLEM_CONV (help/Docfiles/PairRules.PSKOLEM_CONV.adoc 0), value PSKOLEM_CONV (PairRules 88)
value PSNEXT (Past_Temporal_LogicTheory 11)
value PSPACE (probabilityTheory 79)
HOL PairRules.PSPEC (help/Docfiles/PairRules.PSPEC.adoc 0), value PSPEC (PairRules 58)
HOL PairRules.PSPEC_ALL (help/Docfiles/PairRules.PSPEC_ALL.adoc 0), value PSPEC_ALL (PairRules 63)
HOL PairRules.PSPEC_PAIR (help/Docfiles/PairRules.PSPEC_PAIR.adoc 0), value PSPEC_PAIR (PairRules 62)
HOL PairRules.PSPEC_TAC (help/Docfiles/PairRules.PSPEC_TAC.adoc 0), value PSPEC_TAC (PairRules 65)
HOL PairRules.PSPECL (help/Docfiles/PairRules.PSPECL.adoc 0), value PSPECL (PairRules 59)
type PStack (parse_term 2)
HOL PairRules.PSTRIP_ASSUME_TAC (help/Docfiles/PairRules.PSTRIP_ASSUME_TAC.adoc 0), value PSTRIP_ASSUME_TAC (PairRules 91)
HOL PairRules.PSTRIP_GOAL_THEN (help/Docfiles/PairRules.PSTRIP_GOAL_THEN.adoc 0), value PSTRIP_GOAL_THEN (PairRules 93)
HOL PairRules.PSTRIP_TAC (help/Docfiles/PairRules.PSTRIP_TAC.adoc 0), value PSTRIP_TAC (PairRules 95)
HOL PairRules.PSTRIP_THM_THEN (help/Docfiles/PairRules.PSTRIP_THM_THEN.adoc 0), value PSTRIP_THM_THEN (PairRules 90)
HOL PairRules.PSTRUCT_CASES_TAC (help/Docfiles/PairRules.PSTRUCT_CASES_TAC.adoc 0), value PSTRUCT_CASES_TAC (PairRules 92)
value PSUB_BAG (bagTheory 31)
value PSUB_BAG_ANTISYM (bagTheory 200)
value PSUB_BAG_CARD (bagTheory 201)
value PSUB_BAG_IRREFL (bagTheory 202)
value PSUB_BAG_NOT_EQ (bagTheory 203)
value PSUB_BAG_REST (bagTheory 204)
value PSUB_BAG_SUB_BAG (bagTheory 205)
value PSUB_BAG_TRANS (bagTheory 206)
HOL PairRules.PSUB_CONV (help/Docfiles/PairRules.PSUB_CONV.adoc 0), value PSUB_CONV (PairRules 7)
value PSUBSET_DEF (pred_setTheory 30)
value PSUBSET_EQN (pred_setTheory 323)
value PSUBSET_FINITE (pred_setTheory 324)
value PSUBSET_INSERT_SUBSET (pred_setTheory 325)
value PSUBSET_IRREFL (pred_setTheory 326)
value PSUBSET_MEMBER (pred_setTheory 327)
value PSUBSET_PRS (quotient_pred_setTheory 46)
value PSUBSET_SING (pred_setTheory 328)
value PSUBSET_SUBSET_TRANS (pred_setTheory 329)
value psubset_tm (pred_setSyntax 26)
value PSUBSET_TRANS (pred_setTheory 330)
value PSUBSET_UNIV (pred_setTheory 331)
value PSUBSETR_def (quotient_pred_setTheory 11)
value PSUBSETR_RSP (quotient_pred_setTheory 45)
value PSUNTIL (Past_Temporal_LogicTheory 12)
value PSUNTIL_EXPRESSIVE (Past_Temporal_LogicTheory 33)
value PSWHEN (Past_Temporal_LogicTheory 13)
value PSWHEN_EXPRESSIVE (Past_Temporal_LogicTheory 34)
HOL Psyntax (help/Docfiles/Psyntax.adoc 0), structure Psyntax
HOL tautLib.PTAUT_CONV (help/Docfiles/tautLib.PTAUT_CONV.adoc 0), value PTAUT_CONV (tautLib 9)
HOL tautLib.PTAUT_PROVE (help/Docfiles/tautLib.PTAUT_PROVE.adoc 0), value PTAUT_PROVE (tautLib 11)
HOL tautLib.PTAUT_TAC (help/Docfiles/tautLib.PTAUT_TAC.adoc 0), value PTAUT_TAC (tautLib 10)
value ptfvs (Preterm 36)
value pth_an1 (satTheory 22)
value pth_an2 (satTheory 23)
value pth_ni1 (satTheory 24)
value pth_ni2 (satTheory 25)
value pth_nn (satTheory 26)
value pth_no1 (satTheory 27)
value pth_no2 (satTheory 28)
constructor ptm_c (DiskFilesHeader 6)
constructor ptm_v (DiskFilesHeader 6)
constructor ptop (DiskFilesHeader 5)
value ptree_11 (patriciaTheory 135)
HOL patriciaLib.PTREE_ADD_CONV (help/Docfiles/patriciaLib.PTREE_ADD_CONV.adoc 0), value PTREE_ADD_CONV (patriciaLib 58)
value ptree_Axiom (patriciaTheory 136)
value ptree_case_cong (patriciaTheory 137)
value ptree_case_def (patriciaTheory 32)
value ptree_compset (patriciaLib 76)
HOL patriciaLib.PTREE_CONV (help/Docfiles/patriciaLib.PTREE_CONV.adoc 0), value PTREE_CONV (patriciaLib 70)
HOL patriciaLib.PTREE_DEFN_CONV (help/Docfiles/patriciaLib.PTREE_DEFN_CONV.adoc 0), value PTREE_DEFN_CONV (patriciaLib 71)
HOL patriciaLib.PTREE_DEPTH_CONV (help/Docfiles/patriciaLib.PTREE_DEPTH_CONV.adoc 0), value PTREE_DEPTH_CONV (patriciaLib 61)
value ptree_distinct (patriciaTheory 138)
value PTREE_EQ (patriciaTheory 102)
HOL patriciaLib.PTREE_EVERY_LEAF_CONV (help/Docfiles/patriciaLib.PTREE_EVERY_LEAF_CONV.adoc 0), value PTREE_EVERY_LEAF_CONV (patriciaLib 63)
HOL patriciaLib.PTREE_EXISTS_LEAF_CONV (help/Docfiles/patriciaLib.PTREE_EXISTS_LEAF_CONV.adoc 0), value PTREE_EXISTS_LEAF_CONV (patriciaLib 64)
value PTREE_EXTENSION (patriciaTheory 103)
HOL patriciaLib.PTREE_IN_PTREE_CONV (help/Docfiles/patriciaLib.PTREE_IN_PTREE_CONV.adoc 0), value PTREE_IN_PTREE_CONV (patriciaLib 65)
value ptree_induction (patriciaTheory 139)
HOL patriciaLib.PTREE_INSERT_PTREE_CONV (help/Docfiles/patriciaLib.PTREE_INSERT_PTREE_CONV.adoc 0), value PTREE_INSERT_PTREE_CONV (patriciaLib 67)
HOL patriciaLib.PTREE_IS_PTREE_CONV (help/Docfiles/patriciaLib.PTREE_IS_PTREE_CONV.adoc 0), value PTREE_IS_PTREE_CONV (patriciaLib 66)
value ptree_nchotomy (patriciaTheory 140)
value ptree_new_defn_depth (patriciaLib 73)
value ptree_of_ints (patriciaLib 40)
value ptree_of_list (patriciaLib 29)
value ptree_of_nums (patriciaLib 31)
value PTREE_OF_NUMSET_CONV (patriciaLib 68)
value PTREE_OF_NUMSET_def (patriciaTheory 24)
value PTREE_OF_NUMSET_DELETE (patriciaTheory 104)
value PTREE_OF_NUMSET_EMPTY (patriciaTheory 105)
value PTREE_OF_NUMSET_INSERT (patriciaTheory 106)
value PTREE_OF_NUMSET_INSERT_EMPTY (patriciaTheory 107)
value PTREE_OF_NUMSET_IS_PTREE (patriciaTheory 108)
value PTREE_OF_NUMSET_IS_PTREE_EMPTY (patriciaTheory 109)
value PTREE_OF_NUMSET_NUMSET_OF_PTREE (patriciaTheory 110)
value ptree_of_numset_tm (patriciaSyntax 28)
value PTREE_OF_NUMSET_UNION (patriciaTheory 111)
value ptree_of_strings (patriciaLib 49)
value PTREE_OF_STRINGSET_def (patricia_castsTheory 22)
value ptree_of_stringset_tm (patricia_castsSyntax 38)
value PTREE_OF_WORDSET_def (patricia_castsTheory 23)
value ptree_of_wordset_tm (patricia_castsSyntax 26)
HOL patriciaLib.PTREE_PEEK_CONV (help/Docfiles/patriciaLib.PTREE_PEEK_CONV.adoc 0), value PTREE_PEEK_CONV (patriciaLib 57)
HOL patriciaLib.PTREE_REMOVE_CONV (help/Docfiles/patriciaLib.PTREE_REMOVE_CONV.adoc 0), value PTREE_REMOVE_CONV (patriciaLib 59)
HOL patriciaLib.PTREE_SIZE_CONV (help/Docfiles/patriciaLib.PTREE_SIZE_CONV.adoc 0), value PTREE_SIZE_CONV (patriciaLib 60)
value ptree_size_def (patriciaTheory 33)
HOL patriciaLib.PTREE_TRANSFORM_CONV (help/Docfiles/patriciaLib.PTREE_TRANSFORM_CONV.adoc 0), value PTREE_TRANSFORM_CONV (patriciaLib 62)
value PTREE_TRAVERSE_EQ (patriciaTheory 112)
value ptree_TY_DEF (patriciaTheory 31)
constructor ptv (DiskFilesHeader 5)
value ptype_of (Preterm 31)
value PULL_EXISTS (boolTheory 143)
value PULL_FORALL (boolTheory 144)
value punct (mlibParser 61)
value PUNTIL (Past_Temporal_LogicTheory 14)
value PUNTIL_EXPRESSIVE (Past_Temporal_LogicTheory 35)
constructor Pure (RW 54)
HOL Rewrite.PURE_ASM_REWRITE_RULE (help/Docfiles/Rewrite.PURE_ASM_REWRITE_RULE.adoc 0), value PURE_ASM_REWRITE_RULE (Ho_Rewrite 24), value PURE_ASM_REWRITE_RULE (Rewrite 33)
HOL Rewrite.PURE_ASM_REWRITE_TAC (help/Docfiles/Rewrite.PURE_ASM_REWRITE_TAC.adoc 0), value PURE_ASM_REWRITE_TAC (Ho_Rewrite 33), value PURE_ASM_REWRITE_TAC (Rewrite 44)
value PURE_ASM_RW_RULE (RW 88)
value PURE_ASM_RW_TAC (RW 102)
value PURE_CASE_SIMP_CONV (BasicProvers 70)
HOL BasicProvers.PURE_CASE_TAC (help/Docfiles/BasicProvers.PURE_CASE_TAC.adoc 0), value PURE_CASE_TAC (BasicProvers 67)
value PURE_CNF_CONV (normalForms 122)
value PURE_DEF_CNF_CONV (defCNF 37), value PURE_DEF_CNF_CONV (normalForms 165)
value PURE_DEF_CNF_VECTOR_CONV (defCNF 58)
constructor Pure_equality (mlibCanon 37)
value pure_fix (mlibModel 19)
value PURE_FULL_CASE_TAC (BasicProvers 68)
value pure_goal (Cooper 4), value pure_goal (CooperShell 5)
HOL listLib.PURE_LIST_CONV (help/Docfiles/listLib.PURE_LIST_CONV.adoc 0)
value PURE_MATCH_MP (totoTacs 11)
value PURE_NNF_CONV (normalForms 79)
value PURE_NNF_CONV' (normalForms 78)
HOL Rewrite.PURE_ONCE_ASM_REWRITE_RULE (help/Docfiles/Rewrite.PURE_ONCE_ASM_REWRITE_RULE.adoc 0), value PURE_ONCE_ASM_REWRITE_RULE (Ho_Rewrite 26), value PURE_ONCE_ASM_REWRITE_RULE (Rewrite 35)
HOL Rewrite.PURE_ONCE_ASM_REWRITE_TAC (help/Docfiles/Rewrite.PURE_ONCE_ASM_REWRITE_TAC.adoc 0), value PURE_ONCE_ASM_REWRITE_TAC (Ho_Rewrite 35), value PURE_ONCE_ASM_REWRITE_TAC (Rewrite 47)
value PURE_ONCE_ASM_RW_RULE (RW 90)
value PURE_ONCE_ASM_RW_TAC (RW 104)
HOL Rewrite.PURE_ONCE_REWRITE_CONV (help/Docfiles/Rewrite.PURE_ONCE_REWRITE_CONV.adoc 0), value PURE_ONCE_REWRITE_CONV (Ho_Rewrite 17), value PURE_ONCE_REWRITE_CONV (Rewrite 27)
HOL Rewrite.PURE_ONCE_REWRITE_RULE (help/Docfiles/Rewrite.PURE_ONCE_REWRITE_RULE.adoc 0), value PURE_ONCE_REWRITE_RULE (Ho_Rewrite 22), value PURE_ONCE_REWRITE_RULE (Rewrite 31)
HOL Rewrite.PURE_ONCE_REWRITE_TAC (help/Docfiles/Rewrite.PURE_ONCE_REWRITE_TAC.adoc 0), value PURE_ONCE_REWRITE_TAC (Ho_Rewrite 31), value PURE_ONCE_REWRITE_TAC (Rewrite 41)
value PURE_ONCE_RW_CONV (RW 76)
value PURE_ONCE_RW_RULE (RW 84)
value PURE_ONCE_RW_TAC (RW 98)
value PURE_REAL_ARITH_TAC (RealArith 6), value PURE_REAL_ARITH_TAC (realLib 8)
HOL Rewrite.PURE_REWRITE_CONV (help/Docfiles/Rewrite.PURE_REWRITE_CONV.adoc 0), value PURE_REWRITE_CONV (Ho_Rewrite 14), value PURE_REWRITE_CONV (Rewrite 25)
HOL Rewrite.PURE_REWRITE_RULE (help/Docfiles/Rewrite.PURE_REWRITE_RULE.adoc 0), value PURE_REWRITE_RULE (Ho_Rewrite 20), value PURE_REWRITE_RULE (Rewrite 29)
HOL Rewrite.PURE_REWRITE_TAC (help/Docfiles/Rewrite.PURE_REWRITE_TAC.adoc 0), value PURE_REWRITE_TAC (Ho_Rewrite 29), value PURE_REWRITE_TAC (Rewrite 38)
value PURE_RW_CONV (RW 74)
value PURE_RW_RULE (RW 82)
value PURE_RW_TAC (RW 96)
HOL pureSimps.pure_ss (help/Docfiles/pureSimps.pure_ss.adoc 0), value PURE_ss (pureSimps 2), value pure_ss (bossLib 59), value pure_ss (pureSimps 3)
value pure_stateful_qp (quantHeuristicsLib 64), value pure_stateful_qp (quantHeuristicsLibBase 168), value pure_stateful_qp (quantHeuristicsLibParameters 6)
value PURE_TOP_CASE_TAC (BasicProvers 66)
value purecnf (mlibCanon 30)
structure pureSimps
value push_in_exists (CooperSyntax 63)
value push_in_exists_and_follow (CooperSyntax 76)
value push_in_stk (compute_rules 18)
value push_lam_in_stk (compute_rules 21)
value push_one_exists_over_many_disjs (CooperSyntax 62)
value put_accessors (TypeBasePure 76)
value put_destructors (TypeBasePure 78)
value put_encode (TypeBasePure 73)
value put_fields (TypeBasePure 75)
value put_induction (TypeBasePure 71)
value put_lift (TypeBasePure 74)
value put_nchotomy (TypeBasePure 69)
value put_recognizers (TypeBasePure 79)
value put_simpls (TypeBasePure 70)
value put_size (TypeBasePure 72)
value put_updates (TypeBasePure 77)
constructor Pvar (clauses 4)
HOL pairSyntax.pvariant (help/Docfiles/pairSyntax.pvariant.adoc 0), value pvariant (PairRules 116)
value pwd (Portable 52)
value PWHEN (Past_Temporal_LogicTheory 15)
value PWHEN_EXPRESSIVE (Past_Temporal_LogicTheory 36)
structure Q
value Q_COUNTABLE (extrealTheory 101)
value Q_DENSE_IN_R (extrealTheory 102)
value Q_DENSE_IN_R_LEMMA (extrealTheory 103)
value Q_INFINITE (extrealTheory 104)
value Q_not_infty (extrealTheory 105)
value Q_RESQ_EXISTS_TAC (res_quanTools 76)
value Q_RESQ_HALF_ISPEC (res_quanTools 81)
value Q_RESQ_HALF_ISPECL (res_quanTools 82)
value Q_RESQ_HALF_SPEC (res_quanTools 77)
value Q_RESQ_HALF_SPECL (res_quanTools 78)
value Q_RESQ_ISPEC (res_quanTools 83)
value Q_RESQ_ISPECL (res_quanTools 84)
value Q_RESQ_SPEC (res_quanTools 79)
value Q_RESQ_SPECL (res_quanTools 80)
value Q_set_def (extrealTheory 6)
HOL Tactical.Q_TAC (help/Docfiles/Tactical.Q_TAC.adoc 0), value Q_TAC (Tactical 86)
value qabbrev_tac (bossLib 161), value qabbrev_tac (lcsymtacs 63)
value qbf_prenex_conv (QbfConv 21)
structure QbfConv
structure qbuf, type qbuf (parse_term 3), type qbuf (qbuf 3)
HOL ConseqConv.QCHANGED_CONSEQ_CONV (help/Docfiles/ConseqConv.QCHANGED_CONSEQ_CONV.adoc 0), value QCHANGED_CONSEQ_CONV (ConseqConv 202)
HOL Conv.QCHANGED_CONV (help/Docfiles/Conv.QCHANGED_CONV.adoc 0), value QCHANGED_CONV (Conv 36)
HOL Conv.QCONV (help/Docfiles/Conv.QCONV.adoc 0), value QCONV (Conv 6)
value qexists_tac (bossLib 144), value qexists_tac (lcsymtacs 42)
value qho_match_abbrev_tac (bossLib 153), value qho_match_abbrev_tac (lcsymtacs 51)
HOL bossLib.QI_ss (help/Docfiles/bossLib.QI_ss.adoc 0), value QI_ss (bossLib 66)
HOL bossLib.QI_TAC (help/Docfiles/bossLib.QI_TAC.adoc 0), value QI_TAC (bossLib 103)
value qid_spec_tac (bossLib 146), value qid_spec_tac (lcsymtacs 44)
constructor QIDENT (Absyn 12), constructor QIdent (term_tokens 3)
value qk_numeralOrd (totoTheory 127)
value qk_numOrd_def (totoTheory 31)
value qk_numto (totoTheory 32)
value qk_numto_CONV (totoTacs 20)
value qmatch_abbrev_tac (bossLib 152), value qmatch_abbrev_tac (lcsymtacs 50)
value qmatch_asmsub_rename_tac (bossLib 157), value qmatch_asmsub_rename_tac (lcsymtacs 55)
value qmatch_assum_abbrev_tac (bossLib 155), value qmatch_assum_abbrev_tac (lcsymtacs 53)
value qmatch_assum_rename_tac (bossLib 156), value qmatch_assum_rename_tac (lcsymtacs 54)
value qmatch_goalsub_rename_tac (bossLib 158), value qmatch_goalsub_rename_tac (lcsymtacs 56)
value qmatch_rename_tac (bossLib 154), value qmatch_rename_tac (lcsymtacs 52)
value qp_to_heuristic (quantHeuristicsLibBase 195)
value qpat_abbrev_tac (bossLib 151), value qpat_abbrev_tac (lcsymtacs 49)
value qpat_assum (bossLib 150), value qpat_assum (lcsymtacs 48)
value QREWRITE (mlibClause 65)
constructor qsEXISTS (CooperSyntax 27)
value QSORT3_curried_DEF (sortingTheory 10)
value QSORT3_DEF (sortingTheory 98)
value QSORT3_IND (sortingTheory 99)
value QSORT3_MEM (sortingTheory 100)
value QSORT3_SORTED (sortingTheory 101)
value QSORT3_SORTS (sortingTheory 102)
value QSORT3_SPLIT (sortingTheory 103)
value QSORT3_STABLE (sortingTheory 104)
value qsort3_tm (sortingSyntax 9)
value QSORT3_tupled_primitive_DEF (sortingTheory 11)
value QSORT_curried_DEF (sortingTheory 12)
value QSORT_DEF (sortingTheory 105)
value QSORT_eq_if_PERM (sortingTheory 111)
value QSORT_IND (sortingTheory 106)
value QSORT_MEM (sortingTheory 107)
value QSORT_MEM_EQ (patriciaTheory 113)
value QSORT_PERM (sortingTheory 108)
value QSORT_SORTED (sortingTheory 109)
value QSORT_SORTS (sortingTheory 110)
value qsort_tm (sortingSyntax 10)
value QSORT_tupled_primitive_DEF (sortingTheory 13)
value qspec_tac (bossLib 147), value qspec_tac (lcsymtacs 45)
value qspec_then (bossLib 148), value qspec_then (lcsymtacs 46)
value qspecl_then (bossLib 149), value qspecl_then (lcsymtacs 47)
type qstatus (CooperSyntax 27)
value qsuff_tac (bossLib 145), value qsuff_tac (lcsymtacs 43)
constructor qsUNIV (CooperSyntax 27)
constructor QTypeIdent (type_tokens 2)
HOL Lib.quadruple (help/Docfiles/Lib.quadruple.adoc 0), value quadruple (Lib 107)
HOL Lib.quadruple_of_list (help/Docfiles/Lib.quadruple_of_list.adoc 0), value quadruple_of_list (Lib 108)
value QUANT_ABBREV_CONV (quantHeuristicsLibAbbrev 10)
value QUANT_ABBREV_TAC (quantHeuristicsLibAbbrev 11)
HOL ConseqConv.QUANT_CONSEQ_CONV (help/Docfiles/ConseqConv.QUANT_CONSEQ_CONV.adoc 0), value QUANT_CONSEQ_CONV (ConseqConv 210)
HOL Conv.QUANT_CONV (help/Docfiles/Conv.QUANT_CONV.adoc 0), value QUANT_CONV (Conv 20)
type quant_fun_remove_arg (quantHeuristicsLibFunRemove 5)
value QUANT_FUN_REMOVE_CONV (quantHeuristicsLib 149), value QUANT_FUN_REMOVE_CONV (quantHeuristicsLibFunRemove 7)
value QUANT_FUN_REMOVE_ss (quantHeuristicsLib 150), value QUANT_FUN_REMOVE_ss (quantHeuristicsLibFunRemove 8)
type quant_heuristic (quantHeuristicsLib 5), type quant_heuristic (quantHeuristicsLibBase 127)
type quant_heuristic_base (quantHeuristicsLibBase 126)
type quant_heuristic_cache (quantHeuristicsLibBase 128)
HOL quantHeuristicsLib.QUANT_INST_ss (help/Docfiles/quantHeuristicsLib.QUANT_INST_ss.adoc 0), value QUANT_INST_ss (quantHeuristicsLib 12), value QUANT_INST_ss (quantHeuristicsLibBase 240)
value QUANT_INSTANTIATE_CONSEQ_CONV (quantHeuristicsLib 35), value QUANT_INSTANTIATE_CONSEQ_CONV (quantHeuristicsLibBase 218)
value QUANT_INSTANTIATE_CONSEQ_TAC (quantHeuristicsLib 21), value QUANT_INSTANTIATE_CONSEQ_TAC (quantHeuristicsLibBase 220)
HOL quantHeuristicsLib.QUANT_INSTANTIATE_CONV (help/Docfiles/quantHeuristicsLib.QUANT_INSTANTIATE_CONV.adoc 0), value QUANT_INSTANTIATE_CONV (quantHeuristicsLib 24), value QUANT_INSTANTIATE_CONV (quantHeuristicsLibBase 203)
value QUANT_INSTANTIATE_HEURISTIC___cases (quantHeuristicsLibBase 187)
value QUANT_INSTANTIATE_HEURISTIC___CONV (quantHeuristicsLibBase 183)
value QUANT_INSTANTIATE_HEURISTIC___EQUATION_distinct (quantHeuristicsLibBase 184)
value QUANT_INSTANTIATE_HEURISTIC___EQUATION_two_cases (quantHeuristicsLibBase 185)
value QUANT_INSTANTIATE_HEURISTIC___GIVEN_INSTANTIATION (quantHeuristicsLibBase 188)
value QUANT_INSTANTIATE_HEURISTIC___max_rec_depth (quantHeuristicsLibBase 192)
exception QUANT_INSTANTIATE_HEURISTIC___no_guess_exp (quantHeuristicsLibBase 123)
value QUANT_INSTANTIATE_HEURISTIC___one_case (quantHeuristicsLibBase 186)
value QUANT_INSTANTIATE_HEURISTIC___QUANT (quantHeuristicsLibBase 190)
value QUANT_INSTANTIATE_HEURISTIC___STRENGTHEN_WEAKEN (quantHeuristicsLibBase 189)
HOL quantHeuristicsLib.QUANT_INSTANTIATE_TAC (help/Docfiles/quantHeuristicsLib.QUANT_INSTANTIATE_TAC.adoc 0), value QUANT_INSTANTIATE_TAC (quantHeuristicsLib 17), value QUANT_INSTANTIATE_TAC (quantHeuristicsLibBase 201)
type quant_param (quantHeuristicsLib 4), type quant_param (quantHeuristicsLibBase 136)
value QUANT_SIMP_CONV (quantHeuristicsLibBase 18), value QUANT_SIMP_CONV (quantHeuristicsTools 16)
HOL quantHeuristicsLib.QUANT_TAC (help/Docfiles/quantHeuristicsLib.QUANT_TAC.adoc 0), value QUANT_TAC (quantHeuristicsLib 40), value QUANT_TAC (quantHeuristicsLibBase 229)
value quantHeuristics_grammars (quantHeuristicsTheory 93)
structure quantHeuristicsLib
structure quantHeuristicsLibAbbrev
structure quantHeuristicsLibBase
structure quantHeuristicsLibFunRemove
structure quantHeuristicsLibParameters
structure quantHeuristicsTheory
structure quantHeuristicsTools
value QUANTIFY_CONDITIONS (Cond_rewr 42)
type Query (folTools 52), type Query (metisTools 21), value query (mlibMetis 46)
value quick_cst_elim (CooperSyntax 54)
value qunabbrev_tac (bossLib 162), value qunabbrev_tac (lcsymtacs 64)
value quot (Arbintcore 24), value quot (mlibArbint 26), value quot (mlibOmegaint 23)
value quot_tm (intSyntax 15)
type quotation (Abbrev 18), type quotation (Absyn 4), type quotation (HOLPP 23), type quotation (TermParse 9), type quotation (mlibParser 64), type quotation (mlibTerm 10)
value quotation_parser (mlibParser 65)
HOL Lib.quote (help/Docfiles/Lib.quote.adoc 0), constructor QUOTE (HOLPP 22), value quote (Lib 109)
value quote_grammars (quoteTheory 39)
structure quoteTheory
structure quotient
value QUOTIENT_ABS_REP (quotientTheory 70)
value QUOTIENT_def (quotientTheory 10)
value quotient_grammars (quotientTheory 107)
value quotient_list_grammars (quotient_listTheory 38)
structure quotient_listTheory
value quotient_normal (extrealTheory 334)
value quotient_option_grammars (quotient_optionTheory 21)
structure quotient_optionTheory
value quotient_pair_grammars (quotient_pairTheory 27)
structure quotient_pairTheory
value quotient_pred_set_grammars (quotient_pred_setTheory 56)
structure quotient_pred_setTheory
value QUOTIENT_REL (quotientTheory 71)
value QUOTIENT_REL_ABS (quotientTheory 72)
value QUOTIENT_REL_ABS_EQ (quotientTheory 73)
value QUOTIENT_REL_REP (quotientTheory 74)
value QUOTIENT_REP_ABS (quotientTheory 75)
value QUOTIENT_REP_REFL (quotientTheory 76)
value quotient_sum_grammars (quotient_sumTheory 25)
structure quotient_sumTheory
value QUOTIENT_SYM (quotientTheory 77)
value QUOTIENT_TRANS (quotientTheory 78)
structure quotientTheory
value quotrem (Arbintcore 27), value quotrem (mlibArbint 29)
value qx_choose_then (bossLib 143), value qx_choose_then (lcsymtacs 41)
value qx_choosel_then (bossLib 165), value qx_choosel_then (lcsymtacs 72)
value qx_gen_tac (bossLib 142), value qx_gen_tac (lcsymtacs 40)
value qx_genl_tac (bossLib 164), value qx_genl_tac (lcsymtacs 71)
HOL proofManagerLib.r (help/Docfiles/proofManagerLib.r.adoc 0), constructor R (GenPolyCanon 4), value R (proofManagerLib 56), value r (EvalRef 2), value r (proofManagerLib 55)
value r001 (HolSmtTheory 70)
value r002 (HolSmtTheory 71)
value r003 (HolSmtTheory 72)
value r004 (HolSmtTheory 73)
value r005 (HolSmtTheory 74)
value r006 (HolSmtTheory 75)
value r007 (HolSmtTheory 76)
value r008 (HolSmtTheory 77)
value r009 (HolSmtTheory 78)
value r010 (HolSmtTheory 79)
value r011 (HolSmtTheory 80)
value r012 (HolSmtTheory 81)
value r013 (HolSmtTheory 82)
value r014 (HolSmtTheory 83)
value r015 (HolSmtTheory 84)
value r016 (HolSmtTheory 85)
value r017 (HolSmtTheory 86)
value r018 (HolSmtTheory 87)
value r019 (HolSmtTheory 88)
value r020 (HolSmtTheory 89)
value r021 (HolSmtTheory 90)
value r022 (HolSmtTheory 91)
value r023 (HolSmtTheory 92)
value r024 (HolSmtTheory 93)
value r025 (HolSmtTheory 94)
value r026 (HolSmtTheory 95)
value r027 (HolSmtTheory 96)
value r028 (HolSmtTheory 97)
value r029 (HolSmtTheory 98)
value r030 (HolSmtTheory 99)
value r031 (HolSmtTheory 100)
value r032 (HolSmtTheory 101)
value r033 (HolSmtTheory 102)
value r034 (HolSmtTheory 103)
value r035 (HolSmtTheory 104)
value r036 (HolSmtTheory 105)
value r037 (HolSmtTheory 106)
value r038 (HolSmtTheory 107)
value r039 (HolSmtTheory 108)
value r040 (HolSmtTheory 109)
value r041 (HolSmtTheory 110)
value r042 (HolSmtTheory 111)
value r043 (HolSmtTheory 112)
value r044 (HolSmtTheory 113)
value r045 (HolSmtTheory 114)
value r046 (HolSmtTheory 115)
value r047 (HolSmtTheory 116)
value r048 (HolSmtTheory 117)
value r049 (HolSmtTheory 118)
value r050 (HolSmtTheory 119)
value r051 (HolSmtTheory 120)
value r052 (HolSmtTheory 121)
value r053 (HolSmtTheory 122)
value r054 (HolSmtTheory 123)
value r055 (HolSmtTheory 124)
value r056 (HolSmtTheory 125)
value r057 (HolSmtTheory 126)
value r058 (HolSmtTheory 127)
value r059 (HolSmtTheory 128)
value r060 (HolSmtTheory 129)
value r061 (HolSmtTheory 130)
value r062 (HolSmtTheory 131)
value r063 (HolSmtTheory 132)
value r064 (HolSmtTheory 133)
value r065 (HolSmtTheory 134)
value r066 (HolSmtTheory 135)
value r067 (HolSmtTheory 136)
value r068 (HolSmtTheory 137)
value r069 (HolSmtTheory 138)
value r070 (HolSmtTheory 139)
value r071 (HolSmtTheory 140)
value r072 (HolSmtTheory 141)
value r073 (HolSmtTheory 142)
value r074 (HolSmtTheory 143)
value r075 (HolSmtTheory 144)
value r076 (HolSmtTheory 145)
value r077 (HolSmtTheory 146)
value r078 (HolSmtTheory 147)
value r079 (HolSmtTheory 148)
value r080 (HolSmtTheory 149)
value r081 (HolSmtTheory 150)
value r082 (HolSmtTheory 151)
value r083 (HolSmtTheory 152)
value r084 (HolSmtTheory 153)
value r085 (HolSmtTheory 154)
value r086 (HolSmtTheory 155)
value r087 (HolSmtTheory 156)
value r088 (HolSmtTheory 157)
value r089 (HolSmtTheory 158)
value r090 (HolSmtTheory 159)
value r091 (HolSmtTheory 160)
value r092 (HolSmtTheory 161)
value r093 (HolSmtTheory 162)
value r094 (HolSmtTheory 163)
value r095 (HolSmtTheory 164)
value r096 (HolSmtTheory 165)
value r097 (HolSmtTheory 166)
value r098 (HolSmtTheory 167)
value r099 (HolSmtTheory 168)
value r100 (HolSmtTheory 169)
value r101 (HolSmtTheory 170)
value r102 (HolSmtTheory 171)
value r103 (HolSmtTheory 172)
value r104 (HolSmtTheory 173)
value r105 (HolSmtTheory 174)
value r106 (HolSmtTheory 175)
value r107 (HolSmtTheory 176)
value r108 (HolSmtTheory 177)
value r109 (HolSmtTheory 178)
value r110 (HolSmtTheory 179)
value r111 (HolSmtTheory 180)
value r112 (HolSmtTheory 181)
value r113 (HolSmtTheory 182)
value r114 (HolSmtTheory 183)
value r115 (HolSmtTheory 184)
value r116 (HolSmtTheory 185)
value r117 (HolSmtTheory 186)
value r118 (HolSmtTheory 187)
value r119 (HolSmtTheory 188)
value r120 (HolSmtTheory 189)
value r121 (HolSmtTheory 190)
value r122 (HolSmtTheory 191)
value r123 (HolSmtTheory 192)
value r124 (HolSmtTheory 193)
value r125 (HolSmtTheory 194)
value r126 (HolSmtTheory 195)
value r127 (HolSmtTheory 196)
value r128 (HolSmtTheory 197)
value r129 (HolSmtTheory 198)
value r130 (HolSmtTheory 199)
value r131 (HolSmtTheory 200)
value r132 (HolSmtTheory 201)
value r133 (HolSmtTheory 202)
value r134 (HolSmtTheory 203)
value r135 (HolSmtTheory 204)
value r136 (HolSmtTheory 205)
value r137 (HolSmtTheory 206)
value r138 (HolSmtTheory 207)
value r139 (HolSmtTheory 208)
value r140 (HolSmtTheory 209)
value r141 (HolSmtTheory 210)
value r142 (HolSmtTheory 211)
value r143 (HolSmtTheory 212)
value r144 (HolSmtTheory 213)
value r145 (HolSmtTheory 214)
value r146 (HolSmtTheory 215)
value r147 (HolSmtTheory 216)
value r148 (HolSmtTheory 217)
value r149 (HolSmtTheory 218)
value r150 (HolSmtTheory 219)
value r151 (HolSmtTheory 220)
value r152 (HolSmtTheory 221)
value r153 (HolSmtTheory 222)
value r154 (HolSmtTheory 223)
value r155 (HolSmtTheory 224)
value r156 (HolSmtTheory 225)
value r157 (HolSmtTheory 226)
value r158 (HolSmtTheory 227)
value r159 (HolSmtTheory 228)
value r160 (HolSmtTheory 229)
value r161 (HolSmtTheory 230)
value r162 (HolSmtTheory 231)
value r163 (HolSmtTheory 232)
value r164 (HolSmtTheory 233)
value r165 (HolSmtTheory 234)
value r166 (HolSmtTheory 235)
value r167 (HolSmtTheory 236)
value r168 (HolSmtTheory 237)
value r169 (HolSmtTheory 238)
value r170 (HolSmtTheory 239)
value r171 (HolSmtTheory 240)
value r172 (HolSmtTheory 241)
value r173 (HolSmtTheory 242)
value r174 (HolSmtTheory 243)
value r175 (HolSmtTheory 244)
value r176 (HolSmtTheory 245)
value r177 (HolSmtTheory 246)
value r178 (HolSmtTheory 247)
value r179 (HolSmtTheory 248)
value r180 (HolSmtTheory 249)
value r181 (HolSmtTheory 250)
value r182 (HolSmtTheory 251)
value r183 (HolSmtTheory 252)
value r184 (HolSmtTheory 253)
value r185 (HolSmtTheory 254)
value r186 (HolSmtTheory 255)
value r187 (HolSmtTheory 256)
value r188 (HolSmtTheory 257)
value r189 (HolSmtTheory 258)
value r190 (HolSmtTheory 259)
value r191 (HolSmtTheory 260)
value r192 (HolSmtTheory 261)
value r193 (HolSmtTheory 262)
value r194 (HolSmtTheory 263)
value r195 (HolSmtTheory 264)
value r196 (HolSmtTheory 265)
value r197 (HolSmtTheory 266)
value r198 (HolSmtTheory 267)
value r199 (HolSmtTheory 268)
value r200 (HolSmtTheory 269)
value r201 (HolSmtTheory 270)
value r202 (HolSmtTheory 271)
value r203 (HolSmtTheory 272)
value r204 (HolSmtTheory 273)
value r205 (HolSmtTheory 274)
value r206 (HolSmtTheory 275)
value r207 (HolSmtTheory 276)
value r208 (HolSmtTheory 277)
value r209 (HolSmtTheory 278)
value r210 (HolSmtTheory 279)
value r211 (HolSmtTheory 280)
value r212 (HolSmtTheory 281)
value r213 (HolSmtTheory 282)
value r214 (HolSmtTheory 283)
value r215 (HolSmtTheory 284)
value r216 (HolSmtTheory 285)
value r217 (HolSmtTheory 286)
value r218 (HolSmtTheory 287)
value r219 (HolSmtTheory 288)
value r220 (HolSmtTheory 289)
value r221 (HolSmtTheory 290)
value r222 (HolSmtTheory 291)
value r223 (HolSmtTheory 292)
value r224 (HolSmtTheory 293)
value r225 (HolSmtTheory 294)
value r226 (HolSmtTheory 295)
value r227 (HolSmtTheory 296)
value r228 (HolSmtTheory 297)
value r229 (HolSmtTheory 298)
value r230 (HolSmtTheory 299)
value r231 (HolSmtTheory 300)
value r232 (HolSmtTheory 301)
value r233 (HolSmtTheory 302)
value r234 (HolSmtTheory 303)
value r235 (HolSmtTheory 304)
value r236 (HolSmtTheory 305)
value r237 (HolSmtTheory 306)
value r238 (HolSmtTheory 307)
value r239 (HolSmtTheory 308)
value r240 (HolSmtTheory 309)
value r241 (HolSmtTheory 310)
value r242 (HolSmtTheory 311)
value r243 (HolSmtTheory 312)
value r244 (HolSmtTheory 313)
value r245 (HolSmtTheory 314)
value r246 (HolSmtTheory 315)
value r247 (HolSmtTheory 316)
value r248 (HolSmtTheory 317)
value r249 (HolSmtTheory 318)
value r250 (HolSmtTheory 319)
value r251 (HolSmtTheory 320)
value r252 (HolSmtTheory 321)
value r253 (HolSmtTheory 322)
value r254 (HolSmtTheory 323)
value r255 (HolSmtTheory 324)
value r_canonical_sum_merge_def (ringNormTheory 11)
value r_canonical_sum_prod_def (ringNormTheory 12)
value r_canonical_sum_scalar2_def (ringNormTheory 13)
value r_canonical_sum_scalar3_def (ringNormTheory 14)
value r_canonical_sum_scalar_def (ringNormTheory 15)
value r_canonical_sum_simplify_def (ringNormTheory 16)
value r_ics_aux_def (ringNormTheory 17)
value r_interp_cs_def (ringNormTheory 18)
value r_interp_m_def (ringNormTheory 19)
value r_interp_sp_def (ringNormTheory 20)
value r_interp_vl_def (ringNormTheory 21)
value r_ivl_aux_def (ringNormTheory 22)
value r_monom_insert_def (ringNormTheory 23)
value r_spolynom_normalize_def (ringNormTheory 24)
value r_spolynom_simplify_def (ringNormTheory 25)
value r_varlist_insert_def (ringNormTheory 26)
value RADON_F_def (lebesgueTheory 5)
value RADON_F_integrals_def (lebesgueTheory 6)
value Radon_Nikodym (lebesgueTheory 35)
value Radon_Nikodym2 (lebesgueTheory 36)
HOL Feedback.Raise (help/Docfiles/Feedback.Raise.adoc 0), value Raise (Feedback 30)
HOL Term.rand (help/Docfiles/Term.rand.adoc 0), value RAND (RW 50), value rand (FinalTerm 52), value rand (boolSyntax 66)
HOL Conv.RAND_CONV (help/Docfiles/Conv.RAND_CONV.adoc 0), value RAND_CONV (Conv 11), value RAND_CONV (RJBConv 12)
value random_variable_def (probabilityTheory 20)
value range_def (set_relationTheory 25)
value range_to_rel_conv (set_relationTheory 103)
value ranged_bitstring_nchotomy (bitstringTheory 81)
value ranged_char_nchotomy (stringTheory 99)
value ranged_int_word_nchotomy (integer_wordTheory 49)
value ranged_word_nchotomy (wordsTheory 556)
value rangle (UnicodeChars 86)
type rat (Arbrat 3), type rat (Rationals 7), value RAT (ratTheory 32), value Rat (Rationals 9)
value RAT_0 (ratTheory 33), value rat_0 (ratTheory 184)
value rat_0_def (ratTheory 6)
value rat_0_tm (ratSyntax 7)
value RAT_0LEQ_NMR (ratTheory 34)
value RAT_0LES_0LEQ_ADD (ratTheory 35)
value RAT_0LES_0LES_ADD (ratTheory 36)
value RAT_0LES_NMR (ratTheory 37)
value RAT_1 (ratTheory 38), value rat_1 (ratTheory 185)
value rat_1_def (ratTheory 7)
value RAT_1_NOT_0 (ratTheory 39)
value rat_1_tm (ratSyntax 8)
value RAT_ABS_EQUIV (ratTheory 40)
value rat_ABS_REP_CLASS (ratTheory 186)
value RAT_ADD_ASSOC (ratTheory 41)
value RAT_ADD_CALCULATE (ratTheory 42)
value RAT_ADD_COMM (ratTheory 43)
value RAT_ADD_CONG (ratTheory 44)
value RAT_ADD_CONG1 (ratTheory 45)
value RAT_ADD_CONG2 (ratTheory 46)
value rat_add_def (ratTheory 9)
value RAT_ADD_LID (ratTheory 47)
value RAT_ADD_LINV (ratTheory 48)
value RAT_ADD_NUM_CALCULATE (ratTheory 49)
value RAT_ADD_ONE_ONE (ratTheory 50)
value RAT_ADD_RID (ratTheory 51)
value RAT_ADD_RINV (ratTheory 52)
value rat_add_tm (ratSyntax 19)
value RAT_ADDAC_CONV (ratLib 13)
value RAT_ADDAC_TAC (ratLib 18)
value RAT_ADDSUB_TAC (ratLib 22)
value RAT_AINV_0 (ratTheory 53)
value RAT_AINV_ADD (ratTheory 54)
value RAT_AINV_AINV (ratTheory 55)
value RAT_AINV_CALCULATE (ratTheory 56)
value RAT_AINV_CONG (ratTheory 57)
value rat_ainv_def (ratTheory 10)
value RAT_AINV_EQ (ratTheory 58)
value RAT_AINV_LES (ratTheory 59)
value RAT_AINV_LMUL (ratTheory 60)
value RAT_AINV_MINV (ratTheory 61)
value RAT_AINV_ONE_ONE (ratTheory 62)
value RAT_AINV_RMUL (ratTheory 63)
value RAT_AINV_SUB (ratTheory 64)
value rat_ainv_tm (ratSyntax 16)
value RAT_BASIC_ARITH_CONV (ratLib 31)
value RAT_BASIC_ARITH_TAC (ratLib 38)
value rat_basic_rewrites (ratLib 42)
value rat_bijections (ratTheory 11)
value RAT_CALC_CONV (ratLib 12)
value RAT_CALC_TAC (ratLib 25)
value RAT_CALCEQ_TAC (ratLib 26)
value RAT_CALCTERM_TAC (ratLib 23)
value rat_cons_def (ratTheory 12)
value RAT_CONS_TO_NUM (ratTheory 65)
value rat_def (ratTheory 188)
value RAT_DENSE_THM (ratTheory 66)
exception Rat_div (Rationals 6), value rat_div (Rationals 16)
value RAT_DIV_CALCULATE (ratTheory 67)
value RAT_DIV_CONG (ratTheory 68)
value RAT_DIV_CONG1 (ratTheory 69)
value RAT_DIV_CONG2 (ratTheory 70)
value rat_div_def (ratTheory 13)
value RAT_DIV_MULMINV (ratTheory 71)
value rat_div_tm (ratSyntax 22)
value rat_dnm_def (ratTheory 14)
value rat_dnm_tm (ratSyntax 12)
value RAT_ELIMINATE_MINV_CONV (ratLib 33)
value RAT_ELIMINATE_MINV_EQ_CONV (ratLib 32)
value RAT_ELIMINATE_MINV_TAC (ratLib 39)
value RAT_EQ (ratTheory 72)
value RAT_EQ0_NMR (ratTheory 73)
value RAT_EQ_0SUB (ratTheory 82)
value RAT_EQ_AINV (ratTheory 83)
value RAT_EQ_ALT (ratTheory 84)
value RAT_EQ_CALCULATE (ratTheory 85)
value RAT_EQ_CONV (ratLib 11)
value RAT_EQ_LADD (ratTheory 86)
value RAT_EQ_LMUL (ratTheory 87)
value RAT_EQ_LMUL_TAC (ratLib 20)
value RAT_EQ_NUM_CALCULATE (ratTheory 88)
value RAT_EQ_RADD (ratTheory 89)
value RAT_EQ_RMUL (ratTheory 90)
value RAT_EQ_RMUL_TAC (ratLib 21)
value RAT_EQ_SUB0 (ratTheory 91)
value RAT_EQ_TAC (ratLib 17)
value RAT_EQUIV (ratTheory 74)
value RAT_EQUIV_ALT (ratTheory 75)
value rat_equiv_def (ratTheory 15)
value RAT_EQUIV_NMR_GTZ_IFF (ratTheory 76)
value RAT_EQUIV_NMR_LTZ_IFF (ratTheory 77)
value RAT_EQUIV_NMR_Z_IFF (ratTheory 78)
value RAT_EQUIV_REF (ratTheory 79)
value RAT_EQUIV_SYM (ratTheory 80)
value RAT_EQUIV_TRANS (ratTheory 81)
exception Rat_form (Rationals 4)
value rat_geq_def (ratTheory 16)
value rat_geq_tm (ratSyntax 27)
value rat_grammars (ratTheory 193)
value rat_gre_def (ratTheory 17)
value rat_gre_tm (ratSyntax 25)
value rat_interp_p_def (ratRingTheory 5)
exception Rat_inv (Rationals 5), value rat_inv (Rationals 12)
value RAT_IS_RING (ratRingTheory 26)
value RAT_LDISTRIB (ratTheory 92)
value RAT_LDIV_EQ (ratTheory 93)
value RAT_LDIV_LES_NEG (ratTheory 94)
value RAT_LDIV_LES_POS (ratTheory 95)
value RAT_LEQ0_NMR (ratTheory 96)
value RAT_LEQ_ANTISYM (ratTheory 97)
value rat_leq_def (ratTheory 18)
value RAT_LEQ_LES (ratTheory 98)
value RAT_LEQ_LES_TRANS (ratTheory 99)
value RAT_LEQ_REF (ratTheory 100)
value rat_leq_tm (ratSyntax 26)
value RAT_LEQ_TRANS (ratTheory 101)
value RAT_LES0_LEQ0_ADD (ratTheory 102)
value RAT_LES0_LES0_ADD (ratTheory 103)
value RAT_LES0_NMR (ratTheory 104)
value RAT_LES_01 (ratTheory 105)
value RAT_LES_0SUB (ratTheory 106)
value RAT_LES_AINV (ratTheory 107)
value RAT_LES_ANTISYM (ratTheory 108)
value RAT_LES_CALCULATE (ratTheory 109)
value rat_les_def (ratTheory 19)
value RAT_LES_IMP_LEQ (ratTheory 110)
value RAT_LES_IMP_NEQ (ratTheory 111)
value RAT_LES_LADD (ratTheory 112)
value RAT_LES_LEQ (ratTheory 113)
value RAT_LES_LEQ2 (ratTheory 114)
value RAT_LES_LEQ_TRANS (ratTheory 115)
value RAT_LES_LMUL_NEG (ratTheory 116)
value RAT_LES_LMUL_POS (ratTheory 117)
value RAT_LES_RADD (ratTheory 118)
value RAT_LES_REF (ratTheory 119)
value RAT_LES_RMUL_NEG (ratTheory 120)
value RAT_LES_RMUL_POS (ratTheory 121)
value RAT_LES_SUB0 (ratTheory 122)
value rat_les_tm (ratSyntax 24)
value RAT_LES_TOTAL (ratTheory 123)
value RAT_LES_TRANS (ratTheory 124)
value rat_less (Rationals 23)
value RAT_LSUB_EQ (ratTheory 125)
value RAT_LSUB_LES (ratTheory 126)
value rat_minus (Rationals 14)
value RAT_MINV_CALCULATE (ratTheory 127)
value RAT_MINV_CONG (ratTheory 128)
value rat_minv_def (ratTheory 20)
value RAT_MINV_LES (ratTheory 129)
value rat_minv_tm (ratSyntax 17)
value RAT_MUL_ASSOC (ratTheory 130)
value RAT_MUL_CALCULATE (ratTheory 131)
value RAT_MUL_COMM (ratTheory 132)
value RAT_MUL_CONG (ratTheory 133)
value RAT_MUL_CONG1 (ratTheory 134)
value RAT_MUL_CONG2 (ratTheory 135)
value rat_mul_def (ratTheory 21)
value RAT_MUL_LID (ratTheory 136)
value RAT_MUL_LINV (ratTheory 137)
value RAT_MUL_LZERO (ratTheory 138)
value RAT_MUL_NUM_CALCULATE (ratTheory 139)
value RAT_MUL_ONE_ONE (ratTheory 140)
value RAT_MUL_RID (ratTheory 141)
value RAT_MUL_RINV (ratTheory 142)
value RAT_MUL_RZERO (ratTheory 143)
value RAT_MUL_SIGN_CASES (ratTheory 144)
value rat_mul_tm (ratSyntax 21)
value RAT_MULAC_CONV (ratLib 14)
value RAT_MULAC_TAC (ratLib 19)
value rat_mult (Rationals 15)
value rat_nmr_def (ratTheory 22)
value rat_nmr_tm (ratSyntax 11)
value RAT_NMR_Z_IFF_EQUIV (ratTheory 149)
value RAT_NMRDNM_EQ (ratTheory 145)
value RAT_NMREQ0_CONG (ratTheory 146)
value RAT_NMRGT0_CONG (ratTheory 147)
value RAT_NMRLT0_CONG (ratTheory 148)
value RAT_NO_IDDIV (ratTheory 150)
value RAT_NO_ZERODIV (ratTheory 151)
value RAT_NO_ZERODIV_NEG (ratTheory 152)
value rat_not_infty (extrealTheory 335)
value rat_num_rewrites (ratLib 44)
value rat_of_int (Rationals 18)
value RAT_OF_NUM (ratTheory 153)
value RAT_OF_NUM_CALCULATE (ratTheory 154)
value rat_of_num_def (ratTheory 189)
value rat_of_num_def_compute (ratTheory 190)
value rat_of_num_ind (ratTheory 191)
value rat_of_num_primitive_def (ratTheory 23)
value rat_of_num_tm (ratSyntax 14)
value rat_one (Rationals 22)
value rat_plus (Rationals 13)
value rat_polynom_normalize_def (ratRingTheory 6)
value rat_polynom_simplify_def (ratRingTheory 7)
value RAT_POSTCALC_CONV (ratLib 30)
value RAT_PRECALC_CONV (ratLib 29)
value rat_QUOTIENT (ratTheory 187)
value rat_r_canonical_sum_merge_def (ratRingTheory 8)
value rat_r_canonical_sum_prod_def (ratRingTheory 9)
value rat_r_canonical_sum_scalar2_def (ratRingTheory 10)
value rat_r_canonical_sum_scalar3_def (ratRingTheory 11)
value rat_r_canonical_sum_scalar_def (ratRingTheory 12)
value rat_r_canonical_sum_simplify_def (ratRingTheory 13)
value rat_r_ics_aux_def (ratRingTheory 14)
value rat_r_interp_cs_def (ratRingTheory 15)
value rat_r_interp_m_def (ratRingTheory 16)
value rat_r_interp_sp_def (ratRingTheory 17)
value rat_r_interp_vl_def (ratRingTheory 18)
value rat_r_ivl_aux_def (ratRingTheory 19)
value rat_r_monom_insert_def (ratRingTheory 20)
value rat_r_spolynom_normalize_def (ratRingTheory 21)
value rat_r_spolynom_simplify_def (ratRingTheory 22)
value rat_r_varlist_insert_def (ratRingTheory 23)
value RAT_RDISTRIB (ratTheory 155)
value RAT_RDIV_EQ (ratTheory 156)
value RAT_RDIV_LES_NEG (ratTheory 157)
value RAT_RDIV_LES_POS (ratTheory 158)
value rat_rewrites (ratLib 43)
value RAT_RING_CONV (ratRingLib 5)
value RAT_RING_NORM_CONV (ratRingLib 4)
value RAT_RING_NORM_RULE (ratRingLib 10)
value RAT_RING_NORM_TAC (ratRingLib 7)
value RAT_RING_RULE (ratRingLib 11)
value RAT_RING_TAC (ratRingLib 8)
value rat_ring_thms (ratRingTheory 27)
value RAT_RSUB_EQ (ratTheory 159)
value RAT_RSUB_LES (ratTheory 160)
value RAT_SAVE (ratTheory 161)
value RAT_SAVE_ALLVARS_TAC (ratLib 37)
value RAT_SAVE_MINV (ratTheory 162)
value RAT_SAVE_NUM (ratTheory 163)
value RAT_SAVE_TAC (ratLib 36)
value RAT_SAVE_TO_CONS (ratTheory 164)
value RAT_SGN_0 (ratTheory 165)
value RAT_SGN_AINV (ratTheory 166)
value RAT_SGN_CALCULATE (ratTheory 167)
value RAT_SGN_CLAUSES (ratTheory 168)
value RAT_SGN_COMPLEMENT (ratTheory 169)
value RAT_SGN_CONG (ratTheory 170)
value rat_sgn_def (ratTheory 24)
value RAT_SGN_MINV (ratTheory 171)
value RAT_SGN_MUL (ratTheory 172)
value rat_sgn_tm (ratSyntax 13)
value RAT_SGN_TOTAL (ratTheory 173)
value RAT_STRICT_CALC_TAC (ratLib 24)
value RAT_SUB_ADDAINV (ratTheory 174)
value RAT_SUB_CALCULATE (ratTheory 175)
value RAT_SUB_CONG (ratTheory 176)
value RAT_SUB_CONG1 (ratTheory 177)
value RAT_SUB_CONG2 (ratTheory 178)
value rat_sub_def (ratTheory 25)
value RAT_SUB_ID (ratTheory 179)
value RAT_SUB_LDISTRIB (ratTheory 180)
value RAT_SUB_LID (ratTheory 181)
value RAT_SUB_RDISTRIB (ratTheory 182)
value RAT_SUB_RID (ratTheory 183)
value rat_sub_tm (ratSyntax 20)
value rat_TY_DEF (ratTheory 8)
value rat_zero (Rationals 21)
value rational_intervals_def (extrealTheory 41)
structure Rationals
structure ratLib
HOL Term.rator (help/Docfiles/Term.rator.adoc 0), value RATOR (RW 49), value rator (FinalTerm 51), value rator (boolSyntax 67)
HOL Conv.RATOR_CONV (help/Docfiles/Conv.RATOR_CONV.adoc 0), value RATOR_CONV (Conv 12), value RATOR_CONV (RJBConv 13)
value ratRing_grammars (ratRingTheory 29)
structure ratRingLib
structure ratRingTheory
value rats (UnicodeChars 124)
value RATSKOL (Canon 15), value RATSKOL (refuteLib 15)
structure ratSyntax
structure ratTheory
structure ratUtils
structure Raw
value raw_backend (testutils 11)
value raw_map_insert (Overload 33)
HOL Term.raw_match (help/Docfiles/Term.raw_match.adoc 0), value raw_match (FinalTerm 64)
value raw_match_term (matchTools 25)
value raw_match_ty (matchTools 26)
HOL Type.raw_match_type (help/Docfiles/Type.raw_match_type.adoc 0), value raw_match_type (FinalType 48)
value raw_pp_term_as_tex (EmitTeX 15)
value raw_pp_theorem_as_tex (EmitTeX 17)
value raw_pp_type_as_tex (EmitTeX 16)
value raw_print_map (Overload 22)
value raw_read_article (Opentheory 61)
value raw_read_file (AssembleDiskFiles 3)
value raw_read_stream (AssembleDiskFiles 2)
type raw_subst (matchTools 23)
value raw_terminal (PPBackEnd 32)
HOL Parse.rawterm_pp (help/Docfiles/Parse.rawterm_pp.adoc 0), value rawterm_pp (Parse 199)
constructor RBracket (type_tokens 2)
value RC_DEF (relationTheory 17)
value RC_IDEM (relationTheory 94)
value RC_lifts_equalities (relationTheory 103)
value RC_lifts_invariants (relationTheory 104)
value RC_lifts_monotonicities (relationTheory 105)
value RC_MONOTONE (relationTheory 95)
value RC_MOVES_OUT (relationTheory 96)
value RC_OR_Id (relationTheory 97)
value RC_REFLEXIVE (relationTheory 98)
value RC_RTC (relationTheory 99)
value RC_STRORD (relationTheory 100)
value RC_SUBSET (relationTheory 101)
value RC_Weak (relationTheory 102)
value RCACHE (Cache 40)
value rcdiamond_def (relationTheory 49)
value rcdiamond_diamond (relationTheory 217)
value rcomp_def (set_relationTheory 26)
value rcomp_to_rel_conv (set_relationTheory 104)
value RCOMPL (relationTheory 16)
value rdistrib_tm (boolSyntax 175)
constructor rDIV (CooperSyntax 29)
value RDOM_DEF (relationTheory 18)
value RDOM_DELETE_DEF (relationTheory 19)
value RDOM_SUBSET_FDOM (tcTheory 23)
value RDOM_subTC (tcTheory 24)
value rdquo (UnicodeChars 103)
constructor RE (term_grammar 14), value RE (complexTheory 6)
value RE_compare (term_grammar 12)
value RE_COMPLEX_OF_REAL (complexTheory 242)
value RE_DIV_MODU_ACS_BOUNDS (complexTheory 243)
value RE_DIV_MODU_ACS_COS (complexTheory 244)
value RE_DIV_MODU_BOUNDS (complexTheory 245)
value RE_IM_LE_MODU (complexTheory 246)
value re_intersect (topologyTheory 15)
value RE_MODU_ARG (complexTheory 247)
value re_union (topologyTheory 16)
value REABBREV_TAC (bossLib 126), value REABBREV_TAC (markerLib 33)
HOL Tag.read (help/Docfiles/Tag.read.adoc 0), value read (Count 93), value read (FinalTag 11), value read (Tag 12), value read (TypeBase 15), value read (mlibTptp 15)
value read_article (Opentheory 62)
value read_congs (DefnBase 23)
value READ_def (errorStateMonadTheory 17), value READ_def (state_transformerTheory 13)
value read_dep (Dep 26)
value read_disk_tag (Tag 14)
value read_file (DiskThms 7)
value read_infs (mlibMeter 30)
value READ_L2V (fcpTheory 55)
value read_meter (mlibMeter 29)
value read_overrides (mungeTools 11)
value read_raw (FinalTerm 95)
value read_stream (DiskThms 6)
value read_textfile (mlibUseful 194)
value READ_TL (fcpTheory 56)
value read_tm (state_transformerSyntax 14)
type reader (Coding 3), type reader (Opentheory 7), value reader (ProvideUnicode 38), value reader (TermCoding 5)
value REAL (realTheory 85)
value REAL_0 (realTheory 86), value real_0 (realaxTheory 7)
value REAL_1 (realTheory 87), value real_1 (realaxTheory 8)
value REAL_10 (realTheory 88), value REAL_10 (realaxTheory 41)
value REAL_ABS_0 (realTheory 89)
value real_ABS_def (realaxTheory 9)
value REAL_ABS_DIV (floatTheory 91)
value REAL_ABS_INV (floatTheory 92)
value REAL_ABS_MUL (realTheory 90)
value REAL_ABS_NUM (floatTheory 93)
value REAL_ABS_POS (realTheory 91)
value REAL_ABS_POW (floatTheory 94)
value real_ABS_REP_CLASS (realaxTheory 97)
value REAL_ABS_TRIANGLE (realTheory 92)
value real_ac_SS (realSimps 16), value real_ac_ss (realSimps 23)
value REAL_ADD (realTheory 93), value real_add (realaxTheory 12)
value REAL_ADD2_SUB2 (realTheory 94)
value REAL_ADD_ASSOC (realTheory 95), value REAL_ADD_ASSOC (realaxTheory 42)
value REAL_ADD_COMM (realTheory 96)
value REAL_ADD_LDISTRIB (realTheory 97)
value REAL_ADD_LID (realTheory 98), value REAL_ADD_LID (realaxTheory 43)
value REAL_ADD_LID_UNIQ (realTheory 99)
value REAL_ADD_LINV (realTheory 100), value REAL_ADD_LINV (realaxTheory 44)
value REAL_ADD_RAT (realTheory 101)
value REAL_ADD_RDISTRIB (realTheory 102)
value REAL_ADD_RID (realTheory 103)
value REAL_ADD_RID_UNIQ (realTheory 104)
value REAL_ADD_RINV (realTheory 105)
value REAL_ADD_SUB (realTheory 106)
value REAL_ADD_SUB2 (realTheory 107)
value REAL_ADD_SUB_ALT (realTheory 108)
value REAL_ADD_SYM (realTheory 109), value REAL_ADD_SYM (realaxTheory 45)
value REAL_ARCH (realTheory 110)
value REAL_ARCH_LEAST (realTheory 111)
value REAL_ARCH_POW (extrealTheory 106), value REAL_ARCH_POW (integralTheory 73)
value REAL_ARCH_POW2 (integralTheory 74)
value REAL_ARITH (RealArith 18), value REAL_ARITH (realLib 10)
value REAL_ARITH_ss (realSimps 19)
value REAL_ARITH_TAC (RealArith 8), value REAL_ARITH_TAC (realLib 9)
value REAL_ASM_ARITH_TAC (RealArith 9)
value REAL_BIGNUM (realTheory 112)
value real_bijections (realaxTheory 13)
constructor REAL_COMBIN (OmegaMLShadow 5), constructor REAL_COMBIN (mlibOmega 8)
value real_compset (realSimps 25)
value real_def (extrealTheory 42)
value REAL_DIFFSQ (realTheory 113)
value real_div (realTheory 13)
value REAL_DIV_ADD (realTheory 114)
value REAL_DIV_DENOM_CANCEL (realTheory 115)
value REAL_DIV_DENOM_CANCEL2 (realTheory 116)
value REAL_DIV_DENOM_CANCEL3 (realTheory 117)
value REAL_DIV_INNER_CANCEL (realTheory 118)
value REAL_DIV_INNER_CANCEL2 (realTheory 119)
value REAL_DIV_INNER_CANCEL3 (realTheory 120)
value REAL_DIV_LMUL (realTheory 121)
value REAL_DIV_LMUL_CANCEL (realTheory 122)
value REAL_DIV_LZERO (realTheory 123)
value REAL_DIV_MUL2 (realTheory 124)
value REAL_DIV_OUTER_CANCEL (realTheory 125)
value REAL_DIV_OUTER_CANCEL2 (realTheory 126)
value REAL_DIV_OUTER_CANCEL3 (realTheory 127)
value REAL_DIV_REFL (realTheory 128)
value REAL_DIV_REFL2 (realTheory 129)
value REAL_DIV_REFL3 (realTheory 130)
value REAL_DIV_RMUL (realTheory 131)
value REAL_DIV_RMUL_CANCEL (realTheory 132)
value REAL_DIV_SQRT (transcTheory 153)
value REAL_DOUBLE (realTheory 133)
value REAL_DOWN (realTheory 134)
value REAL_DOWN2 (realTheory 135)
value REAL_ENTIRE (realTheory 136)
value REAL_EQ_IMP_LE (realTheory 137)
value REAL_EQ_LADD (realTheory 138)
value REAL_EQ_LDIV_EQ (realTheory 139)
value REAL_EQ_LMUL (realTheory 140)
value REAL_EQ_LMUL2 (realTheory 141)
value REAL_EQ_LMUL_IMP (realTheory 142)
value REAL_EQ_MUL_LCANCEL (realTheory 143)
value REAL_EQ_NEG (realTheory 144)
value REAL_EQ_RADD (realTheory 145)
value REAL_EQ_RDIV_EQ (realTheory 146)
value REAL_EQ_RMUL (realTheory 147)
value REAL_EQ_RMUL_IMP (realTheory 148)
value REAL_EQ_SUB_LADD (realTheory 149)
value REAL_EQ_SUB_RADD (realTheory 150)
value real_eq_tm (realSyntax 15)
value REAL_FACT_NZ (realTheory 151)
value real_ge (realTheory 14)
value real_grammars (realTheory 457)
value real_gt (realTheory 15)
value REAL_HALF_BETWEEN (realTheory 152)
value REAL_HALF_DOUBLE (realTheory 153)
value REAL_IMP_INF_LE (realTheory 154)
value REAL_IMP_LE_INF (realTheory 155)
value REAL_IMP_LE_SUP (realTheory 156)
value REAL_IMP_MAX_LE2 (realTheory 157)
value REAL_IMP_MIN_LE2 (realTheory 158)
value REAL_IMP_SUP_LE (realTheory 159)
value REAL_IN_BINADE (floatTheory 95)
value REAL_INF_CLOSE (realTheory 160)
value REAL_INF_LE (realTheory 161)
value REAL_INF_LT (realTheory 162)
value REAL_INF_MIN (realTheory 163)
value REAL_INJ (realTheory 164)
value real_injection (realSyntax 22)
value real_inv (realaxTheory 14)
value REAL_INV1 (realTheory 165)
value REAL_INV_0 (realTheory 167), value REAL_INV_0 (realaxTheory 46)
value REAL_INV_1OVER (realTheory 168)
value REAL_INV_EQ_0 (realTheory 169)
value REAL_INV_INJ (realTheory 170)
value REAL_INV_INV (realTheory 171)
value REAL_INV_LT1 (realTheory 172)
value REAL_INV_LT_ANTIMONO (realTheory 173)
value REAL_INV_MUL (realTheory 174)
value REAL_INV_NZ (realTheory 175)
value REAL_INV_POS (realTheory 176)
value REAL_INVINV (realTheory 166)
value REAL_ISO_EQ (realaxTheory 47)
value REAL_LDISTRIB (realTheory 177), value REAL_LDISTRIB (realaxTheory 48)
value REAL_LE (realTheory 178)
value REAL_LE1_POW2 (realTheory 179)
value REAL_LE_01 (realTheory 185)
value REAL_LE_ADD (realTheory 186)
value REAL_LE_ADD2 (realTheory 187)
value REAL_LE_ADDL (realTheory 188)
value REAL_LE_ADDR (realTheory 189)
value REAL_LE_ANTISYM (realTheory 190)
value REAL_LE_DIV (realTheory 191)
value REAL_LE_DOUBLE (realTheory 192)
value REAL_LE_EPSILON (realTheory 193)
value REAL_LE_INV (realTheory 194)
value REAL_LE_INV2 (floatTheory 96), value REAL_LE_INV2 (integralTheory 75)
value REAL_LE_INV_EQ (realTheory 195)
value REAL_LE_LADD (realTheory 196)
value REAL_LE_LADD_IMP (realTheory 197)
value REAL_LE_LCANCEL_IMP (floatTheory 97)
value REAL_LE_LDIV (realTheory 198)
value REAL_LE_LDIV_EQ (realTheory 199)
value REAL_LE_LMUL (realTheory 200)
value REAL_LE_LMUL1 (integralTheory 76)
value REAL_LE_LMUL_IMP (realTheory 201)
value REAL_LE_LNEG (realTheory 202)
value REAL_LE_LT (realTheory 203)
value REAL_LE_LT_MUL (util_probTheory 135)
value REAL_LE_MAX (realTheory 204)
value REAL_LE_MAX1 (realTheory 205)
value REAL_LE_MAX2 (realTheory 206)
value REAL_LE_MIN (realTheory 207)
value REAL_LE_MUL (realTheory 208)
value REAL_LE_MUL2 (realTheory 209)
value REAL_LE_MUL_EPSILON (extrealTheory 107)
value REAL_LE_NEG (realTheory 210)
value REAL_LE_NEG2 (realTheory 211)
value REAL_LE_NEGL (realTheory 212)
value REAL_LE_NEGR (realTheory 213)
value REAL_LE_NEGTOTAL (realTheory 214)
value REAL_LE_POW2 (realTheory 215)
value REAL_LE_RADD (realTheory 216)
value REAL_LE_RCANCEL_IMP (floatTheory 98)
value REAL_LE_RDIV (realTheory 217)
value REAL_LE_RDIV_EQ (realTheory 218)
value REAL_LE_RDIV_EQ_NEG (extrealTheory 108)
value REAL_LE_REFL (realTheory 219)
value REAL_LE_RMUL (realTheory 220)
value REAL_LE_RMUL1 (integralTheory 77)
value REAL_LE_RMUL_IMP (realTheory 221)
value REAL_LE_RNEG (realTheory 222)
value REAL_LE_SQUARE (realTheory 223)
value REAL_LE_SUB_CANCEL2 (realTheory 224)
value REAL_LE_SUB_LADD (realTheory 225)
value REAL_LE_SUB_RADD (realTheory 226)
value REAL_LE_SUP (realTheory 227)
value REAL_LE_TOTAL (realTheory 228)
value REAL_LE_TRANS (realTheory 229)
value REAL_LET_ADD (realTheory 180)
value REAL_LET_ADD2 (realTheory 181)
value REAL_LET_ANTISYM (realTheory 182)
value REAL_LET_TOTAL (realTheory 183)
value REAL_LET_TRANS (realTheory 184)
value REAL_LIN_LE_MAX (realTheory 231)
value REAL_LINV_UNIQ (realTheory 230)
value REAL_LNEG_UNIQ (realTheory 232)
value REAL_LT (realTheory 233), value real_lt (realTheory 452), value real_lt (realaxTheory 15)
value REAL_LT1_POW2 (realTheory 234)
value REAL_LT_01 (realTheory 240)
value REAL_LT_1 (realTheory 241)
value REAL_LT_ADD (realTheory 242)
value REAL_LT_ADD1 (realTheory 243)
value REAL_LT_ADD2 (realTheory 244)
value REAL_LT_ADD_SUB (realTheory 249)
value REAL_LT_ADDL (realTheory 245)
value REAL_LT_ADDNEG (realTheory 246)
value REAL_LT_ADDNEG2 (realTheory 247)
value REAL_LT_ADDR (realTheory 248)
value REAL_LT_ANTISYM (realTheory 250)
value REAL_LT_DIV (realTheory 251)
value REAL_LT_FRACTION (realTheory 252)
value REAL_LT_FRACTION_0 (realTheory 253)
value REAL_LT_GT (realTheory 254)
value REAL_LT_HALF1 (realTheory 255)
value REAL_LT_HALF2 (realTheory 256)
value REAL_LT_IADD (realTheory 257), value REAL_LT_IADD (realaxTheory 49)
value REAL_LT_IMP_LE (realTheory 258)
value REAL_LT_IMP_NE (realTheory 259)
value REAL_LT_INV (realTheory 260)
value REAL_LT_INV_EQ (realTheory 261)
value REAL_LT_LADD (realTheory 262)
value REAL_LT_LCANCEL_IMP (floatTheory 99)
value REAL_LT_LDIV_EQ (realTheory 263)
value REAL_LT_LE (realTheory 264)
value REAL_LT_LE_MUL (util_probTheory 136)
value REAL_LT_LMUL (realTheory 265)
value REAL_LT_LMUL_0 (realTheory 266)
value REAL_LT_LMUL_0_NEG (extrealTheory 109)
value REAL_LT_LMUL_IMP (realTheory 267)
value REAL_LT_LMUL_NEG_0 (extrealTheory 110)
value REAL_LT_LMUL_NEG_0_NEG (extrealTheory 111)
value REAL_LT_MIN (integralTheory 78)
value REAL_LT_MUL (realTheory 268), value REAL_LT_MUL (realaxTheory 50)
value REAL_LT_MUL2 (realTheory 269)
value REAL_LT_MULTIPLE (realTheory 270)
value REAL_LT_NEG (realTheory 271)
value REAL_LT_NEGTOTAL (realTheory 272)
value REAL_LT_NZ (realTheory 273)
value REAL_LT_RADD (realTheory 274)
value REAL_LT_RCANCEL_IMP (floatTheory 100)
value REAL_LT_RDIV (realTheory 275)
value REAL_LT_RDIV_0 (realTheory 276)
value REAL_LT_RDIV_EQ (realTheory 277)
value REAL_LT_RDIV_EQ_NEG (extrealTheory 112)
value REAL_LT_REFL (realTheory 278), value REAL_LT_REFL (realaxTheory 51)
value REAL_LT_RMUL (realTheory 279)
value REAL_LT_RMUL_0 (realTheory 280)
value REAL_LT_RMUL_0_NEG (extrealTheory 113)
value REAL_LT_RMUL_IMP (realTheory 281)
value REAL_LT_RMUL_NEG_0 (extrealTheory 114)
value REAL_LT_RMUL_NEG_0_NEG (extrealTheory 115)
value REAL_LT_SUB_LADD (realTheory 282)
value REAL_LT_SUB_RADD (realTheory 283)
value REAL_LT_TOTAL (realTheory 284), value REAL_LT_TOTAL (realaxTheory 52)
value REAL_LT_TRANS (realTheory 285), value REAL_LT_TRANS (realaxTheory 53)
value real_lte (realTheory 16)
value REAL_LTE_ADD (realTheory 235)
value REAL_LTE_ADD2 (realTheory 236)
value REAL_LTE_ANTSYM (realTheory 237)
value REAL_LTE_TOTAL (realTheory 238)
value REAL_LTE_TRANS (realTheory 239)
value REAL_MAX_ADD (realTheory 286)
value REAL_MAX_ALT (realTheory 287)
value REAL_MAX_LE (realTheory 288)
value REAL_MAX_MIN (realTheory 289)
value REAL_MAX_REFL (realTheory 290)
value REAL_MAX_SUB (realTheory 291)
value REAL_MEAN (realTheory 292)
value REAL_MIDDLE1 (realTheory 293)
value REAL_MIDDLE2 (realTheory 294)
value REAL_MIN_ADD (realTheory 295)
value REAL_MIN_ALT (realTheory 296)
value REAL_MIN_LE (realTheory 297)
value REAL_MIN_LE1 (realTheory 298)
value REAL_MIN_LE2 (realTheory 299)
value REAL_MIN_LE_LIN (realTheory 300)
value REAL_MIN_MAX (realTheory 301)
value REAL_MIN_REFL (realTheory 302)
value REAL_MIN_SUB (realTheory 303)
value REAL_MUL (realTheory 304), value real_mul (realaxTheory 16)
value REAL_MUL_AC (floatTheory 101)
value REAL_MUL_ASSOC (realTheory 305), value REAL_MUL_ASSOC (realaxTheory 54)
value REAL_MUL_COMM (realTheory 306)
value REAL_MUL_IDEMPOT (util_probTheory 137)
value REAL_MUL_LID (realTheory 307), value REAL_MUL_LID (realaxTheory 55)
value REAL_MUL_LINV (realTheory 308), value REAL_MUL_LINV (realaxTheory 56)
value REAL_MUL_LNEG (realTheory 309)
value REAL_MUL_LZERO (realTheory 310)
value REAL_MUL_RID (realTheory 311)
value REAL_MUL_RINV (realTheory 312)
value REAL_MUL_RNEG (realTheory 313)
value REAL_MUL_RZERO (realTheory 314)
value REAL_MUL_SUB1_CANCEL (realTheory 315)
value REAL_MUL_SUB2_CANCEL (realTheory 316)
value REAL_MUL_SYM (realTheory 317), value REAL_MUL_SYM (realaxTheory 57)
value real_neg (realaxTheory 17)
value REAL_NEG_0 (realTheory 319)
value REAL_NEG_ADD (realTheory 320)
value REAL_NEG_EQ (realTheory 321)
value REAL_NEG_EQ0 (realTheory 322)
value REAL_NEG_GE0 (realTheory 323)
value REAL_NEG_GT0 (realTheory 324)
value REAL_NEG_HALF (realTheory 325)
value REAL_NEG_IN_BINADE (floatTheory 102)
value REAL_NEG_INV (realTheory 326)
value REAL_NEG_LE0 (realTheory 327)
value REAL_NEG_LMUL (realTheory 328)
value REAL_NEG_LT0 (realTheory 329)
value REAL_NEG_MINUS1 (realTheory 330)
value REAL_NEG_MUL2 (realTheory 331)
value REAL_NEG_NEG (realTheory 332)
value REAL_NEG_RMUL (realTheory 333)
value REAL_NEG_SUB (realTheory 334)
value REAL_NEG_THIRD (realTheory 335)
value REAL_NEGNEG (realTheory 318)
value real_normal (extrealTheory 336)
value REAL_NOT_LE (realTheory 336)
value REAL_NOT_LT (realTheory 337)
value REAL_NZ_IMP_LT (realTheory 338)
value real_of_hreal (realaxTheory 18)
value real_of_int (intrealTheory 8)
value real_of_int_tm (intrealSyntax 7)
value real_of_num (realTheory 17)
value REAL_OF_NUM_ADD (realTheory 339)
value REAL_OF_NUM_EQ (realTheory 340)
value REAL_OF_NUM_LE (realTheory 341)
value REAL_OF_NUM_LT (floatTheory 103)
value REAL_OF_NUM_MUL (realTheory 342)
value REAL_OF_NUM_POW (floatTheory 104), value REAL_OF_NUM_POW (realTheory 343)
value REAL_OF_NUM_SUB (floatTheory 105)
value REAL_OF_NUM_SUC (realTheory 344)
value REAL_OVER1 (realTheory 345)
value REAL_POASQ (realTheory 346)
value REAL_POS (realTheory 347), value REAL_POS (realaxTheory 58)
value REAL_POS_EQ_ZERO (realTheory 348)
value REAL_POS_ID (realTheory 349)
value REAL_POS_IN_BINADE (floatTheory 106)
value REAL_POS_INFLATE (realTheory 350)
value REAL_POS_LE_ZERO (realTheory 351)
value REAL_POS_MONO (realTheory 352)
value REAL_POS_NZ (realTheory 353)
value REAL_POS_POS (realTheory 354)
value REAL_POW2_ABS (realTheory 355)
value REAL_POW_ADD (realTheory 356)
value REAL_POW_DIV (realTheory 357)
value REAL_POW_EQ_0 (floatTheory 107)
value REAL_POW_INV (realTheory 358)
value REAL_POW_LBOUND (integralTheory 79)
value REAL_POW_LE_1 (floatTheory 108), value REAL_POW_LE_1 (integralTheory 80)
value REAL_POW_LT (realTheory 359)
value REAL_POW_LT2 (realTheory 360)
value REAL_POW_MONO (floatTheory 109), value REAL_POW_MONO (integralTheory 81)
value REAL_POW_MONO_LT (realTheory 361)
value REAL_POW_POW (realTheory 362)
value real_QUOTIENT (realaxTheory 98)
value real_random_variable_def (probabilityTheory 21)
value REAL_RDISTRIB (realTheory 363)
value REAL_REDUCE_ss (realSimps 10)
value real_REP_def (realaxTheory 10)
value REAL_RINV_UNIQ (realTheory 364)
value REAL_RNEG_UNIQ (realTheory 365)
value real_shadow_always_implied (OmegaTheory 78)
value real_shadow_def (OmegaTheory 26)
value real_shadow_FORALL (OmegaTheory 77)
value real_shadow_revimp_lowers1 (OmegaTheory 79)
value real_shadow_revimp_uppers1 (OmegaTheory 80)
value real_sigma_grammars (real_sigmaTheory 42)
structure real_sigmaTheory
value real_SS (realSimps 7), value real_ss (realLib 12), value real_ss (realSimps 13)
value REAL_SUB (realTheory 366), value real_sub (realTheory 18)
value REAL_SUB_0 (realTheory 367)
value REAL_SUB_ABS (realTheory 368)
value REAL_SUB_ADD (realTheory 369)
value REAL_SUB_ADD2 (realTheory 370)
value REAL_SUB_INV2 (realTheory 371)
value REAL_SUB_LDISTRIB (realTheory 372)
value REAL_SUB_LE (realTheory 373)
value REAL_SUB_LNEG (realTheory 374)
value REAL_SUB_LT (realTheory 375)
value REAL_SUB_LZERO (realTheory 376)
value REAL_SUB_NEG2 (realTheory 377)
value REAL_SUB_RAT (realTheory 378)
value REAL_SUB_RDISTRIB (realTheory 379)
value REAL_SUB_REFL (realTheory 380)
value REAL_SUB_RNEG (realTheory 381)
value REAL_SUB_RZERO (realTheory 382)
value REAL_SUB_SUB (realTheory 383)
value REAL_SUB_SUB2 (realTheory 384)
value REAL_SUB_TRIANGLE (realTheory 385)
value REAL_SUM_IMAGE_0 (real_sigmaTheory 9)
value REAL_SUM_IMAGE_ADD (real_sigmaTheory 10)
value REAL_SUM_IMAGE_CMUL (real_sigmaTheory 11)
value REAL_SUM_IMAGE_CONST_EQ_1_EQ_INV_CARD (real_sigmaTheory 12)
value REAL_SUM_IMAGE_COUNT (real_sigmaTheory 13)
value REAL_SUM_IMAGE_CROSS_SYM (real_sigmaTheory 14)
value REAL_SUM_IMAGE_DEF (real_sigmaTheory 5)
value REAL_SUM_IMAGE_DISJOINT_UNION (real_sigmaTheory 15)
value REAL_SUM_IMAGE_EQ (real_sigmaTheory 16)
value REAL_SUM_IMAGE_EQ_CARD (real_sigmaTheory 17)
value REAL_SUM_IMAGE_EQ_sum (real_sigmaTheory 18)
value REAL_SUM_IMAGE_FINITE_CONST (real_sigmaTheory 19)
value REAL_SUM_IMAGE_FINITE_SAME (real_sigmaTheory 20)
value REAL_SUM_IMAGE_IF_ELIM (real_sigmaTheory 21)
value REAL_SUM_IMAGE_IMAGE (real_sigmaTheory 22)
value REAL_SUM_IMAGE_IN_IF (real_sigmaTheory 26)
value REAL_SUM_IMAGE_IN_IF_ALT (real_sigmaTheory 27)
value REAL_SUM_IMAGE_INTER_ELIM (real_sigmaTheory 23)
value REAL_SUM_IMAGE_INTER_NONZERO (real_sigmaTheory 24)
value REAL_SUM_IMAGE_INV_CARD_EQ_1 (real_sigmaTheory 25)
value REAL_SUM_IMAGE_MONO (real_sigmaTheory 28)
value REAL_SUM_IMAGE_MONO_SET (real_sigmaTheory 29)
value REAL_SUM_IMAGE_NEG (real_sigmaTheory 30)
value REAL_SUM_IMAGE_NONZERO (real_sigmaTheory 31)
value REAL_SUM_IMAGE_POS (real_sigmaTheory 32)
value REAL_SUM_IMAGE_POS_MEM_LE (real_sigmaTheory 33)
value REAL_SUM_IMAGE_POW (real_sigmaTheory 34)
value REAL_SUM_IMAGE_REAL_SUM_IMAGE (real_sigmaTheory 35)
value REAL_SUM_IMAGE_SING (real_sigmaTheory 36)
value REAL_SUM_IMAGE_SPOS (real_sigmaTheory 37)
value REAL_SUM_IMAGE_SUB (real_sigmaTheory 38)
value REAL_SUM_IMAGE_THM (real_sigmaTheory 39)
value REAL_SUMSQ (realTheory 386)
value REAL_SUP (realTheory 387)
value REAL_SUP_ALLPOS (realTheory 388), value REAL_SUP_ALLPOS (realaxTheory 59)
value REAL_SUP_CONST (realTheory 389)
value REAL_SUP_EXISTS (realTheory 390)
value REAL_SUP_EXISTS_UNIQUE (realTheory 391)
value REAL_SUP_LE (realTheory 392)
value REAL_SUP_LE_X (util_probTheory 138)
value REAL_SUP_MAX (realTheory 393)
value REAL_SUP_SOMEPOS (realTheory 394)
value REAL_SUP_UBOUND (realTheory 395)
value REAL_SUP_UBOUND_LE (realTheory 396)
value REAL_THIRDS_BETWEEN (realTheory 397)
value real_time (Lib 110)
value real_to_string (mlibUseful 135)
value real_ty (realSyntax 5)
value real_TY_DEF (realaxTheory 11)
value REAL_X_LE_SUP (util_probTheory 139)
structure RealArith
value realax_grammars (realaxTheory 100)
structure realaxTheory
structure realLib
value reals (UnicodeChars 125)
structure realSimps
structure realSyntax
structure realTheory
value rebrand (mlibClause 39)
value reccons_special (GrammarSpecials 20)
value recent_fol_problems (folTools 39)
value recfupd_special (GrammarSpecials 19)
HOL BasicProvers.recInduct (help/Docfiles/BasicProvers.recInduct.adoc 0), HOL bossLib.recInduct (help/Docfiles/bossLib.recInduct.adoc 0), value recInduct (Induction 10), value recInduct (bossLib 35)
value recnil_special (GrammarSpecials 21)
value recognizers_of (TypeBase 23), value recognizers_of (TypeBasePure 49)
value reconstruct (hhReconstruct 5)
value reconstructl (hhReconstruct 6)
constructor Record (ParseDatatype 13)
value record_bvars (term_pp_utils 7)
value record_default_qp (quantHeuristicsLib 87), value record_default_qp (quantHeuristicsLibParameters 27)
value record_infs (mlibMeter 28)
value record_qp (quantHeuristicsLib 85), value record_qp (quantHeuristicsLibParameters 25)
structure RecordType
value recsel_special (GrammarSpecials 17)
value recspace_repfns (ind_typeTheory 22)
value recspace_TY_DEF (ind_typeTheory 21)
value recupd_special (GrammarSpecials 18)
value RECURSION (Past_Temporal_LogicTheory 37)
value recursive_seg (pathTheory 144)
value recwith_special (GrammarSpecials 22)
HOL reduceLib.RED_CONV (help/Docfiles/reduceLib.RED_CONV.adoc 0), value RED_CONV (intReduce 8), value RED_CONV (intSimps 8), value RED_CONV (reduceLib 27)
structure Redblackmap
structure Redblackset
value REDEPTH (RW 46)
HOL ConseqConv.REDEPTH_CONSEQ_CONV (help/Docfiles/ConseqConv.REDEPTH_CONSEQ_CONV.adoc 0), value REDEPTH_CONSEQ_CONV (ConseqConv 179)
value REDEPTH_CONSEQ_CONV_TAC (ConseqConv 231)
HOL Conv.REDEPTH_CONV (help/Docfiles/Conv.REDEPTH_CONV.adoc 0), value REDEPTH_CONV (Conv 40), value REDEPTH_CONV (liteLib 137)
value REDEPTH_QCONV (liteLib 138)
value REDEPTH_STRENGTHEN_CONSEQ_CONV (ConseqConv 195)
constructor REDUCE (Trace 4), value REDUCE (IndDefRules 4), value reduce (mlibClause 56), value reduce (mlibRewrite 31)
value reduce' (mlibRewrite 30)
value reduce_and (wordsTheory 557)
value reduce_and_def (wordsTheory 20)
value reduce_and_tm (wordsSyntax 37)
value reduce_and_v2w (bitstringTheory 82)
HOL numLib.REDUCE_CONV (help/Docfiles/numLib.REDUCE_CONV.adoc 0), HOL reduceLib.REDUCE_CONV (help/Docfiles/reduceLib.REDUCE_CONV.adoc 0), value REDUCE_CONV (CooperMath 6), value REDUCE_CONV (intLib 10), value REDUCE_CONV (intReduce 7), value REDUCE_CONV (intSimps 7), value REDUCE_CONV (numLib 25), value REDUCE_CONV (reduceLib 28)
value reduce_if_ground (CooperSyntax 56)
value reduce_nand_def (wordsTheory 21)
value reduce_nand_tm (wordsSyntax 38)
value reduce_nor_def (wordsTheory 22)
value reduce_nor_tm (wordsSyntax 39)
value reduce_or (wordsTheory 558)
value reduce_or_def (wordsTheory 23)
value reduce_or_tm (wordsSyntax 40)
value reduce_or_v2w (bitstringTheory 83)
HOL reduceLib.REDUCE_RULE (help/Docfiles/reduceLib.REDUCE_RULE.adoc 0), value REDUCE_RULE (numLib 26), value REDUCE_RULE (reduceLib 29)
value REDUCE_ss (numSimps 6)
HOL reduceLib.REDUCE_TAC (help/Docfiles/reduceLib.REDUCE_TAC.adoc 0), value REDUCE_TAC (numLib 27), value REDUCE_TAC (reduceLib 30)
value reduce_xnor_def (wordsTheory 24)
value reduce_xnor_tm (wordsSyntax 41)
value reduce_xor_def (wordsTheory 25)
value reduce_xor_tm (wordsSyntax 42)
value reduced (mlibClause 57), value reduced (mlibRewrite 29)
structure reduceLib
constructor REDUCER (Traverse 66), type reducer (Traverse 66)
value ref_equiv (Pretype 11)
value ref_occurs_in (Pretype 10)
value ref_to_int (Portable 57)
value refine (mlibSubst 24)
HOL Q.REFINE_EXISTS_TAC (help/Docfiles/Q.REFINE_EXISTS_TAC.adoc 0), value REFINE_EXISTS_TAC (Q 20)
value refine_subst (matchTools 20)
type refinement (jrhTactics 8)
HOL Thm.REFL (help/Docfiles/Thm.REFL.adoc 0), constructor Refl (Count 11), constructor Refl (mlibKernel 14), value REFL (FinalThm 26), value REFL (Q 6), value REFL (mlibKernel 21), value refl (mlibTerm 103)
constructor Refl' (mlibThm 13)
value REFL_CLAUSE (boolTheory 145)
HOL ConseqConv.REFL_CONSEQ_CONV (help/Docfiles/ConseqConv.REFL_CONSEQ_CONV.adoc 0), value REFL_CONSEQ_CONV (ConseqConv 70)
value refl_sym_trans_equiv (quotient 91)
HOL Tactic.REFL_TAC (help/Docfiles/Tactic.REFL_TAC.adoc 0), value REFL_TAC (Tactic 63)
value refl_thm (compute_rules 25)
value reflexive_def (relationTheory 50), value reflexive_def (set_relationTheory 27)
value reflexive_EQC (relationTheory 218)
value reflexive_Id_RSUBSET (relationTheory 219)
value reflexive_inv (relationTheory 224)
value reflexive_inv_image (relationTheory 225)
value reflexive_LEX (pairTheory 67)
value reflexive_RC (relationTheory 220)
value reflexive_RC_identity (relationTheory 221)
value reflexive_reln_to_rel_conv (set_relationTheory 105)
value reflexive_reln_to_rel_conv_UNIV (set_relationTheory 106)
value reflexive_RTC (relationTheory 222)
value reflexive_TC (relationTheory 223)
value REFLEXIVITY (mlibThm 50)
value REFUTE (Canon 17), value REFUTE (refuteLib 17), value refute (mlibSolver 32)
value REFUTE_THEN (Canon_Port 14)
structure refuteLib
HOL Feedback.register_btrace (help/Docfiles/Feedback.register_btrace.adoc 0), value register_btrace (Feedback 43)
HOL Feedback.register_ftrace (help/Docfiles/Feedback.register_ftrace.adoc 0), value register_ftrace (Feedback 41)
value register_hook (Theory 49)
HOL Feedback.register_trace (help/Docfiles/Feedback.register_trace.adoc 0), value register_trace (Feedback 40)
value register_update_fn (TypeBase 17)
value register_UserStyle (PPBackEnd 30)
value reify (ringLib 36)
value REL_CONGRUENCE (mlibThm 54)
value rel_of_congrule (Opening 78)
value REL_RESTRICT_DEF (pred_setTheory 31)
value REL_RESTRICT_EMPTY (pred_setTheory 332)
value REL_RESTRICT_SUBSET (pred_setTheory 333)
value REL_RESTRICT_UNIV (set_relationTheory 39)
value rel_to_abs (locn 14)
value rel_to_reln_11 (set_relationTheory 107)
value rel_to_reln_def (set_relationTheory 28)
value rel_to_reln_inv (set_relationTheory 108)
value rel_to_reln_swap (set_relationTheory 109)
value relation_def (posetTheory 19)
value relation_grammars (relationTheory 246)
value relation_names (mlibTerm 96)
value relations (mlibTerm 95)
structure relationTheory
value RELATIVE_ERROR (floatTheory 110)
value RELATIVE_ERROR_NEG (floatTheory 111)
value RELATIVE_ERROR_POS (floatTheory 112)
value RELATIVE_ERROR_ZERO (floatTheory 113)
value relaxed_dest_numeral (Literal 30)
value relaxed_dest_string_lit (Literal 31)
HOL Globals.release (help/Docfiles/Globals.release.adoc 0), value release (Globals 4), value release (Systeml 47)
value reln_of (Defn 33)
value reln_rel_conv_thms (set_relationTheory 110)
value RELN_TO_FMAP (tcTheory 8)
value RELN_TO_FMAP_TO_RELN_ID (tcTheory 25)
value reln_to_rel_11 (set_relationTheory 111)
value reln_to_rel_app (set_relationTheory 112)
value reln_to_rel_def (set_relationTheory 29)
value reln_to_rel_inv (set_relationTheory 113)
value relrec_cases (fmaptreeTheory 27), value relrec_cases (inftreeTheory 25)
value relrec_def (fmaptreeTheory 13), value relrec_def (inftreeTheory 12)
value relrec_ind (fmaptreeTheory 28), value relrec_ind (inftreeTheory 26)
value relrec_rules (fmaptreeTheory 29), value relrec_rules (inftreeTheory 27)
value relrec_strongind (fmaptreeTheory 30), value relrec_strongind (inftreeTheory 28)
value relsimp_ss (simpLib 85)
type relsimpdata (simpLib 53)
value reltoString (term_grammar 40)
type reltype (CooperSyntax 29)
value rem (Arbintcore 25), value rem (ieeeTheory 86), value rem (mlibArbint 27), value rem (mlibOmegaint 24)
value rem_tm (intSyntax 16)
value REMAINS_TO_PROVE (jbUtils 19)
value remove (PIntMap 34), value remove (Redblackmap 15), value remove (mlibHeap 14), value remove (mlibPatricia 25), value remove (mlibSupport 43), value remove (patriciaLib 19)
value REMOVE_ABBR_TAC (normalForms 218)
value remove_abbreviation (type_grammar 41)
value remove_absyn_postprocessor (term_grammar 127)
value REMOVE_ADD (patriciaTheory 114)
value REMOVE_ADD_EQ (patriciaTheory 115)
value remove_assoc (liteLib 58)
value remove_binary_tyop (type_grammar 36)
value remove_case_magic (Preterm 68)
value REMOVE_def (patriciaTheory 25)
value remove_forall (QbfConv 30)
value remove_form_with_tok (term_grammar 224)
value remove_form_with_toklist (term_grammar 226)
value REMOVE_IS_PTREE (patriciaTheory 116)
value remove_made_links (Pretype 40)
value remove_mapping (Overload 65)
value remove_numeral_form (Parse 92), value remove_numeral_form (term_grammar 203)
value remove_overloaded_form (Overload 30)
HOL Parse.remove_ovl_mapping (help/Docfiles/Parse.remove_ovl_mapping.adoc 0), value remove_ovl_mapping (Parse 110)
value remove_past (History 10)
value REMOVE_REMOVE (patriciaTheory 117)
HOL Parse.remove_rules_for_term (help/Docfiles/Parse.remove_rules_for_term.adoc 0), value remove_rules_for_term (Parse 99)
value remove_sptree_printer (sptreeSyntax 5)
HOL simpLib.remove_ssfrags (help/Docfiles/simpLib.remove_ssfrags.adoc 0), value remove_ssfrags (simpLib 113)
value remove_standard_form (term_grammar 213)
HOL Parse.remove_termtok (help/Docfiles/Parse.remove_termtok.adoc 0), value remove_termtok (Parse 100)
value remove_thm_arg (quantHeuristicsLib 151), value remove_thm_arg (quantHeuristicsLibFunRemove 20)
value remove_tm (patriciaSyntax 16)
value REMOVE_TRANSFORM (patriciaTheory 118)
value REMOVE_TRUE_TAC (ConseqConv 57)
HOL Parse.remove_type_abbrev (help/Docfiles/Parse.remove_type_abbrev.adoc 0), value remove_type_abbrev (Parse 41)
HOL Parse.remove_user_printer (help/Docfiles/Parse.remove_user_printer.adoc 0), value remove_user_printer (Parse 128), value remove_user_printer (term_grammar 118)
value remove_vacuous_existential (CooperSyntax 74)
value remove_word_cast_printer (wordsLib 76)
HOL wordsLib.remove_word_printer (help/Docfiles/wordsLib.remove_word_printer.adoc 0), value remove_word_printer (wordsLib 73)
value REMOVEs_def (patricia_castsTheory 24)
value removes_tm (patricia_castsSyntax 33)
value REMOVEw_def (patricia_castsTheory 25)
value removew_tm (patricia_castsSyntax 16)
value REMPTY_RRESTR (tcTheory 26)
value REMPTY_SUBSET (relationTheory 106)
value rename (bossLib 160)
value rename1 (bossLib 159), value rename1 (lcsymtacs 57)
HOL Q.RENAME1_TAC (help/Docfiles/Q.RENAME1_TAC.adoc 0), value RENAME1_TAC (Q 65)
HOL Term.rename_bvar (help/Docfiles/Term.rename_bvar.adoc 0), value rename_bvar (FinalTerm 55)
HOL Q.RENAME_TAC (help/Docfiles/Q.RENAME_TAC.adoc 0), value RENAME_TAC (Q 66)
value rename_tv (Pretype 37)
value rename_typevars (Pretype 36)
HOL Conv.RENAME_VARS_CONV (help/Docfiles/Conv.RENAME_VARS_CONV.adoc 0), value RENAME_VARS_CONV (Conv 110)
value renaming (mlibTptp 12)
value REP_ABS_RSP (quotientTheory 79)
value rep_rat_def (ratTheory 26)
HOL Tactical.REPEAT (help/Docfiles/Tactical.REPEAT.adoc 0), HOL Lib.repeat (help/Docfiles/Lib.repeat.adoc 0), value REPEAT (Tactical 51), value REPEAT (jrhTactics 33), value repeat (Lib 111), value repeat (errormonad 15), value repeat (liteLib 31), value repeat (mlibStream 14), value repeat (optmonad 15), value repeat (seqmonad 15)
HOL Thm_cont.REPEAT_GTCL (help/Docfiles/Thm_cont.REPEAT_GTCL.adoc 0), value REPEAT_GTCL (Thm_cont 7)
HOL Tactical.REPEAT_LT (help/Docfiles/Tactical.REPEAT_LT.adoc 0), value REPEAT_LT (Tactical 53)
HOL Thm_cont.REPEAT_TCL (help/Docfiles/Thm_cont.REPEAT_TCL.adoc 0), value REPEAT_TCL (Thm_cont 6)
HOL Conv.REPEATC (help/Docfiles/Conv.REPEATC.adoc 0), value REPEATC (Conv 34), value REPEATC (RJBConv 8)
value repeatn (errormonad 16), value repeatn (optmonad 16), value repeatn (seqmonad 16)
value REPEATQC (liteLib 122)
type repetitions (RW 53)
value replace_current (qbuf 9)
value replace_null_links (Pretype 41)
value replacement (mungeTools 19)
HOL listLib.REPLICATE (help/Docfiles/listLib.REPLICATE.adoc 0), value REPLICATE (rich_listTheory 16), value replicate (liteLib 45)
value REPLICATE_APPEND (rich_listTheory 292)
value REPLICATE_compute (rich_listTheory 295)
HOL listLib.REPLICATE_CONV (help/Docfiles/listLib.REPLICATE_CONV.adoc 0), value REPLICATE_CONV (ListConv1 42), value REPLICATE_CONV (listLib 56)
value replicate_def (bitstringTheory 23)
value REPLICATE_GENLIST (rich_listTheory 293)
value REPLICATE_NIL (rich_listTheory 294)
value replicate_tm (bitstringSyntax 57), value replicate_tm (rich_listSyntax 12)
value report (Count 95), value report (mlibUseful 11)
constructor rEQ (CooperSyntax 29)
value RES_ABSTRACT (res_quanTheory 5)
value RES_ABSTRACT_ABSTRACT (quotientTheory 85)
value RES_ABSTRACT_DEF (boolTheory 25)
value RES_ABSTRACT_EQUAL (res_quanTheory 6)
value RES_ABSTRACT_EQUAL_EQ (res_quanTheory 7)
value RES_ABSTRACT_IDEMPOT (res_quanTheory 8)
value RES_ABSTRACT_RSP (quotientTheory 86)
value res_abstract_tm (boolSyntax 32)
HOL Drule.RES_CANON (help/Docfiles/Drule.RES_CANON.adoc 0), value RES_CANON (Drule 87)
value RES_DISJ_EXISTS_DIST (res_quanTheory 9)
value RES_EXISTS (res_quanTheory 10)
value res_exists1_tm (boolSyntax 30)
value RES_EXISTS_ALT (res_quanTheory 11)
value RES_EXISTS_CONG (boolTheory 146)
HOL res_quanLib.RES_EXISTS_CONV (help/Docfiles/res_quanLib.RES_EXISTS_CONV.adoc 0), HOL res_quanTools.RES_EXISTS_CONV (help/Docfiles/res_quanTools.RES_EXISTS_CONV.adoc 0), value RES_EXISTS_CONV (res_quanTools 37)
value RES_EXISTS_DEF (boolTheory 26)
value RES_EXISTS_DISJ_DIST (res_quanTheory 12)
value RES_EXISTS_EMPTY (res_quanTheory 13)
value RES_EXISTS_EQUAL (res_quanTheory 14)
value RES_EXISTS_EQUIV (quotientTheory 87)
value RES_EXISTS_EQUIV_DEF (quotientTheory 11)
value RES_EXISTS_EQUIV_RSP (quotientTheory 88)
value RES_EXISTS_FALSE (boolTheory 147)
value RES_EXISTS_NULL (res_quanTheory 15)
value RES_EXISTS_PRS (quotientTheory 89)
value RES_EXISTS_REGULAR (quotientTheory 90)
value RES_EXISTS_REORDER (res_quanTheory 16)
value RES_EXISTS_RSP (quotientTheory 91)
value RES_EXISTS_THM (boolTheory 148)
value res_exists_tm (boolSyntax 29)
value RES_EXISTS_UNIQUE (res_quanTheory 17)
value RES_EXISTS_UNIQUE_ALT (res_quanTheory 18)
HOL res_quanLib.RES_EXISTS_UNIQUE_CONV (help/Docfiles/res_quanLib.RES_EXISTS_UNIQUE_CONV.adoc 0), value RES_EXISTS_UNIQUE_CONV (res_quanTools 38)
value RES_EXISTS_UNIQUE_DEF (boolTheory 27)
value RES_EXISTS_UNIQUE_EMPTY (res_quanTheory 19)
value RES_EXISTS_UNIQUE_NULL (res_quanTheory 20)
value RES_EXISTS_UNIQUE_REGULAR (quotientTheory 92)
value RES_EXISTS_UNIQUE_REGULAR_SAME (quotientTheory 93)
value RES_EXISTS_UNIQUE_RESPECTS_REGULAR (quotientTheory 94)
value RES_EXISTS_UNIQUE_THM (boolTheory 149)
value RES_EXISTS_UNIQUE_UNIV (res_quanTheory 21)
value RES_EXISTS_UNIV (res_quanTheory 22)
value RES_FORALL (res_quanTheory 23)
HOL res_quanLib.RES_FORALL_AND_CONV (help/Docfiles/res_quanLib.RES_FORALL_AND_CONV.adoc 0), HOL res_quanTools.RES_FORALL_AND_CONV (help/Docfiles/res_quanTools.RES_FORALL_AND_CONV.adoc 0), value RES_FORALL_AND_CONV (res_quanTools 41)
value RES_FORALL_CONG (boolTheory 150)
value RES_FORALL_CONJ_DIST (res_quanTheory 24)
HOL res_quanLib.RES_FORALL_CONV (help/Docfiles/res_quanLib.RES_FORALL_CONV.adoc 0), HOL res_quanTools.RES_FORALL_CONV (help/Docfiles/res_quanTools.RES_FORALL_CONV.adoc 0), value RES_FORALL_CONV (res_quanTools 36)
value RES_FORALL_DEF (boolTheory 28)
value RES_FORALL_DISJ_DIST (res_quanTheory 25)
value RES_FORALL_EMPTY (res_quanTheory 26)
value RES_FORALL_FORALL (res_quanTheory 27)
value RES_FORALL_NULL (res_quanTheory 28)
value RES_FORALL_PRS (quotientTheory 95)
value RES_FORALL_REGULAR (quotientTheory 96)
value RES_FORALL_REORDER (res_quanTheory 29)
value RES_FORALL_RSP (quotientTheory 97)
HOL res_quanLib.RES_FORALL_SWAP_CONV (help/Docfiles/res_quanLib.RES_FORALL_SWAP_CONV.adoc 0), HOL res_quanTools.RES_FORALL_SWAP_CONV (help/Docfiles/res_quanTools.RES_FORALL_SWAP_CONV.adoc 0), value RES_FORALL_SWAP_CONV (res_quanTools 43)
value RES_FORALL_THM (boolTheory 151)
value res_forall_tm (boolSyntax 28)
value RES_FORALL_TRUE (boolTheory 152)
value RES_FORALL_UNIQUE (res_quanTheory 30)
value RES_FORALL_UNIV (res_quanTheory 31)
value res_quan_grammars (res_quanTheory 36)
structure res_quanLib
structure res_quanTheory
structure res_quanTools
value RES_SELECT (res_quanTheory 32)
HOL res_quanLib.RES_SELECT_CONV (help/Docfiles/res_quanLib.RES_SELECT_CONV.adoc 0), value RES_SELECT_CONV (res_quanTools 39)
value RES_SELECT_DEF (boolTheory 29)
value RES_SELECT_EMPTY (res_quanTheory 33)
value RES_SELECT_THM (boolTheory 153)
value res_select_tm (boolSyntax 31)
value RES_SELECT_UNIV (res_quanTheory 34)
HOL Tactic.RES_TAC (help/Docfiles/Tactic.RES_TAC.adoc 0), value RES_TAC (Tactic 84), value res_tac (Tactic 85), value res_tac (lcsymtacs 67)
HOL Thm_cont.RES_THEN (help/Docfiles/Thm_cont.RES_THEN.adoc 0), value RES_THEN (Thm_cont 31)
value reserved_names_escaped (hhWriter 10)
HOL Lib.reset (help/Docfiles/Lib.reset.adoc 0), value reset (Lib 112), value reset (mlibRewrite 17)
value reset1 (Profile 10)
value reset_all (Profile 11)
value reset_cache (quotient 47)
value reset_hh (holyHammer 14)
value reset_multiplication_theorems (Norm_arith 9)
value reset_thm_count (Count 49)
HOL Feedback.reset_trace (help/Docfiles/Feedback.reset_trace.adoc 0), value reset_trace (Feedback 48)
HOL Feedback.reset_traces (help/Docfiles/Feedback.reset_traces.adoc 0), value reset_traces (Feedback 49)
value reshape_thm_hook (EmitML 4)
type resolution (mlibResolution 26), value resolution (mlibResolution 41)
value resolution' (mlibResolution 40)
constructor Resolve (mlibKernel 14), value RESOLVE (mlibClause 70), value RESOLVE (mlibKernel 25)
constructor Resolve' (mlibThm 13)
HOL Conv.RESORT_EXISTS_CONV (help/Docfiles/Conv.RESORT_EXISTS_CONV.adoc 0), value RESORT_EXISTS_CONV (Conv 88)
HOL Conv.RESORT_FORALL_CONV (help/Docfiles/Conv.RESORT_FORALL_CONV.adoc 0), value RESORT_FORALL_CONV (Conv 87)
value resp_equiv2_def (comparisonTheory 19)
value resp_equiv_def (comparisonTheory 20)
value respect_width_ref (Parse 188)
value RESPECTS (quotientTheory 80)
value respects_def (quotientTheory 12)
value RESPECTS_MP (quotientTheory 81)
value RESPECTS_o (quotientTheory 84)
value RESPECTS_REP_ABS (quotientTheory 82)
value RESPECTS_THM (quotientTheory 83)
value RESQ_CHOOSE_THEN (res_quanTools 56)
HOL res_quanTools.RESQ_EXISTS_TAC (help/Docfiles/res_quanTools.RESQ_EXISTS_TAC.adoc 0), value RESQ_EXISTS_TAC (res_quanTools 63)
HOL res_quanTools.RESQ_GEN_TAC (help/Docfiles/res_quanTools.RESQ_GEN_TAC.adoc 0), value RESQ_GEN_TAC (res_quanTools 61)
value RESQ_GEN_THEN (res_quanTools 58)
value RESQ_HALF_EXISTS_THEN (res_quanTools 55)
HOL res_quanLib.RESQ_HALF_SPEC (help/Docfiles/res_quanLib.RESQ_HALF_SPEC.adoc 0), HOL res_quanTools.RESQ_HALF_SPEC (help/Docfiles/res_quanTools.RESQ_HALF_SPEC.adoc 0), value RESQ_HALF_SPEC (res_quanTools 47)
value RESQ_HALF_SPECL (res_quanTools 48)
HOL res_quanTools.RESQ_IMP_RES_TAC (help/Docfiles/res_quanTools.RESQ_IMP_RES_TAC.adoc 0), value RESQ_IMP_RES_TAC (res_quanTools 66)
HOL res_quanTools.RESQ_IMP_RES_THEN (help/Docfiles/res_quanTools.RESQ_IMP_RES_THEN.adoc 0), value RESQ_IMP_RES_THEN (res_quanTools 64)
HOL res_quanTools.RESQ_MATCH_MP (help/Docfiles/res_quanTools.RESQ_MATCH_MP.adoc 0), value RESQ_MATCH_MP (res_quanTools 51)
HOL res_quanTools.RESQ_RES_TAC (help/Docfiles/res_quanTools.RESQ_RES_TAC.adoc 0), value RESQ_RES_TAC (res_quanTools 67)
HOL res_quanTools.RESQ_RES_THEN (help/Docfiles/res_quanTools.RESQ_RES_THEN.adoc 0), value RESQ_RES_THEN (res_quanTools 65)
HOL res_quanLib.RESQ_REWR_CANON (help/Docfiles/res_quanLib.RESQ_REWR_CANON.adoc 0), HOL res_quanTools.RESQ_REWR_CANON (help/Docfiles/res_quanTools.RESQ_REWR_CANON.adoc 0), value RESQ_REWR_CANON (res_quanTools 52)
HOL res_quanLib.RESQ_REWRITE1_CONV (help/Docfiles/res_quanLib.RESQ_REWRITE1_CONV.adoc 0), HOL res_quanTools.RESQ_REWRITE1_CONV (help/Docfiles/res_quanTools.RESQ_REWRITE1_CONV.adoc 0), value RESQ_REWRITE1_CONV (res_quanTools 44)
HOL res_quanLib.RESQ_REWRITE1_TAC (help/Docfiles/res_quanLib.RESQ_REWRITE1_TAC.adoc 0), HOL res_quanTools.RESQ_REWRITE1_TAC (help/Docfiles/res_quanTools.RESQ_REWRITE1_TAC.adoc 0), value RESQ_REWRITE1_TAC (res_quanTools 68)
HOL res_quanLib.RESQ_SPEC (help/Docfiles/res_quanLib.RESQ_SPEC.adoc 0), HOL res_quanTools.RESQ_SPEC (help/Docfiles/res_quanTools.RESQ_SPEC.adoc 0), value RESQ_SPEC (res_quanTools 49)
HOL res_quanTools.RESQ_SPECL (help/Docfiles/res_quanTools.RESQ_SPECL.adoc 0), value RESQ_SPECL (res_quanTools 50)
value resq_SS (res_quanTools 71), value resq_ss (res_quanTools 72)
value RESQ_STRIP_ASSUME_TAC (res_quanTools 60)
value RESQ_STRIP_GOAL_THEN (res_quanTools 59)
value RESQ_STRIP_TAC (res_quanTools 62)
value RESQ_STRIP_THM_THEN (res_quanTools 57)
value RESQ_TAC (res_quanTools 73)
value resquan_onestep (CooperSyntax 71)
constructor RESQUAN_OP (term_grammar 60), value resquan_op (term_grammar 158)
value resquan_remove (CooperSyntax 70)
value resquan_special (GrammarSpecials 6)
constructor ResquanOpTok (term_grammar 169)
value REST_DEF (pred_setTheory 32)
value REST_PSUBSET (pred_setTheory 334)
value REST_SING (pred_setTheory 335)
value REST_SUBSET (pred_setTheory 336)
value rest_tm (pred_setSyntax 37)
HOL proofManagerLib.restart (help/Docfiles/proofManagerLib.restart.adoc 0), value restart (Manager 23), value restart (proofManagerLib 23)
HOL proofManagerLib.restore (help/Docfiles/proofManagerLib.restore.adoc 0), value restore (History 13), value restore (Manager 20), value restore (proofManagerLib 25)
value restore_prover (Tactical 90)
HOL computeLib.RESTR_EVAL_CONV (help/Docfiles/computeLib.RESTR_EVAL_CONV.adoc 0), value RESTR_EVAL_CONV (computeLib 38)
HOL computeLib.RESTR_EVAL_RULE (help/Docfiles/computeLib.RESTR_EVAL_RULE.adoc 0), value RESTR_EVAL_RULE (computeLib 39)
HOL computeLib.RESTR_EVAL_TAC (help/Docfiles/computeLib.RESTR_EVAL_TAC.adoc 0), value RESTR_EVAL_TAC (computeLib 40)
value restrict (mlibSubst 23)
value RESTRICT_DEF (relationTheory 20)
value RESTRICT_LEMMA (relationTheory 107)
value restrict_tmenv (Unify 21)
value restricted_quantification_simp (int_arithTheory 72)
type Result (folMapping 35), type Result (folTools 53), type Result (metisTools 22), type result (OmegaMLShadow 11), type result (mlibOmega 14), value result (seq 20)
value results (Profile 13)
value retire_id (KernelSig 15)
value retire_name (KernelSig 34)
value retrieve (Redblackset 12)
value return (Coding 13), value return (errormonad 8), value return (optmonad 6), value return (seqmonad 6), value return (smpp 15), value return (stmonad 7)
constructor returnTo (PEGParse 19)
HOL Lib.rev_assoc (help/Docfiles/Lib.rev_assoc.adoc 0), HOL hol88Lib.rev_assoc (help/Docfiles/hol88Lib.rev_assoc.adoc 0), value rev_assoc (Lib 113), value rev_assoc (hol88Lib 17), value rev_assoc (liteLib 56)
value rev_count_list_def (bitstringTheory 24)
value REV_DEF (listTheory 39)
HOL bossLib.REV_FULL_SIMP_TAC (help/Docfiles/bossLib.REV_FULL_SIMP_TAC.adoc 0), value REV_FULL_SIMP_TAC (bossLib 93), value REV_FULL_SIMP_TAC (simpLib 175), value rev_full_simp_tac (bossLib 94), value rev_full_simp_tac (lcsymtacs 81), value rev_full_simp_tac (simpLib 176)
HOL Lib.rev_itlist (help/Docfiles/Lib.rev_itlist.adoc 0), value rev_itlist (Lib 115)
HOL Lib.rev_itlist2 (help/Docfiles/Lib.rev_itlist2.adoc 0), value rev_itlist2 (Lib 114)
value rev_order (mlibUseful 91)
value REV_REVERSE_LEM (listTheory 347)
value rev_splitlist (liteLib 49)
value revapp (Redblackmap 20), value revapp (Redblackset 25)
HOL Parse.reveal (help/Docfiles/Parse.reveal.adoc 0), value reveal (Parse 225)
HOL Tactical.REVERSE (help/Docfiles/Tactical.REVERSE.adoc 0), value REVERSE (Tactical 39), value REVERSE (rich_listTheory 489), value reverse (Tactical 40), value reverse (lcsymtacs 17)
value REVERSE_11 (listTheory 337), value REVERSE_11 (patricia_castsTheory 49)
value REVERSE_APPEND (listTheory 338), value REVERSE_APPEND (rich_listTheory 490)
HOL listLib.REVERSE_CONV (help/Docfiles/listLib.REVERSE_CONV.adoc 0), value REVERSE_CONV (ListConv1 23), value REVERSE_CONV (listLib 37)
value REVERSE_DEF (listTheory 38)
value REVERSE_DROP (rich_listTheory 296)
value REVERSE_EQ_NIL (listTheory 339), value REVERSE_EQ_NIL (rich_listTheory 491)
value REVERSE_EQ_SING (listTheory 340)
value REVERSE_FLAT (rich_listTheory 297)
value REVERSE_FOLDL (rich_listTheory 298)
value REVERSE_FOLDR (rich_listTheory 299)
value REVERSE_GENLIST (listTheory 341)
HOL Tactical.REVERSE_LT (help/Docfiles/Tactical.REVERSE_LT.adoc 0), value REVERSE_LT (Tactical 41)
value REVERSE_o_REVERSE (listTheory 346)
value REVERSE_PRS (quotient_listTheory 33)
value REVERSE_REV (listTheory 342)
value REVERSE_REVERSE (listTheory 343), value REVERSE_REVERSE (rich_listTheory 492)
value REVERSE_RSP (quotient_listTheory 34)
value REVERSE_SNOC (listTheory 344), value REVERSE_SNOC (rich_listTheory 493)
value REVERSE_SNOC_DEF (listTheory 345)
value reverse_tm (listSyntax 36)
value REVERSE_ZIP (rich_listTheory 300)
value REW_PROP_TAC (schneiderUtils 36)
value REWR (mlibThm 57)
HOL Conv.REWR_CONV (help/Docfiles/Conv.REWR_CONV.adoc 0), value REWR_CONV (Conv 7)
HOL Conv.REWR_CONV_A (help/Docfiles/Conv.REWR_CONV_A.adoc 0), value REWR_CONV_A (Conv 9)
constructor Rewrite (clauses 26), structure Rewrite, type rewrite (clauses 26), value REWRITE (mlibClause 66), value REWRITE (mlibRewrite 38), value Rewrite (RW 62), value rewrite (mlibRewrite 26), value rewrite (mlibTerm 119)
value REWRITE1_TAC (jbUtils 12), value REWRITE1_TAC (schneiderUtils 40)
HOL Rewrite.REWRITE_CONV (help/Docfiles/Rewrite.REWRITE_CONV.adoc 0), value REWRITE_CONV (Ho_Rewrite 15), value REWRITE_CONV (Rewrite 24)
value rewrite_qp (quantHeuristicsLib 132), value rewrite_qp (quantHeuristicsLibBase 142)
HOL Rewrite.REWRITE_RULE (help/Docfiles/Rewrite.REWRITE_RULE.adoc 0), value REWRITE_RULE (Ho_Rewrite 21), value REWRITE_RULE (RW 63), value REWRITE_RULE (Rewrite 30)
HOL Rewrite.REWRITE_TAC (help/Docfiles/Rewrite.REWRITE_TAC.adoc 0), value REWRITE_TAC (Ho_Rewrite 30), value REWRITE_TAC (RW 65), value REWRITE_TAC (Rewrite 39), value rewrite_tac (Rewrite 40), value rewrite_tac (lcsymtacs 21)
HOL bossLib.rewrites (help/Docfiles/bossLib.rewrites.adoc 0), HOL simpLib.rewrites (help/Docfiles/simpLib.rewrites.adoc 0), type rewrites (Rewrite 3), value rewrites (bossLib 70), value rewrites (mlibClauseset 27), value rewrites (simpLib 81)
value REWRITES_CONV (Rewrite 19)
constructor REWRITING (Trace 4)
type rewrs (mlibClause 51), type rewrs (mlibRewrite 12)
value rewrs_to_string (mlibRewrite 35)
value rextension (set_relationTheory 114)
constructor RF (Parse 13)
value rfs (bossLib 139), value rfs (lcsymtacs 94)
value rho (UnicodeChars 17)
HOL boolSyntax.rhs (help/Docfiles/boolSyntax.rhs.adoc 0), value rhs (boolSyntax 64), value rhs (mlibTerm 106)
value rhs_coeffs (Term_coeffs 9)
value rhs_concl (compute_rules 15)
value RHS_CONV (Conv 27)
value rich_list_grammars (rich_listTheory 353)
value RICH_LIST_ss (listLib 18), value RICH_LIST_ss (rich_listSimps 2)
structure rich_listSimps
structure rich_listSyntax
structure rich_listTheory
value rich_new_type (newtypeTools 4)
constructor RIGHT (EmitML 10), constructor RIGHT (HOLgrammars 4), constructor Right (CooperMath 16), value RIGHT (Parse 232)
value RIGHT_ADD_DISTRIB (arithmeticTheory 317)
HOL Conv.RIGHT_AND_EXISTS_CONV (help/Docfiles/Conv.RIGHT_AND_EXISTS_CONV.adoc 0), value RIGHT_AND_EXISTS_CONV (Conv 63)
HOL Conv.RIGHT_AND_FORALL_CONV (help/Docfiles/Conv.RIGHT_AND_FORALL_CONV.adoc 0), value RIGHT_AND_FORALL_CONV (Conv 55)
value RIGHT_AND_FORALL_THM (boolTheory 154)
value RIGHT_AND_OVER_OR (boolTheory 155)
HOL PairRules.RIGHT_AND_PEXISTS_CONV (help/Docfiles/PairRules.RIGHT_AND_PEXISTS_CONV.adoc 0), value RIGHT_AND_PEXISTS_CONV (PairRules 41)
HOL PairRules.RIGHT_AND_PFORALL_CONV (help/Docfiles/PairRules.RIGHT_AND_PFORALL_CONV.adoc 0), value RIGHT_AND_PFORALL_CONV (PairRules 34)
value RIGHT_ASSOC (Rules 7)
HOL Drule.RIGHT_BETA (help/Docfiles/Drule.RIGHT_BETA.adoc 0), value RIGHT_BETA (Drule 36)
value RIGHT_BETAS (liteLib 109)
value RIGHT_CONJ_TAC (schneiderUtils 37)
HOL Conv.RIGHT_CONV_RULE (help/Docfiles/Conv.RIGHT_CONV_RULE.adoc 0), value RIGHT_CONV_RULE (Conv 78)
value RIGHT_DISJ_TAC (schneiderUtils 38)
value RIGHT_DIST_NORM_CONV (Thm_convs 13)
HOL Drule.RIGHT_ETA (help/Docfiles/Drule.RIGHT_ETA.adoc 0), value RIGHT_ETA (Drule 5)
value RIGHT_EXISTS_AND_THM (boolTheory 156)
value RIGHT_EXISTS_IMP_THM (boolTheory 157)
value RIGHT_FORALL_IMP_THM (boolTheory 158)
value RIGHT_FORALL_OR_THM (boolTheory 159)
value RIGHT_ID_DEF (operatorTheory 10)
value RIGHT_IMP_AND_INTRO (quantHeuristicsTheory 89)
value RIGHT_IMP_AND_INTRO_RULE (quantHeuristicsTools 38)
HOL Conv.RIGHT_IMP_EXISTS_CONV (help/Docfiles/Conv.RIGHT_IMP_EXISTS_CONV.adoc 0), value RIGHT_IMP_EXISTS_CONV (Conv 74)
HOL Conv.RIGHT_IMP_FORALL_CONV (help/Docfiles/Conv.RIGHT_IMP_FORALL_CONV.adoc 0), value RIGHT_IMP_FORALL_CONV (Conv 70)
value RIGHT_IMP_OR_INTRO (quantHeuristicsTheory 90)
value RIGHT_IMP_OR_INTRO_RULE (quantHeuristicsTools 40)
HOL PairRules.RIGHT_IMP_PEXISTS_CONV (help/Docfiles/PairRules.RIGHT_IMP_PEXISTS_CONV.adoc 0), value RIGHT_IMP_PEXISTS_CONV (PairRules 51)
HOL PairRules.RIGHT_IMP_PFORALL_CONV (help/Docfiles/PairRules.RIGHT_IMP_PFORALL_CONV.adoc 0), value RIGHT_IMP_PFORALL_CONV (PairRules 48)
value RIGHT_LEMMA_DISJ_CASES_TAC (schneiderUtils 39)
HOL Drule.RIGHT_LIST_BETA (help/Docfiles/Drule.RIGHT_LIST_BETA.adoc 0), value RIGHT_LIST_BETA (Drule 38)
HOL PairRules.RIGHT_LIST_PBETA (help/Docfiles/PairRules.RIGHT_LIST_PBETA.adoc 0), value RIGHT_LIST_PBETA (PairRules 15)
HOL Conv.RIGHT_OR_EXISTS_CONV (help/Docfiles/Conv.RIGHT_OR_EXISTS_CONV.adoc 0), value RIGHT_OR_EXISTS_CONV (Conv 58)
value RIGHT_OR_EXISTS_THM (boolTheory 160)
HOL Conv.RIGHT_OR_FORALL_CONV (help/Docfiles/Conv.RIGHT_OR_FORALL_CONV.adoc 0), value RIGHT_OR_FORALL_CONV (Conv 67)
value RIGHT_OR_OVER_AND (boolTheory 161)
HOL PairRules.RIGHT_OR_PEXISTS_CONV (help/Docfiles/PairRules.RIGHT_OR_PEXISTS_CONV.adoc 0), value RIGHT_OR_PEXISTS_CONV (PairRules 37)
HOL PairRules.RIGHT_OR_PFORALL_CONV (help/Docfiles/PairRules.RIGHT_OR_PFORALL_CONV.adoc 0), value RIGHT_OR_PFORALL_CONV (PairRules 45)
HOL PairRules.RIGHT_PBETA (help/Docfiles/PairRules.RIGHT_PBETA.adoc 0), value RIGHT_PBETA (PairRules 13)
value RIGHT_RES_EXISTS_REGULAR (quotientTheory 98)
value RIGHT_RES_FORALL_REGULAR (quotientTheory 99)
value RIGHT_SUB_DISTRIB (arithmeticTheory 318)
value Rightarrow (UnicodeChars 71), value rightarrow (UnicodeChars 67)
value ring_11 (ringTheory 38)
value ring_accessors (ringTheory 40)
value ring_accfupds (ringTheory 41)
value ring_Axiom (ringTheory 39)
value ring_case_cong (ringTheory 42)
value ring_case_def (ringTheory 17)
value ring_component_equality (ringTheory 43)
value RING_CONV (ringLib 35)
value ring_fn_updates (ringTheory 44)
value ring_fupdcanon (ringTheory 45)
value ring_fupdcanon_comp (ringTheory 46)
value ring_fupdfupds (ringTheory 47)
value ring_fupdfupds_comp (ringTheory 48)
value ring_grammars (ringTheory 56)
value ring_induction (ringTheory 49)
value ring_is_semi_ring (ringTheory 50)
value ring_literal_11 (ringTheory 51)
value ring_literal_nchotomy (ringTheory 52)
value ring_nchotomy (ringTheory 53)
value RING_NORM_CONV (ringLib 34)
value ring_R0 (ringTheory 6)
value ring_R0_fupd (ringTheory 7)
value ring_R1 (ringTheory 8)
value ring_R1_fupd (ringTheory 9)
value ring_RM (ringTheory 10)
value ring_RM_fupd (ringTheory 11)
value ring_RN (ringTheory 12)
value ring_RN_fupd (ringTheory 13)
value ring_RP (ringTheory 14)
value ring_RP_fupd (ringTheory 15)
value ring_size_def (ringTheory 18)
value ring_TY_DEF (ringTheory 16)
value ring_updates_eq_literal (ringTheory 54)
structure ringLib
value ringNorm_grammars (ringNormTheory 55)
structure ringNormTheory
structure ringTheory
value RINTER (relationTheory 21)
value RINTER_ASSOC (relationTheory 108)
value RINTER_COMM (relationTheory 109)
value RINV_DEF (pred_setTheory 33)
value rinv_tm (pred_setSyntax 42)
value rinv_uniq (extrealTheory 337)
structure RJBConv
constructor rLT (CooperSyntax 29)
value RM_ABBREV_TAC (Q 59), value RM_ABBREV_TAC (markerLib 35)
value RM_ALL_ABBREVS_TAC (markerLib 36)
value RN_lemma1 (lebesgueTheory 33)
value RN_lemma2 (lebesgueTheory 34)
value rol (UnicodeChars 146)
value ROL_ADD (wordsTheory 184)
value ROL_BITWISE (wordsTheory 185)
value ROL_MOD (wordsTheory 186)
value ROLLE (limTheory 76)
value ROOT (logrootTheory 6), value root (transcTheory 17)
value ROOT_0 (transcTheory 154)
value ROOT_1 (transcTheory 155)
value ROOT_COMPUTE (logrootTheory 34)
value ROOT_DIV (logrootTheory 35), value ROOT_DIV (transcTheory 156)
value ROOT_exists (logrootTheory 38)
value ROOT_INV (transcTheory 157)
value ROOT_LE_MONO (logrootTheory 36)
value ROOT_LN (transcTheory 158)
value ROOT_LT_LEMMA (transcTheory 159)
value ROOT_MONO_LE (transcTheory 160)
value ROOT_MUL (transcTheory 161)
value ROOT_POS (transcTheory 162)
value ROOT_POS_LT (transcTheory 163)
value ROOT_POS_UNIQ (transcTheory 164)
value ROOT_POW_POS (transcTheory 165)
value root_tm (transcSyntax 16)
value ROOT_UNIQUE (logrootTheory 37)
value ror (UnicodeChars 147)
value ROR_ADD (wordsTheory 187)
value ROR_BITWISE (wordsTheory 188)
value ROR_CYCLE (wordsTheory 189)
value ROR_MOD (wordsTheory 190)
value ROR_ROL (wordsTheory 191)
value ROR_UINT_MAX (wordsTheory 192)
value rot (mlibUseful 121)
value rotate (Manager 42), value rotate (goalStack 18), value rotate (jrhTactics 12), value rotate (proofManagerLib 57)
value rotate_def (bitstringTheory 25)
HOL Tactical.ROTATE_LT (help/Docfiles/Tactical.ROTATE_LT.adoc 0), value ROTATE_LT (Tactical 38)
value rotate_proofs (Manager 44), value rotate_proofs (proofManagerLib 59)
value rotate_tm (bitstringSyntax 58)
value rotl (liteLib 42)
value rotr (liteLib 43)
value round_def (ieeeTheory 87)
value ROUNDFLOAT (ieeeTheory 19)
value roundmode2num_11 (ieeeTheory 123)
value roundmode2num_num2roundmode (ieeeTheory 125)
value roundmode2num_ONTO (ieeeTheory 124)
value roundmode2num_thm (ieeeTheory 126)
value roundmode_Axiom (ieeeTheory 127)
value roundmode_BIJ (ieeeTheory 88)
value roundmode_CASE (ieeeTheory 89)
value roundmode_case_cong (ieeeTheory 129)
value roundmode_case_def (ieeeTheory 130)
value roundmode_distinct (ieeeTheory 131)
value roundmode_EQ_roundmode (ieeeTheory 128)
value roundmode_induction (ieeeTheory 132)
value roundmode_nchotomy (ieeeTheory 133)
value roundmode_size_def (ieeeTheory 91)
value roundmode_TY_DEF (ieeeTheory 90)
HOL Lib.rpair (help/Docfiles/Lib.rpair.adoc 0), value rpair (Lib 116)
constructor RParen (type_tokens 2)
value RPOW_0 (transcTheory 166)
value RPOW_1 (transcTheory 167)
value RPOW_ADD (transcTheory 168)
value RPOW_ADD_MUL (transcTheory 169)
value rpow_def (transcTheory 18)
value RPOW_DIV (transcTheory 170)
value RPOW_DIV_BASE (transcTheory 171)
value RPOW_INV (transcTheory 172)
value RPOW_LE (transcTheory 173)
value RPOW_LT (transcTheory 174)
value RPOW_MUL (transcTheory 175)
value RPOW_NZ (transcTheory 176)
value RPOW_POS_LT (transcTheory 177)
value RPOW_RPOW (transcTheory 178)
value RPOW_SUB (transcTheory 179)
value RPOW_SUC_N (transcTheory 180)
value rpow_tm (transcSyntax 17)
value RPOW_UNIQ_BASE (transcTheory 181)
value RPOW_UNIQ_EXP (transcTheory 182)
value RPROD_DEF (pairTheory 12)
constructor rpt (PEGParse 3), value rpt (Tactical 52), value rpt (lcsymtacs 15)
value RRANGE (relationTheory 22)
value RREFL_EXP_def (set_relationTheory 5)
value RREFL_EXP_RSUBSET (set_relationTheory 40)
value RREFL_EXP_UNIV (set_relationTheory 41)
value RRESTR (tcTheory 9)
value RRESTRICT_DEF (finite_mapTheory 20), value RRESTRICT_DEF (relationTheory 23), value rrestrict_def (set_relationTheory 30)
value RRESTRICT_FEMPTY (finite_mapTheory 204)
value RRESTRICT_FUPDATE (finite_mapTheory 205)
value rrestrict_rrestrict (set_relationTheory 115)
value rrestrict_tc (set_relationTheory 116)
value rrestrict_to_rel_conv (set_relationTheory 117)
value rrestrict_union (set_relationTheory 118)
value RRRC1 (floatTheory 114)
value RRRC10 (floatTheory 115)
value RRRC11 (floatTheory 116)
value RRRC2 (floatTheory 117)
value RRRC3 (floatTheory 118)
value RRRC4 (floatTheory 119)
value RRRC5 (floatTheory 120)
value RRRC6 (floatTheory 121)
value RRRC7 (floatTheory 122)
value RRRC8 (floatTheory 123)
value RRRC9 (floatTheory 124)
value RRUNIV_def (set_relationTheory 6)
value rshadow_row_curried_def (OmegaTheory 27)
value rshadow_row_def (OmegaTheory 81)
value rshadow_row_ind (OmegaTheory 82)
value rshadow_row_tupled_primitive_def (OmegaTheory 28)
value rsquarefree (polyTheory 17)
value RSQUAREFREE_DECOMP (polyTheory 97)
value RSQUAREFREE_ROOTS (polyTheory 98)
value rsquo (UnicodeChars 104)
value RSUBSET (relationTheory 24)
value RSUBSET_ANTISYM (relationTheory 110)
value RSUBSET_antisymmetric (relationTheory 112)
value RSUBSET_WeakOrder (relationTheory 111)
value rsum (transcTheory 19)
value RSUM_BOUND (integralTheory 82)
value RSUM_DIFF_BOUND (integralTheory 83)
value rsum_tm (transcSyntax 18)
HOL Rsyntax (help/Docfiles/Rsyntax.adoc 0), structure Rsyntax
value RTC_CASES1 (relationTheory 113)
value RTC_CASES2 (relationTheory 114)
value RTC_CASES_RTC_TWICE (relationTheory 115)
value RTC_CASES_TC (relationTheory 116)
value RTC_DEF (relationTheory 25)
value RTC_eq_NRC (arithmeticTheory 320)
value RTC_EQC (relationTheory 117)
value RTC_IDEM (relationTheory 118)
value RTC_IM_TC (prim_recTheory 38)
value rtc_ind_right (set_relationTheory 119)
value RTC_INDUCT (relationTheory 119)
value RTC_INDUCT_RIGHT1 (relationTheory 120)
value RTC_INSERT (tcTheory 27)
value RTC_lifts_equalities (relationTheory 133)
value RTC_lifts_invariants (relationTheory 134)
value RTC_lifts_monotonicities (relationTheory 135)
value RTC_lifts_reflexive_transitive_relations (relationTheory 136)
value RTC_MONOTONE (relationTheory 121)
value RTC_NRC (arithmeticTheory 319)
value RTC_REFL (relationTheory 122)
value RTC_REFLEXIVE (relationTheory 123)
value RTC_RTC (relationTheory 124)
value RTC_RULES (relationTheory 125)
value RTC_RULES_RIGHT1 (relationTheory 126)
value RTC_SINGLE (relationTheory 127)
value RTC_STRONG_INDUCT (relationTheory 128)
value RTC_STRONG_INDUCT_RIGHT1 (relationTheory 129)
value RTC_SUBSET (relationTheory 130)
value RTC_TC_RC (relationTheory 131)
value RTC_TRANSITIVE (relationTheory 132)
constructor RtoL (mlibRewrite 13)
constructor RULE (ProvideUnicode 33), type rule (Abbrev 6), type rule (Count 11), type rule (folTools 18)
HOL Tactic.RULE_ASSUM_TAC (help/Docfiles/Tactic.RULE_ASSUM_TAC.adoc 0), value RULE_ASSUM_TAC (Tactic 37), value RULE_ASSUM_TAC (jrhTactics 31), value rule_assum_tac (Tactic 38), value rule_assum_tac (lcsymtacs 32)
type rule_element (term_grammar 9)
value rule_elements (term_grammar 37)
type rule_fixity (term_grammar 83)
value rule_fixityToString (term_grammar 191)
value RULE_INDUCT_THEN (IndDefRules 6)
value rule_induction_map (IndDefLib 24)
HOL Tactic.RULE_L_ASSUM_TAC (help/Docfiles/Tactic.RULE_L_ASSUM_TAC.adoc 0), value RULE_L_ASSUM_TAC (Tactic 39)
value RULE_OF_CONV (RJBConv 4)
type rule_record (term_grammar 42)
value RULE_TAC (IndDefRules 5)
value rule_tokens (term_grammar 184)
structure Rules, type rules (RW 54), value rules (term_grammar 137), value rules (type_grammar 19)
value rules_for (term_grammar 241)
constructor RuleUpdate (ProvideUnicode 9)
value RUNION (relationTheory 26)
value RUNION_ASSOC (relationTheory 137)
value RUNION_COMM (relationTheory 138)
value RUNIV (relationTheory 27)
value RUNIV_SUBSET (relationTheory 139)
value rv_conditional_expectation_def (probabilityTheory 22)
constructor RW (clauses 26), structure RW, value rw (bossLib 137), value rw (lcsymtacs 92)
value RW_CONV (RW 73)
value RW_RULE (RW 81)
value rw_solver (RW 26)
value RW_STEP (RW 34)
HOL BasicProvers.RW_TAC (help/Docfiles/BasicProvers.RW_TAC.adoc 0), HOL bossLib.RW_TAC (help/Docfiles/bossLib.RW_TAC.adoc 0), value RW_TAC (BasicProvers 24), value RW_TAC (RW 94), value RW_TAC (bossLib 95), value rw_tac (BasicProvers 25), value rw_tac (bossLib 96), value rw_tac (lcsymtacs 82)
HOL Lib.S (help/Docfiles/Lib.S.adoc 0), value S (Lib 15), value S (mlibUseful 28)
value s2n_11 (string_numTheory 14)
value s2n_compute (ASCIInumbersTheory 38)
value s2n_def (ASCIInumbersTheory 19), value s2n_def (string_numTheory 6)
value s2n_n2s (ASCIInumbersTheory 39), value s2n_n2s (string_numTheory 15)
value s2n_onto (string_numTheory 16)
value s2n_tm (ASCIInumbersSyntax 7)
value s2v_def (bitstringTheory 26)
value s2v_tm (bitstringSyntax 59)
value s2w_def (wordsTheory 26)
value s2w_tm (wordsSyntax 43)
value s2w_w2s (wordsTheory 559)
value S_ABS_L (combinTheory 31)
value S_ABS_R (combinTheory 32)
value S_AND_G_MULT (OmegaMath 12)
value S_DEF (combinTheory 10)
value S_THM (combinTheory 33)
value S_tm (combinSyntax 5)
value S_UNCURRY_R (pairTheory 51)
value safe_inst_cmp (markerLib 40)
value safe_unify (Pretype 30)
constructor SAME (Lib 2)
HOL Term.same_const (help/Docfiles/Term.same_const.adoc 0), value same_const (FinalTerm 57)
value SAME_KEY_UPDATE_DIFFER (combinTheory 30), value SAME_KEY_UPDATE_DIFFER (updateTheory 19)
value SAME_KEY_UPDATES_DIFFER (finite_mapTheory 206)
value samerel (Opening 76), value samerel (Travrules 26)
structure Sanity
value sanity_check (Sanity 51)
value sanity_check_all (Sanity 54)
value sanity_check_named_thm (Sanity 60)
value sanity_check_theory (Sanity 48)
value sanity_check_thm (Sanity 57)
value sanity_prove (Sanity 65)
exception SAT_cex (minisatProve 2)
type sat_config (satConfig 4)
value sat_grammars (satTheory 30)
value SAT_ORACLE (minisatProve 5)
HOL HolSatLib.SAT_PROVE (help/Docfiles/HolSatLib.SAT_PROVE.adoc 0), value SAT_PROVE (minisatProve 4)
structure satConfig
constructor SATISFIABLE (OmegaMLShadow 11), constructor SATISFIABLE (mlibOmega 14)
structure Satisfy, value SATISFY (Satisfy 46)
value SATISFY_CONV (Satisfy 47)
value SATISFY_REDUCER (SatisfySimps 2)
value SATISFY_ss (SatisfySimps 3)
value SATISFY_TAC (Satisfy 48)
structure SatisfySimps
structure satTheory
value saturate_add (wordsTheory 560)
value saturate_add_def (wordsTheory 27)
value saturate_add_tm (wordsSyntax 44)
value saturate_i2sw (integer_wordTheory 50)
value saturate_i2sw_0 (integer_wordTheory 51)
value saturate_i2sw_def (integer_wordTheory 10)
value saturate_i2sw_tm (integer_wordSyntax 9)
value saturate_i2w_0 (integer_wordTheory 52)
value saturate_i2w_def (integer_wordTheory 11)
value saturate_i2w_tm (integer_wordSyntax 10)
value saturate_mul (wordsTheory 561)
value saturate_mul_def (wordsTheory 28)
value saturate_mul_tm (wordsSyntax 45)
value saturate_n2w_def (wordsTheory 29)
value saturate_n2w_tm (wordsSyntax 46)
value saturate_sub (wordsTheory 562)
value saturate_sub_def (wordsTheory 30)
value saturate_sub_tm (wordsSyntax 47)
value saturate_sw2sw (integer_wordTheory 53)
value saturate_sw2sw_def (integer_wordTheory 12)
value saturate_sw2sw_tm (integer_wordSyntax 11)
value saturate_sw2w (integer_wordTheory 54)
value saturate_sw2w_def (integer_wordTheory 13)
value saturate_sw2w_tm (integer_wordSyntax 12)
value saturate_w2sw (integer_wordTheory 55)
value saturate_w2sw_def (integer_wordTheory 14)
value saturate_w2sw_tm (integer_wordSyntax 13)
value saturate_w2w (wordsTheory 563)
value saturate_w2w_def (wordsTheory 31)
value saturate_w2w_n2w (wordsTheory 564)
value saturate_w2w_tm (wordsSyntax 48)
HOL proofManagerLib.save (help/Docfiles/proofManagerLib.save.adoc 0), value save (History 14), value save (Manager 21), value save (proofManagerLib 26)
value save_defn (Defn 51)
value save_dep (FinalThm 122)
HOL Theory.save_thm (help/Docfiles/Theory.save_thm.adoc 0), value save_thm (Sanity 66), value save_thm (Theory 22)
HOL Lib.say (help/Docfiles/Lib.say.adoc 0), value say (Lib 117)
value saying (Lib 118)
value sbag_cache (bagLib 59), value sbag_cache (bagSimps 31)
value SBAG_SOLVE (bagLib 58), value SBAG_SOLVE (bagSimps 27)
value SBAG_SOLVE_ss (bagLib 57), value SBAG_SOLVE_ss (bagSimps 20)
HOL reduceLib.SBC_CONV (help/Docfiles/reduceLib.SBC_CONV.adoc 0), value SBC_CONV (Arithconv 13), value SBC_CONV (reduceLib 20)
value SBEFORE (Temporal_LogicTheory 9)
value SBEFORE_AS_BEFORE (Temporal_LogicTheory 80)
value SBEFORE_AS_CO_BUECHI (Omega_AutomataTheory 39)
value SBEFORE_AS_SUNTIL (Temporal_LogicTheory 81)
value SBEFORE_AS_SWHEN (Temporal_LogicTheory 82)
value SBEFORE_AS_UNTIL (Temporal_LogicTheory 83)
value SBEFORE_AS_WHEN (Temporal_LogicTheory 84)
value SBEFORE_EVENT (Temporal_LogicTheory 85)
value SBEFORE_EXPRESSIVE (Past_Temporal_LogicTheory 38)
value SBEFORE_IDEM (Temporal_LogicTheory 86)
value SBEFORE_IMP (Temporal_LogicTheory 87)
value SBEFORE_INVARIANT (Temporal_LogicTheory 88)
value SBEFORE_LINORD (Temporal_LogicTheory 89)
value SBEFORE_NEXT (Temporal_LogicTheory 90)
value SBEFORE_REC (Temporal_LogicTheory 91)
value SBEFORE_SIGNAL (Temporal_LogicTheory 92)
value SBEFORE_SIMP (Temporal_LogicTheory 93)
value SBIT_def (bitTheory 18)
value SBIT_DIV (bitTheory 123)
value SBIT_MULT (bitTheory 124)
value sbit_tm (bitSyntax 17)
value SC_DEF (relationTheory 28)
value SC_IDEM (relationTheory 140)
value SC_lifts_equalities (relationTheory 143)
value SC_lifts_monotonicities (relationTheory 144)
value SC_MONOTONE (relationTheory 141)
value SC_SYMMETRIC (relationTheory 142)
value SCANL (rich_listTheory 17)
HOL listLib.SCANL_CONV (help/Docfiles/listLib.SCANL_CONV.adoc 0), value SCANL_CONV (ListConv1 40), value SCANL_CONV (listLib 54)
value scanl_tm (rich_listSyntax 13)
value scanMLstring (MLstring 4)
value SCANR (rich_listTheory 18)
HOL listLib.SCANR_CONV (help/Docfiles/listLib.SCANR_CONV.adoc 0), value SCANR_CONV (ListConv1 41), value SCANR_CONV (listLib 55)
value scanr_tm (rich_listSyntax 14)
structure schneiderUtils
value SCHROEDER_BERNSTEIN (util_probTheory 140)
value SCHROEDER_BERNSTEIN_AUTO (util_probTheory 141)
value SCHROEDER_CLOSE (util_probTheory 142)
value schroeder_close_def (util_probTheory 16)
value SCHROEDER_CLOSE_SET (util_probTheory 144)
value SCHROEDER_CLOSE_SUBSET (util_probTheory 145)
value SCHROEDER_CLOSED (util_probTheory 143)
HOL Theory.scrub (help/Docfiles/Theory.scrub.adoc 0), value scrub (Theory 92)
value scrub_const (clauses 49), value scrub_const (computeLib 18)
value scrub_thms (clauses 50), value scrub_thms (computeLib 19)
value sdest_binder (HolKernelDoc 48)
value sdest_binop (HolKernelDoc 49)
value sdest_monop (HolKernelDoc 50)
value sdiff (enumeralTheory 109)
value sdiff_curried (enumeralTheory 50)
value sdiff_ind (enumeralTheory 110)
value sdiff_tupled_primitive (enumeralTheory 51)
HOL Cond_rewrite.search_top_down (help/Docfiles/Cond_rewrite.search_top_down.adoc 0), value search_top_down (Cond_rewrite 17)
value SEG (rich_listTheory 19)
value SEG_0_SNOC (rich_listTheory 301)
value SEG_APPEND (rich_listTheory 302)
value SEG_APPEND1 (rich_listTheory 303)
value SEG_APPEND2 (rich_listTheory 304)
value SEG_compute (rich_listTheory 313)
HOL listLib.SEG_CONV (help/Docfiles/listLib.SEG_CONV.adoc 0), value SEG_CONV (ListConv1 35), value SEG_CONV (listLib 49)
value seg_def (pathTheory 32)
value SEG_LASTN_BUTLASTN (rich_listTheory 305)
value SEG_LENGTH_ID (rich_listTheory 306)
value SEG_LENGTH_SNOC (rich_listTheory 307)
value seg_of (KernelSig 17)
value SEG_REVERSE (rich_listTheory 308)
value SEG_SEG (rich_listTheory 309)
value SEG_SNOC (rich_listTheory 310)
value SEG_SUC_CONS (rich_listTheory 311)
value SEG_TAKE_BUTFISTN (rich_listTheory 312)
value seg_tm (rich_listSyntax 15)
HOL boolSyntax.select (help/Docfiles/boolSyntax.select.adoc 0), value select (boolSyntax 11), value select (mlibResolution 32)
value SELECT_AX (boolTheory 8)
HOL Conv.SELECT_CONV (help/Docfiles/Conv.SELECT_CONV.adoc 0), value SELECT_CONV (Conv 81)
HOL Drule.SELECT_ELIM (help/Docfiles/Drule.SELECT_ELIM.adoc 0), value SELECT_ELIM (Drule 27)
HOL Tactic.SELECT_ELIM_TAC (help/Docfiles/Tactic.SELECT_ELIM_TAC.adoc 0), value SELECT_ELIM_TAC (Tactic 96)
value SELECT_ELIM_THM (boolTheory 162)
HOL Drule.SELECT_EQ (help/Docfiles/Drule.SELECT_EQ.adoc 0), value SELECT_EQ (Drule 33)
value SELECT_EXISTS_TAC (schneiderUtils 41)
value select_fun_constant (quantHeuristicsLibAbbrev 21)
value select_fun_match (quantHeuristicsLibAbbrev 31)
value select_fun_match_occ (quantHeuristicsLibAbbrev 30)
value select_fun_pabs (quantHeuristicsLibAbbrev 24)
value select_fun_pattern (quantHeuristicsLibAbbrev 33)
value select_fun_pattern_occ (quantHeuristicsLibAbbrev 32)
value select_funs_combine (quantHeuristicsLibAbbrev 19)
HOL Drule.SELECT_INTRO (help/Docfiles/Drule.SELECT_INTRO.adoc 0), value SELECT_INTRO (Drule 26)
value SELECT_REFL (boolTheory 163)
value SELECT_REFL_2 (boolTheory 164)
HOL Drule.SELECT_RULE (help/Docfiles/Drule.SELECT_RULE.adoc 0), value SELECT_RULE (Drule 28)
value SELECT_TAC (normalForms 212), value SELECT_TAC (schneiderUtils 42)
value SELECT_THM (boolTheory 165)
value SELECT_UNIQUE (boolTheory 166)
value SELECT_UNIQUE_RULE (schneiderUtils 43)
value SELECT_UNIQUE_TAC (schneiderUtils 44)
value SELECT_UNIQUE_THM (schneiderUtils 45)
type selection_fun (quantHeuristicsLibAbbrev 4)
value semi_ring_11 (semi_ringTheory 38)
value semi_ring_accessors (semi_ringTheory 40)
value semi_ring_accfupds (semi_ringTheory 41)
value semi_ring_Axiom (semi_ringTheory 39)
value semi_ring_case_cong (semi_ringTheory 42)
value semi_ring_case_def (semi_ringTheory 15)
value semi_ring_component_equality (semi_ringTheory 43)
value semi_ring_fn_updates (semi_ringTheory 44)
value semi_ring_fupdcanon (semi_ringTheory 45)
value semi_ring_fupdcanon_comp (semi_ringTheory 46)
value semi_ring_fupdfupds (semi_ringTheory 47)
value semi_ring_fupdfupds_comp (semi_ringTheory 48)
value semi_ring_grammars (semi_ringTheory 55)
value semi_ring_induction (semi_ringTheory 49)
value semi_ring_literal_11 (semi_ringTheory 50)
value semi_ring_literal_nchotomy (semi_ringTheory 51)
value semi_ring_nchotomy (semi_ringTheory 52)
value semi_ring_of_def (ringTheory 19)
value semi_ring_size_def (semi_ringTheory 16)
value semi_ring_SR0 (semi_ringTheory 6)
value semi_ring_SR0_fupd (semi_ringTheory 7)
value semi_ring_SR1 (semi_ringTheory 8)
value semi_ring_SR1_fupd (semi_ringTheory 9)
value semi_ring_SRM (semi_ringTheory 10)
value semi_ring_SRM_fupd (semi_ringTheory 11)
value semi_ring_SRP (semi_ringTheory 12)
value semi_ring_SRP_fupd (semi_ringTheory 13)
value semi_ring_TY_DEF (semi_ringTheory 14)
value semi_ring_updates_eq_literal (semi_ringTheory 53)
structure semi_ringTheory
value send_to_back_overload (Parse 107)
value send_to_back_overloading (Overload 53)
value separate (Lib 119)
value SEPARATE_BEFORE_THM (Past_Temporal_LogicTheory 39)
value SEPARATE_NEXT_THM (Past_Temporal_LogicTheory 40)
value SEPARATE_PNEXT_THM (Past_Temporal_LogicTheory 41)
value SEPARATE_PSUNTIL_THM (Past_Temporal_LogicTheory 42)
value SEPARATE_SUNTIL_THM (Past_Temporal_LogicTheory 43)
constructor seq (PEGParse 3), structure seq, type seq (Sequence 17), type seq (seq 13), value SEQ (seqTheory 25)
value SEQ_ABS (seqTheory 26)
value SEQ_ABS_IMP (seqTheory 27)
value SEQ_ADD (seqTheory 28)
value seq_append (Sequence 18)
value SEQ_BCONV (seqTheory 29)
value SEQ_BOUNDED (seqTheory 30)
value SEQ_BOUNDED_2 (seqTheory 31)
value SEQ_CAUCHY (seqTheory 32)
value SEQ_CBOUNDED (seqTheory 33)
value seq_chop (Sequence 19)
value seq_cons (Sequence 20)
value SEQ_CONST (seqTheory 34)
value seq_diagonalize (Sequence 37)
value SEQ_DIRECT (seqTheory 35)
value SEQ_DIV (seqTheory 36)
value seq_filter (Sequence 21)
value seq_flat (Sequence 22)
value seq_grammars (seqTheory 83)
value seq_hd (Sequence 23)
value SEQ_ICONV (seqTheory 37)
value seq_interleave (Sequence 24)
value SEQ_INV (seqTheory 38)
value SEQ_INV0 (seqTheory 39)
value seq_iterate (Sequence 25)
value SEQ_LE (seqTheory 40)
value SEQ_LE_IMP_LIM_LE (seqTheory 41)
value SEQ_LE_MONO (seqTheory 42)
value SEQ_LIM (seqTheory 43)
value seq_map (Sequence 28)
value seq_mapfilter (Sequence 29)
value seq_mapp (Sequence 27)
value SEQ_MONO_LE (seqTheory 45)
value SEQ_MONOSUB (seqTheory 44)
value SEQ_MUL (seqTheory 46)
value SEQ_NEG (seqTheory 47)
value SEQ_NEG_BOUNDED (seqTheory 48)
value SEQ_NEG_CONV (seqTheory 49)
value seq_nil (Sequence 30)
value seq_of_list (Sequence 33)
value seq_permutations (Sequence 38)
value SEQ_POWER (seqTheory 50)
value SEQ_POWER_ABS (seqTheory 51)
value seq_print (Sequence 31)
value seq_pull (Sequence 32)
value SEQ_REAL_SUM_IMAGE (real_sigmaTheory 40)
value SEQ_SANDWICH (util_probTheory 146)
value SEQ_SBOUNDED (seqTheory 52)
value seq_single (Sequence 35)
value SEQ_SUB (seqTheory 53)
value SEQ_SUBLE (seqTheory 54)
value SEQ_SUC (seqTheory 55)
value seq_sup_def (lebesgueTheory 24)
value seq_sup_def_compute (lebesgueTheory 146)
value SEQ_TENDS (netsTheory 34)
value seq_tl (Sequence 36)
value SEQ_UNIQ (seqTheory 56)
structure seqmonad, type seqmonad (seqmonad 3)
structure seqTheory
structure Sequence
value sequence_def (errorStateMonadTheory 22), value sequence_def (state_transformerTheory 18)
value sequence_nil (errorStateMonadTheory 51), value sequence_nil (state_transformerTheory 42)
value SER_0 (seqTheory 57)
value SER_ABS (seqTheory 58)
value SER_ACONV (seqTheory 59)
value SER_ADD (seqTheory 60)
value SER_CAUCHY (seqTheory 61)
value SER_CDIV (seqTheory 62)
value SER_CMUL (seqTheory 63)
value SER_COMPAR (seqTheory 64)
value SER_COMPARA (seqTheory 65)
value SER_GROUP (seqTheory 66)
value SER_LE (seqTheory 67)
value SER_LE2 (seqTheory 68)
value SER_NEG (seqTheory 69)
value SER_OFFSET (seqTheory 70)
value SER_PAIR (seqTheory 71)
value SER_POS (util_probTheory 147)
value SER_POS_COMPARE (util_probTheory 148)
value SER_POS_LE (seqTheory 72)
value SER_POS_LT (seqTheory 73)
value SER_POS_LT_PAIR (seqTheory 74)
value SER_POS_MONO (util_probTheory 149)
value SER_RATIO (seqTheory 75)
value SER_SUB (seqTheory 76)
value SER_ZERO (seqTheory 77)
type set (FinalTerm 6), type set (FinalThm 6), type set (HolKernelDoc 7), type set (Redblackset 3), type set (markerLib 3)
value set_associativity_at_level (term_grammar 239)
value set_assums (abstraction 8)
HOL proofManagerLib.set_backup (help/Docfiles/proofManagerLib.set_backup.adoc 0), value set_backup (Manager 19), value set_backup (proofManagerLib 27)
value SET_BAG_I (bagTheory 207)
value set_case_specials (GrammarSpecials 36)
value SET_CASES (pred_setTheory 337)
value set_classic_heuristic (Pmatch 28), value set_classic_heuristic (PmatchHeuristics 90)
value set_default_heuristic (Pmatch 27), value set_default_heuristic (PmatchHeuristics 89)
value set_dep (FinalTag 10), value set_dep (Tag 11)
HOL Lib.set_diff (help/Docfiles/Lib.set_diff.adoc 0), value set_diff (Lib 120)
value SET_DIFF_CONV (enumTacs 42)
HOL Lib.set_eq (help/Docfiles/Lib.set_eq.adoc 0), value set_eq (Lib 121)
value SET_EQ_SUBSET (pred_setTheory 338)
value SET_EXPR_CONV (enumTacs 45)
value SET_EXPR_TO_OWL (enumTacs 44)
value set_fix (mlibModel 24)
HOL Parse.set_fixity (help/Docfiles/Parse.set_fixity.adoc 0), value set_fixity (Parse 95)
HOL holCheckLib.set_flag_abs (help/Docfiles/holCheckLib.set_flag_abs.adoc 0)
value set_flag_is_cnf (satConfig 19)
value set_flag_is_proved (satConfig 20)
HOL holCheckLib.set_flag_ric (help/Docfiles/holCheckLib.set_flag_ric.adoc 0)
value set_foldi_keys (sptreeTheory 99)
HOL proofManagerLib.set_goal (help/Docfiles/proofManagerLib.set_goal.adoc 0), value set_goal (Manager 14), value set_goal (proofManagerLib 12)
value set_goal_pp (Manager 51), value set_goal_pp (goalStack 27), value set_goal_pp (proofManagerLib 63)
value set_goaltree (proofManagerLib 13)
value set_gspec (term_pp_utils 13)
value set_heuristic (PmatchHeuristics 85)
value set_heuristic_fun (PmatchHeuristics 86)
value set_heuristic_list_cases (PmatchHeuristics 88)
value set_heuristic_list_size (PmatchHeuristics 87)
HOL Rewrite.set_implicit_rewrites (help/Docfiles/Rewrite.set_implicit_rewrites.adoc 0), value set_implicit_rewrites (Ho_Rewrite 7), value set_implicit_rewrites (Rewrite 12)
value set_implicit_simpls (RW 22)
HOL pred_setLib.SET_INDUCT_TAC (help/Docfiles/pred_setLib.SET_INDUCT_TAC.adoc 0), value SET_INDUCT_TAC (PSet_ind 4), value SET_INDUCT_TAC (pred_setLib 5)
value set_infile (satConfig 17)
HOL holCheckLib.set_init (help/Docfiles/holCheckLib.set_init.adoc 0)
HOL Parse.set_known_constants (help/Docfiles/Parse.set_known_constants.adoc 0), value set_known_constants (Parse 228)
value set_limit (History 8)
HOL listLib.set_list_thm_database (help/Docfiles/listLib.set_list_thm_database.adoc 0)
value set_MAP_FST_fmap_to_alist (alistTheory 66)
HOL Parse.set_mapped_fixity (help/Docfiles/Parse.set_mapped_fixity.adoc 0), value set_mapped_fixity (Parse 96)
value set_minimization (holyHammer 11)
value SET_MINIMUM (pred_setTheory 339)
HOL Theory.set_MLname (help/Docfiles/Theory.set_MLname.adoc 0), value set_MLname (Theory 98)
HOL holCheckLib.set_name (help/Docfiles/holCheckLib.set_name.adoc 0)
value SET_OF_BAG (bagTheory 32)
value SET_OF_BAG_DIFF_SUBSET_down (bagTheory 208)
value SET_OF_BAG_DIFF_SUBSET_up (bagTheory 209)
value SET_OF_BAG_EQ_EMPTY (bagTheory 210)
value SET_OF_BAG_EQ_INSERT (bagTheory 211)
value SET_OF_BAG_IMAGE (bagTheory 212)
value SET_OF_BAG_INSERT (bagTheory 213)
value SET_OF_BAG_MERGE (bagTheory 214)
value SET_OF_BAG_UNION (bagTheory 215)
value SET_OF_EL_BAG (bagTheory 216)
value SET_OF_EMPTY (bagTheory 217)
value set_OWL_thm (enumeralTheory 111)
value set_prediction (holyHammer 15)
value set_predictor (holyHammer 16)
value set_predictors (holyHammer 13)
value set_proof (satConfig 18)
HOL holCheckLib.set_props (help/Docfiles/holCheckLib.set_props.adoc 0)
value set_prover (Tactical 89)
value SET_REL (quotient_pred_setTheory 47)
value SET_REL_MP (quotient_pred_setTheory 48)
value set_relation_grammars (set_relationTheory 150)
structure set_relationTheory
value set_reln (Defn 40)
value set_sat_prove (HolQbfLib 9)
value set_skip (clauses 52), value set_skip (computeLib 16)
value set_solver (satConfig 16)
HOL pred_setLib.SET_SPEC_CONV (help/Docfiles/pred_setLib.SET_SPEC_CONV.adoc 0), value SET_SPEC_CONV (PGspec 3), value SET_SPEC_CONV (pred_setLib 4)
value SET_SPEC_ss (pred_setSimps 2), value SET_SPEC_ss (pred_setTheory 457)
HOL holCheckLib.set_state (help/Docfiles/holCheckLib.set_state.adoc 0)
value set_term (satConfig 15)
value set_term_printer (Parse 195)
value set_timeout (holyHammer 12)
value set_TO_DISPLAY_CONV (enumTacs 30)
value set_TO_ENUMERAL_CONV (enumTacs 21)
value SET_TO_LIST_CARD (containerTheory 37), value SET_TO_LIST_CARD (listTheory 348)
value SET_TO_LIST_EMPTY (listTheory 349)
value SET_TO_LIST_IN_MEM (containerTheory 40), value SET_TO_LIST_IN_MEM (listTheory 352)
value SET_TO_LIST_IND (containerTheory 38), value SET_TO_LIST_IND (listTheory 350)
value SET_TO_LIST_INV (containerTheory 39), value SET_TO_LIST_INV (listTheory 351)
value SET_TO_LIST_primitive (listTheory 40)
value SET_TO_LIST_SING (containerTheory 41), value SET_TO_LIST_SING (listTheory 353)
value SET_TO_LIST_THM (containerTheory 42), value SET_TO_LIST_THM (listTheory 354)
value set_TO_OWL (enumTacs 47)
HOL Feedback.set_trace (help/Docfiles/Feedback.set_trace.adoc 0), value set_trace (Feedback 47)
HOL holCheckLib.set_trans (help/Docfiles/holCheckLib.set_trans.adoc 0)
HOL holCheckLib.set_vord (help/Docfiles/holCheckLib.set_vord.adoc 0)
value setbvs (term_pp_utils 4)
value setelementof (UnicodeChars 132)
value setify (mlibUseful 83)
value SETOK_LE_LT (realTheory 398)
value setsuc_def (wotTheory 13)
value settings (mlibMetis 43)
value SFUNPOW_def (numeral_bitTheory 8)
value SGN_def (intExtensionTheory 5)
value shared_map (mlibUseful 74)
type shared_term (SharingTables 7)
type shared_thm (TypeBase 8), type shared_thm (TypeBasePure 11)
type shared_type (SharingTables 5)
structure SharingTables
value shift (Subst 6)
value SHIFT_1_SUB_1 (wordsTheory 193)
value SHIFT_ZERO (wordsTheory 194)
value shiftl_def (bitstringTheory 27)
value shiftl_replicate_F (bitstringTheory 84)
value shiftl_tm (bitstringSyntax 60)
value shiftr_0 (bitstringTheory 85)
value shiftr_def (bitstringTheory 28)
value shiftr_tm (bitstringSyntax 61)
value Shostak (Sol_ranges 4)
value show_assums (Globals 10)
value show_axioms (Globals 12)
value show_constraint (mlibClause 83)
value show_id (mlibClause 82)
HOL Parse.show_numeral_types (help/Docfiles/Parse.show_numeral_types.adoc 0), value show_numeral_types (Globals 9)
value show_rewrites (dep_rewrite 175)
value show_scrub (Globals 13)
HOL Globals.show_tags (help/Docfiles/Globals.show_tags.adoc 0), value show_tags (Globals 11)
HOL Globals.show_types (help/Docfiles/Globals.show_types.adoc 0), value show_types (Globals 7)
value show_types_verbosely (Globals 8)
type side (EmitML 10)
constructor SIDECOND_ATTEMPT (Trace 4)
constructor SIDECOND_NOT_SOLVED (Trace 4)
constructor SIDECOND_SOLVED (Trace 4)
value sigCamlSuffix (EmitML 30)
value Sigma (UnicodeChars 29), value sigma (UnicodeChars 18)
value SIGMA_ALGEBRA (measureTheory 198)
value SIGMA_ALGEBRA_ALGEBRA (measureTheory 199)
value SIGMA_ALGEBRA_ALT (measureTheory 200)
value SIGMA_ALGEBRA_ALT_DISJOINT (measureTheory 201)
value SIGMA_ALGEBRA_ALT_MONO (measureTheory 202)
value SIGMA_ALGEBRA_BOREL (measureTheory 203)
value SIGMA_ALGEBRA_COUNTABLE_UNION (measureTheory 204)
value sigma_algebra_def (measureTheory 28)
value SIGMA_ALGEBRA_ENUM (measureTheory 205)
value SIGMA_ALGEBRA_FN (measureTheory 206)
value SIGMA_ALGEBRA_FN_BIGINTER (measureTheory 207)
value SIGMA_ALGEBRA_FN_DISJOINT (measureTheory 208)
value SIGMA_ALGEBRA_SIGMA (measureTheory 209)
value sigma_def (measureTheory 29)
value SIGMA_POW (measureTheory 210)
value SIGMA_PROPERTY (measureTheory 211)
value SIGMA_PROPERTY_ALT (measureTheory 212)
value SIGMA_PROPERTY_DISJOINT (measureTheory 213)
value SIGMA_PROPERTY_DISJOINT_LEMMA (measureTheory 214)
value SIGMA_PROPERTY_DISJOINT_LEMMA1 (measureTheory 215)
value SIGMA_PROPERTY_DISJOINT_LEMMA2 (measureTheory 216)
value SIGMA_PROPERTY_DISJOINT_WEAK (measureTheory 217)
value SIGMA_REDUCE (measureTheory 218)
value SIGMA_SUBSET (measureTheory 219)
value SIGMA_SUBSET_MEASURABLE_SETS (measureTheory 220)
value SIGMA_SUBSET_SUBSETS (measureTheory 221)
value SIGN (floatTheory 125), value Sign (ieeeTheory 20), value sign (ieeeTheory 92), value sign (mlibMultiset 19)
value SIGN_EXTEND_def (bitTheory 19), value sign_extend_def (bitstringTheory 29)
value sign_extend_tm (bitSyntax 18), value sign_extend_tm (bitstringSyntax 62)
value signed_measure_space_def (lebesgueTheory 25)
value signed_saturate_add (integer_wordTheory 56)
value signed_saturate_add_def (integer_wordTheory 15)
value signed_saturate_add_tm (integer_wordSyntax 14)
value signed_saturate_sub (integer_wordTheory 57)
value signed_saturate_sub_def (integer_wordTheory 16)
value signed_saturate_sub_tm (integer_wordSyntax 15)
value sigSuffix (EmitML 28)
value SIMP (Sup_Inf 10), value simp (bossLib 131), value simp (lcsymtacs 86)
value simp_clauses (QbfConv 26)
HOL bossLib.SIMP_CONV (help/Docfiles/bossLib.SIMP_CONV.adoc 0), HOL simpLib.SIMP_CONV (help/Docfiles/simpLib.SIMP_CONV.adoc 0), value SIMP_CONV (bossLib 85), value SIMP_CONV (simpLib 142)
value SIMP_EXTREAL_ARCH (extrealTheory 116)
HOL simpLib.SIMP_PROVE (help/Docfiles/simpLib.SIMP_PROVE.adoc 0), value SIMP_PROVE (simpLib 141)
value SIMP_REAL_ARCH (extrealTheory 117)
value SIMP_REAL_ARCH_NEG (extrealTheory 118)
value SIMP_REC (prim_recTheory 9)
value SIMP_REC_EXISTS (prim_recTheory 39)
value SIMP_REC_REL (prim_recTheory 10)
value SIMP_REC_REL_UNIQUE (prim_recTheory 40)
value SIMP_REC_REL_UNIQUE_RESULT (prim_recTheory 41)
value SIMP_REC_THM (prim_recTheory 42)
HOL bossLib.SIMP_RULE (help/Docfiles/bossLib.SIMP_RULE.adoc 0), HOL simpLib.SIMP_RULE (help/Docfiles/simpLib.SIMP_RULE.adoc 0), value SIMP_RULE (bossLib 86), value SIMP_RULE (simpLib 192)
HOL bossLib.SIMP_TAC (help/Docfiles/bossLib.SIMP_TAC.adoc 0), HOL simpLib.SIMP_TAC (help/Docfiles/simpLib.SIMP_TAC.adoc 0), value SIMP_TAC (bossLib 87), value SIMP_TAC (simpLib 168), value simp_tac (bossLib 88), value simp_tac (lcsymtacs 78), value simp_tac (simpLib 169)
value simp_tcs (Defn 43)
value simp_unify_terms (Unify 13)
value simp_unify_terms_in_env (Unify 11)
structure simpfrag, type simpfrag (TypeBasePure 9), type simpfrag (simpfrag 9)
value SimpL (boolSimps 68), value SimpL (bossLib 79), value Simpl (RW 107)
value simpl_conv (Rules 22)
value SIMPLE_BAG_NORMALISE_CONV (bagLib 71), value SIMPLE_BAG_NORMALISE_CONV (bagSimpleLib 13)
value SIMPLE_CHOOSE (Drule 11), value SIMPLE_CHOOSE (liteLib 150)
value simple_conj_congruence (CooperThms 27)
value simple_CONV (OmegaSimple 5)
value SIMPLE_DISJ_CASES (liteLib 149)
value simple_disj_congruence (CooperThms 26)
value simple_divides (CooperSyntax 65)
HOL Drule.SIMPLE_EXISTS (help/Docfiles/Drule.SIMPLE_EXISTS.adoc 0), value SIMPLE_EXISTS (Drule 10)
value SIMPLE_QUANT_ABBREV_CONV (quantHeuristicsLibAbbrev 14)
value SIMPLE_QUANT_ABBREV_TAC (quantHeuristicsLibAbbrev 15)
value SimpLHS (boolSimps 66), value SimpLHS (bossLib 77)
structure simpLib
value SIMPLIFY (Past_Temporal_LogicTheory 44), value simplify (Rules 23), value simplify (mlibCanon 12), value simplify (mlibClauseset 32)
value simplify_constrained_disjunct (CooperMath 65)
value simplify_constraints (CooperMath 63)
value SIMPLIFY_CONV (normalForms 66)
value simplify_ss (normalForms 65)
constructor Simpls (RW 54), type simpls (RW 5)
value simpls_of (TypeBase 33), value simpls_of (TypeBasePure 59)
value SimpR (boolSimps 69), value SimpR (bossLib 80)
value SimpRHS (boolSimps 67), value SimpRHS (bossLib 78)
type simpset (BasicProvers 3), type simpset (bossLib 4), type simpset (fracLib 7), type simpset (intExtensionLib 7), type simpset (normalForms 10), type simpset (ratLib 8), type simpset (simpLib 108)
value simulation_trace_inclusion (pathTheory 145)
value sin (transcTheory 20)
value SIN_0 (transcTheory 183)
value SIN_ACS_NZ (transcTheory 184)
value SIN_ADD (transcTheory 185)
value SIN_ASN (transcTheory 186)
value SIN_BOUND (transcTheory 187)
value SIN_BOUNDS (transcTheory 188)
value SIN_CIRCLE (transcTheory 189)
value SIN_CONVERGES (transcTheory 190)
value SIN_COS (transcTheory 191)
value SIN_COS_ADD (transcTheory 192)
value SIN_COS_NEG (transcTheory 193)
value SIN_COS_SQ (transcTheory 194)
value SIN_COS_SQRT (transcTheory 195)
value SIN_DOUBLE (transcTheory 196)
value SIN_FDIFF (transcTheory 197)
value SIN_NEG (transcTheory 198)
value SIN_NEGLEMMA (transcTheory 199)
value SIN_NPI (transcTheory 200)
value SIN_PAIRED (transcTheory 201)
value SIN_PERIODIC (transcTheory 202)
value SIN_PERIODIC_PI (transcTheory 203)
value SIN_PI (transcTheory 204)
value SIN_PI2 (transcTheory 205)
value SIN_POS (transcTheory 206)
value SIN_POS_PI (transcTheory 207)
value SIN_POS_PI2 (transcTheory 208)
value SIN_POS_PI2_LE (transcTheory 209)
value SIN_POS_PI_LE (transcTheory 210)
value sin_tm (transcSyntax 19)
value SIN_TOTAL (transcTheory 211)
value SIN_ZERO (transcTheory 212)
value SIN_ZERO_LEMMA (transcTheory 213)
value SING (pred_setTheory 340), value sing (mlibStream 24), value sing (mlibUseful 61)
value SING_applied (pred_setTheory 348)
value SING_BAG (bagTheory 33)
value SING_BAG_THM (bagTheory 218)
value SING_DEF (pred_setTheory 34)
value SING_DELETE (pred_setTheory 341)
value SING_EL_BAG (bagTheory 219)
value SING_EMPTY (pred_setTheory 342)
value SING_FINITE (pred_setTheory 343)
value SING_IFF_CARD1 (pred_setTheory 344)
value SING_IFF_EMPTY_REST (pred_setTheory 345)
value SING_INSERT (pred_setTheory 346)
value sing_tm (pred_setSyntax 23)
value SING_UNION (pred_setTheory 347)
value SINGL_APPLY_MAP (listTheory 355)
value SINGL_APPLY_PERMUTE (listTheory 356)
value SINGL_LIST_APPLY_L (listTheory 357)
value SINGL_LIST_APPLY_R (listTheory 358)
value SINGL_SINGL_APPLY (listTheory 359)
HOL Lib.single (help/Docfiles/Lib.single.adoc 0)
value SINGLE_DEPTH_CONV (liteLib 131)
value singleton (CharSet 5), value singleton (Redblackset 8)
HOL Lib.singleton_of_list (help/Docfiles/Lib.singleton_of_list.adoc 0), value singleton_of_list (Lib 122)
value singleton_real_shadow (OmegaTheory 83)
value singleton_seg (pathTheory 146)
value sinter (enumeralTheory 112)
value sinter_curried (enumeralTheory 52)
value sinter_ind (enumeralTheory 113)
value sinter_tupled_primitive (enumeralTheory 53)
value SIZE (fcpLib 10), value SIZE (patriciaTheory 119), value size (Net 25), value size (PIntMap 48), value size (Raw 18), value size (UTF8 6), value size (mlibClause 53), value size (mlibClauseset 25), value size (mlibHeap 15), value size (mlibLiteralnet 18), value size (mlibModel 37), value size (mlibPatricia 32), value size (mlibResolution 29), value size (mlibRewrite 19), value size (mlibSubsume 18), value size (mlibSupport 35), value size (mlibTermnet 18), value size (patriciaLib 23)
value SIZE_ADD (patriciaTheory 120)
value SIZE_def (patriciaTheory 26), value size_def (sptreeTheory 24)
value size_of (TypeBase 34), value size_of (TypeBasePure 60), value size_of (wordsSyntax 10)
value size_of0 (TypeBase 39), value size_of0 (TypeBasePure 66)
value size_profile (mlibLiteralnet 19)
value SIZE_PTREE_OF_NUMSET (patriciaTheory 121)
value SIZE_PTREE_OF_NUMSET_EMPTY (patriciaTheory 122)
value SIZE_REMOVE (patriciaTheory 123)
value size_tm (patriciaSyntax 22), value size_tm (sptreeSyntax 32)
HOL wordsLib.SIZES_CONV (help/Docfiles/wordsLib.SIZES_CONV.adoc 0), value SIZES_CONV (wordsLib 23)
HOL wordsLib.SIZES_ss (help/Docfiles/wordsLib.SIZES_ss.adoc 0), value SIZES_ss (wordsLib 6)
value SIZEw_def (patricia_castsTheory 26)
value sizew_tm (patricia_castsSyntax 22)
value SKELIM (Canon 16), value SKELIM (refuteLib 16)
value skew (mesonLib 14)
value SKI_CONV (normalForms 43)
value SKICo_CONV (normalForms 54)
value SKIP1_def (patricia_castsTheory 27)
value SKOLEM_CONST_RULE (normalForms 189)
HOL Conv.SKOLEM_CONV (help/Docfiles/Conv.SKOLEM_CONV.adoc 0), value SKOLEM_CONV (Canon_Port 12), value SKOLEM_CONV (Conv 76)
value SKOLEM_THM (boolTheory 167)
value skolemize (mlibCanon 22)
value SKOLEMIZE_CONV (normalForms 92)
value SLICE (mlibSolver 52)
value SLICE_COMP_RWT (bitTheory 126)
value SLICE_COMP_THM (bitTheory 127)
value SLICE_COMP_THM2 (bitTheory 128)
value SLICE_def (bitTheory 20)
value SLICE_THM (bitTheory 129)
value slice_tm (bitSyntax 19)
value SLICE_ZERO (bitTheory 130)
value SLICE_ZERO2 (bitTheory 131)
value SLICE_ZERO_THM (bitTheory 132)
value SLICELT_THM (bitTheory 125)
value SLO_LEX (totoTheory 43)
value SLO_listorder (totoTheory 44)
value smaller_satisfies_uppers (OmegaTheory 84)
value SMALLEST_CLOSED_CDI (measureTheory 222)
value smallest_closed_cdi_def (measureTheory 30)
value smany (mlibParser 24)
value smerge (enumeralTheory 114)
value smerge_curried (enumeralTheory 54)
value smerge_ind (enumeralTheory 116)
value smerge_nil (enumeralTheory 117)
value smerge_OL (enumeralTheory 115)
value smerge_out (enumeralTheory 118)
value smerge_out_curried (enumeralTheory 55)
value smerge_out_ind (enumeralTheory 119)
value smerge_out_tupled_primitive (enumeralTheory 56)
value smerge_tupled_primitive (enumeralTheory 57)
value sml_symbols (Lexis 4)
structure smpp
value SMV_AUTOMATON_CONV (temporalLib 17)
value smv_call (temporalLib 2)
value smv_path (temporalLib 3)
value SMV_RUN (temporalLib 19)
value SMV_RUN_FILE (temporalLib 18)
value smv_tmp_dir (temporalLib 4)
value SN_def (pathTheory 6), value SN_def (relationTheory 29)
value SN_finite_paths (pathTheory 53)
value SN_finite_paths_EQ (pathTheory 54)
HOL Lib.snd (help/Docfiles/Lib.snd.adoc 0), value SND (pairTheory 49), value snd (Lib 123), value snd (mlibUseful 43)
value SND_invtri0 (numpairTheory 21)
value SND_o_UNIT (state_transformerTheory 38)
value SND_PAIR_MAP (pairTheory 50)
value SND_PRS (quotient_pairTheory 22)
value SND_RSP (quotient_pairTheory 23)
value SND_select_fun (quantHeuristicsLibAbbrev 23)
value snd_tm (pairLib 15), value snd_tm (pairSyntax 12)
value SNOC (listTheory 41), value SNOC (rich_listTheory 494)
value SNOC_11 (listTheory 360), value SNOC_11 (rich_listTheory 495)
value SNOC_APPEND (listTheory 361), value SNOC_APPEND (rich_listTheory 496)
value SNOC_Axiom (listTheory 362), value SNOC_Axiom (rich_listTheory 497)
value SNOC_CASES (listTheory 363), value SNOC_CASES (rich_listTheory 498)
HOL listLib.SNOC_CONV (help/Docfiles/listLib.SNOC_CONV.adoc 0), value SNOC_CONV (ListConv1 22), value SNOC_CONV (listLib 36)
value SNOC_EL_FIRSTN (rich_listTheory 499)
value SNOC_EL_TAKE (rich_listTheory 314)
value SNOC_EQ_LENGTH_EQ (rich_listTheory 315)
value SNOC_FOLDR (rich_listTheory 316)
value SNOC_INDUCT (listTheory 364), value SNOC_INDUCT (rich_listTheory 500)
HOL listLib.SNOC_INDUCT_TAC (help/Docfiles/listLib.SNOC_INDUCT_TAC.adoc 0), value SNOC_INDUCT_TAC (ListConv1 9), value SNOC_INDUCT_TAC (listLib 23)
value SNOC_REVERSE_CONS (rich_listTheory 317)
value snoc_tm (listSyntax 37)
structure Sol_ranges
structure Solve, value solve (mlibSolver 30)
structure Solve_ineqs
value solved_filter (mlibSolver 25)
constructor Solver (RW 59), type solver (RW 59), type solver (mlibMetis 20), type solver (mlibSolver 19)
value solver_err (RW 25)
type solver_node (folTools 13), type solver_node (mlibMeson 8), type solver_node (mlibMetis 21), type solver_node (mlibSolver 45)
constructor Some (errormonad 3), value some (mlibParser 35)
value SOME_11 (optionTheory 57)
value SOME_APPLY_PERMUTE (optionTheory 58)
value SOME_DEF (optionTheory 18), value some_def (optionTheory 23)
value SOME_EL (rich_listTheory 501)
value SOME_EL_APPEND (rich_listTheory 502)
value SOME_EL_BUTFIRSTN (rich_listTheory 503)
value SOME_EL_BUTLASTN (rich_listTheory 504)
HOL listLib.SOME_EL_CONV (help/Docfiles/listLib.SOME_EL_CONV.adoc 0), value SOME_EL_CONV (ListConv1 29), value SOME_EL_CONV (listLib 43)
value SOME_EL_DISJ (rich_listTheory 505)
value SOME_EL_FIRSTN (rich_listTheory 506)
value SOME_EL_FOLDL (rich_listTheory 507)
value SOME_EL_FOLDL_MAP (rich_listTheory 508)
value SOME_EL_FOLDR (rich_listTheory 509)
value SOME_EL_FOLDR_MAP (rich_listTheory 510)
value SOME_EL_LASTN (rich_listTheory 511)
value SOME_EL_MAP (rich_listTheory 512)
value SOME_EL_PRS (quotient_listTheory 35)
value SOME_EL_REVERSE (rich_listTheory 513)
value SOME_EL_RSP (quotient_listTheory 36)
value SOME_EL_SEG (rich_listTheory 514)
value SOME_EL_SNOC (rich_listTheory 515)
value some_elim (optionTheory 71)
value some_EQ (optionTheory 69)
value SOME_EVENT (Temporal_LogicTheory 94)
value some_F (optionTheory 70)
value SOME_FUTURE_EVENT (Past_Temporal_LogicTheory 45)
value some_intro (optionTheory 72)
value some_nan (ieeeTheory 93)
value SOME_PAST_EVENT (Past_Temporal_LogicTheory 46)
value SOME_PRS (quotient_optionTheory 18)
value SOME_PTREE_def (patricia_castsTheory 28)
value some_ptree_tm (patricia_castsSyntax 10)
value SOME_RSP (quotient_optionTheory 19)
value SOME_SOME_APPLY (optionTheory 59)
value some_tm (optionLib 10), value some_tm (optionSyntax 9)
HOL Lib.sort (help/Docfiles/Lib.sort.adoc 0), value sort (AC_Sort 4), value sort (Lib 124), value sort (mlibUseful 102)
value sort2_def (mergesortTheory 15)
value sort2_perm (mergesortTheory 47)
value sort2_sorted (mergesortTheory 48)
value sort2_stable (mergesortTheory 49)
value sort2_tail_correct (mergesortTheory 50)
value sort2_tail_def (mergesortTheory 16)
value sort3_def (mergesortTheory 17)
value sort3_perm (mergesortTheory 51)
value sort3_sorted (mergesortTheory 52)
value sort3_stable (mergesortTheory 53)
value sort3_tail_correct (mergesortTheory 54)
value sort3_tail_def (mergesortTheory 18)
value SORT_AND_GATHER1_CONV (OmegaMath 10)
value SORT_AND_GATHER_CONV (Norm_arith 18), value SORT_AND_GATHER_CONV (OmegaMath 11)
value SORT_ENUM_UPDATES_CONV (updateLib 18)
value sort_map (mlibUseful 103)
value SORT_NUM_UPDATES_CONV (updateLib 16)
value SORT_UPDATES_CONV (updateLib 12)
value SORT_UPDATES_MAPTO_CONV (updateLib 13)
value SORT_WORD_UPDATES_CONV (updateLib 17)
value SORTED_ALL_DISTINCT (sortingTheory 112)
value SORTED_APPEND (sortingTheory 113)
value SORTED_APPEND_IFF (sortingTheory 114)
value sorted_count_list (sortingTheory 130)
value SORTED_curried_DEF (sortingTheory 14)
value SORTED_DEF (sortingTheory 115)
value SORTED_EL_LESS (sortingTheory 116)
value SORTED_EL_SUC (sortingTheory 117)
value SORTED_EQ (sortingTheory 118)
value SORTED_EQ_PART (sortingTheory 119)
value sorted_filter (sortingTheory 131)
value SORTED_GENLIST_PLUS (sortingTheory 120)
value SORTED_IND (sortingTheory 121)
value sorted_map (sortingTheory 132)
value SORTED_NIL (sortingTheory 122)
value sorted_perm_count_list (sortingTheory 133)
value SORTED_PERM_EQ (sortingTheory 123)
value SORTED_SING (sortingTheory 124)
value SORTED_TL (sortingTheory 125)
value sorted_tm (sortingSyntax 11)
value SORTED_tupled_primitive_DEF (sortingTheory 15)
value SORTED_weaken (sortingTheory 126)
value sorting_grammars (sortingTheory 136)
structure sortingSyntax
structure sortingTheory
value SORTS_DEF (sortingTheory 16)
type sos (mlibSupport 30)
type sos_filter (mlibSolver 65)
value SPACE (measureTheory 223), value space (mlibParser 54)
value SPACE_BOREL (measureTheory 224)
value space_def (measureTheory 31)
value SPACE_SIGMA (measureTheory 225)
value SPACE_SMALLEST_CLOSED_CDI (measureTheory 226)
HOL Thm.SPEC (help/Docfiles/Thm.SPEC.adoc 0), constructor Spec (Count 11), value SPEC (FinalThm 61), value SPEC (Q 23)
HOL Drule.SPEC_ALL (help/Docfiles/Drule.SPEC_ALL.adoc 0), value SPEC_ALL (Drule 53)
value SPEC_ALL_TAC (ConseqConv 56)
HOL Tactic.SPEC_TAC (help/Docfiles/Tactic.SPEC_TAC.adoc 0), value SPEC_TAC (Q 28), value SPEC_TAC (Tactic 28)
value SPEC_THEN (Q 29)
HOL Drule.SPEC_UNDISCH_EXL (help/Docfiles/Drule.SPEC_UNDISCH_EXL.adoc 0), value SPEC_UNDISCH_EXL (Drule 30)
HOL Drule.SPEC_VAR (help/Docfiles/Drule.SPEC_VAR.adoc 0), value SPEC_VAR (Drule 29)
constructor Special (RW 53)
type special_info (term_grammar 132)
HOL Thm.Specialize (help/Docfiles/Thm.Specialize.adoc 0), value Specialize (FinalThm 98), value specialize (mlibTerm 114)
value specials (term_grammar 139)
value SPECIFICATION (pred_setTheory 349)
HOL Drule.SPECL (help/Docfiles/Drule.SPECL.adoc 0), value SPECL (Drule 25), value SPECL (Q 25)
value SPECL_THEN (Q 30)
value spine_binop (HolKernelDoc 51)
HOL pairSyntax.spine_pair (help/Docfiles/pairSyntax.spine_pair.adoc 0), value spine_pair (pairLib 52), value spine_pair (pairSyntax 60), value spine_pair (pairTheory 85)
value spine_prod (pairSyntax 8)
HOL Lib.split (help/Docfiles/Lib.split.adoc 0), value split (Lib 125), value split (mlibUseful 126)
HOL Lib.split_after (help/Docfiles/Lib.split_after.adoc 0), value split_after (Lib 126)
value split_at (locn 42)
HOL Tactical.SPLIT_LT (help/Docfiles/Tactical.SPLIT_LT.adoc 0), value SPLIT_LT (Tactical 37)
value split_pair___ALL___pred (quantHeuristicsLib 78), value split_pair___ALL___pred (quantHeuristicsLibParameters 18)
value split_pair___FST_SND___pred (quantHeuristicsLib 77), value split_pair___FST_SND___pred (quantHeuristicsLibParameters 17)
value split_pair___PABS___pred (quantHeuristicsLib 76), value split_pair___PABS___pred (quantHeuristicsLibParameters 16)
value SPLIT_PAIRS (totoTheory 45)
value SPLIT_QUANT_CONV (pairTools 16)
value splitAtPki_APPEND (listTheory 428)
value splitAtPki_DEF (listTheory 54)
value splitAtPki_EQN (listTheory 429)
value SPLITL_def (rich_listTheory 20)
value splitl_tm (rich_listSyntax 16)
value splitlist (liteLib 47)
value SPLITP (rich_listTheory 21)
value SPLITP_AUX_def (rich_listTheory 22)
value SPLITP_compute (rich_listTheory 319)
value SPLITP_EVERY (rich_listTheory 318)
value splitp_tm (rich_listSyntax 17)
value SPLITR_def (rich_listTheory 23)
value splitr_tm (rich_listSyntax 18)
value spolynom_11 (canonicalTheory 54)
value spolynom_Axiom (canonicalTheory 55)
value spolynom_case_cong (canonicalTheory 56)
value spolynom_case_def (canonicalTheory 24)
value spolynom_distinct (canonicalTheory 57)
value spolynom_induction (canonicalTheory 58)
value spolynom_nchotomy (canonicalTheory 59)
value spolynom_normalize_def (canonicalTheory 25), value spolynom_normalize_def (ringNormTheory 51)
value spolynom_simplify_def (canonicalTheory 26), value spolynom_simplify_def (ringNormTheory 52)
value spolynom_size_def (canonicalTheory 27)
value spolynom_TY_DEF (canonicalTheory 23)
value spolynomial_normalize_ok (canonicalTheory 60)
value spolynomial_simplify_ok (canonicalTheory 61)
HOL bossLib.SPOSE_NOT_THEN (help/Docfiles/bossLib.SPOSE_NOT_THEN.adoc 0), value SPOSE_NOT_THEN (BasicProvers 44), value SPOSE_NOT_THEN (bossLib 115), value spose_not_then (BasicProvers 45), value spose_not_then (bossLib 116), value spose_not_then (lcsymtacs 61)
value spotfv (term_pp_utils 11)
value spt_11 (sptreeTheory 100)
value spt_Axiom (sptreeTheory 101)
value spt_case_cong (sptreeTheory 102)
value spt_case_def (sptreeTheory 26)
value spt_distinct (sptreeTheory 103)
value spt_eq_thm (sptreeTheory 104)
value spt_induction (sptreeTheory 105)
value spt_nchotomy (sptreeTheory 106)
value spt_size_def (sptreeTheory 27)
value spt_TY_DEF (sptreeTheory 25)
value sptree_grammars (sptreeTheory 121)
value sptree_ty_of (sptreeSyntax 10)
structure sptreeLib
structure sptreeSyntax
structure sptreeTheory
value sqrt (transcTheory 21)
value SQRT_0 (transcTheory 214)
value SQRT_1 (transcTheory 215)
value SQRT_DIV (transcTheory 216)
value SQRT_EQ (transcTheory 217)
value SQRT_EVEN_POW2 (transcTheory 218)
value SQRT_INV (transcTheory 219)
value SQRT_MONO_LE (transcTheory 220), value sqrt_mono_le (extrealTheory 338)
value SQRT_MUL (transcTheory 221)
value SQRT_POS_LE (transcTheory 222), value sqrt_pos_le (extrealTheory 339)
value SQRT_POS_LT (transcTheory 223), value sqrt_pos_lt (extrealTheory 340)
value SQRT_POS_UNIQ (transcTheory 224)
value SQRT_POW2 (transcTheory 225), value sqrt_pow2 (extrealTheory 341)
value SQRT_POW_2 (transcTheory 226)
value sqrt_tm (transcSyntax 20)
value SQRTd_def (logrootTheory 7)
HOL BasicProvers.srw_ss (help/Docfiles/BasicProvers.srw_ss.adoc 0), HOL bossLib.srw_ss (help/Docfiles/bossLib.srw_ss.adoc 0), value srw_ss (BasicProvers 20), value srw_ss (bossLib 65)
HOL BasicProvers.SRW_TAC (help/Docfiles/BasicProvers.SRW_TAC.adoc 0), HOL bossLib.SRW_TAC (help/Docfiles/bossLib.SRW_TAC.adoc 0), value SRW_TAC (BasicProvers 27), value SRW_TAC (bossLib 97), value srw_tac (BasicProvers 28), value srw_tac (bossLib 98), value srw_tac (lcsymtacs 83)
HOL simpLib.SSFRAG (help/Docfiles/simpLib.SSFRAG.adoc 0), type ssfrag (DatatypeSimps 4), type ssfrag (bagLib 4), type ssfrag (bagSimps 4), type ssfrag (bossLib 3), type ssfrag (normalForms 9), type ssfrag (ratLib 7), type ssfrag (simpLib 61), value SSFRAG (simpLib 63)
value ssfrag_names_of (simpLib 114)
value ssfrags_of (simpLib 111)
value ST_compare (term_grammar 179)
value stable_cong (mergesortTheory 55)
value STABLE_DEF (sortingTheory 17), value stable_def (mergesortTheory 19)
value stable_trans (mergesortTheory 56)
type stack (compute_rules 4)
value stack_limit (Cond_rewr 43)
type stack_terminal (parse_term 4), type stack_terminal (term_grammar 169)
value stamp (Theory 33)
value standard_tpp_message (testutils 9)
value stardiaeresis (UnicodeChars 98)
value start_real_time (Lib 127)
HOL Lib.start_time (help/Docfiles/Lib.start_time.adoc 0), value start_time (Lib 128)
HOL Lib.state (help/Docfiles/Lib.state.adoc 0), value state (Lib 129)
value state_transformer_grammars (state_transformerTheory 44)
structure state_transformerSyntax
structure state_transformerTheory
value stateful_qp (quantHeuristicsLib 63), value stateful_qp (quantHeuristicsLibBase 167), value stateful_qp (quantHeuristicsLibParameters 5)
value stateful_qp___add_combine_arguments (quantHeuristicsLib 68), value stateful_qp___add_combine_arguments (quantHeuristicsLibBase 160), value stateful_qp___add_combine_arguments (quantHeuristicsLibParameters 10)
value status (proofManagerLib 51)
value std_apiDefine (TotalDefn 44)
value std_apiDefineq (TotalDefn 45)
value std_binder_precedence (GrammarSpecials 25), value std_binder_precedence (Parse 82)
value std_conv_ss (simpLib 86)
value std_goal_pp (Manager 52), value std_goal_pp (proofManagerLib 67)
constructor STD_HOL_TOK (term_grammar 169)
constructor STD_infix (term_grammar 60)
value std_out (Portable 62)
value std_pp_goal (goalStack 24)
constructor STD_prefix (term_grammar 52)
value std_qp (quantHeuristicsLib 110), value std_qp (quantHeuristicsLibParameters 48)
value std_simpls (RW 13)
value std_solver (RW 27)
HOL bossLib.std_ss (help/Docfiles/bossLib.std_ss.adoc 0), value std_ss (bossLib 61), value std_ss (numLib 36)
constructor STD_suffix (term_grammar 56)
value STD_TERM_TAC (TotalDefn 24)
type stdconvdata (simpLib 49)
value stdhol (term_grammar 101)
value stdin (Portable 61)
value stdOut_ppstream (Portable 23)
constructor STDREC (DefnBase 5)
value step_opt_allows_steps (ConseqConv 144)
value step_opt_sub (ConseqConv 143)
value stmark_conjunct (markerLib 6)
value stmark_disjunct (markerLib 7)
value stmark_term (markerLib 5)
value stmarker_def (markerTheory 10)
value stmarker_tm (markerSyntax 4)
structure stmonad, type stmonad (stmonad 2)
value stopped_at_11 (pathTheory 147)
value stopped_at_def (pathTheory 33)
value stopped_at_not_pcons (pathTheory 148)
value stoppers (computeLib 8)
value store (Defn 50)
value store_attribute (ThmSetData 11)
value store_definition (Theory 107)
value store_ring (ringLib 23)
HOL Tactical.store_thm (help/Docfiles/Tactical.store_thm.adoc 0), value store_thm (Q 45), value store_thm (Sanity 67), value store_thm (Tactical 6)
value store_thm_verbose (jbUtils 23)
type stored_data (ProvideUnicode 9), value stored_data (ProvideUnicode 12)
value STP_TAC (BasicProvers 41)
value str_all (Lib 130)
value STR_def (stringTheory 11)
value str_tm (stringSyntax 31)
type strategy (RW 42)
HOL Lib.strcat (help/Docfiles/Lib.strcat.adoc 0), value STRCAT (stringTheory 77), value strcat (Lib 131)
value STRCAT_11 (stringTheory 78)
value STRCAT_ACYCLIC (stringTheory 79)
value STRCAT_ASSOC (stringTheory 80)
value STRCAT_def (stringTheory 84)
value STRCAT_EQ_EMPTY (stringTheory 82)
value STRCAT_EQNS (stringTheory 81)
value STRCAT_EXPLODE (stringTheory 83)
value strcat_tm (stringSyntax 32)
value STRCAT_toString_inj (ASCIInumbersTheory 27)
constructor Stream (Streams 2), type stream (Streams 2), type stream (folTools 9), type stream (metisTools 16), type stream (mlibParser 16), type stream (mlibSolver 9), type stream (mlibStream 8), type stream (mlibSubsume 10)
value stream_append (Streams 5)
value stream_flat (Streams 8)
value stream_map (Streams 4)
structure Streams
value strengthen (mlibClauseset 33)
value STRENGTHEN_CONSEQ_CONV (ConseqConv 212)
HOL ConseqConv.STRENGTHEN_CONSEQ_CONV_RULE (help/Docfiles/ConseqConv.STRENGTHEN_CONSEQ_CONV_RULE.adoc 0), value STRENGTHEN_CONSEQ_CONV_RULE (ConseqConv 217)
value stri (stringSyntax 33)
value strict_def (set_relationTheory 31)
value strict_linear_order (set_relationTheory 120)
value strict_linear_order_acyclic (set_relationTheory 121)
value strict_linear_order_def (set_relationTheory 32)
value strict_linear_order_dom_rng (set_relationTheory 122)
value strict_linear_order_reln_to_rel_conv_UNIV (set_relationTheory 123)
value strict_linear_order_restrict (set_relationTheory 124)
value strict_linear_order_union_acyclic (set_relationTheory 125)
value strict_partial_order (set_relationTheory 126)
value strict_partial_order_acyclic (set_relationTheory 127)
value strict_rrestrict (set_relationTheory 128)
value strict_to_rel_conv (set_relationTheory 129)
value strictify_thm (computeLib 22), value strictify_thm (compute_rules 31)
value STRICTLY_INCREASING_ONE_ONE (arithmeticTheory 321)
value STRICTLY_INCREASING_TC (arithmeticTheory 322)
value STRICTLY_INCREASING_UNBOUNDED (arithmeticTheory 323)
value STRING_ACYCLIC (stringTheory 85)
value string_add (patriciaLib 43)
value string_add_list (patriciaLib 44)
value string_case_tm (stringSyntax 34)
value string_cmp_antisym (comparisonTheory 66)
value string_cmp_def (comparisonTheory 21)
value string_cmp_good (comparisonTheory 67)
value string_cmp_stringto (comparisonTheory 68)
value string_EQ_CONV (stringLib 40)
value string_ge_def (stringTheory 37)
value string_ge_tm (stringSyntax 35)
value string_grammars (stringTheory 107)
value string_gt_def (stringTheory 38)
value string_gt_tm (stringSyntax 36)
value string_in_ptree (patriciaLib 46)
value string_insert_ptree (patriciaLib 47)
value string_le_def (stringTheory 39)
value string_le_tm (stringSyntax 37)
value string_literalpp (Literal 21)
value string_lt_antisym (stringTheory 100)
value string_lt_cases (stringTheory 101)
value string_lt_curried_def (stringTheory 40)
value string_lt_def (stringTheory 102)
value string_lt_ind (stringTheory 103)
value string_lt_nonrefl (stringTheory 104)
value string_lt_tm (stringSyntax 38)
value string_lt_trans (stringTheory 105)
value string_lt_tupled_primitive_def (stringTheory 41)
value string_num_grammars (string_numTheory 18)
structure string_numTheory
value string_peek (patriciaLib 42)
value string_ptree_of_list (patriciaLib 48)
value string_remove (patriciaLib 45)
value string_rewrites (stringSimps 5)
value STRING_ss (stringSimps 6)
value string_tm (stringLib 11), value string_tm (stringSyntax 39)
value string_to_formula (mlibTerm 140)
value string_to_formula' (mlibTerm 136)
HOL Lib.string_to_int (help/Docfiles/Lib.string_to_int.adoc 0), value string_to_int (Lib 132), value string_to_int (mlibUseful 108)
value string_to_num_11 (patricia_castsTheory 56)
value string_to_num_def (patricia_castsTheory 38)
value string_to_num_num_to_string (patricia_castsTheory 57)
value string_to_otname (OpenTheoryMap 8)
value string_to_term (mlibTerm 139)
value string_to_term' (mlibTerm 135)
value string_ty (stringLib 5), value string_ty (stringSyntax 5)
exception stringerror (MLstring 3)
structure stringLib
value STRINGSET_OF_PTREE_def (patricia_castsTheory 29)
value stringset_of_ptree_tm (patricia_castsSyntax 39)
structure stringSimps
structure stringSyntax
structure stringTheory
value stringto (totoTheory 33)
value stringto_CONV (totoTacs 21)
HOL Term.strip_abs (help/Docfiles/Term.strip_abs.adoc 0), HOL boolSyntax.strip_abs (help/Docfiles/boolSyntax.strip_abs.adoc 0), value strip_abs (FinalTerm 44), value strip_abs (boolSyntax 134)
HOL pairSyntax.strip_anylet (help/Docfiles/pairSyntax.strip_anylet.adoc 0), value strip_anylet (pairSyntax 63)
value strip_app (Absyn 68)
value strip_append (listSyntax 116)
HOL Tactic.STRIP_ASSUME_TAC (help/Docfiles/Tactic.STRIP_ASSUME_TAC.adoc 0), value STRIP_ASSUME_TAC (Tactic 42), value strip_assume_tac (Tactic 43), value strip_assume_tac (lcsymtacs 60)
value strip_biginter (pred_setSyntax 107)
value strip_bigunion (pred_setSyntax 106)
HOL Term.strip_binder (help/Docfiles/Term.strip_binder.adoc 0), value strip_binder (FinalTerm 43)
HOL Conv.STRIP_BINDER_CONV (help/Docfiles/Conv.STRIP_BINDER_CONV.adoc 0), value STRIP_BINDER_CONV (Conv 22)
value strip_binop (HolKernelDoc 52), value strip_binop (liteLib 94)
value strip_case (Pmatch 23), value strip_case (TypeBase 47), value strip_case (TypeBasePure 116)
HOL boolSyntax.strip_comb (help/Docfiles/boolSyntax.strip_comb.adoc 0), value strip_comb (HolKernelDoc 53), value strip_comb (boolSyntax 133)
HOL boolSyntax.strip_conj (help/Docfiles/boolSyntax.strip_conj.adoc 0), value strip_conj (Absyn 70), value strip_conj (boolSyntax 139), value strip_conj (mlibTerm 56)
value strip_cons (listSyntax 117)
HOL boolSyntax.strip_disj (help/Docfiles/boolSyntax.strip_disj.adoc 0), value strip_disj (Absyn 71), value strip_disj (boolSyntax 140), value strip_disj (mlibTerm 60)
HOL boolSyntax.strip_exists (help/Docfiles/boolSyntax.strip_exists.adoc 0), value strip_exists (Absyn 75), value strip_exists (CooperSyntax 8), value strip_exists (boolSyntax 138), value strip_exists (mlibTerm 67)
value strip_exists1 (Absyn 76)
HOL boolSyntax.strip_forall (help/Docfiles/boolSyntax.strip_forall.adoc 0), value strip_forall (Absyn 74), value strip_forall (boolSyntax 137), value strip_forall (mlibTerm 64)
HOL boolSyntax.strip_fun (help/Docfiles/boolSyntax.strip_fun.adoc 0), value strip_fun (HolKernelDoc 54), value strip_fun (boolSyntax 144)
value strip_fun_type (wfrecUtils 13)
value strip_fupdate (finite_mapSyntax 37)
value strip_gen_left (HolKernelDoc 58)
value strip_gen_left_opt (HolKernelDoc 57)
value strip_gen_right (HolKernelDoc 56)
value strip_gen_right_opt (HolKernelDoc 55)
HOL Tactic.STRIP_GOAL_THEN (help/Docfiles/Tactic.STRIP_GOAL_THEN.adoc 0), value STRIP_GOAL_THEN (Tactic 50)
HOL boolSyntax.strip_imp (help/Docfiles/boolSyntax.strip_imp.adoc 0), value strip_imp (Absyn 72), value strip_imp (boolSyntax 135), value strip_imp (liteLib 104), value strip_imp (wfrecUtils 19)
HOL boolSyntax.strip_imp_only (help/Docfiles/boolSyntax.strip_imp_only.adoc 0), value strip_imp_only (boolSyntax 136)
value strip_insert (bagLib 50), value strip_insert (bagSyntax 48)
value strip_lam (Absyn 69)
value strip_list_update (updateLib 4), value strip_list_update (updateSyntax 21)
value strip_mult (intSyntax 62), value strip_mult (numSyntax 129), value strip_mult (realSyntax 52)
HOL boolSyntax.strip_neg (help/Docfiles/boolSyntax.strip_neg.adoc 0), value strip_neg (boolSyntax 141)
value STRIP_NUM_QUANT_CONV (quantHeuristicsLibBase 12), value STRIP_NUM_QUANT_CONV (quantHeuristicsTools 10)
HOL pairSyntax.strip_pabs (help/Docfiles/pairSyntax.strip_pabs.adoc 0), value strip_pabs (pairLib 54), value strip_pabs (pairSyntax 62)
HOL pairSyntax.strip_pair (help/Docfiles/pairSyntax.strip_pair.adoc 0), value strip_pair (Absyn 73), value strip_pair (pairLib 51), value strip_pair (pairSyntax 59), value strip_pair (pairTheory 84)
value strip_pcomb (Preterm 34)
HOL pairSyntax.strip_pexists (help/Docfiles/pairSyntax.strip_pexists.adoc 0), value strip_pexists (pairLib 56), value strip_pexists (pairSyntax 65)
HOL pairSyntax.strip_pforall (help/Docfiles/pairSyntax.strip_pforall.adoc 0), value strip_pforall (Preterm 35), value strip_pforall (pairLib 55), value strip_pforall (pairSyntax 64)
value strip_plus (intSyntax 52), value strip_plus (numSyntax 128), value strip_plus (realSyntax 42)
value strip_prefix_conv (QbfConv 37)
value strip_prod (pairLib 11), value strip_prod (pairSyntax 7)
value strip_prod_type (wfrecUtils 14)
HOL Conv.STRIP_QUANT_CONV (help/Docfiles/Conv.STRIP_QUANT_CONV.adoc 0), value STRIP_QUANT_CONV (Conv 23)
value strip_rat_add (ratSyntax 81)
value strip_rat_mul (ratSyntax 82)
HOL res_quanLib.strip_res_exists (help/Docfiles/res_quanLib.strip_res_exists.adoc 0), HOL res_quanTools.strip_res_exists (help/Docfiles/res_quanTools.strip_res_exists.adoc 0), value strip_res_exists (boolSyntax 143), value strip_res_exists (res_quanTools 33)
HOL res_quanLib.strip_res_forall (help/Docfiles/res_quanLib.strip_res_forall.adoc 0), HOL res_quanTools.strip_res_forall (help/Docfiles/res_quanTools.strip_res_forall.adoc 0), value strip_res_forall (boolSyntax 142), value strip_res_forall (res_quanTools 32)
value strip_select (Absyn 77)
value strip_set (pred_setSyntax 88)
value strip_sum (sumSyntax 14)
HOL Tactic.STRIP_TAC (help/Docfiles/Tactic.STRIP_TAC.adoc 0), value STRIP_TAC (Tactic 58), value strip_tac (Tactic 59), value strip_tac (lcsymtacs 7)
HOL Thm_cont.STRIP_THM_THEN (help/Docfiles/Thm_cont.STRIP_THM_THEN.adoc 0), value STRIP_THM_THEN (Thm_cont 27)
value strip_union (bagLib 31), value strip_union (bagSyntax 29)
value strip_update (combinSyntax 32)
value striplist (liteLib 48)
value STRLEN_CAT (stringTheory 86)
value STRLEN_DEF (stringTheory 87)
value STRLEN_EQ_0 (stringTheory 88)
value STRLEN_EXPLODE_THM (stringTheory 89)
value STRLEN_THM (stringTheory 90)
value strlen_tm (stringSyntax 40)
value STRONG_DRESTRICT_FUPDATE (finite_mapTheory 207)
value STRONG_DRESTRICT_FUPDATE_THM (finite_mapTheory 208)
value STRONG_EQC_INDUCTION (relationTheory 145)
value STRONG_FINITE_BAG_INDUCT (bagTheory 220)
value STRONG_MEASURE_SPACE_SUBSET (measureTheory 227)
value Strong_Strong_of (totoTheory 50)
value Strong_Strong_of_TO (totoTheory 51)
value Strong_toto_inv (totoTheory 52)
value Strong_toto_thm (totoTheory 53)
value StrongLinearOrder (relationTheory 31)
value StrongLinearOrder_LESS (totoTheory 48)
value StrongLinearOrder_of_TO (totoTheory 6)
value StrongLinearOrderExists (totoTheory 47)
value Strongof_toto_STRORD (totoTheory 54)
value StrongOrd_Ord (relationTheory 149)
value StrongOrder (relationTheory 32)
value StrongOrder_ALT (totoTheory 49)
value StrongWellOrder_def (wotTheory 5)
value StrongWellOrderExists (wotTheory 19)
value STRORD (relationTheory 30)
value STRORD_AND_NOT_Id (relationTheory 146)
value STRORD_RC (relationTheory 147)
value STRORD_SLO (totoTheory 46)
value STRORD_Strong (relationTheory 148)
HOL Tactic.STRUCT_CASES_TAC (help/Docfiles/Tactic.STRUCT_CASES_TAC.adoc 0), value STRUCT_CASES_TAC (Tactic 44)
value STRUCT_ERR (liteLib 9)
value STRUCT_WRAP (liteLib 10)
value structCamlSuffix (EmitML 31)
value structSuffix (EmitML 29)
value structure_to_type (type_grammar 15)
value STtoString (term_grammar 181)
value SUB (arithmeticTheory 27)
value SUB_0 (arithmeticTheory 324), value sub_0 (extrealTheory 342)
value SUB_ADD (arithmeticTheory 325), value sub_add (extrealTheory 343)
value sub_add2 (extrealTheory 344)
structure Sub_and_cond
HOL Arith.SUB_AND_COND_ELIM_CONV (help/Docfiles/Arith.SUB_AND_COND_ELIM_CONV.adoc 0), value SUB_AND_COND_ELIM_CONV (Arith 16), value SUB_AND_COND_ELIM_CONV (Sub_and_cond 2)
value SUB_BAG (bagTheory 34)
value SUB_BAG_ALL_DISTINCT (bagTheory 221)
value SUB_BAG_ANTISYM (bagTheory 222)
value SUB_BAG_BAG_DIFF (bagTheory 223)
value SUB_BAG_BAG_IN (bagTheory 224)
value SUB_BAG_CARD (bagTheory 225)
value SUB_BAG_DIFF (bagTheory 226)
value SUB_BAG_DIFF_EQ (bagTheory 227)
value SUB_BAG_DIFF_simple (bagTheory 228)
value SUB_BAG_EL_BAG (bagTheory 229)
value SUB_BAG_EMPTY (bagTheory 230)
value SUB_BAG_EXISTS (bagTheory 231)
value SUB_BAG_INSERT (bagTheory 232)
value SUB_BAG_INSERT_CANCEL_CONV (bagLib 74), value SUB_BAG_INSERT_CANCEL_CONV (bagSimpleLib 16)
value SUB_BAG_INSERT_I (bagTheory 233)
value SUB_BAG_INSERT_SOLVE (bagLib 75), value SUB_BAG_INSERT_SOLVE (bagSimpleLib 17)
value SUB_BAG_LEQ (bagTheory 234)
value SUB_BAG_PSUB_BAG (bagTheory 235)
value SUB_BAG_REFL (bagTheory 236)
value SUB_BAG_REST (bagTheory 237)
value SUB_BAG_SET (bagTheory 238)
value SUB_BAG_SING (bagTheory 239)
value SUB_BAG_tm (bagLib 9), value SUB_BAG_tm (bagSyntax 6)
value SUB_BAG_TRANS (bagTheory 240)
value SUB_BAG_UNION (bagTheory 241)
value SUB_BAG_UNION_DIFF (bagTheory 242)
value SUB_BAG_UNION_down (bagTheory 244)
value SUB_BAG_UNION_eliminate (bagTheory 245)
value SUB_BAG_UNION_MONO (bagTheory 243)
value SUB_CANCEL (arithmeticTheory 326)
HOL Conv.SUB_CONV (help/Docfiles/Conv.SUB_CONV.adoc 0), value SUB_CONV (Conv 38), value SUB_CONV (liteLib 125)
value SUB_def (stringTheory 13)
value SUB_ELIM_THM (arithmeticTheory 327)
value SUB_EQ_0 (arithmeticTheory 329)
value SUB_EQ_EQ_0 (arithmeticTheory 330)
value SUB_EQUAL_0 (arithmeticTheory 328)
value SUB_IN_Q (extrealTheory 119)
value sub_ldistrib (extrealTheory 345)
value sub_le_eq (extrealTheory 346)
value sub_le_eq2 (extrealTheory 347)
value sub_le_imp (extrealTheory 348)
value sub_le_imp2 (extrealTheory 349)
value sub_le_switch (extrealTheory 350)
value sub_le_switch2 (extrealTheory 351)
value sub_le_zero (extrealTheory 352)
value SUB_LEFT_ADD (arithmeticTheory 331)
value SUB_LEFT_EQ (arithmeticTheory 332)
value SUB_LEFT_GREATER (arithmeticTheory 333)
value SUB_LEFT_GREATER_EQ (arithmeticTheory 334)
value SUB_LEFT_LESS (arithmeticTheory 335)
value SUB_LEFT_LESS_EQ (arithmeticTheory 336)
value SUB_LEFT_SUB (arithmeticTheory 337)
value SUB_LEFT_SUC (arithmeticTheory 338)
value SUB_LESS (arithmeticTheory 339)
value SUB_LESS_0 (arithmeticTheory 340)
value SUB_LESS_EQ (arithmeticTheory 341)
value SUB_LESS_EQ_ADD (arithmeticTheory 342)
value SUB_LESS_OR (arithmeticTheory 343)
value sub_lneg (extrealTheory 353)
value sub_lt_imp (extrealTheory 354)
value sub_lt_imp2 (extrealTheory 355)
value sub_lt_zero (extrealTheory 356)
value sub_lt_zero2 (extrealTheory 357)
value sub_lzero (extrealTheory 358)
value sub_meter (mlibMeter 27)
value SUB_MOD (arithmeticTheory 344)
value SUB_MONO_EQ (arithmeticTheory 345)
value SUB_NORM_CONV (Thm_convs 42)
value sub_not_infty (extrealTheory 359)
value SUB_num_to_bin_string (ASCIInumbersTheory 28)
value SUB_PLUS (arithmeticTheory 346), value sub_plus (UnicodeChars 64)
value SUB_QCONV (liteLib 124)
value sub_rdistrib (extrealTheory 360)
value sub_refl (extrealTheory 361)
value SUB_RIGHT_ADD (arithmeticTheory 347)
value SUB_RIGHT_EQ (arithmeticTheory 348)
value SUB_RIGHT_GREATER (arithmeticTheory 349)
value SUB_RIGHT_GREATER_EQ (arithmeticTheory 350)
value SUB_RIGHT_LESS (arithmeticTheory 351)
value SUB_RIGHT_LESS_EQ (arithmeticTheory 352)
value SUB_RIGHT_SUB (arithmeticTheory 353)
value sub_rneg (extrealTheory 362)
value sub_rzero (extrealTheory 363)
value SUB_SUB (arithmeticTheory 354)
value sub_tm (stringSyntax 41)
value sub_zero_le (extrealTheory 364)
value sub_zero_lt (extrealTheory 365)
value sub_zero_lt2 (extrealTheory 366)
value SUBADDITIVE (measureTheory 228)
value subadditive_def (measureTheory 32)
HOL Tactical.SUBGOAL_THEN (help/Docfiles/Tactical.SUBGOAL_THEN.adoc 0), value SUBGOAL_THEN (Q 34), value SUBGOAL_THEN (Tactical 83)
value SUBMAP_ANTISYM (finite_mapTheory 209)
value SUBMAP_DEF (finite_mapTheory 21)
value SUBMAP_DOMSUB (finite_mapTheory 210)
value SUBMAP_DOMSUB_gen (finite_mapTheory 211)
value SUBMAP_DRESTRICT (finite_mapTheory 212)
value SUBMAP_FEMPTY (finite_mapTheory 213)
value SUBMAP_FRANGE (finite_mapTheory 214)
value SUBMAP_FUNION (finite_mapTheory 215)
value SUBMAP_FUNION_ABSORPTION (finite_mapTheory 216)
value SUBMAP_FUNION_EQ (finite_mapTheory 217)
value SUBMAP_FUNION_ID (finite_mapTheory 218)
value SUBMAP_FUPDATE (finite_mapTheory 219)
value SUBMAP_FUPDATE_EQN (finite_mapTheory 220)
value SUBMAP_FUPDATE_FLOOKUP (finite_mapTheory 221)
value SUBMAP_mono_FUPDATE (finite_mapTheory 224)
value SUBMAP_REFL (finite_mapTheory 222)
value SUBMAP_TRANS (finite_mapTheory 223)
HOL Drule.SUBS (help/Docfiles/Drule.SUBS.adoc 0), type subs (Subst 2), value SUBS (Drule 34), value SUBS (Rules 21)
HOL Drule.SUBS_OCCS (help/Docfiles/Drule.SUBS_OCCS.adoc 0), value SUBS_OCCS (Drule 35)
value subseq (seqTheory 9)
value SUBSEQ_SUC (seqTheory 78)
value subset (UnicodeChars 131), value subset (mlibMultiset 16), value subset (mlibUseful 84)
value SUBSET_ADD (util_probTheory 150)
value SUBSET_ANTISYM (pred_setTheory 350)
value SUBSET_BIGINTER (measureTheory 229), value SUBSET_BIGINTER (pred_setTheory 351)
value SUBSET_BIGUNION_I (pred_setTheory 352)
value subset_class_def (measureTheory 33)
value subset_countable (pred_setTheory 451)
value SUBSET_DEF (pred_setTheory 35)
value SUBSET_DELETE (pred_setTheory 353)
value SUBSET_DELETE_BOTH (pred_setTheory 354)
value SUBSET_DIFF (pred_setTheory 355)
value SUBSET_DIFF_EMPTY (pred_setTheory 356)
value SUBSET_EMPTY (pred_setTheory 357)
value SUBSET_EQ_CARD (pred_setTheory 358)
value SUBSET_FDOM_LEM (tcTheory 28)
value SUBSET_FINITE (pred_setTheory 359)
value SUBSET_FINITE_I (pred_setTheory 360)
value SUBSET_INSERT (pred_setTheory 361)
value SUBSET_INSERT_DELETE (pred_setTheory 362)
value SUBSET_INSERT_RIGHT (pred_setTheory 363)
value SUBSET_INTER (pred_setTheory 364), value SUBSET_INTER (util_probTheory 151)
value SUBSET_INTER1 (util_probTheory 152)
value SUBSET_INTER2 (util_probTheory 153)
value SUBSET_INTER_ABSORPTION (pred_setTheory 365)
value SUBSET_K (util_probTheory 154)
value SUBSET_MAX_SET (pred_setTheory 366)
value SUBSET_MIN_SET (pred_setTheory 367)
value SUBSET_POW (pred_setTheory 368)
value SUBSET_PRS (quotient_pred_setTheory 50)
value SUBSET_PSUBSET_TRANS (pred_setTheory 369)
value SUBSET_REFL (pred_setTheory 370)
value SUBSET_THM (util_probTheory 155)
value subset_tm (pred_setSyntax 24)
value SUBSET_TRANS (pred_setTheory 371)
value SUBSET_UNION (pred_setTheory 372)
value SUBSET_UNION_ABSORPTION (pred_setTheory 373)
value SUBSET_UNIV (pred_setTheory 374)
value SUBSETR_def (quotient_pred_setTheory 12)
value SUBSETR_RSP (quotient_pred_setTheory 49)
value subsets_def (measureTheory 34)
HOL Thm.SUBST (help/Docfiles/Thm.SUBST.adoc 0), HOL Lib.subst (help/Docfiles/Lib.subst.adoc 0), HOL Term.subst (help/Docfiles/Term.subst.adoc 0), constructor Subst (Count 11), structure Subst, type Subst (matchTools 13), type subst (Abbrev 19), type subst (FinalTerm 5), type subst (HolKernelDoc 8), type subst (Lib 7), type subst (Rules 2), type subst (matchTools 8), type subst (mlibClause 12), type subst (mlibKernel 10), type subst (mlibMatch 10), type subst (mlibSubst 13), type subst (mlibSubsume 12), type subst (mlibTermorder 10), value SUBST (FinalThm 31), value SUBST (hol88Lib 40), value subst (FinalTerm 61), value subst (hol88Lib 36), value subst (mlibTermorder 29)
HOL Tactic.SUBST1_TAC (help/Docfiles/Tactic.SUBST1_TAC.adoc 0), value SUBST1_TAC (Tactic 36)
HOL Tactic.SUBST_ALL_TAC (help/Docfiles/Tactic.SUBST_ALL_TAC.adoc 0), value SUBST_ALL_TAC (Tactic 40)
HOL Lib.subst_assoc (help/Docfiles/Lib.subst_assoc.adoc 0), value subst_assoc (Lib 133)
HOL Drule.SUBST_CONV (help/Docfiles/Drule.SUBST_CONV.adoc 0), value SUBST_CONV (Drule 17)
HOL Rewrite.SUBST_MATCH (help/Docfiles/Rewrite.SUBST_MATCH.adoc 0), value SUBST_MATCH (Ho_Rewrite 49), value SUBST_MATCH (Rewrite 62)
HOL HolKernel.subst_occs (help/Docfiles/HolKernel.subst_occs.adoc 0), value subst_occs (HolKernelDoc 59)
HOL Tactic.SUBST_OCCS_TAC (help/Docfiles/Tactic.SUBST_OCCS_TAC.adoc 0), value SUBST_OCCS_TAC (Tactic 35)
HOL Tactic.SUBST_TAC (help/Docfiles/Tactic.SUBST_TAC.adoc 0), value SUBST_TAC (Tactic 34)
value SUBSTRING_def (stringTheory 12)
value substring_tm (stringSyntax 42)
type subsume (mlibSubsume 14)
value subsumed (mlibClauseset 36)
value subsumed_filter (mlibSolver 26)
value subsumes (mlibClause 48), value subsumes (mlibSubsume 23), value subsumes (mlibTermorder 34), value subsumes (mlibUnits 17)
value subsumes' (mlibSubsume 26)
value subsumes1 (mlibSubsume 29)
value subsumes1' (mlibSubsume 30)
value subTC (tcTheory 12)
value subTC_EMPTY (tcTheory 32)
value subTC_FDOM (tcTheory 33)
value subTC_FDOM_RDOM (tcTheory 34)
value subTC_INSERT (tcTheory 35)
value subTC_INSERT_COR (tcTheory 36)
value subTC_MAX_RDOM (tcTheory 37)
value subTC_RDOM (tcTheory 38)
value subTC_SUPERSET_RDOM (tcTheory 39)
value subTC_thm (tcTheory 40)
value subterm (mlibTerm 118)
value subterm_filter (quantHeuristicsLib 98), value subterm_filter (quantHeuristicsLibBase 233)
value subterm_match_filter (quantHeuristicsLib 99), value subterm_match_filter (quantHeuristicsLibBase 234)
value subterms (mlibTerm 120)
HOL Lib.subtract (help/Docfiles/Lib.subtract.adoc 0), value subtract (Lib 134), value subtract (mlibMultiset 15), value subtract (mlibUseful 82)
value subtract_to_small (int_arithTheory 73)
value SUC_ADD1 (Theorems 5)
value SUC_ADD2 (Theorems 6)
value SUC_ADD_LESS_EQ_F (Theorems 13)
value SUC_ADD_SYM (arithmeticTheory 355)
HOL reduceLib.SUC_CONV (help/Docfiles/reduceLib.SUC_CONV.adoc 0), value SUC_CONV (Arithconv 11), value SUC_CONV (reduceLib 18)
value SUC_DEF (numTheory 6)
value SUC_ELIM_CONV (numLib 13)
value SUC_ELIM_NUMERALS (arithmeticTheory 356)
value SUC_ELIM_THM (arithmeticTheory 357)
value SUC_FILTER_ss (numSimps 7)
value SUC_ID (prim_recTheory 43)
value SUC_LESS (prim_recTheory 44)
value SUC_LESS_EQ_ZERO_F (Theorems 16)
value SUC_MOD (arithmeticTheory 358)
value SUC_NOT (arithmeticTheory 359)
value SUC_ONE_ADD (arithmeticTheory 360)
value SUC_PRE (arithmeticTheory 361)
value SUC_REP_DEF (numTheory 7)
value SUC_RULE (numLib 17)
value SUC_SUB (arithmeticTheory 362), value SUC_SUB (bitTheory 133)
value SUC_SUB1 (arithmeticTheory 363)
value suc_tm (numSyntax 32)
HOL numLib.SUC_TO_NUMERAL_DEFN_CONV (help/Docfiles/numLib.SUC_TO_NUMERAL_DEFN_CONV.adoc 0), value SUC_TO_NUMERAL_DEFN_CONV (numLib 14)
value SUC_TO_NUMERAL_DEFN_CONV_hook (Defn 67)
value SUC_WORD_PRED (wordsTheory 195)
value succl_def (wotTheory 14)
value sucminmullt (floatTheory 145)
HOL Tactic.SUFF_TAC (help/Docfiles/Tactic.SUFF_TAC.adoc 0), value SUFF_TAC (Tactic 90), value suff_tac (Tactic 91), value suff_tac (lcsymtacs 19)
HOL bossLib.suffices_by (help/Docfiles/bossLib.suffices_by.adoc 0), value suffices_by (BasicProvers 48), value suffices_by (bossLib 118)
constructor SUFFIX (term_grammar 74), constructor Suffix (term_grammar 83), value Suffix (Parse 240)
value SUFFIX_DEF (rich_listTheory 24)
type suffix_rule (term_grammar 56)
value suffix_tm (rich_listSyntax 19)
type sum (mlibUseful 161), type sum (sumSyntax 39), value SUM (listTheory 42), value SUM (rich_listTheory 516), value SUM (sum_numTheory 20), value sum (realTheory 453)
value SUM_0 (realTheory 399)
value SUM_1 (realTheory 400), value SUM_1 (sum_numTheory 21)
value SUM_2 (realTheory 401)
value SUM_ABS (realTheory 402)
value SUM_ABS_LE (realTheory 403)
value SUM_ACC_DEF (listTheory 43)
value SUM_ACC_SUM_LEM (listTheory 365)
value SUM_ADD (realTheory 404)
value SUM_ALL_CONG (sumTheory 30)
value SUM_ALL_def (sumTheory 12)
value SUM_ALL_MONO (sumTheory 31)
value SUM_APPEND (listTheory 366), value SUM_APPEND (rich_listTheory 517)
value sum_Axiom (sumTheory 37), value sum_axiom (sumTheory 40)
value SUM_BOUND (realTheory 405)
value SUM_CANCEL (realTheory 406)
value sum_case_cong (sumTheory 41)
value sum_case_def (sumTheory 16)
value sum_case_tm (sumSyntax 10)
value sum_CASES (sumTheory 38)
value SUM_CMUL (realTheory 407)
value sum_coder_def (CoderTheory 16)
value sum_compute (realTheory 454)
value SUM_CONST (util_probTheory 161)
HOL listLib.SUM_CONV (help/Docfiles/listLib.SUM_CONV.adoc 0), value SUM_CONV (ListConv1 20), value SUM_CONV (listLib 34)
value sum_curried (realTheory 19)
value SUM_def (sum_numTheory 7)
value SUM_def_compute (sum_numTheory 28)
value SUM_DIFF (realTheory 408)
value SUM_DIFFS (integralTheory 84)
value sum_distinct (sumTheory 42)
value sum_distinct1 (sumTheory 43)
value SUM_EQ (realTheory 409)
value SUM_EQ_0 (integralTheory 85), value SUM_eq_0 (listTheory 375)
value sum_eq_norm (NumRelNorms 19)
value SUM_EQUAL (sum_numTheory 22)
value SUM_EQUIV (quotient_sumTheory 17), value sum_equiv (quotient 115)
value SUM_FLAT (rich_listTheory 320)
value SUM_FOLDL (rich_listTheory 321), value SUM_FOLDL (sum_numTheory 23)
value SUM_FOLDR (rich_listTheory 322)
value SUM_FUN_EQUAL (sum_numTheory 24)
value sum_grammars (sumTheory 45)
value SUM_GROUP (realTheory 410)
value SUM_IMAGE_CONG (pred_setTheory 375)
value SUM_IMAGE_CONV (PFset_conv 12)
value SUM_IMAGE_count_MULT (sortingTheory 127)
value SUM_IMAGE_count_SUM_GENLIST (sortingTheory 128)
value SUM_IMAGE_DEF (pred_setTheory 36)
value SUM_IMAGE_DELETE (pred_setTheory 376)
value SUM_IMAGE_eq_SUM_MAP_SET_TO_LIST (listTheory 368)
value SUM_IMAGE_IN_LE (pred_setTheory 377)
value SUM_IMAGE_LIST_TO_SET_upper_bound (listTheory 367)
value SUM_IMAGE_lower_bound (pred_setTheory 385)
value SUM_IMAGE_MONO_LESS (pred_setTheory 378)
value SUM_IMAGE_MONO_LESS_EQ (pred_setTheory 379)
value SUM_IMAGE_SING (pred_setTheory 380)
value SUM_IMAGE_SUBSET_LE (pred_setTheory 381)
value SUM_IMAGE_THM (pred_setTheory 382)
value sum_image_tm (pred_setSyntax 34)
value SUM_IMAGE_UNION (pred_setTheory 383)
value SUM_IMAGE_upper_bound (pred_setTheory 386)
value SUM_IMAGE_ZERO (pred_setTheory 384)
value sum_ind (realTheory 455)
value sum_INDUCT (sumTheory 39)
value sum_ISO_DEF (sumTheory 14)
value SUM_LE (realTheory 411)
value sum_leq_norm (NumRelNorms 17)
value SUM_LESS (sum_numTheory 25)
value SUM_LT (util_probTheory 162)
value sum_lt_norm (NumRelNorms 18)
value SUM_MAP (sumTheory 32)
value SUM_MAP_CASE (sumTheory 33)
value SUM_MAP_def (sumTheory 13)
value SUM_MAP_FOLDL (listTheory 369)
value SUM_MAP_I (sumTheory 34)
value SUM_MAP_MEM_bound (listTheory 370)
value SUM_MAP_PLUS (listTheory 371)
value SUM_MAP_PLUS_ZIP (listTheory 372)
value SUM_MAP_PRS (quotient_sumTheory 18)
value SUM_MAP_RSP (quotient_sumTheory 19)
value SUM_MONO (sum_numTheory 26)
value SUM_NEG (realTheory 412)
value sum_normalise (OmegaMath 19)
value SUM_NSUB (realTheory 413)
value sum_num_grammars (sum_numTheory 30)
structure sum_numTheory
value SUM_OF_PRODUCTS_CONV (Norm_arith 13)
value SUM_OF_PRODUCTS_MULT_CONV (Norm_arith 12)
value SUM_OF_PRODUCTS_SUC_CONV (Norm_arith 11)
value sum_of_sums (sortingTheory 134)
value SUM_OFFSET (realTheory 414)
value SUM_PERMUTE_0 (realTheory 415)
value SUM_PICK (util_probTheory 163)
value SUM_POS (realTheory 416)
value SUM_POS_GEN (realTheory 417)
value sum_qp (quantHeuristicsLib 95), value sum_qp (quantHeuristicsLibParameters 35)
value SUM_QUOTIENT (quotient_sumTheory 20), value sum_quotient (quotient 172)
value SUM_REINDEX (realTheory 418)
value SUM_REL_curried_def (quotient_sumTheory 5)
value SUM_REL_def (quotient_sumTheory 22)
value SUM_REL_EQ (quotient_sumTheory 21)
value SUM_REL_ind (quotient_sumTheory 23)
value SUM_REL_tupled_primitive_def (quotient_sumTheory 6)
value SUM_REVERSE (rich_listTheory 323)
value SUM_rws (sumSimps 3)
value SUM_SAME_IMAGE (pred_setTheory 387)
value SUM_SET_DEF (pred_setTheory 37)
value SUM_SET_DELETE (pred_setTheory 388)
value SUM_SET_EMPTY (pred_setTheory 389)
value SUM_SET_IN_LE (pred_setTheory 390)
value SUM_SET_SING (pred_setTheory 391)
value SUM_SET_SUBSET_LE (pred_setTheory 392)
value SUM_SET_THM (pred_setTheory 393)
value sum_set_tm (pred_setSyntax 35)
value SUM_SET_UNION (pred_setTheory 394)
value sum_size_def (basicSizeTheory 9)
value sum_size_tm (basicSizeSyntax 7)
value SUM_SNOC (listTheory 373), value SUM_SNOC (rich_listTheory 518)
value SUM_SPLIT (integralTheory 86)
value SUM_ss (sumSimps 2)
value SUM_SUB (realTheory 419)
value SUM_SUBST (realTheory 420)
value SUM_SUM_ACC (listTheory 374)
value SUM_SUMMABLE (seqTheory 80)
value sum_tm (listSyntax 38)
value sum_tupled_primitive (realTheory 20)
value SUM_TWO (realTheory 421)
value sum_TY_DEF (sumTheory 15)
value sum_ty_filter (quantHeuristicsLib 103), value sum_ty_filter (quantHeuristicsLibParameters 38)
value SUM_UNIQ (seqTheory 81)
value SUM_UNIV (pred_setTheory 395)
value sum_var_coeffs (CooperMath 14)
value SUM_ZERO (realTheory 422), value SUM_ZERO (sum_numTheory 27)
value sumc_ADD (OmegaTheory 85)
value sumc_curried_def (OmegaTheory 29)
value sumc_def (OmegaTheory 87)
value sumc_ind (OmegaTheory 88)
value sumc_MULT (OmegaTheory 86)
value sumc_nonsingle (OmegaTheory 89)
value sumc_singleton (OmegaTheory 90)
value sumc_thm (OmegaTheory 91)
value sumc_tupled_primitive_def (OmegaTheory 30)
value SUMi (basis_emitTheory 7)
value suminf (seqTheory 10)
value SUMINF_2D (util_probTheory 156)
value SUMINF_ADD (util_probTheory 157)
value SUMINF_POS (util_probTheory 158)
value summable (seqTheory 11)
value SUMMABLE_LE (util_probTheory 159)
value SUMMABLE_SUM (seqTheory 79)
value sums (seqTheory 12)
value SUMS_EQ (util_probTheory 160)
structure sumSimps
structure sumSyntax
structure sumTheory
value SUNTIL (Temporal_LogicTheory 10)
value SUNTIL_AS_BEFORE (Temporal_LogicTheory 95)
value SUNTIL_AS_CO_BUECHI (Omega_AutomataTheory 40)
value SUNTIL_AS_SBEFORE (Temporal_LogicTheory 96)
value SUNTIL_AS_SWHEN (Temporal_LogicTheory 97)
value SUNTIL_AS_UNTIL (Temporal_LogicTheory 98)
value SUNTIL_AS_WHEN (Temporal_LogicTheory 99)
value SUNTIL_EVENT (Temporal_LogicTheory 100)
value SUNTIL_EXPRESSIVE (Past_Temporal_LogicTheory 47)
value SUNTIL_IDEM (Temporal_LogicTheory 101)
value SUNTIL_IMP (Temporal_LogicTheory 102)
value SUNTIL_INVARIANT (Temporal_LogicTheory 103)
value SUNTIL_LINORD (Temporal_LogicTheory 104)
value SUNTIL_NEXT (Temporal_LogicTheory 105)
value SUNTIL_REC (Temporal_LogicTheory 106)
value SUNTIL_SIGNAL (Temporal_LogicTheory 107)
value SUNTIL_SIMP (Temporal_LogicTheory 108)
value SUP (Sup_Inf 11), value sup (realTheory 21)
value sup_0 (UnicodeChars 36)
value sup_1 (UnicodeChars 37)
value sup_2 (UnicodeChars 38)
value sup_3 (UnicodeChars 39)
value sup_4 (UnicodeChars 40)
value sup_5 (UnicodeChars 41)
value sup_6 (UnicodeChars 42)
value sup_7 (UnicodeChars 43)
value sup_8 (UnicodeChars 44)
value sup_9 (UnicodeChars 45)
value sup_add_mono (extrealTheory 367)
value SUP_ALLPOS_LEMMA1 (realaxTheory 60)
value SUP_ALLPOS_LEMMA2 (realaxTheory 61)
value SUP_ALLPOS_LEMMA3 (realaxTheory 62)
value SUP_ALLPOS_LEMMA4 (realaxTheory 63)
value sup_cmul (extrealTheory 368)
value sup_const (extrealTheory 369)
value sup_const_alt (extrealTheory 370)
value sup_const_over_set (extrealTheory 371)
value SUP_EPSILON (realTheory 423)
value sup_eq (UnicodeChars 48), value sup_eq (extrealTheory 372)
value sup_gamma (UnicodeChars 61)
value sup_h (UnicodeChars 51)
value sup_i (UnicodeChars 52)
structure Sup_Inf, value SUP_INF (Sup_Inf 18)
value SUP_INTERVAL (integralTheory 87)
value sup_j (UnicodeChars 53)
value sup_l (UnicodeChars 54)
value sup_le (extrealTheory 373)
value sup_le_mono (extrealTheory 374)
value sup_le_sup_imp (extrealTheory 375)
value SUP_LEMMA1 (realTheory 424)
value SUP_LEMMA2 (realTheory 425)
value SUP_LEMMA3 (realTheory 426)
value sup_lparen (UnicodeChars 46)
value sup_lt (extrealTheory 376)
value sup_lt_epsilon (extrealTheory 377)
value sup_lt_infty (extrealTheory 378)
value sup_max (extrealTheory 379)
value sup_minus (UnicodeChars 50)
value sup_mono (extrealTheory 380)
value sup_n (UnicodeChars 55)
value sup_num (extrealTheory 381)
value sup_plus (UnicodeChars 49)
value sup_r (UnicodeChars 56)
value sup_rparen (UnicodeChars 47)
value sup_s (UnicodeChars 57)
value sup_seq (extrealTheory 382)
value sup_suc (extrealTheory 383)
value sup_sum_mono (extrealTheory 384)
value sup_w (UnicodeChars 58)
value sup_x (UnicodeChars 59)
value sup_y (UnicodeChars 60)
value SURJ_COMPOSE (pred_setTheory 396)
value SURJ_DEF (pred_setTheory 38)
value SURJ_EMPTY (pred_setTheory 397)
value SURJ_ID (pred_setTheory 398)
value SURJ_IMAGE (pred_setTheory 399)
value SURJ_IMP_INJ (util_probTheory 164)
value SURJ_INJ_INV (pred_setTheory 400)
value surj_tm (pred_setSyntax 39)
value sw2sw (wordsTheory 565)
value sw2sw_0 (wordsTheory 566)
value sw2sw_def (wordsTheory 32)
value sw2sw_i2w (integer_wordTheory 58)
value sw2sw_id (wordsTheory 567)
value sw2sw_itself_def (basis_emitTheory 17)
value sw2sw_sw2sw (wordsTheory 568)
value sw2sw_tm (wordsSyntax 49)
value sw2sw_v2w (bitstringTheory 86)
value sw2sw_w2w (wordsTheory 569)
value sw2sw_w2w_add (wordsTheory 570)
value sw2sw_word_T (wordsTheory 571)
HOL Lib.swap (help/Docfiles/Lib.swap.adoc 0), value swap (Lib 135), value swap (mlibUseful 45)
value SWAP_def (pairTheory 13)
HOL Conv.SWAP_EXISTS_CONV (help/Docfiles/Conv.SWAP_EXISTS_CONV.adoc 0), value SWAP_EXISTS_CONV (Conv 85)
value SWAP_EXISTS_THM (boolTheory 168)
value SWAP_FORALL_CONV (Conv 86)
value SWAP_FORALL_THM (boolTheory 169)
HOL PairRules.SWAP_PEXISTS_CONV (help/Docfiles/PairRules.SWAP_PEXISTS_CONV.adoc 0), value SWAP_PEXISTS_CONV (PairRules 111)
HOL PairRules.SWAP_PFORALL_CONV (help/Docfiles/PairRules.SWAP_PFORALL_CONV.adoc 0), value SWAP_PFORALL_CONV (PairRules 110)
value SWAP_REVERSE (listTheory 376)
value SWAP_REVERSE_SYM (listTheory 377)
value swap_tm (pairSyntax 13)
value SWAP_VARS_CONV (Conv 103)
value SWHEN (Temporal_LogicTheory 11)
value SWHEN_AS_BEFORE (Temporal_LogicTheory 109)
value SWHEN_AS_CO_BUECHI (Omega_AutomataTheory 41)
value SWHEN_AS_NOT_WHEN (Temporal_LogicTheory 110)
value SWHEN_AS_SBEFORE (Temporal_LogicTheory 111)
value SWHEN_AS_SUNTIL (Temporal_LogicTheory 112)
value SWHEN_AS_UNTIL (Temporal_LogicTheory 113)
value SWHEN_AS_WHEN (Temporal_LogicTheory 114)
value SWHEN_EVENT (Temporal_LogicTheory 115)
value SWHEN_EXPRESSIVE (Past_Temporal_LogicTheory 48)
value SWHEN_IDEM (Temporal_LogicTheory 116)
value SWHEN_IMP (Temporal_LogicTheory 117)
value SWHEN_INVARIANT (Temporal_LogicTheory 118)
value SWHEN_LINORD (Temporal_LogicTheory 119)
value SWHEN_NEXT (Temporal_LogicTheory 120)
value SWHEN_REC (Temporal_LogicTheory 121)
value SWHEN_SIGNAL (Temporal_LogicTheory 122)
value SWHEN_SIMP (Temporal_LogicTheory 123)
HOL Thm.SYM (help/Docfiles/Thm.SYM.adoc 0), constructor Sym (Count 11), value SYM (FinalThm 48), value SYM (mlibThm 55), value sym (mlibTerm 104)
value SYM_ADD_ASSOC_CONV (Thm_convs 33)
value SYM_CANON_CONV (jrhUtils 12)
HOL Conv.SYM_CONV (help/Docfiles/Conv.SYM_CONV.adoc 0), value SYM_CONV (Conv 77)
value sym_normalise (OmegaSymbolic 6)
value SYM_ONE_MULT_CONV (Thm_convs 34)
value SYM_ONE_MULT_VAR_CONV (Norm_arith 19)
value symbol (mlibParser 60)
type symboltable (KernelSig 19)
value symmetric_def (relationTheory 51)
value symmetric_EQC (relationTheory 226)
value symmetric_inv (relationTheory 230)
value symmetric_inv_identity (relationTheory 232)
value symmetric_inv_image (relationTheory 233)
value symmetric_inv_RSUBSET (relationTheory 231)
value symmetric_LEX (pairTheory 68)
value symmetric_RC (relationTheory 227)
value symmetric_SC_identity (relationTheory 228)
value symmetric_TC (relationTheory 229)
value SYMMETRY (mlibThm 51)
HOL HolKernel.syntax_fns (help/Docfiles/HolKernel.syntax_fns.adoc 0), value syntax_fns (HolKernelDoc 61)
value system (Portable 50)
value system_ps (Systeml 4)
structure Systeml, value systeml (Systeml 3)
HOL boolSyntax.T (help/Docfiles/boolSyntax.T.adoc 0), type t (Nonce 3), type t (PIntMap 21), type t (PPBackEnd 14), type t (UTF8Set 3), type t (UniversalType 2), type t (errormonad 4), type t (mlibPatricia 16), type t (smpp 3), value T (boolSyntax 12)
value t001 (HolSmtTheory 325)
value t002 (HolSmtTheory 326)
value t003 (HolSmtTheory 327)
value t004 (HolSmtTheory 328)
value t005 (HolSmtTheory 329)
value t006 (HolSmtTheory 330)
value t007 (HolSmtTheory 331)
value t008 (HolSmtTheory 332)
value t009 (HolSmtTheory 333)
value t010 (HolSmtTheory 334)
value t011 (HolSmtTheory 335)
value t012 (HolSmtTheory 336)
value t013 (HolSmtTheory 337)
value t014 (HolSmtTheory 338)
value t015 (HolSmtTheory 339)
value t016 (HolSmtTheory 340)
value t017 (HolSmtTheory 341)
value t018 (HolSmtTheory 342)
value t019 (HolSmtTheory 343)
value t020 (HolSmtTheory 344)
value t021 (HolSmtTheory 345)
value t022 (HolSmtTheory 346)
value t023 (HolSmtTheory 347)
value t024 (HolSmtTheory 348)
value t025 (HolSmtTheory 349)
value t026 (HolSmtTheory 350)
value t027 (HolSmtTheory 351)
value t028 (HolSmtTheory 352)
value t029 (HolSmtTheory 353)
value t030 (HolSmtTheory 354)
value t031 (HolSmtTheory 355)
value t032 (HolSmtTheory 356)
value t033 (HolSmtTheory 357)
value t034 (HolSmtTheory 358)
value t035 (HolSmtTheory 359)
value T_AND (HolSmtTheory 31)
value T_and_l (CooperThms 8)
value T_and_r (CooperThms 9)
value T_DEF (boolTheory 31)
value T_or_l (CooperThms 12)
value T_or_r (CooperThms 13)
type table (mlibOmega 5)
value tabulate (patriciaLib 26)
value TAC_CONV (schneiderUtils 46)
HOL Tactical.TAC_PROOF (help/Docfiles/Tactical.TAC_PROOF.adoc 0), value TAC_PROOF (Tactical 4)
HOL Tactical.TACS_TO_LT (help/Docfiles/Tactical.TACS_TO_LT.adoc 0), value TACS_TO_LT (Tactical 30)
structure Tactic, type Tactic (jrhTactics 5), type tactic (Abbrev 9), type tactic (ListConv1 4), type tactic (PSet_ind 2), type tactic (RealArith 4), type tactic (Sanity 6), type tactic (Satisfy 43), type tactic (dep_rewrite 154), type tactic (folTools 19), type tactic (fracLib 6), type tactic (fracUtils 6), type tactic (intExtensionLib 6), type tactic (inttoTacs 9), type tactic (jbUtils 6), type tactic (jrhUtils 4), type tactic (listLib 4), type tactic (mesonLib 8), type tactic (metisTools 20), type tactic (ratLib 6), type tactic (ratUtils 6), type tactic (realLib 6), type tactic (schneiderUtils 6), type tactic (totoTacs 9)
value tactic_of (goalTree 17)
structure Tactical
HOL Tag.tag (help/Docfiles/Tag.tag.adoc 0), HOL Thm.tag (help/Docfiles/Thm.tag.adoc 0), structure Tag, type tag (FinalTag 2), type tag (FinalThm 3), type tag (Tag 2), value tag (FinalThm 13)
value tail_def (pathTheory 34)
value tail_drop (pathTheory 149)
constructor TAILREC (DefnBase 5)
value TAKE (rich_listTheory 324), value take (mlibStream 30), value take (seq 39)
value TAKE_0 (listTheory 378)
value TAKE_APPEND (rich_listTheory 325)
value TAKE_APPEND1 (listTheory 379), value TAKE_APPEND1 (rich_listTheory 326)
value TAKE_APPEND2 (listTheory 380), value TAKE_APPEND2 (rich_listTheory 327)
value TAKE_BUTLASTN (rich_listTheory 328)
value TAKE_compute (listTheory 386)
value TAKE_def (listTheory 44), value take_def (pathTheory 35)
value take_def_compute (pathTheory 150)
value TAKE_DROP (listTheory 381)
value take_drop_partition (rich_listTheory 351)
value TAKE_EL_SNOC (rich_listTheory 329)
value TAKE_LENGTH_APPEND (rich_listTheory 330)
value TAKE_LENGTH_ID (listTheory 382)
value TAKE_LENGTH_ID_rwt (listTheory 383)
value TAKE_LENGTH_TOO_LONG (listTheory 384)
value TAKE_PRE_LENGTH (rich_listTheory 331)
value TAKE_REVERSE (rich_listTheory 332)
value TAKE_SEG (rich_listTheory 333)
value TAKE_SNOC (rich_listTheory 334)
value TAKE_splitAtPki (listTheory 387)
value TAKE_SUM (listTheory 385)
value TAKE_TAKE (rich_listTheory 335)
value take_tm (listSyntax 39)
value takeP (Coding 6)
value tan (transcTheory 22)
value TAN_0 (transcTheory 227)
value TAN_ADD (transcTheory 228)
value TAN_ATN (transcTheory 229)
value TAN_DOUBLE (transcTheory 230)
value TAN_NEG (transcTheory 231)
value TAN_NPI (transcTheory 232)
value TAN_PERIODIC (transcTheory 233)
value TAN_PI (transcTheory 234)
value TAN_POS_PI2 (transcTheory 235)
value TAN_SEC (transcTheory 236)
value tan_tm (transcSyntax 21)
value TAN_TOTAL (transcTheory 237)
value TAN_TOTAL_LEMMA (transcTheory 238)
value TAN_TOTAL_POS (transcTheory 239)
value tau (UnicodeChars 19)
value TAUT (tautLib 16)
HOL tautLib.TAUT_CONV (help/Docfiles/tautLib.TAUT_CONV.adoc 0), value TAUT_CONV (jrhUtils 7), value TAUT_CONV (tautLib 12)
HOL tautLib.TAUT_PROVE (help/Docfiles/tautLib.TAUT_PROVE.adoc 0), value TAUT_PROVE (tautLib 15)
HOL tautLib.TAUT_TAC (help/Docfiles/tautLib.TAUT_TAC.adoc 0), value TAUT_TAC (tautLib 13)
structure tautLib
value tautologous (mlibCanon 26)
value tautology_checking (normalForms 121)
value TAUTOLOGY_CONV (normalForms 109)
value tc_cases (set_relationTheory 130)
value TC_CASES1 (relationTheory 150)
value TC_CASES1_E (relationTheory 151)
value TC_CASES2 (relationTheory 152)
value TC_CASES2_E (relationTheory 153)
value tc_cases_left (set_relationTheory 131)
value tc_cases_right (set_relationTheory 132)
value TC_CONV (tcTacs 14)
value TC_DEF (relationTheory 33), value tc_def (set_relationTheory 33)
value tc_domain_range (set_relationTheory 133)
value tc_empty (set_relationTheory 134)
value TC_eq_NRC (arithmeticTheory 364)
value tc_grammars (tcTheory 42)
value TC_IDEM (relationTheory 154)
value TC_IM_RTC_SUC (prim_recTheory 45)
value tc_implication (set_relationTheory 135)
value TC_implies_one_step (relationTheory 167)
value tc_ind (set_relationTheory 136)
value tc_ind_left (set_relationTheory 137)
value tc_ind_right (set_relationTheory 138)
value TC_INDUCT (relationTheory 155)
value TC_INDUCT_LEFT1 (relationTheory 156)
value TC_INDUCT_RIGHT1 (relationTheory 157)
value TC_ITER (tcTheory 10)
value TC_ITER_THM (tcTheory 29)
value TC_lifts_equalities (relationTheory 168)
value TC_lifts_invariants (relationTheory 169)
value TC_lifts_monotonicities (relationTheory 170)
value TC_lifts_transitive_relations (relationTheory 171)
value TC_mlt1_FINITE_BAG (bagTheory 246)
value TC_mlt1_UNION1_I (bagTheory 247)
value TC_mlt1_UNION2_I (bagTheory 248)
value TC_MOD (tcTheory 11)
value TC_MOD_EMPTY_ID (tcTheory 30)
value TC_MOD_LEM (tcTheory 31)
value TC_MONOTONE (relationTheory 158)
value TC_RC_EQNS (relationTheory 159)
value TC_RTC (relationTheory 160)
value TC_RULES (relationTheory 161), value tc_rules (set_relationTheory 139)
value TC_SIMP_CONV (TotalDefn 22)
value TC_SIMP_TAC (TotalDefn 23)
value TC_STRONG_INDUCT (relationTheory 162)
value TC_STRONG_INDUCT_LEFT1 (relationTheory 163)
value TC_STRONG_INDUCT_RIGHT1 (relationTheory 164)
value tc_strongind (set_relationTheory 140)
value tc_strongind_left (set_relationTheory 141)
value tc_strongind_right (set_relationTheory 142)
value TC_SUBSET (relationTheory 165)
value tc_to_rel_conv (set_relationTheory 143)
value TC_TRANSITIVE (relationTheory 166), value tc_transitive (set_relationTheory 144)
value tc_union (set_relationTheory 145)
type tcheck_error (Preterm 76)
value tcs_of (Defn 32)
structure tcTacs
structure tcTheory
HOL bossLib.tDefine (help/Docfiles/bossLib.tDefine.adoc 0), value tDefine (TotalDefn 31), value tDefine (bossLib 16)
value tdiv (transcTheory 23)
value TDIV_BOUNDS (integralTheory 88)
value TDIV_LE (integralTheory 89)
value tdiv_tm (transcSyntax 22)
value temonz (floatTheory 146)
value temp_add_absyn_postprocessor (Parse 48)
value temp_add_bare_numeral_form (Parse 144)
value temp_add_infix (Parse 138)
value temp_add_infix_type (Parse 30)
value temp_add_listform (Parse 139)
value temp_add_numeral_form (Parse 143)
value temp_add_record_field (Parse 166)
value temp_add_record_fupdate (Parse 167)
value temp_add_rule (Parse 134)
value temp_add_sptree_printer (sptreeSyntax 6)
value temp_add_type (Parse 25)
value temp_add_user_printer (Parse 169)
value temp_associate_restriction (Parse 147)
value temp_binding (Theory 17), value temp_binding (TheoryPP 41)
value temp_bring_to_front_overload (Parse 161)
value temp_clear_overloads_on (Parse 162)
value TEMP_DEFS_CONV (temporalLib 11)
value temp_disable_tyabbrev_printing (Parse 39)
value temp_gen_remove_ovl_mapping (Parse 164)
value temp_give_num_priority (Parse 145)
value temp_inferior_overload_on (Parse 158)
value temp_loose_equality (ParseExtras 6)
value TEMP_NORMALIZE_CONV (temporalLib 10)
value temp_OpenTheory_const_name (OpenTheoryMap 17)
value temp_OpenTheory_tyop_name (OpenTheoryMap 16)
value TEMP_OPS_DEFS_TO_OMEGA (Omega_AutomataTheory 42)
value temp_overload_on (Parse 157)
value temp_overload_on_by_nametype (Parse 159)
value temp_prefer_form_with_tok (Parse 148)
value temp_remove_numeral_form (Parse 146)
value temp_remove_ovl_mapping (Parse 163)
value temp_remove_rules_for_term (Parse 153)
value temp_remove_termtok (Parse 154)
value temp_remove_type_abbrev (Parse 42)
value temp_remove_user_printer (Parse 171)
value temp_send_to_back_overload (Parse 160)
value temp_set_associativity (Parse 155)
value temp_set_fixity (Parse 149)
HOL Parse.temp_set_grammars (help/Docfiles/Parse.temp_set_grammars.adoc 0), value temp_set_grammars (Parse 133)
value temp_set_mapped_fixity (Parse 150)
value temp_TeX_notation (TexTokenMap 4)
value temp_thytype_abbrev (Parse 35)
value temp_tight_equality (ParseExtras 5)
value temp_type_abbrev (Parse 37)
value temp_uadd_rule (ProvideUnicode 22)
value temp_unicode_version (ProvideUnicode 19)
value temp_uoverload_on (ProvideUnicode 21)
value Temporal_Logic_grammars (Temporal_LogicTheory 162)
structure Temporal_LogicTheory
structure temporalLib
value tends (netsTheory 7)
value tends_num_real (seqTheory 13)
value tends_real_real (limTheory 8)
value tendsto (netsTheory 8)
HOL Parse.Term (help/Docfiles/Parse.Term.adoc 0), HOL Term.term (help/Docfiles/Term.term.adoc 0), constructor TERM (KernelTypes 52), constructor Term (mungeTools 3), structure Term, type term (Abbrev 3), type term (Absyn 2), type term (Canon 7), type term (ConstMapML 6), type term (DB 3), type term (DefnBase 2), type term (FinalTerm 3), type term (FinalThm 4), type term (Ho_Net 11), type term (HolKernelDoc 4), type term (Hol_pp 4), type term (KernelTypes 33), type term (LVTermNet 5), type term (ListConv1 2), type term (Literal 2), type term (Net 14), type term (Norm_bool 2), type term (Norm_ineqs 3), type term (Opentheory 1), type term (Overload 3), type term (Parse 2), type term (Parse_support 4), type term (Pmatch 3), type term (PmatchHeuristics 3), type term (Preterm 4), type term (ProvideUnicode 3), type term (Psyntax 3), type term (Raw 7), type term (RealArith 2), type term (Rsyntax 3), type term (Rules 3), type term (Sanity 3), type term (Satisfy 40), type term (Solve 2), type term (Solve_ineqs 3), type term (TermParse 3), type term (Theory 4), type term (TypeBase 4), type term (TypeBasePure 3), type term (boolSyntax 3), type term (dep_rewrite 151), type term (enumTacs 7), type term (fmapalTacs 7), type term (folMapping 13), type term (folTools 15), type term (fracLib 2), type term (fracSyntax 2), type term (fracUtils 2), type term (intExtensionLib 2), type term (inttoTacs 7), type term (jbUtils 2), type term (jrhUtils 2), type term (listLib 2), type term (matchTools 10), type term (metisTools 18), type term (mlibCanon 8), type term (mlibClause 10), type term (mlibKernel 8), type term (mlibMatch 8), type term (mlibModel 9), type term (mlibRewrite 9), type term (mlibSubst 10), type term (mlibTerm 14), type term (mlibTermnet 10), type term (mlibTermorder 9), type term (mlibTptp 8), type term (pairTheory 78), type term (parse_type 8), type term (ratLib 2), type term (ratSyntax 2), type term (ratUtils 2), type term (realLib 3), type term (rich_listSyntax 2), type term (schneiderUtils 2), type term (tcTacs 7), type term (temporalLib 6), type term (term_grammar 112), type term (term_pp 3), type term (term_pp_utils 3), type term (totoTacs 7), type term (transcSyntax 2), type term (unwindLib 10), value Term (Parse 54), value term (TermParse 18)
type term1 (folMapping 9)
value term_at (CooperMath 20)
structure Term_coeffs
value term_compare (mlibTerm 78)
value term_eq (FinalTerm 78)
HOL Parse.term_grammar (help/Docfiles/Parse.term_grammar.adoc 0), structure term_grammar, value term_grammar (Parse 73)
value term_of (IndDefLib 5)
value term_of_absyn (IndDefLib 6)
value term_of_bool (bitstringSyntax 11)
value term_of_int (Arith_cons 37), value term_of_int (intSyntax 34), value term_of_int (numSyntax 124), value term_of_int (realSyntax 27)
type term_op (CooperSyntax 28)
structure term_pp
value term_pp_prefix (Globals 18)
value term_pp_suffix (Globals 19)
structure term_pp_utils
value term_pp_with_delimiters (Parse 186)
type term_ptree (patriciaLib 5), type term_ptree (patricia_castsLib 5)
value term_size (FinalTerm 83), value term_size (HolKernelDoc 64), value term_size (mlibTerm 74)
value term_subst (mlibSubst 19)
value term_to_dfactoid (OmegaMLShadow 21)
value term_to_preterm (Preterm 25)
HOL Parse.term_to_string (help/Docfiles/Parse.term_to_string.adoc 0), value term_to_string (Hol_pp 22), value term_to_string (Parse 202), value term_to_string (mlibModel 53), value term_to_string (mlibTerm 151)
value term_to_string' (mlibTerm 147)
type term_token (term_tokens 3)
structure term_tokens
value termantiq_constructors (Pretype 48)
structure TermCoding
value TERMDIFF (powserTheory 17)
value TERMDIFF_LEMMA1 (powserTheory 18)
value TERMDIFF_LEMMA2 (powserTheory 19)
value TERMDIFF_LEMMA3 (powserTheory 20)
value TERMDIFF_LEMMA4 (powserTheory 21)
value TERMDIFF_LEMMA5 (powserTheory 22)
constructor TERMINATION (TotalDefn 35)
value termination_simps (TotalDefn 14)
type termnet (mlibTermnet 14)
type termorder (mlibClause 14), type termorder (mlibTermorder 22)
structure TermParse
value termsig (Term 6)
type termtable (SharingTables 18)
type termtype (CooperMath 17)
value testbit (bitstringTheory 87)
value testbit_def (bitstringTheory 30)
value testbit_el (bitstringTheory 88)
value testbit_geq_len (bitstringTheory 89)
value testbit_tm (bitstringSyntax 63)
value testbit_w2v (bitstringTheory 90)
structure testutils
value TeX_notation (TexTokenMap 3)
HOL EmitTeX.tex_theory (help/Docfiles/EmitTeX.tex_theory.adoc 0), value tex_theory (EmitTeX 30)
value texLinewidth (EmitTeX 4)
value texp_help0 (numeralTheory 47)
value texp_help_def (numeralTheory 14)
value texp_help_thm (numeralTheory 48)
value texPrefix (EmitTeX 5)
constructor TEXT (Trace 4)
structure TexTokenMap
value tfflttfs (floatTheory 147)
value TFL_INDUCTIVE_INVARIANT_ON_WFREC (relationTheory 172)
value TFL_INDUCTIVE_INVARIANT_WFREC (relationTheory 173)
HOL Defn.tgoal (help/Docfiles/Defn.tgoal.adoc 0), value tgoal (Defn 56)
value tgoal_no_defn (Defn 64)
value the (liteLib 18)
value the_compset (computeLib 27)
value THE_DEF (optionTheory 19)
value the_fun_def (relationTheory 52)
value the_map (TexTokenMap 6)
value the_monoset (IndDefLib 18)
value THE_PTREE_def (patricia_castsTheory 30)
value THE_PTREE_SOME_PTREE (patricia_castsTheory 50)
value the_ptree_tm (patricia_castsSyntax 9)
value THE_select_fun (quantHeuristicsLibAbbrev 27)
value the_tm (optionLib 11), value the_tm (optionSyntax 10)
value the_value (boolSyntax 25)
value theConstMap (ConstMapML 8)
HOL Tactical.THEN (help/Docfiles/Tactical.THEN.adoc 0), value THEN (Tactical 7), value THEN (jrhTactics 16)
HOL Tactical.THEN1 (help/Docfiles/Tactical.THEN1.adoc 0), value THEN1 (Tactical 22)
HOL ConseqConv.THEN_CONSEQ_CONV (help/Docfiles/ConseqConv.THEN_CONSEQ_CONV.adoc 0), value THEN_CONSEQ_CONV (ConseqConv 204)
value THEN_CONSEQ_CONV___combine (ConseqConv 42)
HOL Tactical.THEN_LT (help/Docfiles/Tactical.THEN_LT.adoc 0), value THEN_LT (Tactical 24)
HOL Thm_cont.THEN_TCL (help/Docfiles/Thm_cont.THEN_TCL.adoc 0), value THEN_TCL (Thm_cont 4)
HOL Conv.THENC (help/Docfiles/Conv.THENC.adoc 0), value THENC (Conv 30), value THENC (RJBConv 6)
value THENCQC (liteLib 128)
value thenf (liteLib 29)
HOL Tactical.THENL (help/Docfiles/Tactical.THENL.adoc 0), value THENL (Tactical 14), value THENL (jrhTactics 18)
value THENQC (liteLib 129)
constructor THEOREM (KernelTypes 52), constructor Theorem (mungeTools 3), value theorem (DB 15)
HOL DB.theorems (help/Docfiles/DB.theorems.adoc 0), structure Theorems, value theorems (DB 20)
constructor THEORY (Hol_pp 7), structure Theory, type theory (DB 5), type theory (Hol_pp 7), type theory (Sanity 5)
value theory_data (ThmSetData 14)
structure TheoryPP
value Theta (UnicodeChars 26), value theta (UnicodeChars 10)
value theTypeBase (TypeBase 12)
type thing (mlibTerm 126)
value third_cancel (extrealTheory 385)
value thirds_between (extrealTheory 386)
HOL Thm.thm (help/Docfiles/Thm.thm.adoc 0), constructor THM (KernelTypes 45), constructor Thm (DB 7), structure Thm, type thm (ASCIInumbersTheory 2), type thm (Abbrev 2), type thm (BoundedRewrites 4), type thm (Canon 8), type thm (CoderTheory 2), type thm (ConseqConvTheory 2), type thm (DB 4), type thm (DecodeTheory 2), type thm (DeepSyntaxTheory 2), type thm (DefnBase 3), type thm (EncodeTheory 2), type thm (EncodeVarTheory 2), type thm (FinalThm 2), type thm (HolKernelDoc 5), type thm (HolSmtTheory 2), type thm (Hol_pp 5), type thm (KernelTypes 45), type thm (ListConv1 3), type thm (Norm_arith 3), type thm (OmegaTheory 2), type thm (Omega_AutomataTheory 2), type thm (Opentheory 1), type thm (Parse 4), type thm (Past_Temporal_LogicTheory 2), type thm (Pmatch 4), type thm (PmatchHeuristics 4), type thm (RealArith 3), type thm (Rsyntax 4), type thm (Rules 4), type thm (Sanity 4), type thm (Satisfy 41), type thm (Solve_ineqs 4), type thm (Temporal_LogicTheory 2), type thm (Theory 5), type thm (TheoryPP 9), type thm (TypeBase 5), type thm (TypeBasePure 4), type thm (alignmentTheory 2), type thm (alistTheory 2), type thm (arithmeticTheory 2), type thm (bagTheory 2), type thm (basicSizeTheory 2), type thm (basis_emitTheory 2), type thm (bitTheory 2), type thm (bitstringTheory 2), type thm (blastTheory 2), type thm (boolSyntax 2), type thm (boolTheory 2), type thm (canonicalTheory 2), type thm (combinTheory 2), type thm (comparisonTheory 2), type thm (complexTheory 2), type thm (containerTheory 2), type thm (defCNFTheory 2), type thm (dep_rewrite 153), type thm (dividesTheory 2), type thm (enumTacs 6), type thm (enumeralTheory 2), type thm (errorStateMonadTheory 2), type thm (extrealTheory 2), type thm (fcpTheory 2), type thm (finite_mapTheory 2), type thm (fixedPointTheory 2), type thm (floatTheory 2), type thm (fmapalTacs 6), type thm (fmapalTheory 2), type thm (fmaptreeTheory 2), type thm (folMapping 14), type thm (folTools 16), type thm (fracLib 3), type thm (fracTheory 2), type thm (fracUtils 3), type thm (gcdTheory 2), type thm (gcdsetTheory 2), type thm (hratTheory 2), type thm (hrealTheory 2), type thm (ieeeTheory 2), type thm (ind_typeTheory 2), type thm (inftreeTheory 2), type thm (intExtensionLib 3), type thm (intExtensionTheory 2), type thm (int_arithTheory 2), type thm (int_bitwiseTheory 2), type thm (integerRingTheory 2), type thm (integerTheory 2), type thm (integer_wordTheory 2), type thm (integralTheory 2), type thm (intrealTheory 2), type thm (inttoTacs 6), type thm (inttoTheory 2), type thm (jbUtils 3), type thm (jrhUtils 3), type thm (lbtreeTheory 2), type thm (lebesgueTheory 2), type thm (limTheory 2), type thm (listLib 3), type thm (listRangeTheory 2), type thm (listTheory 2), type thm (llistTheory 2), type thm (logrootTheory 2), type thm (markerTheory 2), type thm (matchTools 11), type thm (measureTheory 2), type thm (mergesortTheory 2), type thm (mesonLib 7), type thm (metisTools 19), type thm (mlibClause 13), type thm (mlibKernel 13), type thm (mlibMetis 18), type thm (mlibResolution 9), type thm (mlibRewrite 10), type thm (mlibSolver 11), type thm (mlibUnits 10), type thm (netsTheory 2), type thm (normalFormsTheory 2), type thm (numRingTheory 2), type thm (numTheory 2), type thm (numeralTheory 2), type thm (numeral_bitTheory 2), type thm (numpairTheory 2), type thm (numposrepTheory 2), type thm (oneTheory 2), type thm (operatorTheory 2), type thm (optionTheory 2), type thm (pairTheory 2), type thm (pathTheory 2), type thm (patriciaTheory 2), type thm (patricia_castsTheory 2), type thm (polyTheory 2), type thm (posetTheory 2), type thm (powserTheory 2), type thm (pred_setTheory 2), type thm (prelimTheory 2), type thm (prim_recTheory 2), type thm (primeFactorTheory 2), type thm (probabilityTheory 2), type thm (quantHeuristicsTheory 2), type thm (quoteTheory 2), type thm (quotientTheory 2), type thm (quotient_listTheory 2), type thm (quotient_optionTheory 2), type thm (quotient_pairTheory 2), type thm (quotient_pred_setTheory 2), type thm (quotient_sumTheory 2), type thm (ratLib 3), type thm (ratRingTheory 2), type thm (ratTheory 2), type thm (ratUtils 3), type thm (realLib 4), type thm (realTheory 2), type thm (real_sigmaTheory 2), type thm (realaxTheory 2), type thm (relationTheory 2), type thm (res_quanTheory 2), type thm (rich_listTheory 2), type thm (ringNormTheory 2), type thm (ringTheory 2), type thm (satTheory 2), type thm (schneiderUtils 3), type thm (semi_ringTheory 2), type thm (seqTheory 2), type thm (set_relationTheory 2), type thm (sortingTheory 2), type thm (sptreeTheory 2), type thm (state_transformerTheory 2), type thm (stringTheory 2), type thm (string_numTheory 2), type thm (sumTheory 2), type thm (sum_numTheory 2), type thm (tcTacs 6), type thm (tcTheory 2), type thm (temporalLib 7), type thm (topologyTheory 2), type thm (totoTacs 6), type thm (totoTheory 2), type thm (transcTheory 2), type thm (unwindLib 11), type thm (updateTheory 2), type thm (util_probTheory 2), type thm (whileTheory 2), type thm (wordsTheory 2), type thm (wotTheory 2)
type thm1 (folMapping 11), type thm1 (folTools 11)
value thm_compare (mlibThm 33)
structure Thm_cont
structure Thm_convs
HOL Count.thm_count (help/Docfiles/Count.thm_count.adoc 0), value thm_count (Count 52)
value thm_foldr (mlibThm 35)
value thm_frees (FinalThm 18)
value thm_map (mlibThm 34)
value thm_of_depid (hhWriter 4)
type Thm_Tactic (jrhTactics 6), type thm_tactic (Abbrev 15), type thm_tactic (dep_rewrite 156)
type Thm_Tactical (jrhTactics 7), type thm_tactical (Abbrev 16)
value thm_to_string (Hol_pp 23), value thm_to_string (Parse 204), value thm_to_string (mlibThm 74)
value thm_to_string' (mlibThm 71)
HOL DB.thms (help/Docfiles/DB.thms.adoc 0), value thms (DB 13)
structure ThmSetData
value threshold (ieeeTheory 94)
value THRESHOLD_LT_POW_INV (floatTheory 126)
value THRESHOLD_MUL_LT (floatTheory 127)
type thry (Defn 4), type thry (Induction 3), type thry (Pmatch 5), type thry (PmatchHeuristics 5)
HOL DB.thy (help/Docfiles/DB.thy.adoc 0), value thy (DB 11)
HOL Theory.thy_addon (help/Docfiles/Theory.thy_addon.adoc 0), type thy_addon (Theory 7)
type thy_const (OpenTheoryMap 12), type thy_const (Opentheory 3)
value thy_const_cmp (OpenTheoryMap 14)
value thy_const_to_string (OpenTheoryCommon 4)
value thy_consts (FinalTerm 88)
value thy_monos (IndDefLib 21)
value thy_rule_inductions (IndDefLib 23)
value thy_ssfrag (BasicProvers 32)
type thy_tyop (OpenTheoryMap 11), type thy_tyop (Opentheory 2)
value thy_tyop_cmp (OpenTheoryMap 13)
value thy_tyop_to_string (OpenTheoryCommon 3)
value thy_types (FinalType 61)
value thydepl_of (Dep 15)
HOL Parse.thytype_abbrev (help/Docfiles/Parse.thytype_abbrev.adoc 0), value thytype_abbrev (Parse 36)
type ThyUpdateInfo (ProvideUnicode 33)
value tight_equality (ParseExtras 3)
HOL Lib.time (help/Docfiles/Lib.time.adoc 0), constructor Time (mlibSolver 54), type time (Portable 2), value time (Lib 136), value time (Portable 45), value time (mlibPortable 15)
value time_eq (Portable 39)
value time_lt (Portable 44)
value time_to_string (Portable 42)
value timed (mlibUseful 17)
value timed_many (mlibUseful 18)
value TIMES2 (arithmeticTheory 365), value times2 (Arbnumcore 9), value times2 (mlibArbnum 11)
value TIMES_2EXP_def (bitTheory 21)
value times_2exp_tm (bitSyntax 20)
value timestamp (Portable 40)
value tint_0 (integerTheory 30)
value tint_1 (integerTheory 31)
value TINT_10 (integerTheory 319)
value tint_add (integerTheory 32)
value TINT_ADD_ASSOC (integerTheory 320)
value TINT_ADD_LID (integerTheory 321)
value TINT_ADD_LINV (integerTheory 322)
value TINT_ADD_SYM (integerTheory 323)
value TINT_ADD_WELLDEF (integerTheory 324)
value TINT_ADD_WELLDEFR (integerTheory 325)
value tint_eq (integerTheory 33)
value TINT_EQ_AP (integerTheory 326)
value TINT_EQ_EQUIV (integerTheory 327)
value TINT_EQ_REFL (integerTheory 328)
value TINT_EQ_SYM (integerTheory 329)
value TINT_EQ_TRANS (integerTheory 330)
value TINT_INJ (integerTheory 331)
value TINT_LDISTRIB (integerTheory 332)
value tint_lt (integerTheory 34)
value TINT_LT_ADD (integerTheory 333)
value TINT_LT_MUL (integerTheory 334)
value TINT_LT_REFL (integerTheory 335)
value TINT_LT_TOTAL (integerTheory 336)
value TINT_LT_TRANS (integerTheory 337)
value TINT_LT_WELLDEF (integerTheory 338)
value TINT_LT_WELLDEFL (integerTheory 339)
value TINT_LT_WELLDEFR (integerTheory 340)
value tint_mul (integerTheory 35)
value TINT_MUL_ASSOC (integerTheory 341)
value TINT_MUL_LID (integerTheory 342)
value TINT_MUL_SYM (integerTheory 343)
value TINT_MUL_WELLDEF (integerTheory 344)
value TINT_MUL_WELLDEFR (integerTheory 345)
value tint_neg (integerTheory 36)
value TINT_NEG_WELLDEF (integerTheory 346)
value tint_of_num (integerTheory 37)
value tint_of_num_eq (integerTheory 350)
value tittfittt (floatTheory 148)
value TL (listTheory 45), value TL (rich_listTheory 519), value tl (mlibStream 22), value tl (seq 36)
value TL_GENLIST (listTheory 388), value TL_GENLIST (rich_listTheory 520)
value TL_SNOC (rich_listTheory 336)
value TL_T_def (rich_listTheory 25)
value tl_tm (listSyntax 40)
constructor TM (term_grammar 9), value TM (Parse 245)
constructor TMAbs (SharingTables 7)
constructor TMAp (SharingTables 7)
constructor TMC (SharingTables 7)
type tmconst (KernelTypes 31)
type tmkind (BasicProvers 52)
type tmquote (Q 3)
constructor TMV (SharingTables 7)
value tmvar_vary (Lexis 23)
type tmVars (matchTools 36)
value TO_11 (totoTheory 55)
value TO_antisym (totoTheory 57)
value TO_apto_ID (totoTheory 58)
value TO_apto_TO_ID (totoTheory 59)
value TO_apto_TO_IMP (totoTheory 60)
value to_bij (totoTheory 34)
value TO_charOrd (totoTheory 61)
value TO_cpn_eqn (totoTheory 62)
value TO_equal_eq (totoTheory 63)
value TO_exists (totoTheory 64)
value to_fromList (llistTheory 157)
value to_hol_type (KernelTypes 29)
value TO_injection (totoTheory 65)
value TO_inv (totoTheory 7)
value TO_inv_invert (comparisonTheory 24)
value TO_inv_Ord (totoTheory 66)
value TO_inv_TO_inv (totoTheory 67)
value TO_lexTO (totoTheory 68)
value to_list (mlibMultiset 27), value to_list (mlibStream 45), value to_list (mlibSupport 36)
value TO_ListOrd (totoTheory 56)
value to_maplets (mlibLiteralnet 30), value to_maplets (mlibSubst 26), value to_maplets (mlibTermnet 29)
value TO_numOrd (totoTheory 69)
value TO_of_greater_ler (totoTheory 70)
value TO_of_less_rel (totoTheory 71)
value TO_of_LinearOrder (totoTheory 8)
value TO_onto (totoTheory 72)
type to_ot (OpenTheoryMap 5)
value TO_qk_numOrd (totoTheory 73)
value TO_refl (totoTheory 74)
value TO_set_CONV (enumTacs 33)
value to_stream (mlibHeap 17)
value to_string (mlibUseful 158)
value to_term (Preterm 62)
value to_textfile (mlibStream 47)
value to_tyspecs (Datatype 14)
value toAInt (Arbrat 21)
value toAList_CONV (sptreeLib 4)
value toAList_def (sptreeTheory 28)
value toAList_tm (sptreeSyntax 33)
value toBinString (Arbnumcore 20)
value TOCHAR_def (stringTheory 91)
value TOCHAR_ind (stringTheory 92)
value TOCHAR_primitive_def (stringTheory 14)
value tochar_tm (stringSyntax 43)
value today (mlibUseful 191)
value toHexString (Arbnumcore 22)
value toInt (Arbintcore 16), value toInt (Arbnumcore 31), value toInt (Arbrat 22), value toInt (mlibArbint 18), value toInt (mlibArbnum 23), value toInt (mlibOmegaint 16)
constructor TOK (term_grammar 9), constructor tok (PEGParse 3), value TOK (Parse 246)
value token_string (term_tokens 17), value token_string (type_tokens 17)
value TOKENS_curried_def (stringTheory 15)
value TOKENS_def (stringTheory 93)
value TOKENS_ind (stringTheory 94)
value tokens_tm (stringSyntax 44)
value TOKENS_tupled_primitive_def (stringTheory 16)
value toList (llistTheory 30), value toList (mlibOmega 23)
value toList_def (sptreeTheory 30)
value toList_LAPPEND_APPEND (llistTheory 155)
value toList_map (sptreeTheory 108)
value toList_THM (llistTheory 156)
value toList_tm (sptreeSyntax 34)
value toListA_append (sptreeTheory 107)
value toListA_def (sptreeTheory 29)
value toLower_def (stringTheory 42)
value tolower_tm (stringSyntax 45)
value toNat (Arbintcore 17), value toNat (Arbrat 23), value toNat (mlibArbint 19)
value toNum_toString (ASCIInumbersTheory 40)
value toOctString (Arbnumcore 21)
value top (mlibHeap 13)
value top_and_lessers (int_arithTheory 74)
value TOP_CASE_TAC (BasicProvers 74)
value top_def (posetTheory 20)
value TOP_DEPTH (RW 47)
HOL Conv.TOP_DEPTH_CONV (help/Docfiles/Conv.TOP_DEPTH_CONV.adoc 0), value TOP_DEPTH_CONV (Conv 41), value TOP_DEPTH_CONV (liteLib 139)
value TOP_DEPTH_QCONV (liteLib 140)
HOL proofManagerLib.top_goal (help/Docfiles/proofManagerLib.top_goal.adoc 0), value top_goal (Manager 37), value top_goal (goalStack 20), value top_goal (proofManagerLib 49)
value top_goals (Manager 38), value top_goals (goalStack 21), value top_goals (proofManagerLib 50)
value top_heuristics_qp (quantHeuristicsLib 142), value top_heuristics_qp (quantHeuristicsLibBase 150)
value top_nonterminal (parse_term 8)
value TOP_ONCE_REWRITE_CONV (quantHeuristicsLibBase 7), value TOP_ONCE_REWRITE_CONV (quantHeuristicsTools 5)
value top_sort (mlibUseful 104)
value TOP_SWEEP_CONV (Conv 42), value TOP_SWEEP_CONV (liteLib 141)
value TOP_SWEEP_QCONV (liteLib 142)
HOL proofManagerLib.top_thm (help/Docfiles/proofManagerLib.top_thm.adoc 0), value top_thm (Manager 34), value top_thm (proofManagerLib 48)
value toPath_11 (pathTheory 151)
value toPath_onto (pathTheory 152)
value topfloat (ieeeTheory 95)
value toPmatchThry (TypeBasePure 93)
value TOPOLOGY (topologyTheory 47)
value topology_grammars (topologyTheory 51)
value topology_TY_DEF (topologyTheory 17)
value topology_tybij (topologyTheory 18)
value TOPOLOGY_UNION (topologyTheory 48)
structure topologyTheory
HOL Lib.topsort (help/Docfiles/Lib.topsort.adoc 0), value topsort (Lib 137)
value toReal (Arbnumcore 34)
value toShortString (locn 33)
value toString (Arbintcore 11), value toString (Arbnumcore 19), value toString (Arbrat 14), value toString (base_tokens 14), value toString (locn 32), value toString (mlibArbint 13), value toString (mlibArbnum 20), value toString (mlibOmegaint 12), value toString (qbuf 15)
value toString_11 (ASCIInumbersTheory 41)
value toString_def (integer_wordTheory 17)
value toString_inj (ASCIInumbersTheory 42)
value toString_tm (integer_wordSyntax 16)
value toString_toNum_cancel (ASCIInumbersTheory 43)
HOL Lib.total (help/Docfiles/Lib.total.adoc 0), value total (Lib 138), value total (mlibUseful 14)
value total_def (relationTheory 53)
value total_inv_image (relationTheory 234)
value total_LEX (pairTheory 69)
structure TotalDefn
value toto_antisym (totoTheory 137)
value toto_CONV (totoTacs 17)
value toto_cpn_eqn (totoTheory 138)
value toto_equal_eq (totoTheory 139)
value toto_equal_imp (totoTheory 140)
value toto_equal_imp_eq (totoTheory 141)
value toto_equal_sym (totoTheory 142)
value toto_glneq (totoTheory 143)
value toto_grammars (totoTheory 153)
value toto_inv (totoTheory 36)
value toto_inv_toto_inv (totoTheory 144)
value toto_not_less_refl (totoTheory 145)
value toto_of_LinearOrder (totoTheory 37)
value toto_refl (totoTheory 146)
value toto_Strong_thm (totoTheory 135)
value toto_swap_cases (totoTheory 147)
value toto_thm (totoTheory 148)
value toto_trans_less (totoTheory 149)
value toto_TY_DEF (totoTheory 35)
value toto_unequal_imp (totoTheory 150)
value toto_Weak_thm (totoTheory 136)
value totoEEtrans (totoTheory 128)
value totoELtrans (totoTheory 129)
value totoGGtrans (totoTheory 130)
value totoGLtrans (totoTheory 131)
value totoLEtrans (totoTheory 132)
value totoLGtrans (totoTheory 133)
value totoLLtrans (totoTheory 134)
value TotOrd (totoTheory 9)
value TotOrd_apto (totoTheory 78)
value TotOrd_inv (totoTheory 79)
value TotOrd_TO_of_LO (totoTheory 75)
value TotOrd_TO_of_Strong (totoTheory 76)
value TotOrd_TO_of_Weak (totoTheory 77)
value TotOrder_imp_good_cmp (comparisonTheory 25)
structure totoTacs
structure totoTheory
value toType (Pretype 43)
value toUpper_def (stringTheory 43)
value toupper_tm (stringSyntax 46)
value tower_def (wotTheory 15)
value tpetfs (floatTheory 149)
value tpp (testutils 7)
value tpp_expected (testutils 8)
value tprint (testutils 6)
HOL Defn.tprove (help/Docfiles/Defn.tprove.adoc 0), value tprove (Defn 58)
value tprove0 (Defn 57)
value tprove_no_defn (Defn 65)
value tptp_read (folTools 65)
value tptteteesze (floatTheory 150)
HOL Feedback.trace (help/Docfiles/Feedback.trace.adoc 0), structure Trace, value trace (Feedback 50), value trace (Trace 18), value trace (mlibUseful 22)
value trace_hook (Trace 17)
value trace_level (Trace 19), value trace_level (mlibUseful 19)
value trace_machine_def (pathTheory 36)
value trace_machine_thm (pathTheory 153)
value trace_machine_thm2 (pathTheory 154)
HOL Feedback.traces (help/Docfiles/Feedback.traces.adoc 0), value traces (Feedback 38), value traces (mlibUseful 20)
value tracing (mlibUseful 21)
value track (simpLib 202)
value track_rewrites (Cond_rewr 46), value track_rewrites (simpLib 200)
HOL Thm.TRANS (help/Docfiles/Thm.TRANS.adoc 0), constructor Trans (Count 11), value TRANS (FinalThm 49)
value trans_thm (compute_rules 26)
value transc_grammars (transcTheory 241)
structure transcSyntax
structure transcTheory
value transfer_thydepl (Dep 21)
value transform (LVTermNet 21), value transform (Redblackmap 24), value transform (TypeNet 20), value transform (patriciaLib 22)
value TRANSFORM_2D_NUM (util_probTheory 165)
value TRANSFORM_BRANCH (patriciaTheory 124)
value TRANSFORM_def (patriciaTheory 27)
value TRANSFORM_EMPTY (patriciaTheory 125)
value TRANSFORM_IS_PTREE (patriciaTheory 126)
value transform_tm (patriciaSyntax 19)
value TRANSFORMw_def (patricia_castsTheory 31)
value transformw_tm (patricia_castsSyntax 19)
value transitive_def (relationTheory 54), value transitive_def (set_relationTheory 34)
value transitive_EQC (relationTheory 235)
value transitive_inv (relationTheory 241)
value transitive_inv_image (relationTheory 242)
value transitive_LESS (arithmeticTheory 389)
value transitive_LEX (pairTheory 70)
value transitive_measure (arithmeticTheory 390)
value transitive_monotone (arithmeticTheory 391)
value transitive_O_RSUBSET (relationTheory 236)
value transitive_RC (relationTheory 237)
value transitive_RINTER (relationTheory 238)
value transitive_RTC (relationTheory 239)
value transitive_tc (set_relationTheory 146)
value transitive_TC_identity (relationTheory 240)
value TRANSITIVITY (mlibThm 52)
value translate (UTF8 10)
value TRANSLATE_def (stringTheory 17)
value translate_tm (stringSyntax 47)
value trat_1 (hratTheory 14)
value trat_add (hratTheory 15)
value TRAT_ADD_ASSOC (hratTheory 33)
value TRAT_ADD_SYM (hratTheory 34)
value TRAT_ADD_SYM_EQ (hratTheory 35)
value TRAT_ADD_TOTAL (hratTheory 36)
value TRAT_ADD_WELLDEFINED (hratTheory 37)
value TRAT_ADD_WELLDEFINED2 (hratTheory 38)
value TRAT_ARCH (hratTheory 39)
value trat_eq (hratTheory 16)
value TRAT_EQ_AP (hratTheory 40)
value TRAT_EQ_EQUIV (hratTheory 41)
value TRAT_EQ_REFL (hratTheory 42)
value TRAT_EQ_SYM (hratTheory 43)
value TRAT_EQ_TRANS (hratTheory 44)
value trat_inv (hratTheory 17)
value TRAT_INV_WELLDEFINED (hratTheory 45)
value TRAT_LDISTRIB (hratTheory 46)
value trat_mul (hratTheory 18)
value TRAT_MUL_ASSOC (hratTheory 47)
value TRAT_MUL_LID (hratTheory 48)
value TRAT_MUL_LINV (hratTheory 49)
value TRAT_MUL_SYM (hratTheory 50)
value TRAT_MUL_SYM_EQ (hratTheory 51)
value TRAT_MUL_WELLDEFINED (hratTheory 52)
value TRAT_MUL_WELLDEFINED2 (hratTheory 53)
value TRAT_NOZERO (hratTheory 54)
value TRAT_SUCINT (hratTheory 55), value trat_sucint (hratTheory 19)
value TRAT_SUCINT_0 (hratTheory 56)
value trav (Term 15)
structure Traverse, value TRAVERSE (Traverse 131), value traverse (patriciaLib 20)
value TRAVERSE_AUX (patriciaTheory 127)
value TRAVERSE_AUX_def (patriciaTheory 28)
type traverse_data (Traverse 125)
value TRAVERSE_def (patriciaTheory 29)
value traverse_tm (patriciaSyntax 17)
value TRAVERSE_TRANSFORM (patriciaTheory 128)
value traversedata_for_ss (simpLib 125)
value TRAVERSEs_def (patricia_castsTheory 32)
value traverses_tm (patricia_castsSyntax 34)
value TRAVERSEw_def (patricia_castsTheory 33)
value traversew_tm (patricia_castsSyntax 17)
constructor TRAVRULES (Travrules 68), structure Travrules, type travrules (Travrules 68)
value treal_0 (realaxTheory 19)
value treal_1 (realaxTheory 20)
value TREAL_10 (realaxTheory 64)
value treal_add (realaxTheory 21)
value TREAL_ADD_ASSOC (realaxTheory 65)
value TREAL_ADD_LID (realaxTheory 66)
value TREAL_ADD_LINV (realaxTheory 67)
value TREAL_ADD_SYM (realaxTheory 68)
value TREAL_ADD_WELLDEF (realaxTheory 69)
value TREAL_ADD_WELLDEFR (realaxTheory 70)
value TREAL_BIJ (realaxTheory 71)
value TREAL_BIJ_WELLDEF (realaxTheory 72)
value treal_eq (realaxTheory 22)
value TREAL_EQ_AP (realaxTheory 73)
value TREAL_EQ_EQUIV (realaxTheory 74)
value TREAL_EQ_REFL (realaxTheory 75)
value TREAL_EQ_SYM (realaxTheory 76)
value TREAL_EQ_TRANS (realaxTheory 77)
value treal_inv (realaxTheory 23)
value TREAL_INV_0 (realaxTheory 78)
value TREAL_INV_WELLDEF (realaxTheory 79)
value TREAL_ISO (realaxTheory 80)
value TREAL_LDISTRIB (realaxTheory 81)
value treal_lt (realaxTheory 24)
value TREAL_LT_ADD (realaxTheory 82)
value TREAL_LT_MUL (realaxTheory 83)
value TREAL_LT_REFL (realaxTheory 84)
value TREAL_LT_TOTAL (realaxTheory 85)
value TREAL_LT_TRANS (realaxTheory 86)
value TREAL_LT_WELLDEF (realaxTheory 87)
value TREAL_LT_WELLDEFL (realaxTheory 88)
value TREAL_LT_WELLDEFR (realaxTheory 89)
value treal_mul (realaxTheory 25)
value TREAL_MUL_ASSOC (realaxTheory 90)
value TREAL_MUL_LID (realaxTheory 91)
value TREAL_MUL_LINV (realaxTheory 92)
value TREAL_MUL_SYM (realaxTheory 93)
value TREAL_MUL_WELLDEF (realaxTheory 94)
value TREAL_MUL_WELLDEFR (realaxTheory 95)
value treal_neg (realaxTheory 26)
value TREAL_NEG_WELLDEF (realaxTheory 96)
value treal_of_hreal (realaxTheory 27)
type tree (mlibUseful 171)
value tree_11 (EncodeTheory 49)
value tree_Axiom (EncodeTheory 50)
value tree_case_cong (EncodeTheory 51)
value tree_case_def (EncodeTheory 25)
value tree_coder_def (CoderTheory 17)
value tree_foldl (mlibUseful 174)
value tree_foldr (mlibUseful 173)
value tree_ind (EncodeTheory 52)
value tree_induction (EncodeTheory 53)
value tree_nchotomy (EncodeTheory 54)
value tree_partial_foldl (mlibUseful 175)
value tree_size (mlibUseful 172)
value tree_size_def (EncodeTheory 26)
value tree_TY_DEF (EncodeTheory 24)
value tri_11 (numpairTheory 47)
value tri_def (numpairTheory 18)
value tri_def_compute (numpairTheory 51)
value tri_eq_0 (numpairTheory 52)
value tri_formula (numpairTheory 53)
value tri_LE (numpairTheory 48), value tri_le (numpairTheory 54)
value tri_LT (numpairTheory 49)
value tri_LT_I (numpairTheory 50)
value TRIANGLE_2D_NUM (util_probTheory 166)
value trichotomous (relationTheory 55)
value trichotomous_ALT (totoTheory 151)
value trichotomous_RC (relationTheory 243)
value trichotomous_STRORD (relationTheory 244)
HOL Lib.triple (help/Docfiles/Lib.triple.adoc 0), value triple (Lib 139)
HOL Lib.triple_of_list (help/Docfiles/Lib.triple_of_list.adoc 0), value triple_of_list (Lib 140)
value triv_defn (Defn 46)
constructor Trivial (mlibCanon 38)
constructor True (mlibTerm 18)
HOL ConseqConv.TRUE_CONSEQ_CONV (help/Docfiles/ConseqConv.TRUE_CONSEQ_CONV.adoc 0), value TRUE_CONSEQ_CONV (ConseqConv 69)
value true_factoid (OmegaMLShadow 17), value true_factoid (mlibOmega 20)
HOL ConseqConv.TRUE_FALSE_REFL_CONSEQ_CONV (help/Docfiles/ConseqConv.TRUE_FALSE_REFL_CONSEQ_CONV.adoc 0), value TRUE_FALSE_REFL_CONSEQ_CONV (ConseqConv 74)
value true_imp (ConseqConvTheory 47)
value true_tm (CooperSyntax 5)
value TRUTH (boolTheory 170)
HOL Tactical.TRY (help/Docfiles/Tactical.TRY.adoc 0), HOL Lib.try (help/Docfiles/Lib.try.adoc 0), constructor Try (clauses 26), value TRY (Tactical 49), value try (Lib 141), value try (mlibUseful 13)
HOL Conv.TRY_CONV (help/Docfiles/Conv.TRY_CONV.adoc 0), value TRY_CONV (Conv 37), value TRY_CONV (RJBConv 10)
value try_grammar_extension (Parse 174)
HOL Tactical.TRY_LT (help/Docfiles/Tactical.TRY_LT.adoc 0), value TRY_LT (Tactical 50)
value try_theory_extension (Theory 94)
HOL Tactical.TRYALL (help/Docfiles/Tactical.TRYALL.adoc 0), value TRYALL (Tactical 33), value tryall (optmonad 18), value tryall (seqmonad 18)
HOL Lib.trye (help/Docfiles/Lib.trye.adoc 0), value trye (Lib 142)
HOL Lib.tryfind (help/Docfiles/Lib.tryfind.adoc 0), value tryfind (Lib 143)
HOL Lib.trypluck (help/Docfiles/Lib.trypluck.adoc 0), value trypluck (Lib 145)
value trypluck' (Lib 144)
HOL Lib.trypluckprime (help/Docfiles/Lib.trypluckprime.adoc 0)
value tstore_defn (Defn 59)
value tteettto (floatTheory 151)
value ttpinv (floatTheory 152)
value tty_trace (Trace 20)
value TUPLE (pairLib 117), value TUPLE (pairTools 14)
value TUPLE_TAC (pairLib 118), value TUPLE_TAC (pairTools 15)
value turnstile (UnicodeChars 114)
value TWO (arithmeticTheory 366), value two (Arbintcore 9), value two (Arbnumcore 7), value two (Arbrat 10), value two (mlibArbint 11), value two (mlibArbnum 9)
value TWO_COMP_NEG (wordsTheory 196)
value TWO_COMP_POS (wordsTheory 197)
value TWO_COMP_POS_NEG (wordsTheory 198)
value TWO_EXP_GE_1 (floatTheory 128)
value TWO_EXP_THM (numeralTheory 19)
value TWOEXP_DIVISION (bitTheory 134)
value TWOEXP_LE_IMP_LE_LOG2 (bitTheory 135)
value TWOEXP_MONO (bitTheory 136)
value TWOEXP_MONO2 (bitTheory 137)
value TWOEXP_NOT_ZERO (bitTheory 138)
value twogz (floatTheory 153)
value twotri_formula (numpairTheory 55)
HOL Parse.ty_antiq (help/Docfiles/Parse.ty_antiq.adoc 0), value ty_antiq (Parse 57), value ty_antiq (parse_type 16)
value ty_name_of (TypeBasePure 43)
value ty_of (TypeBasePure 42)
value ty_sub (FinalType 54)
constructor Tyapp (KernelTypes 16)
type tyconst (KernelTypes 14)
type tyconstructors (parse_type 3)
type tygrammar (TermParse 6)
type tyinfo (Datatype 3), type tyinfo (DatatypeSimps 3), type tyinfo (EnumType 3), type tyinfo (TypeBase 6), type tyinfo (TypeBasePure 7)
constructor TYOP (SharingTables 5), constructor TYOP (type_grammar 9), constructor Tyop (Pretype 3)
value tyop_from_ot_map (OpenTheoryMap 22)
value tyop_name_in_map (Opentheory 38)
value tyop_to_ot_map (OpenTheoryMap 21)
value typantiq_constructors (Pretype 49)
constructor Type (mungeTools 3), structure Type, value Type (Parse 21)
HOL Parse.type_abbrev (help/Docfiles/Parse.type_abbrev.adoc 0), value type_abbrev (Parse 38)
constructor TYPE_annotation (term_grammar 56)
value type_constructors (GrammarSpecials 40), value type_constructors (Prim_rec 19)
value type_constructors_with_args (Prim_rec 20)
value TYPE_DEFINITION (boolTheory 30)
value TYPE_DEFINITION_THM (boolTheory 171)
value type_encode (TypeBasePure 106)
value type_filter (quantHeuristicsLib 100), value type_filter (quantHeuristicsLibBase 235)
structure type_grammar, value type_grammar (Parse 20)
value type_lift (TypeBasePure 107)
value type_match_filter (quantHeuristicsLib 101), value type_match_filter (quantHeuristicsLibBase 236)
HOL Term.type_of (help/Docfiles/Term.type_of.adoc 0), value type_of (FinalTerm 8)
structure type_pp
value type_pp_prefix (Globals 16)
value type_pp_suffix (Globals 17)
value type_pp_with_delimiters (Parse 191)
value type_refine_subst (matchTools 19)
value type_rewrites_ss (DatatypeSimps 94)
value type_rewrites_stateful_ss (DatatypeSimps 95)
value type_rewrites_typeinfos_ss (DatatypeSimps 96)
HOL bossLib.type_rws (help/Docfiles/bossLib.type_rws.adoc 0), value type_rws (bossLib 69)
value type_size (FinalType 52), value type_size (TypeBasePure 105)
HOL simpLib.type_ssfrag (help/Docfiles/simpLib.type_ssfrag.adoc 0), value type_ssfrag (simpLib 91)
type type_structure (type_grammar 9)
HOL Type.type_subst (help/Docfiles/Type.type_subst.adoc 0), value type_subst (FinalType 38)
value type_to_string (Hol_pp 21), value type_to_string (Parse 203)
type type_token (type_tokens 2)
structure type_tokens
HOL Type.type_var_in (help/Docfiles/Type.type_var_in.adoc 0), value type_var_in (FinalType 22)
HOL Type.type_vars (help/Docfiles/Type.type_vars.adoc 0), value type_vars (FinalType 20)
HOL Term.type_vars_in_term (help/Docfiles/Term.type_vars_in_term.adoc 0), value type_vars_in_term (FinalTerm 18)
HOL Type.type_varsl (help/Docfiles/Type.type_varsl.adoc 0), value type_varsl (FinalType 21)
HOL TypeBase (help/Docfiles/TypeBase.adoc 0), structure TypeBase, type typeBase (Datatype 4), type typeBase (TypeBase 7), type typeBase (TypeBasePure 8)
value TypeBase_qp (quantHeuristicsLib 65), value TypeBase_qp (quantHeuristicsLibBase 169), value TypeBase_qp (quantHeuristicsLibParameters 7)
structure TypeBasePure
value typecheck (Preterm 73)
value typecheck_phase1 (Preterm 48)
constructor TypeColon (term_grammar 169)
constructor TYPED (Absyn 12)
value typedTerm (Parse 56)
constructor TypeIdent (type_tokens 2)
structure TypeNet, type typenet (TypeNet 4)
HOL Theory.types (help/Docfiles/Theory.types.adoc 0), value types (Theory 36)
constructor TypeSymbol (type_tokens 2)
type typetable (SharingTables 15)
constructor TypeTok (term_grammar 169)
value typetok_of (type_tokens 15)
value typeValue (TypeBasePure 98)
constructor TypeVar (type_tokens 2)
type tyquote (Q 4)
type tyspec (Datatype 9), type tyspec (ind_types 4)
value tyspecs_of (Datatype 13)
type tySubst (matchTools 12)
constructor TYV (SharingTables 5), constructor Tyv (KernelTypes 16)
value tyValue (TypeBasePure 101)
value tyvar_from_ot (OpenTheoryCommon 20)
value tyvar_ids (Lexis 7)
value tyvar_to_ot (OpenTheoryCommon 19)
value tyvar_vary (Lexis 22)
type tyVars (matchTools 30), value tyvars (Pretype 8)
HOL Lib.U (help/Docfiles/Lib.U.adoc 0), value U (Lib 16)
value uadd_rule (ProvideUnicode 26)
value UEXISTS_OR_THM (boolTheory 172)
value UEXISTS_SIMP (boolTheory 173)
value UFO (fmapalTheory 22)
value UINT_MAX (integer_wordTheory 32)
value UINT_MAX_def (integer_wordTheory 7), value UINT_MAX_def (wordsTheory 9)
value uint_max_tm (integer_wordSyntax 8), value uint_max_tm (wordsSyntax 50)
value uint_of_word (wordsSyntax 21)
value Ulp (ieeeTheory 21), value ulp (ieeeTheory 96)
value UNABBREV_ALL_TAC (bossLib 125), value UNABBREV_ALL_TAC (markerLib 31), value unabbrev_all_tac (bossLib 163), value unabbrev_all_tac (lcsymtacs 65)
HOL Q.UNABBREV_TAC (help/Docfiles/Q.UNABBREV_TAC.adoc 0), value UNABBREV_TAC (OldAbbrevTactics 5), value UNABBREV_TAC (Q 58), value UNABBREV_TAC (markerLib 30)
value unAC (markerLib 20)
HOL Conv.UNBETA_CONV (help/Docfiles/Conv.UNBETA_CONV.adoc 0), value UNBETA_CONV (Conv 46)
constructor UNBOUNDED (BoundedRewrites 3)
exception UNCHANGED (Conv 4)
value uncl_def (wotTheory 16)
value unCong (markerLib 22)
value UNCONSTRAIN (CooperSyntax 52)
HOL Lib.uncurry (help/Docfiles/Lib.uncurry.adoc 0), value UNCURRY (pairTheory 14), value uncurry (Lib 146), value uncurry (mlibUseful 47)
value UNCURRY_CONG (pairTheory 52)
HOL PairRules.UNCURRY_CONV (help/Docfiles/PairRules.UNCURRY_CONV.adoc 0), value UNCURRY_CONV (PairRules 9)
value UNCURRY_CURRY_THM (pairTheory 53)
value UNCURRY_DEF (pairTheory 54)
HOL PairRules.UNCURRY_EXISTS_CONV (help/Docfiles/PairRules.UNCURRY_EXISTS_CONV.adoc 0), value UNCURRY_EXISTS_CONV (PairRules 56)
HOL PairRules.UNCURRY_FORALL_CONV (help/Docfiles/PairRules.UNCURRY_FORALL_CONV.adoc 0), value UNCURRY_FORALL_CONV (PairRules 55)
value UNCURRY_ONE_ONE_THM (pairTheory 55)
value UNCURRY_PRS (quotient_pairTheory 24)
value UNCURRY_RSP (quotient_pairTheory 25)
value uncurry_tm (pairLib 16), value uncurry_tm (pairSyntax 14), value uncurry_tm (pairTheory 81)
value UNCURRY_VAR (pairTheory 56)
HOL Drule.UNDISCH (help/Docfiles/Drule.UNDISCH.adoc 0), value UNDISCH (Drule 22)
HOL Drule.UNDISCH_ALL (help/Docfiles/Drule.UNDISCH_ALL.adoc 0), value UNDISCH_ALL (Drule 52)
value UNDISCH_ALL_TAC (schneiderUtils 47)
value UNDISCH_HD_TAC (schneiderUtils 48)
value UNDISCH_NO_TAC (schneiderUtils 49)
HOL Tactic.UNDISCH_TAC (help/Docfiles/Tactic.UNDISCH_TAC.adoc 0), value UNDISCH_TAC (Q 39), value UNDISCH_TAC (Tactic 64)
HOL Thm_cont.UNDISCH_THEN (help/Docfiles/Thm_cont.UNDISCH_THEN.adoc 0), value UNDISCH_THEN (Q 37), value UNDISCH_THEN (Thm_cont 19)
HOL Drule.UNDISCH_TM (help/Docfiles/Drule.UNDISCH_TM.adoc 0), value UNDISCH_TM (Drule 23)
value undo (History 12)
HOL unwindLib.UNFOLD_CONV (help/Docfiles/unwindLib.UNFOLD_CONV.adoc 0), value UNFOLD_CONV (unwindLib 36)
value unfold_def (pathTheory 37)
HOL unwindLib.UNFOLD_RIGHT_RULE (help/Docfiles/unwindLib.UNFOLD_RIGHT_RULE.adoc 0), value UNFOLD_RIGHT_RULE (unwindLib 37)
value unfold_thm (pathTheory 155)
value unfold_thm2 (pathTheory 156)
value UNHEX_def (ASCIInumbersTheory 30)
value UNHEX_HEX (ASCIInumbersTheory 29)
value UNHEX_ind (ASCIInumbersTheory 31)
value UNHEX_primitive_def (ASCIInumbersTheory 6)
value unhex_tm (ASCIInumbersSyntax 6)
value unicode_off (testutils 10)
value unicode_version (ProvideUnicode 24)
structure UnicodeChars
value uniform (mlibUseful 183)
value uniform_distribution_def (probabilityTheory 23)
value uniform_distribution_prob_space (probabilityTheory 108)
structure Unify, value unify (Pretype 27), value unify (mlibLiteralnet 27), value unify (mlibMatch 20), value unify (mlibTermnet 26)
value unify_and_apply (mlibMatch 21)
value unify_literals (mlibMatch 23)
value unifyl (mlibMatch 19)
value unifyl_literals (mlibMatch 22)
value unint_def (markerTheory 11)
HOL Lib.union (help/Docfiles/Lib.union.adoc 0), value union (CharSet 12), value union (Lib 147), value union (Net 22), value union (Raw 15), value union (Redblackset 20), value union (UnicodeChars 129), value union (mlibMultiset 13), value union (mlibUseful 80)
value UNION_APPEND (containerTheory 43), value UNION_APPEND (listTheory 389)
value UNION_applied (pred_setTheory 411)
value UNION_ASSOC (pred_setTheory 401), value union_assoc (sptreeTheory 110)
value UNION_COMM (pred_setTheory 402)
HOL pred_setLib.UNION_CONV (help/Docfiles/pred_setLib.UNION_CONV.adoc 0), value UNION_CONV (PFset_conv 7), value UNION_CONV (enumTacs 36), value UNION_CONV (pred_setLib 9)
value union_countable (pred_setTheory 452)
value union_countable_IFF (pred_setTheory 453)
value UNION_DEF (pred_setTheory 39), value union_def (sptreeTheory 31)
value union_defn (Defn 37)
value UNION_DELETE (pred_setTheory 403)
value UNION_DIFF (pred_setTheory 404)
value UNION_DIFF_2 (pred_setTheory 405)
value UNION_EMPTY (pred_setTheory 406)
value UNION_IDEMPOT (pred_setTheory 407)
value union_LN (sptreeTheory 109)
value union_mk_wf (sptreeTheory 111)
value UNION_OVER_INTER (pred_setTheory 408)
value UNION_PRS (quotient_pred_setTheory 51)
value UNION_PTREE_ASSOC (patriciaTheory 129)
value UNION_PTREE_COMM (patriciaTheory 130)
value UNION_PTREE_COMM_EMPTY (patriciaTheory 131)
value UNION_PTREE_def (patriciaTheory 30)
value UNION_PTREE_EMPTY (patriciaTheory 132)
value UNION_PTREE_IS_PTREE (patriciaTheory 133)
value UNION_PTREEw_def (patricia_castsTheory 34)
value UNION_RSP (quotient_pred_setTheory 52)
value UNION_SUBSET (pred_setTheory 409)
value union_tm (pred_setSyntax 15), value union_tm (sptreeSyntax 35)
value UNION_UNIV (pred_setTheory 410)
value UNIQUE_curried_def (defCNFTheory 9)
value UNIQUE_def (defCNFTheory 20)
value UNIQUE_ind (defCNFTheory 21)
value UNIQUE_MEMBER_SING (pred_setTheory 412)
value UNIQUE_PRIME_FACTORS (primeFactorTheory 16)
value UNIQUE_tupled_primitive_def (defCNFTheory 10)
constructor Unit (mlibCanon 38), value unit (mlibUseful 51)
value unit_coder_def (CoderTheory 18)
value UNIT_DEF (errorStateMonadTheory 18), value UNIT_DEF (state_transformerTheory 14)
value UNIT_SQUASH (mlibThm 49)
value unit_tm (state_transformerSyntax 15)
value UNIT_UNCURRY (state_transformerTheory 39)
type units (mlibResolution 10), type units (mlibSolver 15), type units (mlibUnits 12), value units (mlibClauseset 26), value units (mlibResolution 30)
value UNIV_BOOL (pred_setTheory 413)
value UNIV_DEF (pred_setTheory 40)
value UNIV_FUN_TO_BOOL (pred_setTheory 414)
value UNIV_FUNSET_UNIV (util_probTheory 167)
value UNIV_NEQ_EMPTY (util_probTheory 168)
value UNIV_NOT_EMPTY (pred_setTheory 415)
value UNIV_POINT (normalFormsTheory 10)
value UNIV_POINT_DEF (normalFormsTheory 6)
value UNIV_PRS (quotient_pred_setTheory 53)
value univ_reln_def (set_relationTheory 35)
value UNIV_RSP (quotient_pred_setTheory 54)
value UNIV_SIGMA_ALGEBRA (measureTheory 230)
value UNIV_SUBSET (pred_setTheory 416)
value univ_tm (pred_setSyntax 12)
HOL boolSyntax.universal (help/Docfiles/boolSyntax.universal.adoc 0), value universal (boolSyntax 14)
value universal_set (UnicodeChars 134)
structure UniversalType
value UNLAMB_CONV (Canon 31), value UNLAMB_CONV (refuteLib 31)
value unlift_cases_ss (DatatypeSimps 89)
value unlift_cases_stateful_ss (DatatypeSimps 90)
value unlift_cases_typeinfos_ss (DatatypeSimps 91)
value unlimit (simpLib 118)
value unlimited (mlibMeter 12)
value unlookup (fmapalTheory 71)
value unpad (mlibUseful 124)
HOL PairRules.UNPBETA_CONV (help/Docfiles/PairRules.UNPBETA_CONV.adoc 0), value UNPBETA_CONV (PairRules 18)
value unprefix (Lib 148)
value unprime (Lib 149)
value UNSAFE_LTL2OMEGA_CONV (temporalLib 15)
value UNSAFE_LTL_CONV (temporalLib 16)
value UNSAFE_TEMP_DEFS_CONV (temporalLib 14)
value unschematize_clauses (InductiveDefinition 30)
value unstrip_pair (pairLib 53), value unstrip_pair (pairSyntax 61)
value UNTIL (Temporal_LogicTheory 12)
value UNTIL_AS_BEFORE (Temporal_LogicTheory 124)
value UNTIL_AS_CO_BUECHI (Omega_AutomataTheory 43)
value UNTIL_AS_SBEFORE (Temporal_LogicTheory 125)
value UNTIL_AS_SUNTIL (Temporal_LogicTheory 126)
value UNTIL_AS_SWHEN (Temporal_LogicTheory 127)
value UNTIL_AS_WHEN (Temporal_LogicTheory 128)
value UNTIL_EVENT (Temporal_LogicTheory 129)
value UNTIL_EXPRESSIVE (Past_Temporal_LogicTheory 49)
value UNTIL_FIX (Temporal_LogicTheory 130)
value UNTIL_IDEM (Temporal_LogicTheory 131)
value UNTIL_IMP (Temporal_LogicTheory 132)
value UNTIL_INVARIANT (Temporal_LogicTheory 133)
value UNTIL_LINORD (Temporal_LogicTheory 134)
value UNTIL_NEXT (Temporal_LogicTheory 135)
value UNTIL_REC (Temporal_LogicTheory 136)
value UNTIL_SIGNAL (Temporal_LogicTheory 137)
value UNTIL_SIMP (Temporal_LogicTheory 138)
structure Unwind
HOL unwindLib.UNWIND_ALL_BUT_CONV (help/Docfiles/unwindLib.UNWIND_ALL_BUT_CONV.adoc 0), value UNWIND_ALL_BUT_CONV (unwindLib 38)
HOL unwindLib.UNWIND_ALL_BUT_RIGHT_RULE (help/Docfiles/unwindLib.UNWIND_ALL_BUT_RIGHT_RULE.adoc 0), value UNWIND_ALL_BUT_RIGHT_RULE (unwindLib 39)
HOL unwindLib.UNWIND_AUTO_CONV (help/Docfiles/unwindLib.UNWIND_AUTO_CONV.adoc 0), value UNWIND_AUTO_CONV (unwindLib 40)
HOL unwindLib.UNWIND_AUTO_RIGHT_RULE (help/Docfiles/unwindLib.UNWIND_AUTO_RIGHT_RULE.adoc 0), value UNWIND_AUTO_RIGHT_RULE (unwindLib 41)
HOL unwindLib.UNWIND_CONV (help/Docfiles/unwindLib.UNWIND_CONV.adoc 0), value UNWIND_CONV (unwindLib 42)
value UNWIND_EXISTS_CONV (Unwind 72)
value UNWIND_EXISTS_RULE (Unwind 74)
value UNWIND_EXISTS_TAC (Unwind 73)
value UNWIND_EXISTS_THM (quantHeuristicsTheory 91)
value UNWIND_FORALL_CONV (Unwind 75)
value UNWIND_FORALL_RULE (Unwind 77)
value UNWIND_FORALL_TAC (Unwind 76)
value UNWIND_FORALL_THM1 (boolTheory 174)
value UNWIND_FORALL_THM2 (boolTheory 175)
HOL unwindLib.UNWIND_ONCE_CONV (help/Docfiles/unwindLib.UNWIND_ONCE_CONV.adoc 0), value UNWIND_ONCE_CONV (unwindLib 43)
value UNWIND_ss (boolSimps 20)
value UNWIND_THM1 (boolTheory 176)
value UNWIND_THM2 (boolTheory 177)
structure unwindLib
HOL Lib.unzip (help/Docfiles/Lib.unzip.adoc 0), value UNZIP (listTheory 46), value UNZIP (rich_listTheory 521), value unzip (Lib 150), value unzip (mlibUseful 69)
value unzip3 (wfrecUtils 5)
value UNZIP_FST_DEF (rich_listTheory 26)
value unzip_fst_tm (rich_listSyntax 20)
value UNZIP_MAP (listTheory 390)
value UNZIP_SND_DEF (rich_listTheory 27)
value unzip_snd_tm (rich_listSyntax 21)
value UNZIP_SNOC (rich_listTheory 337)
value UNZIP_THM (listTheory 391)
value unzip_tm (listSyntax 41)
value UNZIP_ZIP (listTheory 392), value UNZIP_ZIP (rich_listTheory 522)
value UO (enumeralTheory 18)
value uoverload_on (ProvideUnicode 25)
value up_continuous_def (posetTheory 21)
value UPD11_SAME_BASE (combinTheory 34)
value UPD11_SAME_KEY_AND_BASE (combinTheory 35)
value UPD_SAME_KEY_UNWIND (combinTheory 41)
value update (Redblackmap 9)
value update_ancestor_cutting (mlibMeson 24)
value update_ancestor_pruning (mlibMeson 23)
value UPDATE_APPLY (combinTheory 36)
value UPDATE_APPLY_CONV (updateLib 6)
value UPDATE_APPLY_ID (combinTheory 37), value UPDATE_APPLY_ID (updateTheory 20)
value UPDATE_APPLY_IMP_ID (combinTheory 38), value UPDATE_APPLY_IMP_ID (updateTheory 21)
value update_at_path_def (fmaptreeTheory 14)
value update_boolean (folTools 33)
value update_cache_cutting (mlibMeson 26)
value update_clause_parm (mlibResolution 21)
value update_combinator (folTools 32)
value UPDATE_COMMUTES (combinTheory 39), value UPDATE_COMMUTES (updateTheory 22)
value update_data_store (holindexData 32)
value UPDATE_def (combinTheory 11), value UPDATE_def (updateTheory 24)
value update_divide_conquer (mlibMeson 27)
value UPDATE_EQ (combinTheory 40), value UPDATE_EQ (updateTheory 23)
value update_equality (folTools 31)
value update_fix (mlibModel 30)
value update_grammars (updateTheory 26)
value update_grms (Parse 213)
value update_higher_order (folMapping 23)
value update_interface (metisTools 30)
value update_limit (metisTools 32)
value update_literal_order (mlibClause 25)
value update_literal_power (mlibSupport 23)
value update_mapping_parm (folTools 34)
value update_mode (GenPolyCanon 22)
value update_model_checks (mlibSupport 26)
value update_model_parms (mlibSupport 27)
value update_model_perts (mlibSupport 25)
value update_model_power (mlibSupport 24)
value update_nth (mlibUseful 73)
value update_order_stickiness (mlibClause 26)
HOL Parse.update_overload_maps (help/Docfiles/Parse.update_overload_maps.adoc 0), value update_overload_maps (Parse 221)
value update_postfactoring (mlibClauseset 19)
value update_precision (mlibTermorder 19)
value update_prefactoring (mlibClauseset 18)
value update_set_parm (mlibResolution 22)
value update_simplification (mlibClauseset 16)
value update_size (mlibModel 29)
value update_size_power (mlibSupport 22)
value update_solver (metisTools 31)
value update_sort_literals (mlibMeson 29)
value update_sort_rules (mlibMeson 30)
value update_sos_parm (mlibResolution 23)
value update_splitting (mlibClauseset 17)
value update_state_simplify (mlibMeson 25)
value update_subsumption (mlibClauseset 15)
value update_term_order (mlibClause 24)
value update_termorder_parm (mlibClause 27)
value update_tm (combinSyntax 10)
value update_tyinfo (EnumType 23), value update_tyinfo (RecordType 9)
value update_unit_lemmaizing (mlibMeson 28)
value update_with_types (folMapping 24)
structure updateLib
value updates_of (TypeBase 31), value updates_of (TypeBasePure 58)
structure updateSyntax
structure updateTheory
value upper (mlibParser 57)
value upper_bounds_def (set_relationTheory 36)
value upper_bounds_lem (set_relationTheory 147)
value upper_int_of_rat (Rationals 20)
HOL Lib.upto (help/Docfiles/Lib.upto.adoc 0), value UPTO (Temporal_LogicTheory 13), value upto (Lib 151), value upto (liteLib 44)
value uptodate_id (KernelSig 14)
value uptodate_name (KernelSig 35)
HOL Theory.uptodate_term (help/Docfiles/Theory.uptodate_term.adoc 0), value uptodate_term (FinalTerm 86), value uptodate_term (Theory 90)
HOL Theory.uptodate_thm (help/Docfiles/Theory.uptodate_thm.adoc 0), value uptodate_thm (Theory 91)
HOL Theory.uptodate_type (help/Docfiles/Theory.uptodate_type.adoc 0), value uptodate_type (FinalType 63), value uptodate_type (Theory 89)
type urule (ProvideUnicode 5)
value usage (mungeTools 9)
HOL Tactical.USE_SG_THEN (help/Docfiles/Tactical.USE_SG_THEN.adoc 0), value USE_SG_THEN (Tactical 84)
value used_rewrites (Cond_rewr 45), value used_rewrites (simpLib 199)
type user_delta (term_grammar 89)
value user_delta_encode (term_grammar 253)
value user_delta_reader (term_grammar 252)
value user_overrides (mungeTools 10)
value user_printers (term_grammar 120)
value user_split_ident (term_tokens 15)
value userdelta_name (term_grammar 99)
value userdelta_toks (term_grammar 98)
type userprinter (term_grammar 113)
structure UTF8
structure UTF8Set
value util_prob_grammars (util_probTheory 185)
structure util_probTheory
constructor UV (ProvideUnicode 33)
constructor UVar (Pretype 3)
value v127not0 (floatTheory 154)
value v23not0 (floatTheory 155)
value V2L_def (fcpTheory 18)
value V2L_L2V (fcpTheory 57)
value v2l_tm (fcpSyntax 27)
value v2n_CONV (bitstringLib 22)
value v2n_def (bitstringTheory 31)
value v2n_lt (bitstringTheory 91)
value v2n_n2v (bitstringTheory 92)
value v2n_tm (bitstringSyntax 64)
value v2s_def (bitstringTheory 32)
value v2s_tm (bitstringSyntax 65)
value v2w_11 (bitstringTheory 93)
value v2w_def (bitstringTheory 33)
value v2w_eq_CONV (bitstringLib 25)
value v2w_fixwidth (bitstringTheory 94)
value v2w_n2v (bitstringTheory 95)
value v2w_n2w_CONV (bitstringLib 23)
value v2w_tm (bitstringSyntax 66)
value v2w_w2v (bitstringTheory 96)
value Val (ieeeTheory 22)
value VAL_FINITE (floatTheory 133)
value Val_FLOAT_ROUND_VALOF (floatTheory 135)
value VAL_THRESHOLD (floatTheory 134)
HOL Tactical.VALID (help/Docfiles/Tactical.VALID.adoc 0), value VALID (Tactical 54)
value VALID_IFF_TRUE (HolSmtTheory 32)
HOL Tactical.VALID_LT (help/Docfiles/Tactical.VALID_LT.adoc 0), value VALID_LT (Tactical 55)
HOL Tactical.VALIDATE (help/Docfiles/Tactical.VALIDATE.adoc 0), value VALIDATE (Tactical 56)
HOL Tactical.VALIDATE_LT (help/Docfiles/Tactical.VALIDATE_LT.adoc 0), value VALIDATE_LT (Tactical 57)
type validation (Abbrev 8)
value VALOF (floatTheory 129), value valof (ieeeTheory 97)
value VALOF_DEFLOAT_FLOAT_ZEROSIGN_ROUND (floatTheory 130)
value VALOF_SCALE_DOWN (floatTheory 131)
value VALOF_SCALE_UP (floatTheory 132)
constructor Vampire (holyHammer 4)
constructor VAQ (Absyn 6)
constructor VAR (HolKernelDoc 10), constructor VAR (Psyntax 45), constructor VAR (Rsyntax 48), constructor Var (Preterm 10), constructor Var (mlibTerm 14)
HOL Term.var_compare (help/Docfiles/Term.var_compare.adoc 0), value var_compare (FinalTerm 76)
value VAR_ELIM (Solve_ineqs 15)
HOL BasicProvers.VAR_EQ_TAC (help/Docfiles/BasicProvers.VAR_EQ_TAC.adoc 0), value VAR_EQ_TAC (BasicProvers 7), value var_eq_tac (BasicProvers 8), value var_eq_tac (lcsymtacs 14)
HOL Term.var_occurs (help/Docfiles/Term.var_occurs.adoc 0), value var_occurs (FinalTerm 19)
value var_of_prod (Term_coeffs 14)
value var_string (mlibTerm 132)
value var_to_elim (Solve_ineqs 14)
HOL Term.variant (help/Docfiles/Term.variant.adoc 0), value variant (FinalTerm 23), value variant (hol88Lib 22), value variant (mlibUseful 127)
value VARIANT_CONV (quantHeuristicsLibBase 26), value VARIANT_CONV (quantHeuristicsTools 24)
value variant_num (mlibUseful 128)
value VARIANT_TAC (quantHeuristicsLibBase 25), value VARIANT_TAC (quantHeuristicsTools 23)
value variants (InductiveDefinition 26)
value varlist_insert_curried_def (canonicalTheory 28)
value varlist_insert_def (canonicalTheory 62), value varlist_insert_def (ringNormTheory 53)
value varlist_insert_ind (canonicalTheory 63)
value varlist_insert_ok (canonicalTheory 64)
value varlist_insert_tupled_primitive_def (canonicalTheory 29)
value varlist_merge_ok (canonicalTheory 65)
value varmap_11 (quoteTheory 30)
value varmap_Axiom (quoteTheory 31)
value varmap_case_cong (quoteTheory 32)
value varmap_case_def (quoteTheory 12)
value varmap_distinct (quoteTheory 33)
value varmap_find_curried_def (quoteTheory 13)
value varmap_find_def (quoteTheory 34)
value varmap_find_ind (quoteTheory 35)
value varmap_find_tupled_primitive_def (quoteTheory 14)
value varmap_induction (quoteTheory 36)
value varmap_nchotomy (quoteTheory 37)
value varmap_size_def (quoteTheory 15)
value varmap_TY_DEF (quoteTheory 11)
type Vars (matchTools 37), type vars (folMapping 15), type vars (folTools 20), value vars (mlibTermorder 27)
value vars_of_coeffs (Term_coeffs 13)
constructor Vartype (Pretype 3)
value vary (wfrecUtils 23)
constructor vAtom (goalTree 5)
value vcossa (fmapalTheory 72)
value vector_topsort (Lib 152)
type verdict (Lib 4), value verdict (Lib 153)
value verify_combination (OmegaSimple 13)
value verify_contr (OmegaSimple 11)
value verify_derivation (OmegaSimple 9)
value verify_gcd_check (OmegaSimple 12)
value verify_result (OmegaSimple 7)
value verify_satisfaction (OmegaSimple 8)
HOL Globals.version (help/Docfiles/Globals.version.adoc 0), value version (Globals 5), value version (Systeml 48)
value vfree_names (matchTools 38)
value vfree_vars (matchTools 39)
constructor vGoal (goalTree 5)
value via (Tactic 86)
constructor VIDENT (Absyn 6)
value vmatch (matchTools 40)
value vmatch_type (matchTools 31)
value vmatch_uty (matchTools 43)
constructor VPAIR (Absyn 6)
constructor VS_cons (term_grammar 169)
value vs_cons_special (GrammarSpecials 5)
constructor VSCONS (term_grammar 60)
type vstruct (Absyn 6)
value vt100_terminal (PPBackEnd 34)
constructor vThen (goalTree 5)
constructor vThenl (goalTree 5)
constructor VTYPED (Absyn 6)
value vunify (matchTools 42)
value vunify_type (matchTools 33)
value vunifyl (matchTools 41)
value vunifyl_type (matchTools 32)
HOL Lib.W (help/Docfiles/Lib.W.adoc 0), value W (Lib 17), value W (mlibUseful 29)
value w2i_1 (integer_wordTheory 59)
value w2i_11 (integer_wordTheory 60)
value w2i_11_lift (integer_wordTheory 61)
value w2i_def (integer_wordTheory 18)
value w2i_ge (integer_wordTheory 65)
value w2i_i2w (integer_wordTheory 66)
value w2i_i2w_id (integer_wordTheory 67)
value w2i_i2w_neg (integer_wordTheory 68)
value w2i_i2w_pos (integer_wordTheory 69)
value w2i_INT_MAXw (integer_wordTheory 62)
value w2i_INT_MINw (integer_wordTheory 63)
value w2i_le (integer_wordTheory 70)
value w2i_lt_0 (integer_wordTheory 71)
value w2i_minus_1 (integer_wordTheory 72)
value w2i_n2w_mod (integer_wordTheory 73)
value w2i_n2w_neg (integer_wordTheory 74)
value w2i_n2w_pos (integer_wordTheory 75)
value w2i_neg (integer_wordTheory 76)
value w2i_sw2sw_bounds (integer_wordTheory 77)
value w2i_tm (integer_wordSyntax 5)
value w2i_UINT_MAXw (integer_wordTheory 64)
value w2i_w2n_pos (integer_wordTheory 78)
value w2l_def (wordsTheory 33)
value w2l_l2w (wordsTheory 572)
value w2l_tm (wordsSyntax 51)
value w2n_11 (wordsTheory 573)
value w2n_11_lift (wordsTheory 574)
value w2n_add (wordsTheory 575)
value w2n_def (wordsTheory 34)
value w2n_eq_0 (wordsTheory 576)
value w2n_lsr (wordsTheory 577)
value w2n_lt (wordsTheory 578)
value w2n_minus1 (wordsTheory 579)
value w2n_n2w (wordsTheory 580)
value w2n_tm (wordsSyntax 52)
value w2n_v2w (bitstringTheory 97)
value w2n_w2w (wordsTheory 581)
value w2n_w2w_le (wordsTheory 582)
value w2s_def (wordsTheory 35)
value w2s_s2w (wordsTheory 583)
value w2s_tm (wordsSyntax 53)
value w2v_def (bitstringTheory 34)
value w2v_tm (bitstringSyntax 67)
value w2v_v2w (bitstringTheory 98)
value w2w (wordsTheory 584)
value w2w_0 (wordsTheory 585)
value w2w_def (wordsTheory 36)
value w2w_eq_n2w (wordsTheory 587)
value w2w_i2w (integer_wordTheory 79)
value w2w_id (wordsTheory 588)
value w2w_itself_def (basis_emitTheory 18)
value w2w_LSL (wordsTheory 586)
value w2w_lt (wordsTheory 589)
value w2w_n2w (wordsTheory 590)
value w2w_tm (wordsSyntax 54)
value w2w_v2w (bitstringTheory 99)
value w2w_w2w (wordsTheory 591)
value W_DEF (combinTheory 12)
value W_PRS (quotientTheory 100)
value W_RSP (quotientTheory 101)
value W_THM (combinTheory 42)
value W_tm (combinSyntax 8)
value warn (mlibUseful 192)
HOL Feedback.WARNING_outstream (help/Docfiles/Feedback.WARNING_outstream.adoc 0), value WARNING_outstream (Feedback 19)
HOL Feedback.WARNING_to_string (help/Docfiles/Feedback.WARNING_to_string.adoc 0), value WARNING_to_string (Feedback 27)
value WARNINGs_as_ERRs (Feedback 15)
value WATCH (Temporal_LogicTheory 14)
value WATCH_EXISTS (Temporal_LogicTheory 139)
value WATCH_REC (Temporal_LogicTheory 140)
value WATCH_SIGNAL (Temporal_LogicTheory 141)
value WCR_def (relationTheory 34)
value WEAK_CBV_CONV (computeLib 25)
value Weak_toto_inv (totoTheory 81)
value Weak_toto_thm (totoTheory 82)
value Weak_Weak_of (totoTheory 80)
value WEAKEN (mlibThm 46)
value WEAKEN_CONSEQ_CONV (ConseqConv 213)
HOL ConseqConv.WEAKEN_CONSEQ_CONV_RULE (help/Docfiles/ConseqConv.WEAKEN_CONSEQ_CONV_RULE.adoc 0), value WEAKEN_CONSEQ_CONV_RULE (ConseqConv 218)
HOL Tactic.WEAKEN_TAC (help/Docfiles/Tactic.WEAKEN_TAC.adoc 0), value WEAKEN_TAC (Tactic 72)
value WeakLinearOrder (relationTheory 38)
value WeakLinearOrder_dichotomy (relationTheory 193)
value WeakLinearOrder_of_TO (totoTheory 10)
value WeakOrd_Ord (relationTheory 194)
value WeakOrder (relationTheory 39)
value WeakOrder_EQ (relationTheory 195)
value WeakWellOrder_def (wotTheory 6)
value WEIGHTED_SUM (Solve_ineqs 10)
value WELL_ORDER (Temporal_LogicTheory 142)
value WELL_ORDER_UNIQUE (Temporal_LogicTheory 143)
value wellfounded_def (prim_recTheory 12)
value WF_antisymmetric (relationTheory 189)
value wf_cases (fmaptreeTheory 31)
value wf_coder (CoderTheory 23)
value wf_coder_blist (CoderTheory 24)
value wf_coder_bnum (CoderTheory 25)
value wf_coder_bool (CoderTheory 26)
value wf_coder_closed (CoderTheory 27)
value wf_coder_def (CoderTheory 19)
value wf_coder_list (CoderTheory 28)
value wf_coder_num (CoderTheory 29)
value wf_coder_op (CoderTheory 30)
value wf_coder_option (CoderTheory 31)
value wf_coder_prod (CoderTheory 32)
value wf_coder_sum (CoderTheory 33)
value wf_coder_tree (CoderTheory 34)
value wf_coder_unit (CoderTheory 35)
value wf_dec2enc (DecodeTheory 57)
value wf_decode_blist (DecodeTheory 58)
value wf_decode_bnum (DecodeTheory 59)
value wf_decode_bool (DecodeTheory 60)
value wf_decode_list (DecodeTheory 61)
value wf_decode_num (DecodeTheory 62)
value wf_decode_option (DecodeTheory 63)
value wf_decode_prod (DecodeTheory 64)
value wf_decode_sum (DecodeTheory 65)
value wf_decode_tree (DecodeTheory 66)
value wf_decode_unit (DecodeTheory 67)
value wf_decoder_def (DecodeTheory 18)
value WF_DEF (relationTheory 37), value wf_def (fmaptreeTheory 15), value wf_def (sptreeTheory 32)
value wf_delete (sptreeTheory 112)
value WF_EMPTY_REL (relationTheory 180)
value wf_enc2dec (DecodeTheory 68)
value wf_encode_blist (EncodeTheory 55)
value wf_encode_bnum (EncodeTheory 56)
value wf_encode_bnum_collision_free (EncodeTheory 57)
value wf_encode_bool (EncodeTheory 58)
value wf_encode_list (EncodeTheory 59)
value wf_encode_num (EncodeTheory 60)
value wf_encode_option (EncodeTheory 61)
value wf_encode_prod (EncodeTheory 62)
value wf_encode_sum (EncodeTheory 63)
value wf_encode_tree (EncodeTheory 64)
value wf_encode_unit (EncodeTheory 65)
value wf_encoder_alt (EncodeTheory 66)
value wf_encoder_def (EncodeTheory 27)
value wf_encoder_eq (EncodeTheory 67)
value wf_encoder_total (EncodeTheory 68)
value WF_EQ_INDUCTION_THM (relationTheory 181)
value WF_EQ_WFP (relationTheory 182)
value wf_fromAList (sptreeTheory 113)
value WF_IFF_WELLFOUNDED (prim_recTheory 46)
value wf_ind (fmaptreeTheory 32)
value WF_INDUCTION_THM (relationTheory 183)
value wf_insert (sptreeTheory 114)
value wf_inter (sptreeTheory 115)
value WF_inv_image (relationTheory 190)
value WF_irreflexive (relationTheory 191)
value WF_LESS (prim_recTheory 47)
value WF_LEX (pairTheory 57)
value WF_LIST_PRED (listTheory 393)
value wf_map (sptreeTheory 116)
value WF_measure (prim_recTheory 49)
value wf_mk_id (sptreeTheory 117)
value wf_mk_wf (sptreeTheory 118)
value WF_mlt1 (bagTheory 249)
value WF_mlt_list (containerTheory 44)
value WF_noloops (relationTheory 192)
value WF_NOT_REFL (relationTheory 184)
value WF_PRED (prim_recTheory 48)
value wf_pred_bnum (EncodeTheory 69)
value wf_pred_bnum_def (EncodeTheory 28)
value wf_pred_bnum_total (EncodeTheory 70)
value wf_pred_def (EncodeTheory 29)
value WF_RECURSION_THM (relationTheory 185)
HOL TotalDefn.WF_REL_TAC (help/Docfiles/TotalDefn.WF_REL_TAC.adoc 0), HOL bossLib.WF_REL_TAC (help/Docfiles/bossLib.WF_REL_TAC.adoc 0), value WF_REL_TAC (TotalDefn 25), value WF_REL_TAC (bossLib 17)
value WF_RPROD (pairTheory 58)
value wf_rules (fmaptreeTheory 33)
value wf_strongind (fmaptreeTheory 34)
value WF_SUBSET (relationTheory 186)
value WF_TAC (TotalDefn 21)
value WF_TC (relationTheory 187)
value WF_TC_EQN (relationTheory 188)
value WF_thms (TotalDefn 13)
value wf_tm (sptreeSyntax 36)
value wf_union (sptreeTheory 119)
value WFP_CASES (relationTheory 174)
value WFP_DEF (relationTheory 35)
value WFP_INDUCT (relationTheory 175)
value WFP_RULES (relationTheory 176)
value WFP_STRONG_INDUCT (relationTheory 177)
value WFREC_COROLLARY (relationTheory 178)
value WFREC_DEF (relationTheory 36)
value wfrec_eqns (Defn 15)
value WFREC_THM (relationTheory 179)
structure wfrecUtils
value WHEN (Temporal_LogicTheory 15)
value WHEN_AS_BEFORE (Temporal_LogicTheory 144)
value WHEN_AS_CO_BUECHI (Omega_AutomataTheory 44)
value WHEN_AS_NOT_SWHEN (Temporal_LogicTheory 145)
value WHEN_AS_SBEFORE (Temporal_LogicTheory 146)
value WHEN_AS_SUNTIL (Temporal_LogicTheory 147)
value WHEN_AS_SWHEN (Temporal_LogicTheory 148)
value WHEN_AS_UNTIL (Temporal_LogicTheory 149)
value WHEN_EVENT (Temporal_LogicTheory 150)
value WHEN_EXPRESSIVE (Past_Temporal_LogicTheory 50)
value WHEN_FIX (Temporal_LogicTheory 151)
value WHEN_IDEM (Temporal_LogicTheory 152)
value WHEN_IMP (Temporal_LogicTheory 153)
value WHEN_INVARIANT (Temporal_LogicTheory 154)
value WHEN_LINORD (Temporal_LogicTheory 155)
value WHEN_NEXT (Temporal_LogicTheory 156)
value WHEN_REC (Temporal_LogicTheory 157)
value WHEN_SIGNAL (Temporal_LogicTheory 158)
value WHEN_SIMP (Temporal_LogicTheory 159)
value WHEN_SWHEN_LEMMA (Temporal_LogicTheory 160)
value WHILE (whileTheory 9)
value while_grammars (whileTheory 32)
value WHILE_INDUCTION (whileTheory 29)
value WHILE_RULE (whileTheory 30)
value while_tm (numSyntax 33)
structure whileTheory
value whitestar (UnicodeChars 94)
value WIDEN_def (errorStateMonadTheory 19), value WIDEN_def (state_transformerTheory 15)
value widen_tm (state_transformerSyntax 16)
value with_classic_heuristic (Pmatch 29), value with_classic_heuristic (PmatchHeuristics 92)
HOL Lib.with_exn (help/Docfiles/Lib.with_exn.adoc 0), value with_exn (Lib 154)
HOL Lib.with_flag (help/Docfiles/Lib.with_flag.adoc 0), value with_flag (Lib 155), value with_flag (mlibUseful 185)
value with_heuristic (PmatchHeuristics 93)
value with_manual_heuristic (Pmatch 32), value with_manual_heuristic (PmatchHeuristics 94)
value with_pp (HOLPP 35)
value with_ppstream (PPBackEnd 16), value with_ppstream (Portable 10)
value WITHOUT_ABBREVS (bossLib 127), value WITHOUT_ABBREVS (markerLib 34)
type witness (KernelTypes 52)
value WOP (arithmeticTheory 367)
value word_0 (wordsTheory 592)
value WORD_0_LS (wordsTheory 199)
value word_0_n2w (wordsTheory 593)
value WORD_0_POS (wordsTheory 200)
value word_0_w2i (integer_wordTheory 80)
value word_1_lsl (wordsTheory 594)
value word_1_n2w (wordsTheory 595)
value word_1comp_def (wordsTheory 37)
value word_1comp_n2w (wordsTheory 596)
value word_1comp_tm (wordsSyntax 55)
value word_1comp_v2w (bitstringTheory 100)
value word_2comp_def (wordsTheory 38)
value word_2comp_dimindex_1 (wordsTheory 597)
value WORD_2COMP_LSL (wordsTheory 201)
value word_2comp_n2w (wordsTheory 598)
value word_2comp_tm (wordsSyntax 56)
value word_abs (wordsTheory 607)
value word_abs_def (wordsTheory 43)
value word_abs_diff (wordsTheory 608)
value word_abs_i2w (integer_wordTheory 81)
value word_abs_neg (wordsTheory 609)
value word_abs_tm (wordsSyntax 61)
value word_abs_w2i (integer_wordTheory 82)
value word_abs_word_abs (wordsTheory 610)
value WORD_ADD_0 (wordsTheory 202)
value WORD_ADD_ASSOC (wordsTheory 203)
value WORD_ADD_BIT (wordsTheory 204)
value WORD_ADD_BIT0 (wordsTheory 205)
value WORD_ADD_COMM (wordsTheory 206)
value word_add_def (wordsTheory 44)
value WORD_ADD_EQ_SUB (wordsTheory 207)
value word_add_i2w (integer_wordTheory 83)
value word_add_i2w_w2n (integer_wordTheory 84)
value WORD_ADD_INV_0_EQ (wordsTheory 208)
value WORD_ADD_LEFT_LO (wordsTheory 209)
value WORD_ADD_LEFT_LO2 (wordsTheory 210)
value WORD_ADD_LEFT_LS (wordsTheory 211)
value WORD_ADD_LEFT_LS2 (wordsTheory 212)
value WORD_ADD_LID_UNIQ (wordsTheory 213)
value WORD_ADD_LINV (wordsTheory 214)
value WORD_ADD_LSL (wordsTheory 215)
value word_add_n2w (wordsTheory 611)
value WORD_ADD_OR (wordsTheory 216)
value WORD_ADD_RID_UNIQ (wordsTheory 217)
value WORD_ADD_RIGHT_LO (wordsTheory 218)
value WORD_ADD_RIGHT_LO2 (wordsTheory 219)
value WORD_ADD_RIGHT_LS (wordsTheory 220)
value WORD_ADD_RIGHT_LS2 (wordsTheory 221)
value WORD_ADD_RINV (wordsTheory 222)
value WORD_ADD_SUB (wordsTheory 223)
value WORD_ADD_SUB2 (wordsTheory 224)
value WORD_ADD_SUB3 (wordsTheory 225)
value WORD_ADD_SUB_ASSOC (wordsTheory 226)
value WORD_ADD_SUB_SYM (wordsTheory 227)
value word_add_tm (wordsSyntax 62)
value WORD_ADD_XOR (wordsTheory 228)
value WORD_ALL_BITS (wordsTheory 229)
value WORD_AND_ABSORD (wordsTheory 230)
value WORD_AND_ASSOC (wordsTheory 231)
value WORD_AND_CLAUSES (wordsTheory 232)
value WORD_AND_COMM (wordsTheory 233)
value WORD_AND_COMP (wordsTheory 234)
value word_and_def (wordsTheory 45)
value WORD_AND_EXP_SUB1 (wordsTheory 235)
value WORD_AND_IDEM (wordsTheory 236)
value word_and_n2w (wordsTheory 612)
value word_and_tm (wordsSyntax 63)
value word_and_v2w (bitstringTheory 101)
HOL wordsLib.WORD_ARITH_CONV (help/Docfiles/wordsLib.WORD_ARITH_CONV.adoc 0), value WORD_ARITH_CONV (wordsLib 28)
HOL wordsLib.WORD_ARITH_EQ_ss (help/Docfiles/wordsLib.WORD_ARITH_EQ_ss.adoc 0), value WORD_ARITH_EQ_ss (wordsLib 14)
value WORD_ARITH_PROVE (wordsLib 44)
HOL wordsLib.WORD_ARITH_ss (help/Docfiles/wordsLib.WORD_ARITH_ss.adoc 0), value WORD_ARITH_ss (wordsLib 10)
value word_asr (wordsTheory 613)
value word_asr_bv_def (wordsTheory 46)
value word_asr_bv_expand (blastTheory 20)
value word_asr_bv_tm (wordsSyntax 64)
value word_asr_def (wordsTheory 47)
value word_asr_n2w (wordsTheory 614)
value word_asr_tm (wordsSyntax 65)
value word_asr_v2w (bitstringTheory 102)
value word_bin_list (wordsTheory 615)
value word_bin_string (wordsTheory 616)
value word_bit (wordsTheory 617)
value word_bit_0 (wordsTheory 618)
value word_bit_0_word_T (wordsTheory 619)
value WORD_BIT_BITS (wordsTheory 248)
value word_bit_CONV (bitstringLib 28)
value word_bit_def (wordsTheory 48)
HOL wordsLib.WORD_BIT_EQ_CONV (help/Docfiles/wordsLib.WORD_BIT_EQ_CONV.adoc 0), value WORD_BIT_EQ_CONV (wordsLib 36)
HOL wordsLib.WORD_BIT_EQ_ss (help/Docfiles/wordsLib.WORD_BIT_EQ_ss.adoc 0), value WORD_BIT_EQ_ss (wordsLib 16)
value WORD_BIT_INDEX_CONV (wordsLib 37)
value word_bit_last_shiftr (bitstringTheory 103)
value word_bit_n2w (wordsTheory 620)
value word_bit_tm (wordsSyntax 66)
value WORD_BITS_COMP_THM (wordsTheory 237)
value word_bits_def (wordsTheory 49)
value WORD_BITS_EXTRACT (wordsTheory 238)
value WORD_BITS_LSL (wordsTheory 239)
value WORD_BITS_LSR (wordsTheory 240)
value WORD_BITS_LT (wordsTheory 241)
value WORD_BITS_MIN_HIGH (wordsTheory 242)
value word_bits_n2w (wordsTheory 621)
value WORD_BITS_OVER_BITWISE (wordsTheory 243)
value WORD_BITS_SLICE_THM (wordsTheory 244)
value word_bits_tm (wordsSyntax 67)
value word_bits_v2w (bitstringTheory 104)
value word_bits_w2w (wordsTheory 622)
value WORD_BITS_ZERO (wordsTheory 245)
value WORD_BITS_ZERO2 (wordsTheory 246)
value WORD_BITS_ZERO3 (wordsTheory 247)
HOL wordsLib.WORD_CANCEL_CONV (help/Docfiles/wordsLib.WORD_CANCEL_CONV.adoc 0), value WORD_CANCEL_CONV (wordsLib 29)
HOL wordsLib.WORD_CANCEL_ss (help/Docfiles/wordsLib.WORD_CANCEL_ss.adoc 0), value WORD_CANCEL_ss (wordsLib 15)
value word_compare_def (wordsTheory 50)
value word_compare_tm (wordsSyntax 68)
value word_concat_0 (wordsTheory 623)
value word_concat_0_0 (wordsTheory 624)
value word_concat_0_eq (wordsTheory 625)
value word_concat_def (wordsTheory 51)
value word_concat_itself_def (basis_emitTheory 19)
value word_concat_tm (wordsSyntax 69)
value word_concat_v2w (bitstringTheory 105)
value word_concat_v2w_rwt (bitstringTheory 106)
value word_concat_word_T (wordsTheory 626)
HOL wordsLib.WORD_CONV (help/Docfiles/wordsLib.WORD_CONV.adoc 0), value WORD_CONV (wordsLib 35)
value WORD_DE_MORGAN_THM (wordsTheory 249)
value word_dec_list (wordsTheory 627)
value word_dec_string (wordsTheory 628)
HOL wordsLib.WORD_DECIDE (help/Docfiles/wordsLib.WORD_DECIDE.adoc 0), value WORD_DECIDE (integer_wordLib 8), value WORD_DECIDE (wordsLib 45)
HOL wordsLib.WORD_DECIDE_TAC (help/Docfiles/wordsLib.WORD_DECIDE_TAC.adoc 0), value WORD_DECIDE_TAC (wordsLib 46)
value word_div_1 (wordsTheory 629)
value word_div_def (wordsTheory 52)
value WORD_DIV_LSR (wordsTheory 251)
HOL wordsLib.WORD_DIV_LSR_CONV (help/Docfiles/wordsLib.WORD_DIV_LSR_CONV.adoc 0), value WORD_DIV_LSR_CONV (wordsLib 33)
value word_div_tm (wordsSyntax 70)
value WORD_DIVISION (wordsTheory 250)
HOL wordsLib.WORD_DP (help/Docfiles/wordsLib.WORD_DP.adoc 0), value WORD_DP (wordsLib 43)
value WORD_EQ (wordsTheory 252)
value word_eq_0 (wordsTheory 630)
value WORD_EQ_ADD_LCANCEL (wordsTheory 253)
value WORD_EQ_ADD_RCANCEL (wordsTheory 254)
value word_EQ_CONV (wordsLib 24), value word_eq_CONV (bitstringLib 26)
value word_eq_def (basis_emitTheory 20)
value word_eq_n2w (wordsTheory 631)
value WORD_EQ_NEG (wordsTheory 255)
value WORD_EQ_SUB_LADD (wordsTheory 256)
value WORD_EQ_SUB_RADD (wordsTheory 257)
value WORD_EQ_SUB_ZERO (wordsTheory 258)
HOL wordsLib.WORD_EVAL_CONV (help/Docfiles/wordsLib.WORD_EVAL_CONV.adoc 0), value WORD_EVAL_CONV (wordsLib 51)
value WORD_EVAL_RULE (wordsLib 52)
value WORD_EVAL_TAC (wordsLib 53)
value WORD_EXTRACT_BITS_COMP (wordsTheory 259)
value WORD_EXTRACT_COMP_THM (wordsTheory 260)
value word_extract_def (wordsTheory 53)
value word_extract_eq_n2w (wordsTheory 632)
value WORD_EXTRACT_ID (wordsTheory 261)
value word_extract_itself_def (basis_emitTheory 21)
value WORD_EXTRACT_LSL (wordsTheory 262)
value WORD_EXTRACT_LSL2 (wordsTheory 263)
value WORD_EXTRACT_LT (wordsTheory 264)
value word_extract_mask (wordsTheory 633)
value WORD_EXTRACT_MIN_HIGH (wordsTheory 265)
value word_extract_n2w (wordsTheory 634)
value WORD_EXTRACT_OVER_ADD (wordsTheory 266)
value WORD_EXTRACT_OVER_ADD2 (wordsTheory 267)
value WORD_EXTRACT_OVER_BITWISE (wordsTheory 268)
value WORD_EXTRACT_OVER_MUL (wordsTheory 269)
value WORD_EXTRACT_OVER_MUL2 (wordsTheory 270)
HOL wordsLib.WORD_EXTRACT_ss (help/Docfiles/wordsLib.WORD_EXTRACT_ss.adoc 0), value WORD_EXTRACT_ss (wordsLib 17)
value word_extract_tm (wordsSyntax 71)
value word_extract_v2w (bitstringTheory 107)
value word_extract_w2w (wordsTheory 635)
value WORD_EXTRACT_ZERO (wordsTheory 271)
value WORD_EXTRACT_ZERO2 (wordsTheory 272)
value WORD_EXTRACT_ZERO3 (wordsTheory 273)
value WORD_FINITE (wordsTheory 274)
value word_from_bin_list_def (wordsTheory 54)
value word_from_bin_list_tm (wordsSyntax 72)
value word_from_bin_string_def (wordsTheory 55)
value word_from_bin_string_tm (wordsSyntax 73)
value word_from_dec_list_def (wordsTheory 56)
value word_from_dec_list_tm (wordsSyntax 74)
value word_from_dec_string_def (wordsTheory 57)
value word_from_dec_string_tm (wordsSyntax 75)
value word_from_hex_list_def (wordsTheory 58)
value word_from_hex_list_tm (wordsSyntax 76)
value word_from_hex_string_def (wordsTheory 59)
value word_from_hex_string_tm (wordsSyntax 77)
value word_from_oct_list_def (wordsTheory 60)
value word_from_oct_list_tm (wordsSyntax 78)
value word_from_oct_string_def (wordsTheory 61)
value word_from_oct_string_tm (wordsSyntax 79)
value WORD_GE (wordsTheory 275)
value word_ge_def (wordsTheory 62)
value word_ge_n2w (wordsTheory 636)
value word_ge_tm (wordsSyntax 80)
value WORD_GEi (integer_wordTheory 33)
value WORD_GREATER (wordsTheory 276)
value WORD_GREATER_EQ (wordsTheory 277)
value WORD_GREATER_OR_EQ (wordsTheory 278)
value WORD_GROUND_CONV (wordsLib 50)
value WORD_GT (wordsTheory 279)
value word_gt_def (wordsTheory 63)
value word_gt_n2w (wordsTheory 637)
value word_gt_tm (wordsSyntax 81)
value WORD_GTi (integer_wordTheory 34)
value word_H (wordsTheory 599)
value word_H_def (wordsTheory 39)
value WORD_H_POS (wordsTheory 285)
value word_H_tm (wordsSyntax 57)
value WORD_H_WORD_L (wordsTheory 286)
value word_hex_list (wordsTheory 638)
value word_hex_string (wordsTheory 639)
value WORD_HI (wordsTheory 280)
value word_hi_def (wordsTheory 64)
value word_hi_n2w (wordsTheory 640)
value word_hi_tm (wordsSyntax 82)
value WORD_HIGHER (wordsTheory 281)
value WORD_HIGHER_EQ (wordsTheory 282)
value WORD_HIGHER_OR_EQ (wordsTheory 283)
value WORD_HS (wordsTheory 284)
value word_hs_def (wordsTheory 65)
value word_hs_n2w (wordsTheory 641)
value word_hs_tm (wordsSyntax 83)
value word_i2w_add (integer_wordTheory 85)
value word_i2w_mul (integer_wordTheory 86)
value word_index (wordsTheory 642)
value word_index_def (basis_emitTheory 22)
value word_index_n2w (wordsTheory 643)
value word_index_v2w (bitstringTheory 108)
value WORD_INDUCT (wordsTheory 287)
value word_join_0 (wordsTheory 644)
value word_join_def (wordsTheory 66)
value word_join_index (wordsTheory 645)
value word_join_tm (wordsSyntax 84)
value word_join_v2w (bitstringTheory 109)
value word_join_v2w_rwt (bitstringTheory 110)
value word_join_word_T (wordsTheory 646)
value word_L (wordsTheory 600)
value word_L2 (wordsTheory 601)
value word_L2_def (wordsTheory 40)
value word_L2_MULT (wordsTheory 602)
value word_L2_tm (wordsSyntax 58)
value word_L_def (wordsTheory 41)
value WORD_L_LESS_EQ (wordsTheory 349)
value WORD_L_LESS_H (wordsTheory 350)
value word_L_MULT (wordsTheory 603)
value word_L_MULT_NEG (wordsTheory 604)
value WORD_L_NEG (wordsTheory 351)
value WORD_L_PLUS_H (wordsTheory 352)
value word_L_tm (wordsSyntax 59)
value WORD_LCANCEL_SUB (wordsTheory 288)
value WORD_LE (wordsTheory 289)
value word_le_def (wordsTheory 67)
value WORD_LE_EQ_LS (wordsTheory 315)
value WORD_LE_LS (wordsTheory 316)
value word_le_n2w (wordsTheory 647)
value word_le_tm (wordsSyntax 85)
value WORD_LEFT_ADD_DISTRIB (wordsTheory 290)
value WORD_LEFT_AND_OVER_OR (wordsTheory 291)
value WORD_LEFT_AND_OVER_XOR (wordsTheory 292)
value WORD_LEFT_OR_OVER_AND (wordsTheory 293)
value WORD_LEFT_SUB_DISTRIB (wordsTheory 294)
value WORD_LEi (integer_wordTheory 35)
value word_len_def (wordsTheory 68)
value word_len_tm (wordsSyntax 86)
value WORD_LESS_0_word_T (wordsTheory 295)
value WORD_LESS_ANTISYM (wordsTheory 296)
value WORD_LESS_CASES (wordsTheory 297)
value WORD_LESS_CASES_IMP (wordsTheory 298)
value WORD_LESS_EQ_ANTISYM (wordsTheory 300)
value WORD_LESS_EQ_CASES (wordsTheory 301)
value WORD_LESS_EQ_H (wordsTheory 302)
value WORD_LESS_EQ_LESS_TRANS (wordsTheory 303)
value WORD_LESS_EQ_REFL (wordsTheory 304)
value WORD_LESS_EQ_TRANS (wordsTheory 305)
value WORD_LESS_EQUAL_ANTISYM (wordsTheory 299)
value WORD_LESS_IMP_LESS_OR_EQ (wordsTheory 306)
value WORD_LESS_LESS_CASES (wordsTheory 307)
value WORD_LESS_LESS_EQ_TRANS (wordsTheory 308)
value WORD_LESS_NEG_LEFT (wordsTheory 309)
value WORD_LESS_NEG_RIGHT (wordsTheory 310)
value WORD_LESS_NOT_EQ (wordsTheory 311)
value WORD_LESS_OR_EQ (wordsTheory 312)
value WORD_LESS_REFL (wordsTheory 313)
value WORD_LESS_TRANS (wordsTheory 314)
value WORD_LITERAL_ADD (wordsTheory 317)
value WORD_LITERAL_AND (wordsTheory 318)
value WORD_LITERAL_MULT (wordsTheory 319)
value WORD_LITERAL_OR (wordsTheory 320)
value WORD_LITERAL_XOR (wordsTheory 321)
value WORD_LO (wordsTheory 322)
value word_lo_def (wordsTheory 69)
value word_lo_n2w (wordsTheory 648)
value word_lo_tm (wordsSyntax 87)
value WORD_LO_word_0 (wordsTheory 339)
value WORD_LO_word_T (wordsTheory 340)
value word_log2_1 (wordsTheory 649)
value word_log2_def (wordsTheory 70)
value word_log2_n2w (wordsTheory 650)
value word_log2_tm (wordsSyntax 88)
HOL wordsLib.WORD_LOGIC_CONV (help/Docfiles/wordsLib.WORD_LOGIC_CONV.adoc 0), value WORD_LOGIC_CONV (wordsLib 30)
HOL wordsLib.WORD_LOGIC_ss (help/Docfiles/wordsLib.WORD_LOGIC_ss.adoc 0), value WORD_LOGIC_ss (wordsLib 11)
value WORD_LOWER_ANTISYM (wordsTheory 323)
value WORD_LOWER_CASES (wordsTheory 324)
value WORD_LOWER_CASES_IMP (wordsTheory 325)
value WORD_LOWER_EQ_ANTISYM (wordsTheory 327)
value WORD_LOWER_EQ_CASES (wordsTheory 328)
value WORD_LOWER_EQ_LOWER_TRANS (wordsTheory 329)
value WORD_LOWER_EQ_REFL (wordsTheory 330)
value WORD_LOWER_EQ_TRANS (wordsTheory 331)
value WORD_LOWER_EQUAL_ANTISYM (wordsTheory 326)
value WORD_LOWER_IMP_LOWER_OR_EQ (wordsTheory 332)
value WORD_LOWER_LOWER_CASES (wordsTheory 333)
value WORD_LOWER_LOWER_EQ_TRANS (wordsTheory 334)
value WORD_LOWER_NOT_EQ (wordsTheory 335)
value WORD_LOWER_OR_EQ (wordsTheory 336)
value WORD_LOWER_REFL (wordsTheory 337)
value WORD_LOWER_TRANS (wordsTheory 338)
value WORD_LS (wordsTheory 341)
value word_ls_def (wordsTheory 71)
value word_ls_n2w (wordsTheory 651)
value WORD_LS_T (wordsTheory 342)
value word_ls_tm (wordsSyntax 89)
value WORD_LS_word_0 (wordsTheory 343)
value WORD_LS_word_T (wordsTheory 344)
value word_lsb (wordsTheory 652)
value word_lsb_def (wordsTheory 72)
value word_lsb_n2w (wordsTheory 653)
value word_lsb_tm (wordsSyntax 90)
value word_lsb_v2w (bitstringTheory 111)
value word_lsb_word_T (wordsTheory 654)
value word_lsl_bv_def (wordsTheory 73)
value word_lsl_bv_expand (blastTheory 21)
value word_lsl_bv_tm (wordsSyntax 91)
value word_lsl_def (wordsTheory 74)
value word_lsl_n2w (wordsTheory 655)
value word_lsl_tm (wordsSyntax 92)
value word_lsl_v2w (bitstringTheory 112)
value word_lsr_bv_def (wordsTheory 75)
value word_lsr_bv_expand (blastTheory 22)
value word_lsr_bv_tm (wordsSyntax 93)
value word_lsr_def (wordsTheory 76)
value word_lsr_n2w (wordsTheory 656)
value word_lsr_tm (wordsSyntax 94)
value word_lsr_v2w (bitstringTheory 113)
value WORD_LT (wordsTheory 345)
value word_lt_def (wordsTheory 77)
value WORD_LT_EQ_LO (wordsTheory 346)
value WORD_LT_LO (wordsTheory 347)
value word_lt_n2w (wordsTheory 657)
value WORD_LT_SUB_UPPER (wordsTheory 348)
value word_lt_tm (wordsSyntax 95)
value WORD_LTi (integer_wordTheory 36)
value word_max_def (wordsTheory 78)
value word_max_tm (wordsSyntax 96)
value word_min_def (wordsTheory 79)
value word_min_tm (wordsSyntax 97)
value WORD_MOD_1 (wordsTheory 354)
HOL wordsLib.WORD_MOD_BITS_CONV (help/Docfiles/wordsLib.WORD_MOD_BITS_CONV.adoc 0), value WORD_MOD_BITS_CONV (wordsLib 34)
value word_mod_def (wordsTheory 80)
value WORD_MOD_POW2 (wordsTheory 355)
value word_mod_tm (wordsSyntax 98)
value WORD_MODIFY_BIT (wordsTheory 353)
value word_modify_def (wordsTheory 81)
value word_modify_n2w (wordsTheory 658)
value word_modify_tm (wordsSyntax 99)
value word_modify_v2w (bitstringTheory 114)
value word_msb (wordsTheory 659)
value WORD_MSB_1COMP (wordsTheory 356)
value word_msb_def (wordsTheory 82)
value word_msb_i2w (integer_wordTheory 87)
value WORD_MSB_INT_MIN_LS (wordsTheory 357)
value word_msb_n2w (wordsTheory 660)
value word_msb_n2w_numeric (wordsTheory 661)
value word_msb_neg (wordsTheory 662)
value word_msb_tm (wordsSyntax 100)
value word_msb_v2w (bitstringTheory 115)
value word_msb_word_T (wordsTheory 663)
value word_mul_def (wordsTheory 83)
value word_mul_i2w (integer_wordTheory 88)
value word_mul_i2w_w2n (integer_wordTheory 89)
value WORD_MUL_LSL (wordsTheory 362)
HOL wordsLib.WORD_MUL_LSL_CONV (help/Docfiles/wordsLib.WORD_MUL_LSL_CONV.adoc 0), value WORD_MUL_LSL_CONV (wordsLib 32)
HOL wordsLib.WORD_MUL_LSL_ss (help/Docfiles/wordsLib.WORD_MUL_LSL_ss.adoc 0), value WORD_MUL_LSL_ss (wordsLib 18)
value word_mul_n2w (wordsTheory 664)
value word_mul_tm (wordsSyntax 101)
value WORD_MULT_ASSOC (wordsTheory 358)
value WORD_MULT_CLAUSES (wordsTheory 359)
value WORD_MULT_COMM (wordsTheory 360)
value WORD_MULT_SUC (wordsTheory 361)
value word_nand_def (wordsTheory 84)
value word_nand_n2w (wordsTheory 665)
value WORD_NAND_NOT_AND (wordsTheory 363)
value word_nand_tm (wordsSyntax 102)
value word_nand_v2w (bitstringTheory 116)
value word_nchotomy (wordsTheory 666)
value WORD_NEG (wordsTheory 364)
value WORD_NEG_0 (wordsTheory 365)
value WORD_NEG_1 (wordsTheory 366)
value WORD_NEG_1_T (wordsTheory 367)
value WORD_NEG_ADD (wordsTheory 368)
value WORD_NEG_EQ (wordsTheory 369)
value WORD_NEG_EQ_0 (wordsTheory 370)
value WORD_NEG_L (wordsTheory 371)
value WORD_NEG_LMUL (wordsTheory 372)
value WORD_NEG_MUL (wordsTheory 373)
value WORD_NEG_NEG (wordsTheory 374)
value WORD_NEG_RMUL (wordsTheory 375)
value WORD_NEG_SUB (wordsTheory 376)
value WORD_NEG_T (wordsTheory 377)
value word_nor_def (wordsTheory 85)
value word_nor_n2w (wordsTheory 667)
value WORD_NOR_NOT_OR (wordsTheory 378)
value word_nor_tm (wordsSyntax 103)
value word_nor_v2w (bitstringTheory 117)
value WORD_NOT (wordsTheory 379)
value WORD_NOT_0 (wordsTheory 380)
value WORD_NOT_GREATER (wordsTheory 381)
value WORD_NOT_HIGHER (wordsTheory 382)
value WORD_NOT_LESS (wordsTheory 383)
value WORD_NOT_LESS_EQ (wordsTheory 384)
value WORD_NOT_LESS_EQUAL (wordsTheory 385)
value WORD_NOT_LOWER (wordsTheory 386)
value WORD_NOT_LOWER_EQ (wordsTheory 387)
value WORD_NOT_LOWER_EQUAL (wordsTheory 388)
value WORD_NOT_NOT (wordsTheory 389)
value WORD_NOT_T (wordsTheory 390)
value WORD_NOT_XOR (wordsTheory 391)
value word_oct_list (wordsTheory 668)
value word_oct_string (wordsTheory 669)
value WORD_OR_ABSORB (wordsTheory 392)
value WORD_OR_ASSOC (wordsTheory 393)
value WORD_OR_CLAUSES (wordsTheory 394)
value WORD_OR_COMM (wordsTheory 395)
value WORD_OR_COMP (wordsTheory 396)
value word_or_def (wordsTheory 86)
value WORD_OR_IDEM (wordsTheory 397)
value word_or_n2w (wordsTheory 670)
value word_or_tm (wordsSyntax 104)
value word_or_v2w (bitstringTheory 118)
value word_pp_mode (wordsLib 67)
value WORD_PRED_THM (wordsTheory 398)
value word_ptree_11 (patricia_castsTheory 58)
value word_ptree_Axiom (patricia_castsTheory 59)
value word_ptree_case_cong (patricia_castsTheory 60)
value word_ptree_case_def (patricia_castsTheory 40)
value word_ptree_induction (patricia_castsTheory 61)
value word_ptree_nchotomy (patricia_castsTheory 62)
value word_ptree_size_def (patricia_castsTheory 41)
value word_ptree_TY_DEF (patricia_castsTheory 39)
value WORD_RCANCEL_SUB (wordsTheory 399)
value word_reduce_def (wordsTheory 87)
value word_reduce_n2w (wordsTheory 671)
value word_reduce_tm (wordsSyntax 105)
value word_reduce_v2w (bitstringTheory 119)
value word_replicate_concat_word_list (wordsTheory 672)
value word_replicate_def (wordsTheory 88)
value word_replicate_tm (wordsSyntax 106)
value word_reverse_0 (wordsTheory 673)
value word_reverse_def (wordsTheory 89)
value word_reverse_n2w (wordsTheory 674)
value word_reverse_thm (wordsTheory 675)
value word_reverse_tm (wordsSyntax 107)
value word_reverse_v2w (bitstringTheory 120)
value word_reverse_word_T (wordsTheory 676)
value WORD_RIGHT_ADD_DISTRIB (wordsTheory 400)
value WORD_RIGHT_AND_OVER_OR (wordsTheory 401)
value WORD_RIGHT_AND_OVER_XOR (wordsTheory 402)
value WORD_RIGHT_OR_OVER_AND (wordsTheory 403)
value WORD_RIGHT_SUB_DISTRIB (wordsTheory 404)
value word_rol_bv_def (wordsTheory 90)
value word_rol_bv_expand (blastTheory 23)
value word_rol_bv_tm (wordsSyntax 108)
value word_rol_def (wordsTheory 91)
value word_rol_tm (wordsSyntax 109)
value word_ror (wordsTheory 677)
value word_ror_bv_def (wordsTheory 92)
value word_ror_bv_expand (blastTheory 24)
value word_ror_bv_tm (wordsSyntax 110)
value word_ror_def (wordsTheory 93)
value word_ror_n2w (wordsTheory 678)
value word_ror_tm (wordsSyntax 111)
value word_ror_v2w (bitstringTheory 121)
value word_rrx_0 (wordsTheory 679)
value word_rrx_def (wordsTheory 94)
value word_rrx_n2w (wordsTheory 680)
value word_rrx_tm (wordsSyntax 112)
value word_rrx_word_T (wordsTheory 681)
value word_sdiv_def (wordsTheory 95)
value word_sdiv_tm (wordsSyntax 113)
value WORD_SET_INDUCT (wordsTheory 405)
value word_shift_bv (wordsTheory 682)
HOL wordsLib.WORD_SHIFT_ss (help/Docfiles/wordsLib.WORD_SHIFT_ss.adoc 0), value WORD_SHIFT_ss (wordsLib 13)
value word_sign_extend_bits (wordsTheory 683)
value word_sign_extend_def (wordsTheory 96)
value word_sign_extend_tm (wordsSyntax 114)
value word_signed_bits_def (wordsTheory 97)
value word_signed_bits_n2w (wordsTheory 684)
value WORD_SLICE_BITS_THM (wordsTheory 406)
value WORD_SLICE_COMP_THM (wordsTheory 407)
value word_slice_def (wordsTheory 98)
value word_slice_n2w (wordsTheory 685)
value WORD_SLICE_OVER_BITWISE (wordsTheory 408)
value WORD_SLICE_THM (wordsTheory 409)
value word_slice_tm (wordsSyntax 115)
value word_slice_v2w (bitstringTheory 122)
value WORD_SLICE_ZERO (wordsTheory 410)
value WORD_SLICE_ZERO2 (wordsTheory 411)
value word_smax_def (wordsTheory 99)
value word_smax_tm (wordsSyntax 116)
value word_smin_def (wordsTheory 100)
value word_smin_tm (wordsSyntax 117)
value word_smod_def (wordsTheory 101)
value word_smod_tm (wordsSyntax 118)
value word_srem_def (wordsTheory 102)
value word_srem_tm (wordsSyntax 119)
HOL wordsLib.WORD_ss (help/Docfiles/wordsLib.WORD_ss.adoc 0), value WORD_ss (wordsLib 20)
value WORD_SUB (wordsTheory 412)
value WORD_SUB_ADD (wordsTheory 413)
value WORD_SUB_ADD2 (wordsTheory 414)
HOL wordsLib.WORD_SUB_CONV (help/Docfiles/wordsLib.WORD_SUB_CONV.adoc 0), value WORD_SUB_CONV (wordsLib 31)
value word_sub_def (wordsTheory 103)
value word_sub_i2w (integer_wordTheory 90)
value word_sub_i2w_w2n (integer_wordTheory 91)
value WORD_SUB_INTRO (wordsTheory 415)
value WORD_SUB_LE (wordsTheory 416)
value WORD_SUB_LNEG (wordsTheory 417)
value WORD_SUB_LT (wordsTheory 418)
value WORD_SUB_LZERO (wordsTheory 419)
value WORD_SUB_NEG (wordsTheory 420)
value WORD_SUB_PLUS (wordsTheory 421)
value WORD_SUB_REFL (wordsTheory 422)
value WORD_SUB_RNEG (wordsTheory 423)
value WORD_SUB_RZERO (wordsTheory 424)
HOL wordsLib.WORD_SUB_ss (help/Docfiles/wordsLib.WORD_SUB_ss.adoc 0), value WORD_SUB_ss (wordsLib 12)
value WORD_SUB_SUB (wordsTheory 425)
value WORD_SUB_SUB2 (wordsTheory 426)
value WORD_SUB_SUB3 (wordsTheory 427)
value word_sub_tm (wordsSyntax 120)
value WORD_SUB_TRIANGLE (wordsTheory 428)
value word_sub_w2n (wordsTheory 686)
value WORD_SUM_ZERO (wordsTheory 429)
value word_T (wordsTheory 605)
value word_T_def (wordsTheory 42)
value word_T_not_zero (wordsTheory 606)
value word_T_tm (wordsSyntax 60)
value word_to_bin_list_def (wordsTheory 104)
value word_to_bin_list_tm (wordsSyntax 121)
value word_to_bin_string_def (wordsTheory 105)
value word_to_bin_string_tm (wordsSyntax 122)
value word_to_dec_list_def (wordsTheory 106)
value word_to_dec_list_tm (wordsSyntax 123)
value word_to_dec_string_def (wordsTheory 107)
value word_to_dec_string_tm (wordsSyntax 124)
value word_to_hex_list_def (wordsTheory 108)
value word_to_hex_list_tm (wordsSyntax 125)
value word_to_hex_string_def (wordsTheory 109)
value word_to_hex_string_tm (wordsSyntax 126)
value word_to_oct_list_def (wordsTheory 110)
value word_to_oct_list_tm (wordsSyntax 127)
value word_to_oct_string_def (wordsTheory 111)
value word_to_oct_string_tm (wordsSyntax 128)
value WORD_w2w_EXTRACT (wordsTheory 437)
value WORD_w2w_OVER_ADD (wordsTheory 438)
value WORD_w2w_OVER_BITWISE (wordsTheory 439)
value WORD_w2w_OVER_MUL (wordsTheory 440)
value word_xnor_def (wordsTheory 112)
value word_xnor_n2w (wordsTheory 687)
value WORD_XNOR_NOT_XOR (wordsTheory 430)
value word_xnor_tm (wordsSyntax 129)
value word_xnor_v2w (bitstringTheory 123)
value WORD_XOR (wordsTheory 431)
value WORD_XOR_ASSOC (wordsTheory 432)
value WORD_XOR_CLAUSES (wordsTheory 433)
value WORD_XOR_COMM (wordsTheory 434)
value WORD_XOR_COMP (wordsTheory 435)
value word_xor_def (wordsTheory 113)
value word_xor_n2w (wordsTheory 688)
value word_xor_tm (wordsSyntax 130)
value word_xor_v2w (bitstringTheory 124)
value WORD_ZERO_LE (wordsTheory 436)
value WordEmpty_def (patricia_castsTheory 36)
value wordempty_tm (patricia_castsSyntax 11)
value wordlength (ieeeTheory 98)
HOL Lib.words2 (help/Docfiles/Lib.words2.adoc 0), value words2 (Lib 156)
value words_compset (wordsLib 4)
HOL wordsLib.WORDS_EMIT_RULE (help/Docfiles/wordsLib.WORDS_EMIT_RULE.adoc 0), value WORDS_EMIT_RULE (basis_emitTheory 35)
value words_grammars (wordsTheory 690)
value WORDSET_OF_PTREE_def (patricia_castsTheory 35)
value wordset_of_ptree_tm (patricia_castsSyntax 27)
structure wordsLib
structure wordsSyntax
structure wordsTheory
value work (OmegaMLShadow 31), value work (mlibOmega 37)
value wot_grammars (wotTheory 21)
structure wotTheory
HOL Feedback.wrap_exn (help/Docfiles/Feedback.wrap_exn.adoc 0), value wrap_exn (Feedback 9)
value wrap_exn_loc (Feedback 10)
value write (TypeBase 13), value write (mlibTptp 18)
value write_congs (DefnBase 24)
value write_conjecture (hhWriter 7)
value write_datatype_info (computeLib 43)
value WRITE_def (errorStateMonadTheory 20), value WRITE_def (state_transformerTheory 16)
value write_file (DiskThms 5)
value write_hh_thyl (hhWriter 6)
value write_raw (FinalTerm 96)
value write_stream (DiskThms 4)
value write_textfile (mlibUseful 195)
value write_thydep (hhWriter 8)
value write_tm (state_transformerSyntax 17)
value write_tyinfos (Datatype 42)
value X_BETA_CONV (jrhUtils 18)
HOL Thm_cont.X_CASES_THEN (help/Docfiles/Thm_cont.X_CASES_THEN.adoc 0), value X_CASES_THEN (Thm_cont 25)
HOL Thm_cont.X_CASES_THENL (help/Docfiles/Thm_cont.X_CASES_THENL.adoc 0), value X_CASES_THENL (Thm_cont 22)
HOL Tactic.X_CHOOSE_TAC (help/Docfiles/Tactic.X_CHOOSE_TAC.adoc 0), value X_CHOOSE_TAC (Q 40), value X_CHOOSE_TAC (Tactic 57)
HOL Thm_cont.X_CHOOSE_THEN (help/Docfiles/Thm_cont.X_CHOOSE_THEN.adoc 0), value X_CHOOSE_THEN (Q 41), value X_CHOOSE_THEN (Thm_cont 20)
HOL Conv.X_FUN_EQ_CONV (help/Docfiles/Conv.X_FUN_EQ_CONV.adoc 0), value X_FUN_EQ_CONV (Conv 80), value X_FUN_EQ_CONV (Q 43)
HOL Tactic.X_GEN_TAC (help/Docfiles/Tactic.X_GEN_TAC.adoc 0), value X_GEN_TAC (Q 42), value X_GEN_TAC (Tactic 25)
value X_HALF_HALF (util_probTheory 169)
value X_LE_DIV (arithmeticTheory 368)
value X_LE_MAX (util_probTheory 170)
value X_LE_X_EXP (arithmeticTheory 369)
HOL listLib.X_LIST_CONV (help/Docfiles/listLib.X_LIST_CONV.adoc 0)
value X_LT_DIV (arithmeticTheory 370)
value X_LT_EXP_X (arithmeticTheory 371)
value X_LT_EXP_X_IFF (arithmeticTheory 372)
value X_MOD_Y_EQ_X (arithmeticTheory 373)
HOL Conv.X_SKOLEM_CONV (help/Docfiles/Conv.X_SKOLEM_CONV.adoc 0), value X_SKOLEM_CONV (Conv 75), value X_SKOLEM_CONV (Q 44)
value xable_string (Systeml 7)
HOL TotalDefn.xDefine (help/Docfiles/TotalDefn.xDefine.adoc 0), HOL bossLib.xDefine (help/Docfiles/bossLib.xDefine.adoc 0), value xDefine (TotalDefn 32), value xDefine (bossLib 15)
value xDefineSchema (TotalDefn 47)
value xHol_coreln (CoIndDefLib 6), value xHol_coreln (bossLib 24)
value xHol_reln (IndDefLib 11), value xHol_reln (bossLib 23)
value Xi (UnicodeChars 28), value xi (UnicodeChars 15)
value xor (UnicodeChars 142)
value xor_def (HolSmtTheory 6)
type xstring (PPBackEnd 13)
value YICES_PROVE (HolSmtLib 12)
value YICES_TAC (HolSmtLib 8)
constructor Z3 (holyHammer 4)
value Z3_ORACLE_PROVE (HolSmtLib 13)
value Z3_ORACLE_TAC (HolSmtLib 9)
value Z3_PROVE (HolSmtLib 14)
value Z3_TAC (HolSmtLib 10)
constructor Zabs (compute_rules 4)
value ZAP_TAC (bossLib 114)
value ZBOT (ind_typeTheory 18)
value ZCONSTR (ind_typeTheory 19)
value ZCONSTR_ZBOT (ind_typeTheory 43)
HOL bossLib.zDefine (help/Docfiles/bossLib.zDefine.adoc 0), value zDefine (bossLib 14)
value zero (Arbintcore 7), value zero (Arbnumcore 5), value zero (Arbrat 8), value zero (mlibArbint 9), value zero (mlibArbnum 7), value zero (mlibOmegaint 7)
value ZERO_DEF (numTheory 8)
value ZERO_DIV (arithmeticTheory 374)
value ZERO_DIVIDES (dividesTheory 44)
value ZERO_eq_neg_ZERO_thm (inttoTheory 13)
value ZERO_EXP (arithmeticTheory 375)
value zero_extend_def (bitstringTheory 35)
value zero_extend_tm (bitstringSyntax 68)
value ZERO_IS_ZERO (floatTheory 136)
value ZERO_LE_INT_MAX (wordsTheory 441)
value ZERO_LESS_ADD (arithmeticTheory 376)
value ZERO_LESS_EQ (arithmeticTheory 377)
value ZERO_LESS_EQ_ONE_TIMES (Theorems 17)
value ZERO_LESS_EQ_T (Theorems 15)
value ZERO_LESS_EXP (arithmeticTheory 378)
value ZERO_LESS_MULT (arithmeticTheory 379)
value ZERO_LO_INT_MIN (wordsTheory 442)
value ZERO_LT_dimword (wordsTheory 446)
value ZERO_LT_EXP (arithmeticTheory 380)
value ZERO_LT_INT_MAX (wordsTheory 443)
value ZERO_LT_INT_MIN (wordsTheory 444)
value ZERO_LT_PRIMES (dividesTheory 45)
value ZERO_LT_TWOEXP (bitTheory 139)
value ZERO_LT_UINT_MAX (wordsTheory 445)
value ZERO_MOD (arithmeticTheory 381)
value ZERO_MULT (Theorems 7)
value ZERO_MULT_CONV (Thm_convs 35)
value ZERO_MULT_PLUS_CONV (Thm_convs 36)
value ZERO_NOT_NAN (floatTheory 137)
value ZERO_PLUS (Theorems 3)
value ZERO_PLUS_CONV (Thm_convs 37)
value zero_reading (mlibMeter 19)
value ZERO_REP_DEF (numTheory 9)
value ZERO_SHIFT (wordsTheory 447)
value zero_tm (intSyntax 6), value zero_tm (numSyntax 34), value zero_tm (realSyntax 6)
value zerosign (ieeeTheory 99)
value zeta (UnicodeChars 8)
HOL Lib.zip (help/Docfiles/Lib.zip.adoc 0), value ZIP (listTheory 47), value ZIP (rich_listTheory 523), value zip (Lib 157), value zip (mlibStream 29), value zip (mlibUseful 68)
value zip3 (wfrecUtils 4)
value ZIP_APPEND (rich_listTheory 338)
value ZIP_COUNT_LIST (rich_listTheory 339)
value ZIP_DROP (listTheory 394)
value ZIP_EQ_NIL (listTheory 395)
value ZIP_FIRSTN (rich_listTheory 524)
value ZIP_FIRSTN_LEQ (rich_listTheory 525)
value ZIP_GENLIST (listTheory 396), value ZIP_GENLIST (rich_listTheory 526)
value ZIP_MAP (listTheory 397)
value ZIP_SNOC (rich_listTheory 340)
value ZIP_TAKE (rich_listTheory 341)
value ZIP_TAKE_LEQ (rich_listTheory 342)
value zip_tm (listSyntax 42)
value ZIP_UNZIP (listTheory 398), value ZIP_UNZIP (rich_listTheory 527)
value zipwith (mlibStream 28), value zipwith (mlibUseful 67)
value zorns_lemma (set_relationTheory 148)
constructor Zrand (compute_rules 4)
constructor Zrator (compute_rules 4)
value ZRECSPACE_cases (ind_typeTheory 44)
value ZRECSPACE_def (ind_typeTheory 20)
value ZRECSPACE_ind (ind_typeTheory 45)
value ZRECSPACE_rules (ind_typeTheory 46)
value ZRECSPACE_strongind (ind_typeTheory 47)
value ZSAT_ORACLE (minisatProve 7)
value ZSAT_PROVE (minisatProve 6)
constructor Ztop (compute_rules 4)
