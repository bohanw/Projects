structure canonicalTheory :> canonicalTheory =
struct
  val _ = if !Globals.print_thy_loads then print "Loading canonicalTheory ... " else ()
  open Type Term Thm
  infixr -->

  fun C s t ty = mk_thy_const{Name=s,Thy=t,Ty=ty}
  fun T s t A = mk_thy_type{Tyop=s, Thy=t,Args=A}
  fun V s q = mk_var(s,q)
  val U     = mk_vartype
  (*  Parents *)
  local open quoteTheory semi_ringTheory
  in end;
  val _ = Theory.link_parents
          ("canonical",
          Arbnum.fromString "1488587575",
          Arbnum.fromString "867417")
          [("semi_ring",
           Arbnum.fromString "1488587562",
           Arbnum.fromString "534379"),
           ("quote",
           Arbnum.fromString "1488587554",
           Arbnum.fromString "569012")];
  val _ = Theory.incorporate_types "canonical"
       [("spolynom", 1), ("canonical_sum", 1)];

  val idvector = 
    let fun ID(thy,oth) = {Thy = thy, Other = oth}
    in Vector.fromList
  [ID("min", "fun"), ID("canonical", "canonical_sum"), ID("pair", "prod"),
   ID("list", "list"), ID("quote", "index"), ID("semi_ring", "semi_ring"),
   ID("num", "num"), ID("canonical", "spolynom"), ID("quote", "varmap"),
   ID("min", "bool"), ID("ind_type", "recspace"), ID("bool", "!"),
   ID("arithmetic", "+"), ID("pair", ","), ID("bool", "/\\"),
   ID("num", "0"), ID("min", "="), ID("min", "==>"), ID("bool", "?"),
   ID("min", "@"), ID("bool", "ARB"), ID("arithmetic", "BIT1"),
   ID("ind_type", "BOTTOM"), ID("bool", "COND"), ID("list", "CONS"),
   ID("ind_type", "CONSTR"), ID("canonical", "Cons_monom"),
   ID("canonical", "Cons_varlist"), ID("bool", "DATATYPE"),
   ID("ind_type", "FCONS"), ID("combin", "I"), ID("list", "NIL"),
   ID("arithmetic", "NUMERAL"), ID("canonical", "Nil_monom"),
   ID("canonical", "SPconst"), ID("canonical", "SPmult"),
   ID("canonical", "SPplus"), ID("canonical", "SPvar"), ID("num", "SUC"),
   ID("bool", "TYPE_DEFINITION"), ID("relation", "WF"),
   ID("relation", "WFREC"), ID("arithmetic", "ZERO"), ID("bool", "\\/"),
   ID("canonical", "canonical_sum_CASE"),
   ID("canonical", "canonical_sum_merge"),
   ID("canonical", "canonical_sum_merge_tupled"),
   ID("canonical", "canonical_sum_prod"),
   ID("canonical", "canonical_sum_scalar"),
   ID("canonical", "canonical_sum_scalar2"),
   ID("canonical", "canonical_sum_scalar3"),
   ID("canonical", "canonical_sum_simplify"),
   ID("canonical", "canonical_sum_size"), ID("prelim", "compare"),
   ID("prelim", "ordering"), ID("canonical", "ics_aux"),
   ID("quote", "index_compare"), ID("quote", "index_lt"),
   ID("quote", "index_size"), ID("canonical", "interp_cs"),
   ID("canonical", "interp_m"), ID("canonical", "interp_sp"),
   ID("canonical", "interp_vl"), ID("semi_ring", "is_semi_ring"),
   ID("canonical", "ivl_aux"), ID("prelim", "list_compare"),
   ID("prelim", "list_merge"), ID("list", "list_size"),
   ID("canonical", "monom_insert"), ID("canonical", "monom_insert_tupled"),
   ID("pair", "pair_CASE"), ID("semi_ring", "semi_ring_SR0"),
   ID("semi_ring", "semi_ring_SR1"), ID("semi_ring", "semi_ring_SRM"),
   ID("semi_ring", "semi_ring_SRP"), ID("canonical", "spolynom_CASE"),
   ID("canonical", "spolynom_normalize"),
   ID("canonical", "spolynom_simplify"), ID("canonical", "spolynom_size"),
   ID("canonical", "varlist_insert"),
   ID("canonical", "varlist_insert_tupled"), ID("quote", "varmap_find"),
   ID("bool", "~")]
  end;
  local open SharingTables
  in
  val tyvector = build_type_vector idvector
  [TYV "'a", TYOP [1, 0], TYOP [4], TYOP [3, 2], TYOP [2, 3, 1],
   TYOP [5, 0], TYOP [2, 5, 4], TYOP [0, 6, 1], TYOP [0, 1, 1],
   TYOP [0, 3, 8], TYOP [0, 5, 9], TYOP [6], TYOP [7, 0], TYOP [0, 12, 11],
   TYOP [0, 0, 11], TYOP [0, 14, 13], TYOP [0, 12, 1], TYOP [0, 5, 16],
   TYV "'b", TYOP [0, 12, 18], TYOP [0, 12, 19], TYOP [0, 20, 18],
   TYOP [0, 20, 21], TYOP [0, 0, 18], TYOP [0, 23, 22], TYOP [0, 2, 18],
   TYOP [0, 25, 24], TYOP [0, 12, 26], TYOP [2, 0, 4], TYOP [2, 5, 28],
   TYOP [0, 29, 1], TYOP [0, 0, 9], TYOP [0, 5, 31], TYOP [0, 3, 0],
   TYOP [0, 2, 33], TYOP [8, 0], TYOP [0, 35, 34], TYOP [0, 5, 36],
   TYOP [0, 35, 33], TYOP [0, 5, 38], TYOP [0, 12, 0], TYOP [0, 35, 40],
   TYOP [0, 5, 41], TYOP [0, 0, 33], TYOP [0, 35, 43], TYOP [0, 5, 44],
   TYOP [0, 1, 0], TYOP [0, 35, 46], TYOP [0, 5, 47], TYOP [0, 0, 46],
   TYOP [0, 35, 49], TYOP [0, 5, 50], TYOP [0, 1, 11], TYOP [0, 14, 52],
   TYOP [0, 5, 8], TYOP [0, 0, 8], TYOP [0, 5, 55], TYOP [0, 1, 8],
   TYOP [0, 5, 57], TYOP [2, 1, 1], TYOP [2, 5, 59], TYOP [0, 60, 1],
   TYOP [0, 1, 18], TYOP [0, 3, 62], TYOP [0, 63, 18], TYOP [0, 0, 63],
   TYOP [0, 65, 64], TYOP [0, 18, 66], TYOP [0, 1, 67], TYOP [0, 2, 12],
   TYOP [0, 12, 12], TYOP [0, 12, 70], TYOP [0, 0, 12], TYOP [9],
   TYOP [2, 0, 3], TYOP [10, 74], TYOP [0, 75, 73], TYOP [2, 2, 0],
   TYOP [10, 77], TYOP [0, 78, 73], TYOP [0, 1, 73], TYOP [0, 3, 80],
   TYOP [0, 0, 81], TYOP [0, 5, 82], TYOP [0, 1, 80], TYOP [0, 5, 84],
   TYOP [0, 5, 81], TYOP [0, 12, 73], TYOP [0, 29, 73], TYOP [0, 29, 88],
   TYOP [0, 60, 73], TYOP [0, 60, 90], TYOP [0, 6, 73], TYOP [0, 6, 92],
   TYOP [0, 9, 73], TYOP [0, 31, 94], TYOP [0, 1, 95], TYOP [0, 18, 18],
   TYOP [0, 1, 97], TYOP [0, 3, 98], TYOP [0, 0, 99], TYOP [0, 18, 97],
   TYOP [0, 12, 101], TYOP [0, 12, 102], TYOP [0, 1, 75], TYOP [0, 12, 78],
   TYOP [0, 71, 73], TYOP [0, 71, 106], TYOP [0, 72, 107],
   TYOP [0, 69, 108], TYOP [0, 0, 73], TYOP [0, 110, 73], TYOP [0, 18, 73],
   TYOP [0, 112, 73], TYOP [0, 80, 73], TYOP [0, 23, 73],
   TYOP [0, 115, 73], TYOP [0, 65, 73], TYOP [0, 117, 73],
   TYOP [0, 100, 73], TYOP [0, 119, 73], TYOP [0, 14, 73],
   TYOP [0, 121, 73], TYOP [0, 114, 73], TYOP [0, 25, 73],
   TYOP [0, 124, 73], TYOP [0, 63, 73], TYOP [0, 126, 73],
   TYOP [0, 99, 73], TYOP [0, 128, 73], TYOP [0, 76, 73],
   TYOP [0, 130, 73], TYOP [0, 79, 73], TYOP [0, 132, 73],
   TYOP [0, 83, 73], TYOP [0, 134, 73], TYOP [0, 85, 73],
   TYOP [0, 136, 73], TYOP [0, 86, 73], TYOP [0, 138, 73],
   TYOP [0, 87, 73], TYOP [0, 140, 73], TYOP [0, 20, 73],
   TYOP [0, 142, 73], TYOP [0, 103, 73], TYOP [0, 144, 73],
   TYOP [0, 2, 73], TYOP [0, 146, 73], TYOP [0, 3, 73], TYOP [0, 148, 73],
   TYOP [0, 5, 73], TYOP [0, 150, 73], TYOP [0, 35, 73], TYOP [0, 152, 73],
   TYOP [0, 11, 11], TYOP [0, 11, 154], TYOP [0, 3, 74], TYOP [0, 0, 156],
   TYOP [0, 4, 28], TYOP [0, 0, 158], TYOP [0, 1, 59], TYOP [0, 1, 160],
   TYOP [0, 0, 77], TYOP [0, 2, 162], TYOP [0, 1, 4], TYOP [0, 3, 164],
   TYOP [0, 28, 29], TYOP [0, 5, 166], TYOP [0, 59, 60], TYOP [0, 5, 168],
   TYOP [0, 4, 6], TYOP [0, 5, 170], TYOP [0, 73, 73], TYOP [0, 73, 172],
   TYOP [0, 0, 110], TYOP [0, 18, 112], TYOP [0, 30, 73],
   TYOP [0, 30, 176], TYOP [0, 61, 73], TYOP [0, 61, 178], TYOP [0, 7, 73],
   TYOP [0, 7, 180], TYOP [0, 2, 146], TYOP [0, 3, 148], TYOP [0, 11, 73],
   TYOP [0, 11, 184], TYOP [0, 75, 76], TYOP [0, 78, 79], TYOP [0, 12, 87],
   TYOP [0, 62, 73], TYOP [0, 189, 73], TYOP [0, 104, 73],
   TYOP [0, 191, 73], TYOP [0, 19, 73], TYOP [0, 193, 73],
   TYOP [0, 105, 73], TYOP [0, 195, 73], TYOP [0, 89, 73],
   TYOP [0, 197, 89], TYOP [0, 91, 73], TYOP [0, 199, 91],
   TYOP [0, 93, 73], TYOP [0, 201, 93], TYOP [0, 73, 57], TYOP [0, 3, 3],
   TYOP [0, 2, 204], TYOP [0, 11, 75], TYOP [0, 206, 75],
   TYOP [0, 74, 207], TYOP [0, 11, 208], TYOP [0, 11, 78],
   TYOP [0, 210, 78], TYOP [0, 77, 211], TYOP [0, 11, 212],
   TYOP [0, 206, 206], TYOP [0, 75, 214], TYOP [0, 210, 210],
   TYOP [0, 78, 216], TYOP [0, 76, 191], TYOP [0, 79, 195],
   TYOP [0, 30, 30], TYOP [0, 220, 30], TYOP [0, 89, 221],
   TYOP [0, 61, 61], TYOP [0, 223, 61], TYOP [0, 91, 224], TYOP [0, 7, 7],
   TYOP [0, 226, 7], TYOP [0, 93, 227], TYOP [0, 9, 1], TYOP [0, 31, 229],
   TYOP [0, 1, 230], TYOP [0, 1, 231], TYOP [0, 1, 57], TYOP [54],
   TYOP [0, 234, 233], TYOP [0, 2, 234], TYOP [0, 2, 236], TYOP [0, 2, 11],
   TYOP [0, 3, 234], TYOP [0, 3, 239], TYOP [0, 237, 240],
   TYOP [0, 3, 204], TYOP [0, 182, 242], TYOP [0, 3, 11],
   TYOP [0, 238, 244], TYOP [0, 4, 1], TYOP [0, 0, 246], TYOP [0, 247, 1],
   TYOP [0, 28, 248], TYOP [0, 57, 1], TYOP [0, 59, 250], TYOP [0, 4, 229],
   TYOP [0, 28, 1], TYOP [0, 5, 253], TYOP [0, 254, 1], TYOP [0, 29, 255],
   TYOP [0, 59, 1], TYOP [0, 5, 257], TYOP [0, 258, 1], TYOP [0, 60, 259],
   TYOP [0, 5, 246], TYOP [0, 261, 1], TYOP [0, 6, 262], TYOP [0, 5, 0],
   TYOP [0, 0, 0], TYOP [0, 0, 265], TYOP [0, 5, 266], TYOP [0, 35, 0],
   TYOP [0, 2, 268]]
  end
  val _ = Theory.incorporate_consts "canonical" tyvector
     [("varlist_insert_tupled", 7), ("varlist_insert", 10),
      ("spolynom_size", 15), ("spolynom_simplify", 17),
      ("spolynom_normalize", 17), ("spolynom_CASE", 27),
      ("monom_insert_tupled", 30), ("monom_insert", 32), ("ivl_aux", 37),
      ("interp_vl", 39), ("interp_sp", 42), ("interp_m", 45),
      ("interp_cs", 48), ("ics_aux", 51), ("canonical_sum_size", 53),
      ("canonical_sum_simplify", 54), ("canonical_sum_scalar3", 32),
      ("canonical_sum_scalar2", 10), ("canonical_sum_scalar", 56),
      ("canonical_sum_prod", 58), ("canonical_sum_merge_tupled", 61),
      ("canonical_sum_merge", 58), ("canonical_sum_CASE", 68),
      ("SPvar", 69), ("SPplus", 71), ("SPmult", 71), ("SPconst", 72),
      ("Nil_monom", 1), ("Cons_varlist", 9), ("Cons_monom", 31)];

  local open SharingTables
  in
  val tmvector = build_term_vector idvector tyvector
  [TMV("'canonical_sum'", 76), TMV("'spolynom'", 79), TMV("M", 1),
   TMV("M", 12), TMV("M'", 1), TMV("M'", 12), TMV("P", 80), TMV("P", 83),
   TMV("P", 85), TMV("P", 86), TMV("P", 87), TMV("R", 89), TMV("R", 91),
   TMV("R", 93), TMV("a", 0), TMV("a", 2), TMV("a", 29), TMV("a", 60),
   TMV("a", 6), TMV("a'", 0), TMV("a'", 2), TMV("a0", 0), TMV("a0", 3),
   TMV("a0", 78), TMV("a0", 12), TMV("a0'", 0), TMV("a0'", 3),
   TMV("a0'", 75), TMV("a0'", 78), TMV("a0'", 12), TMV("a1", 1),
   TMV("a1", 3), TMV("a1", 75), TMV("a1", 78), TMV("a1", 12),
   TMV("a1'", 1), TMV("a1'", 3), TMV("a1'", 12), TMV("a2", 1),
   TMV("a2", 75), TMV("a2'", 1), TMV("c", 0), TMV("c", 1), TMV("c0", 0),
   TMV("c1", 0), TMV("c1'", 0), TMV("c2", 0), TMV("canonical_sum", 96),
   TMV("canonical_sum_merge_tupled", 61), TMV("cc", 1), TMV("f", 65),
   TMV("f", 14), TMV("f", 25), TMV("f'", 65), TMV("f'", 25), TMV("f0", 18),
   TMV("f0", 25), TMV("f1", 23), TMV("f1", 100), TMV("f1", 63),
   TMV("f1'", 23), TMV("f1'", 63), TMV("f2", 99), TMV("f2", 20),
   TMV("f2", 103), TMV("f2'", 20), TMV("f3", 20), TMV("f3", 103),
   TMV("f3'", 20), TMV("fn", 62), TMV("fn", 19), TMV("i", 2), TMV("l", 3),
   TMV("l", 12), TMV("l0", 3), TMV("l1", 3), TMV("l1'", 3), TMV("l1''", 3),
   TMV("l1'''", 3), TMV("l2", 3), TMV("l2'", 3),
   TMV("monom_insert_tupled", 30), TMV("n", 11), TMV("p", 12),
   TMV("p1", 12), TMV("p2", 12), TMV("r", 12), TMV("rep", 104),
   TMV("rep", 105), TMV("s", 1), TMV("s", 12), TMV("s0", 12), TMV("s1", 1),
   TMV("s2", 1), TMV("spolynom", 109), TMV("sr", 5), TMV("ss", 12),
   TMV("t", 1), TMV("t", 3), TMV("t'", 3), TMV("t1", 1), TMV("t1'", 1),
   TMV("t1''", 1), TMV("t1'''", 1), TMV("t2", 1), TMV("t2'", 1),
   TMV("v", 18), TMV("v", 3), TMV("v", 5), TMV("v'", 18), TMV("v1", 0),
   TMV("v1", 1), TMV("v1", 3), TMV("v1", 28), TMV("v1", 59), TMV("v1", 4),
   TMV("v2", 1), TMV("v2", 3), TMV("v3", 1), TMV("v3", 4), TMV("v4", 0),
   TMV("v5", 1), TMV("v5", 3), TMV("v6", 1), TMV("v7", 3), TMV("v8", 1),
   TMV("varlist_insert_tupled", 7), TMV("vm", 35), TMV("x", 0),
   TMV("x", 1), TMV("x", 2), TMV("x", 3), TMV("x", 5), TMV("x", 12),
   TMV("x'", 2), TMV("x1", 0), TMV("x1", 1), TMV("x1", 3), TMV("x2", 1),
   TMV("x2", 3), TMV("x3", 1), TMV("y", 1), TMV("y", 3), TMC(11, 111),
   TMC(11, 113), TMC(11, 114), TMC(11, 116), TMC(11, 118), TMC(11, 120),
   TMC(11, 122), TMC(11, 123), TMC(11, 125), TMC(11, 127), TMC(11, 129),
   TMC(11, 131), TMC(11, 133), TMC(11, 135), TMC(11, 137), TMC(11, 139),
   TMC(11, 141), TMC(11, 143), TMC(11, 145), TMC(11, 147), TMC(11, 149),
   TMC(11, 130), TMC(11, 132), TMC(11, 151), TMC(11, 140), TMC(11, 153),
   TMC(12, 155), TMC(13, 157), TMC(13, 159), TMC(13, 161), TMC(13, 163),
   TMC(13, 165), TMC(13, 167), TMC(13, 169), TMC(13, 171), TMC(14, 173),
   TMC(15, 11), TMC(16, 174), TMC(16, 175), TMC(16, 173), TMC(16, 84),
   TMC(16, 177), TMC(16, 179), TMC(16, 181), TMC(16, 182), TMC(16, 183),
   TMC(16, 185), TMC(16, 186), TMC(16, 187), TMC(16, 188), TMC(17, 173),
   TMC(18, 111), TMC(18, 114), TMC(18, 190), TMC(18, 192), TMC(18, 194),
   TMC(18, 196), TMC(18, 147), TMC(18, 149), TMC(18, 130), TMC(18, 132),
   TMC(18, 140), TMC(19, 198), TMC(19, 200), TMC(19, 202), TMC(20, 0),
   TMC(20, 2), TMC(20, 3), TMC(21, 154), TMC(22, 75), TMC(22, 78),
   TMC(23, 203), TMC(24, 205), TMC(25, 209), TMC(25, 213), TMC(26, 31),
   TMC(27, 9), TMC(28, 172), TMC(29, 215), TMC(29, 217), TMC(30, 8),
   TMC(31, 3), TMC(32, 154), TMC(33, 1), TMC(34, 72), TMC(35, 71),
   TMC(36, 71), TMC(37, 69), TMC(38, 154), TMC(39, 218), TMC(39, 219),
   TMC(40, 197), TMC(40, 199), TMC(40, 201), TMC(41, 222), TMC(41, 225),
   TMC(41, 228), TMC(42, 11), TMC(43, 173), TMC(44, 68), TMC(44, 232),
   TMC(45, 58), TMC(46, 61), TMC(47, 58), TMC(48, 56), TMC(49, 10),
   TMC(50, 32), TMC(51, 54), TMC(52, 53), TMC(53, 235), TMC(55, 51),
   TMC(56, 237), TMC(57, 182), TMC(58, 238), TMC(59, 48), TMC(60, 45),
   TMC(61, 42), TMC(62, 39), TMC(63, 150), TMC(64, 37), TMC(65, 241),
   TMC(66, 243), TMC(67, 245), TMC(68, 32), TMC(69, 30), TMC(70, 249),
   TMC(70, 251), TMC(70, 252), TMC(70, 256), TMC(70, 260), TMC(70, 263),
   TMC(71, 264), TMC(72, 264), TMC(73, 267), TMC(74, 267), TMC(75, 27),
   TMC(76, 17), TMC(77, 17), TMC(78, 15), TMC(79, 10), TMC(80, 7),
   TMC(81, 269), TMC(82, 172)]
  end
  local
  val DT = Thm.disk_thm val read = Term.read_raw tmvector
  in
  fun op canonical_sum_TY_DEF x = x
    val op canonical_sum_TY_DEF =
    DT(((("canonical",0),
        [("bool",[14,25,26,53,132,133,138])]),["DISK_THM"]),
       [read"%197%87%232%27%154%0%193%164%27%193%241%190$0@%216%179@%170%208@%210@@%82%212|@@@%241%194%21%201%31%202%39%178%190$3@%21%31%39%216%231%179@@%170$2@$1@@%221$0@%82%212|@@|||$2@$1@$0@@@$4$0@@|@|@|@@%201%22%202%32%178%190$2@%22%32%216%231%231%179@@@%170%208@$1@@%221$0@%82%212|@@||$1@$0@@@$3$0@@|@|@@@@$1$0@@|@@$0$1@@|@|@$0@|@"])
  fun op canonical_sum_case_def x = x
    val op canonical_sum_case_def =
    DT(((("canonical",8),
        [("bool",[14,25,26,31,53,63,132,133,138,181]),
         ("canonical",[1,2,3,4,5,6,7]),("ind_type",[33,34]),
         ("pair",[8,9])]),["DISK_THM"]),
       [read"%178%144%106%147%50%152%59%181%242%226@$2@$1@$0@@$2@|@|@|@@%178%143%21%163%31%145%38%144%106%147%50%152%59%181%242%218$5@$4@$3@@$2@$1@$0@@$1$5@$4@$3@@|@|@|@|@|@|@@%163%22%145%30%144%106%147%50%152%59%181%242%219$4@$3@@$2@$1@$0@@$0$4@$3@@|@|@|@|@|@@@"])
  fun op canonical_sum_size_def x = x
    val op canonical_sum_size_def =
    DT(((("canonical",9),
        [("bool",[14,25,26,31,53,63,132,133,138,181]),
         ("canonical",[1,2,3,4,5,6,7]),("ind_type",[33,34]),
         ("pair",[8,9])]),["DISK_THM"]),
       [read"%178%149%51%189%251$0@%226@@%179@|@@%178%149%51%143%21%163%31%145%38%189%251$3@%218$2@$1@$0@@@%169%225%211%240@@@%169$3$2@@%169%265%256@$1@@%251$3@$0@@@@@|@|@|@|@@%149%51%163%22%145%30%189%251$2@%219$1@$0@@@%169%225%211%240@@@%169%265%256@$1@@%251$2@$0@@@@|@|@|@@@"])
  fun op canonical_sum_merge_tupled_primitive_def x = x
    val op canonical_sum_merge_tupled_primitive_def =
    DT(((("canonical",17),[]),[]),
       [read"%185%245@%238%206%12%178%235$0@@%178%163%79%143%46%145%104%145%100%163%75%143%44%166%95$7%176$0@%172%218$1@$2@$3@@$4@@@%176$0@%172%218$1@$2@$3@@%218$5@$6@$4@@@@|@|@|@|@|@|@|@@%178%163%75%143%44%145%104%163%79%143%46%145%100%166%95$7%176$0@%172$1@%218$2@$3@$4@@@@%176$0@%172%218$5@$6@$1@@%218$2@$3@$4@@@@|@|@|@|@|@|@|@@%178%163%79%143%46%163%75%143%44%145%104%145%100%166%95$7%176$0@%172$1@$2@@@%176$0@%172%218$3@$4@$1@@%218$5@$6@$2@@@@|@|@|@|@|@|@|@@%178%163%79%145%104%145%100%163%75%143%44%166%95$6%176$0@%172%218$1@$2@$3@@$4@@@%176$0@%172%218$1@$2@$3@@%219$5@$4@@@@|@|@|@|@|@|@@%178%163%75%143%44%145%104%163%79%145%100%166%95$6%176$0@%172$1@%219$2@$3@@@@%176$0@%172%218$4@$5@$1@@%219$2@$3@@@@|@|@|@|@|@|@@%178%163%79%163%75%143%44%145%104%145%100%166%95$6%176$0@%172$1@$2@@@%176$0@%172%218$3@$4@$1@@%219$5@$2@@@@|@|@|@|@|@|@@%178%163%79%143%46%145%104%145%100%163%75%166%95$6%176$0@%172%219$1@$2@@$3@@@%176$0@%172%219$1@$2@@%218$4@$5@$3@@@@|@|@|@|@|@|@@%178%163%75%145%104%163%79%143%46%145%100%166%95$6%176$0@%172$1@%218$2@$3@$4@@@@%176$0@%172%219$5@$1@@%218$2@$3@$4@@@@|@|@|@|@|@|@@%178%163%79%143%46%163%75%145%104%145%100%166%95$6%176$0@%172$1@$2@@@%176$0@%172%219$3@$1@@%218$4@$5@$2@@@@|@|@|@|@|@|@@%178%163%79%163%75%145%104%145%100%166%95$5%176$0@%172$1@$2@@@%176$0@%172%219$3@$1@@%219$4@$2@@@@|@|@|@|@|@@%178%163%75%145%104%163%79%145%100%166%95$5%176$0@%172$1@%219$2@$3@@@@%176$0@%172%219$4@$1@@%219$2@$3@@@@|@|@|@|@|@@%163%79%145%104%145%100%163%75%166%95$5%176$0@%172%219$1@$2@@$3@@@%176$0@%172%219$1@$2@@%219$4@$3@@@@|@|@|@|@|@@@@@@@@@@@@@|@@%48%17%272$0@%95%114%269$0@%92%118%243$0@%223$1@@%46%79%104%243$4@%223%218$2@$1@$0@@@%44%75%100%223%252%263%254@$1@$4@@%218$2@$1@$11%176$9@%172$0@%218$5@$4@$3@@@@@@%218%277$9@$2@$5@@$1@$11%176$9@%172$0@$3@@@@@%218$5@$4@$11%176$9@%172%218$2@$1@$0@@$3@@@@@@|||@%77%102%223%252%263%254@$1@$3@@%219$1@$10%176$8@%172$0@%218$4@$3@$2@@@@@@%218%277$8@%275$8@@$4@@$1@$10%176$8@%172$0@$2@@@@@%218$4@$3@$10%176$8@%172%219$1@$0@@$2@@@@@@||@|||@%80%105%243$3@%223%219$1@$0@@@%45%76%101%223%252%263%254@$1@$4@@%218$2@$1@$10%176$8@%172$0@%219$4@$3@@@@@@%218%277$8@$2@%275$8@@@$1@$10%176$8@%172$0@$3@@@@@%219$4@$10%176$8@%172%218$2@$1@$0@@$3@@@@@@|||@%78%103%223%252%263%254@$1@$3@@%219$1@$9%176$7@%172$0@%219$3@$2@@@@@@%218%277$7@%275$7@@%275$7@@@$1@$9%176$7@%172$0@$2@@@@@%219$3@$9%176$7@%172%219$1@$0@@$2@@@@@@||@||@||@||@||@@"])
  fun op canonical_sum_merge_curried_def x = x
    val op canonical_sum_merge_curried_def =
    DT(((("canonical",18),[]),[]),
       [read"%166%132%145%136%145%138%183%244$2@$1@$0@@%245%176$2@%172$1@$0@@@@|@|@|@"])
  fun op monom_insert_tupled_primitive_def x = x
    val op monom_insert_tupled_primitive_def =
    DT(((("canonical",21),[]),[]),
       [read"%184%267@%237%205%11%178%234$0@@%178%163%79%143%46%145%104%163%75%143%44%166%95$6%175$0@%171$1@%174$2@$3@@@@%175$0@%171$1@%174$2@%218$4@$5@$3@@@@@|@|@|@|@|@|@@%163%79%145%104%163%75%143%44%166%95$5%175$0@%171$1@%174$2@$3@@@@%175$0@%171$1@%174$2@%219$4@$3@@@@@|@|@|@|@|@@@|@@%81%16%271$0@%95%113%268$0@%44%119%270$0@%75%121%243$0@%223%218$3@$1@%226@@@%46%79%104%223%252%263%254@$4@$1@@%218$6@$4@%218$2@$1@$0@@@%218%277$8@$6@$2@@$4@$0@@%218$2@$1@$10%175$8@%171$6@%174$4@$0@@@@@@@|||@%80%105%223%252%263%254@$3@$1@@%218$5@$3@%219$1@$0@@@%218%277$7@$5@%275$7@@@$3@$0@@%219$1@$9%175$7@%171$5@%174$3@$0@@@@@@@||@||@||@||@||@@"])
  fun op monom_insert_curried_def x = x
    val op monom_insert_curried_def =
    DT(((("canonical",22),[]),[]),
       [read"%166%132%143%135%163%139%145%140%183%266$3@$2@$1@$0@@%267%175$3@%171$2@%174$1@$0@@@@@|@|@|@|@"])
  fun op varlist_insert_tupled_primitive_def x = x
    val op varlist_insert_tupled_primitive_def =
    DT(((("canonical",25),[]),[]),
       [read"%186%283@%239%207%13%178%236$0@@%178%163%79%143%46%145%104%163%75%166%95$5%177$0@%174$1@$2@@@%177$0@%174$1@%218$3@$4@$2@@@@|@|@|@|@|@@%163%79%145%104%163%75%166%95$4%177$0@%174$1@$2@@@%177$0@%174$1@%219$3@$2@@@@|@|@|@|@@@|@@%126%18%273$0@%95%115%270$0@%75%118%243$0@%223%219$1@%226@@@%46%79%104%223%252%263%254@$4@$1@@%219$4@%218$2@$1@$0@@@%218%277$6@%275$6@@$2@@$4@$0@@%218$2@$1@$8%177$6@%174$4@$0@@@@@@|||@%80%105%223%252%263%254@$3@$1@@%219$3@%219$1@$0@@@%218%277$5@%275$5@@%275$5@@@$3@$0@@%219$1@$7%177$5@%174$3@$0@@@@@@||@||@||@||@@"])
  fun op varlist_insert_curried_def x = x
    val op varlist_insert_curried_def =
    DT(((("canonical",26),[]),[]),
       [read"%166%132%163%137%145%138%183%282$2@$1@$0@@%283%177$2@%174$1@$0@@@@|@|@|@"])
  fun op canonical_sum_scalar_def x = x
    val op canonical_sum_scalar_def =
    DT(((("canonical",29),
        [("bool",[14,25,26,31,53,63,132,133,138,181]),
         ("canonical",[1,2,3,4,5,6,7]),("ind_type",[33,34]),
         ("pair",[8,9])]),["DISK_THM"]),
       [read"%178%166%95%143%43%143%41%163%72%145%97%183%247$4@$3@%218$2@$1@$0@@@%218%276$4@$3@$2@@$1@%247$4@$3@$0@@@|@|@|@|@|@@%178%166%95%143%43%163%72%145%97%183%247$3@$2@%219$1@$0@@@%218$2@$1@%247$3@$2@$0@@@|@|@|@|@@%166%95%143%43%183%247$1@$0@%226@@%226@|@|@@@"])
  fun op canonical_sum_scalar2_def x = x
    val op canonical_sum_scalar2_def =
    DT(((("canonical",30),
        [("bool",[14,25,26,31,53,63,132,133,138,181]),
         ("canonical",[1,2,3,4,5,6,7]),("ind_type",[33,34]),
         ("pair",[8,9])]),["DISK_THM"]),
       [read"%178%166%95%163%74%143%41%163%72%145%97%183%248$4@$3@%218$2@$1@$0@@@%266$4@$2@%264%255@$3@$1@@%248$4@$3@$0@@@|@|@|@|@|@@%178%166%95%163%74%163%72%145%97%183%248$3@$2@%219$1@$0@@@%282$3@%264%255@$2@$1@@%248$3@$2@$0@@@|@|@|@|@@%166%95%163%74%183%248$1@$0@%226@@%226@|@|@@@"])
  fun op canonical_sum_scalar3_def x = x
    val op canonical_sum_scalar3_def =
    DT(((("canonical",31),
        [("bool",[14,25,26,31,53,63,132,133,138,181]),
         ("canonical",[1,2,3,4,5,6,7]),("ind_type",[33,34]),
         ("pair",[8,9])]),["DISK_THM"]),
       [read"%178%166%95%143%43%163%74%143%41%163%72%145%97%183%249$5@$4@$3@%218$2@$1@$0@@@%266$5@%276$5@$4@$2@@%264%255@$3@$1@@%249$5@$4@$3@$0@@@|@|@|@|@|@|@@%178%166%95%143%43%163%74%163%72%145%97%183%249$4@$3@$2@%219$1@$0@@@%266$4@$3@%264%255@$2@$1@@%249$4@$3@$2@$0@@@|@|@|@|@|@@%166%95%143%43%163%74%183%249$2@$1@$0@%226@@%226@|@|@|@@@"])
  fun op canonical_sum_prod_def x = x
    val op canonical_sum_prod_def =
    DT(((("canonical",32),
        [("bool",[14,25,26,31,53,63,132,133,138,181]),
         ("canonical",[1,2,3,4,5,6,7]),("ind_type",[33,34]),
         ("pair",[8,9])]),["DISK_THM"]),
       [read"%178%166%95%143%44%163%75%145%100%145%93%183%246$4@%218$3@$2@$1@@$0@@%244$4@%249$4@$3@$2@$0@@%246$4@$1@$0@@@|@|@|@|@|@@%178%166%95%163%75%145%100%145%93%183%246$3@%219$2@$1@@$0@@%244$3@%248$3@$2@$0@@%246$3@$1@$0@@@|@|@|@|@@%166%95%145%93%183%246$1@%226@$0@@%226@|@|@@@"])
  fun op canonical_sum_simplify_def x = x
    val op canonical_sum_simplify_def =
    DT(((("canonical",33),
        [("bool",[14,25,26,31,53,63,132,133,138,181]),
         ("canonical",[1,2,3,4,5,6,7]),("ind_type",[33,34]),
         ("pair",[8,9])]),["DISK_THM"]),
       [read"%178%166%95%143%41%163%72%145%97%183%250$3@%218$2@$1@$0@@@%214%180$2@%274$3@@@%250$3@$0@@%214%180$2@%275$3@@@%219$1@%250$3@$0@@@%218$2@$1@%250$3@$0@@@@@|@|@|@|@@%178%166%95%163%72%145%97%183%250$2@%219$1@$0@@@%219$1@%250$2@$0@@@|@|@|@@%166%95%183%250$0@%226@@%226@|@@@"])
  fun op ivl_aux_def x = x
    val op ivl_aux_def =
    DT(((("canonical",34),[("list",[13])]),["DISK_THM"]),
       [read"%178%166%95%168%127%162%130%180%262$2@$1@$0@%224@@%284$0@$1@@|@|@|@@%166%95%168%127%162%130%162%134%163%99%180%262$4@$3@$2@%215$1@$0@@@%276$4@%284$2@$3@@%262$4@$3@$1@$0@@@|@|@|@|@|@@"])
  fun op interp_vl_def x = x
    val op interp_vl_def =
    DT(((("canonical",35),[("list",[13])]),["DISK_THM"]),
       [read"%178%166%95%168%127%180%260$1@$0@%224@@%275$1@@|@|@@%166%95%168%127%162%130%163%98%180%260$3@$2@%215$1@$0@@@%262$3@$2@$1@$0@@|@|@|@|@@"])
  fun op interp_m_def x = x
    val op interp_m_def =
    DT(((("canonical",36),[("list",[13])]),["DISK_THM"]),
       [read"%178%166%95%168%127%143%41%180%258$2@$1@$0@%224@@$0@|@|@|@@%166%95%168%127%143%41%162%130%163%98%180%258$4@$3@$2@%215$1@$0@@@%276$4@$2@%262$4@$3@$1@$0@@@|@|@|@|@|@@"])
  fun op ics_aux_def x = x
    val op ics_aux_def =
    DT(((("canonical",37),
        [("bool",[14,25,26,31,53,63,132,133,138,181]),
         ("canonical",[1,2,3,4,5,6,7]),("ind_type",[33,34]),
         ("pair",[8,9])]),["DISK_THM"]),
       [read"%178%166%95%168%127%143%14%180%253$2@$1@$0@%226@@$0@|@|@|@@%178%166%95%168%127%143%14%163%72%145%97%180%253$4@$3@$2@%219$1@$0@@@%277$4@$2@%253$4@$3@%260$4@$3@$1@@$0@@@|@|@|@|@|@@%166%95%168%127%143%14%143%41%163%72%145%97%180%253$5@$4@$3@%218$2@$1@$0@@@%277$5@$3@%253$5@$4@%258$5@$4@$2@$1@@$0@@@|@|@|@|@|@|@@@"])
  fun op interp_cs_def x = x
    val op interp_cs_def =
    DT(((("canonical",38),
        [("bool",[14,25,26,31,53,63,132,133,138,181]),
         ("canonical",[1,2,3,4,5,6,7]),("ind_type",[33,34]),
         ("pair",[8,9])]),["DISK_THM"]),
       [read"%178%166%95%168%127%180%257$1@$0@%226@@%274$1@@|@|@@%178%166%95%168%127%163%72%145%97%180%257$3@$2@%219$1@$0@@@%253$3@$2@%260$3@$2@$1@@$0@@|@|@|@|@@%166%95%168%127%143%41%163%72%145%97%180%257$4@$3@%218$2@$1@$0@@@%253$4@$3@%258$4@$3@$2@$1@@$0@@|@|@|@|@|@@@"])
  fun op spolynom_TY_DEF x = x
    val op spolynom_TY_DEF =
    DT(((("canonical",51),
        [("bool",[14,25,26,53,132,133,138])]),["DISK_THM"]),
       [read"%199%88%233%28%155%1%193%165%28%193%241%200%15%191$1@%15%217%179@%173$0@%208@@%82%213|@|$0@@|@@%241%194%14%191$1@%14%217%231%179@@%173%209@$0@@%82%213|@|$0@@|@@%241%203%23%203%33%178%191$2@%23%33%217%231%231%179@@@%173%209@%208@@%222$1@%222$0@%82%213|@@@||$1@$0@@@%178$3$1@@$3$0@@@|@|@@%203%23%203%33%178%191$2@%23%33%217%231%231%231%179@@@@%173%209@%208@@%222$1@%222$0@%82%213|@@@||$1@$0@@@%178$3$1@@$3$0@@@|@|@@@@@$1$0@@|@@$0$1@@|@|@$0@|@"])
  fun op spolynom_case_def x = x
    val op spolynom_case_def =
    DT(((("canonical",61),
        [("bool",[14,25,26,31,53,63,132,133,138,181]),
         ("canonical",[52,53,54,55,56,57,58,59,60]),("ind_type",[33,34]),
         ("pair",[8,9])]),["DISK_THM"]),
       [read"%178%162%15%151%52%146%57%160%63%160%66%181%278%230$4@@$3@$2@$1@$0@@$3$4@@|@|@|@|@|@@%178%143%14%151%52%146%57%160%63%160%66%181%278%227$4@@$3@$2@$1@$0@@$2$4@@|@|@|@|@|@@%178%167%24%167%34%151%52%146%57%160%63%160%66%181%278%229$5@$4@@$3@$2@$1@$0@@$1$5@$4@@|@|@|@|@|@|@@%167%24%167%34%151%52%146%57%160%63%160%66%181%278%228$5@$4@@$3@$2@$1@$0@@$0$5@$4@@|@|@|@|@|@|@@@@"])
  fun op spolynom_size_def x = x
    val op spolynom_size_def =
    DT(((("canonical",62),
        [("bool",[14,25,26,31,53,63,132,133,138,181]),
         ("canonical",[52,53,54,55,56,57,58,59,60]),("ind_type",[33,34]),
         ("pair",[8,9])]),["DISK_THM"]),
       [read"%178%149%51%162%15%189%281$1@%230$0@@@%169%225%211%240@@@%256$0@@@|@|@@%178%149%51%143%14%189%281$1@%227$0@@@%169%225%211%240@@@$1$0@@@|@|@@%178%149%51%167%24%167%34%189%281$2@%229$1@$0@@@%169%225%211%240@@@%169%281$2@$1@@%281$2@$0@@@@|@|@|@@%149%51%167%24%167%34%189%281$2@%228$1@$0@@@%169%225%211%240@@@%169%281$2@$1@@%281$2@$0@@@@|@|@|@@@@"])
  fun op spolynom_normalize_def x = x
    val op spolynom_normalize_def =
    DT(((("canonical",70),
        [("bool",[14,25,26,31,53,63,132,133,138,181]),
         ("canonical",[52,53,54,55,56,57,58,59,60]),("ind_type",[33,34]),
         ("pair",[8,9])]),["DISK_THM"]),
       [read"%178%166%95%162%71%183%279$1@%230$0@@@%219%215$0@%224@@%226@@|@|@@%178%166%95%143%41%183%279$1@%227$0@@@%218$0@%224@%226@@|@|@@%178%166%95%167%73%167%86%183%279$2@%229$1@$0@@@%244$2@%279$2@$1@@%279$2@$0@@@|@|@|@@%166%95%167%73%167%86%183%279$2@%228$1@$0@@@%246$2@%279$2@$1@@%279$2@$0@@@|@|@|@@@@"])
  fun op spolynom_simplify_def x = x
    val op spolynom_simplify_def =
    DT(((("canonical",71),[]),[]),
       [read"%166%95%167%133%183%280$1@$0@@%250$1@%279$1@$0@@@|@|@"])
  fun op interp_sp_def x = x
    val op interp_sp_def =
    DT(((("canonical",72),
        [("bool",[14,25,26,31,53,63,132,133,138,181]),
         ("canonical",[52,53,54,55,56,57,58,59,60]),("ind_type",[33,34]),
         ("pair",[8,9])]),["DISK_THM"]),
       [read"%178%166%95%168%127%143%41%180%259$2@$1@%227$0@@@$0@|@|@|@@%178%166%95%168%127%162%71%180%259$2@$1@%230$0@@@%284$0@$1@@|@|@|@@%178%166%95%168%127%167%84%167%85%180%259$3@$2@%229$1@$0@@@%277$3@%259$3@$2@$1@@%259$3@$2@$0@@@|@|@|@|@@%166%95%168%127%167%84%167%85%180%259$3@$2@%228$1@$0@@@%276$3@%259$3@$2@$1@@%259$3@$2@$0@@@|@|@|@|@@@@"])
  fun op datatype_canonical_sum x = x
    val op datatype_canonical_sum =
    DT(((("canonical",10),[("bool",[25,171])]),["DISK_THM"]),
       [read"%220%47%226@%218@%219@@"])
  fun op canonical_sum_11 x = x
    val op canonical_sum_11 =
    DT(((("canonical",11),
        [("bool",[14,25,26,31,51,53,56,63,132,133,138,181]),
         ("canonical",[1,2,3,4,5,6,7]),("ind_type",[33,34]),
         ("pair",[8,9])]),["DISK_THM"]),
       [read"%178%143%21%163%31%145%38%143%25%163%36%145%40%182%183%218$5@$4@$3@@%218$2@$1@$0@@@%178%180$5@$2@@%178%188$4@$1@@%183$3@$0@@@@|@|@|@|@|@|@@%163%22%145%30%163%26%145%35%182%183%219$3@$2@@%219$1@$0@@@%178%188$3@$1@@%183$2@$0@@@|@|@|@|@@"])
  fun op canonical_sum_distinct x = x
    val op canonical_sum_distinct =
    DT(((("canonical",12),
        [("bool",[14,25,26,31,36,47,51,53,54,56,63,132,133,138,181]),
         ("canonical",[1,2,3,4,5,6,7]),("ind_type",[33,34]),
         ("pair",[8,9])]),["DISK_THM"]),
       [read"%178%145%38%163%31%143%21%285%183%226@%218$0@$1@$2@@@|@|@|@@%178%145%30%163%22%285%183%226@%219$0@$1@@@|@|@@%145%38%145%35%163%31%163%26%143%21%285%183%218$0@$2@$4@@%219$1@$3@@@|@|@|@|@|@@@"])
  fun op canonical_sum_case_cong x = x
    val op canonical_sum_case_cong =
    DT(((("canonical",13),
        [("bool",[14,25,26,53,132,133,138,181]),
         ("canonical",[1,2,3,4,5,6,7,8])]),["DISK_THM"]),
       [read"%145%2%145%4%144%106%147%50%152%59%193%178%183$4@$3@@%178%193%183$3@%226@@%181$2@%109@@@%178%143%21%163%31%145%38%193%183$6@%218$2@$1@$0@@@%181$4$2@$1@$0@@%53$2@$1@$0@@@|@|@|@@%163%22%145%30%193%183$5@%219$1@$0@@@%181$2$1@$0@@%61$1@$0@@@|@|@@@@@%181%242$4@$2@$1@$0@@%242$3@%109@%53@%61@@@|@|@|@|@|@"])
  fun op canonical_sum_nchotomy x = x
    val op canonical_sum_nchotomy =
    DT(((("canonical",14),
        [("bool",[14,25,26,53,132,133,138,181]),
         ("canonical",[1,2,3,4,5,6,7])]),["DISK_THM"]),
       [read"%145%49%241%183$0@%226@@%241%194%14%201%72%195%42%183$3@%218$2@$1@$0@@|@|@|@@%201%72%195%42%183$2@%219$1@$0@@|@|@@@|@"])
  fun op canonical_sum_Axiom x = x
    val op canonical_sum_Axiom =
    DT(((("canonical",15),
        [("bool",[14,25,26,31,53,63,132,133,138,181]),
         ("canonical",[1,2,3,4,5,6,7]),("ind_type",[33,34]),
         ("pair",[8,9])]),["DISK_THM"]),
       [read"%144%55%148%58%153%62%196%69%178%181$0%226@@$3@@%178%143%21%163%31%145%38%181$3%218$2@$1@$0@@@$5$2@$1@$0@$3$0@@@|@|@|@@%163%22%145%30%181$2%219$1@$0@@@$3$1@$0@$2$0@@@|@|@@@|@|@|@|@"])
  fun op canonical_sum_induction x = x
    val op canonical_sum_induction =
    DT(((("canonical",16),
        [("bool",[14,25,26,53,132,133,138]),
         ("canonical",[1,2,3,4,5,6,7])]),["DISK_THM"]),
       [read"%150%6%193%178$0%226@@%178%145%42%193$1$0@@%163%72%143%14$3%218$0@$1@$2@@|@|@@|@@%145%42%193$1$0@@%163%72$2%219$0@$1@@|@@|@@@@%145%42$1$0@|@@|@"])
  fun op canonical_sum_merge_ind x = x
    val op canonical_sum_merge_ind =
    DT(((("canonical",19),
        [("arithmetic",[22,24,25,26,27,41,46,59,71,88,93,173,180]),
         ("bool",
         [14,25,26,36,47,48,51,52,53,54,58,63,72,76,77,78,80,93,96,104,105,
          107,132,133,138,181]),("canonical",[1,2,3,4,5,6,7,9]),
         ("numeral",[3,5,8]),("pair",[5,7,8,9,16]),("prim_rec",[42]),
         ("relation",[101,113,115]),
         ("sat",[1,3,5,6,7,11,12,13,14,15])]),["DISK_THM"]),
       [read"%157%8%193%178%166%95%143%44%163%75%145%100%143%46%163%79%145%104%193%178$7$6@$3@$0@@%178$7$6@$3@%218$2@$1@$0@@@$7$6@%218$5@$4@$3@@$0@@@@$7$6@%218$5@$4@$3@@%218$2@$1@$0@@@|@|@|@|@|@|@|@@%178%166%95%143%44%163%75%145%100%163%79%145%104%193%178$6$5@$2@$0@@%178$6$5@$2@%219$1@$0@@@$6$5@%218$4@$3@$2@@$0@@@@$6$5@%218$4@$3@$2@@%219$1@$0@@@|@|@|@|@|@|@@%178%166%95%163%75%145%100%143%46%163%79%145%104%193%178$6$5@$3@$0@@%178$6$5@$3@%218$2@$1@$0@@@$6$5@%219$4@$3@@$0@@@@$6$5@%219$4@$3@@%218$2@$1@$0@@@|@|@|@|@|@|@@%178%166%95%163%75%145%100%163%79%145%104%193%178$5$4@$2@$0@@%178$5$4@$2@%219$1@$0@@@$5$4@%219$3@$2@@$0@@@@$5$4@%219$3@$2@@%219$1@$0@@@|@|@|@|@|@@%178%166%95%145%92$2$1@$0@%226@|@|@@%178%166%95%143%120%163%122%145%123$4$3@%226@%218$2@$1@$0@@|@|@|@|@@%166%95%163%124%145%125$3$2@%226@%219$1@$0@@|@|@|@@@@@@@@%166%108%145%111%145%116$3$2@$1@$0@|@|@|@@|@"])
  fun op canonical_sum_merge_def x = x
    val op canonical_sum_merge_def =
    DT(((("canonical",20),
        [("arithmetic",[22,24,25,26,27,41,46,59,71,88,93,173,180]),
         ("bool",[15,25,36,51,52,54,58,63,93,96,104,105,107]),
         ("canonical",[8,9,17,18]),("combin",[19]),("numeral",[3,5,8]),
         ("pair",[7,8,9,16,49]),("prim_rec",[42]),
         ("relation",[113,115,121,126]),
         ("sat",[1,3,5,6,7,11,12,13,15])]),["DISK_THM"]),
       [read"%178%145%104%145%100%166%95%163%79%163%75%143%46%143%44%183%244$4@%218$0@$2@$5@@%218$1@$3@$6@@@%252%263%254@$2@$3@@%218$0@$2@%244$4@$5@%218$1@$3@$6@@@@%218%277$4@$0@$1@@$2@%244$4@$5@$6@@@%218$1@$3@%244$4@%218$0@$2@$5@@$6@@@@|@|@|@|@|@|@|@@%178%145%104%145%100%166%95%163%79%163%75%143%44%183%244$3@%218$0@$1@$4@@%219$2@$5@@@%252%263%254@$1@$2@@%218$0@$1@%244$3@$4@%219$2@$5@@@@%218%277$3@$0@%275$3@@@$1@%244$3@$4@$5@@@%219$2@%244$3@%218$0@$1@$4@@$5@@@@|@|@|@|@|@|@@%178%145%104%145%100%166%95%163%79%163%75%143%46%183%244$3@%219$1@$4@@%218$0@$2@$5@@@%252%263%254@$1@$2@@%219$1@%244$3@$4@%218$0@$2@$5@@@@%218%277$3@%275$3@@$0@@$1@%244$3@$4@$5@@@%218$0@$2@%244$3@%219$1@$4@@$5@@@@|@|@|@|@|@|@@%178%145%104%145%100%166%95%163%79%163%75%183%244$2@%219$0@$3@@%219$1@$4@@@%252%263%254@$0@$1@@%219$0@%244$2@$3@%219$1@$4@@@@%218%277$2@%275$2@@%275$2@@@$0@%244$2@$3@$4@@@%219$1@%244$2@%219$0@$3@@$4@@@@|@|@|@|@|@@%178%166%95%145%92%183%244$1@$0@%226@@$0@|@|@@%178%145%123%163%122%143%120%166%95%183%244$0@%226@%218$1@$2@$3@@@%218$1@$2@$3@@|@|@|@|@@%145%125%163%124%166%95%183%244$0@%226@%219$1@$2@@@%219$1@$2@@|@|@|@@@@@@@"])
  fun op monom_insert_ind x = x
    val op monom_insert_ind =
    DT(((("canonical",23),
        [("arithmetic",[22,24,25,26,27,41,46,59,71,93,173,180]),
         ("bool",
         [14,25,26,36,47,48,51,52,53,54,58,63,72,76,77,78,80,93,96,104,105,
          107,132,133,138,181]),("canonical",[1,2,3,4,5,6,7,9]),
         ("numeral",[3,8]),("pair",[5,7,9,16]),("prim_rec",[42]),
         ("relation",[101,113,115]),
         ("sat",[1,3,5,6,7,11,12,13,14,15])]),["DISK_THM"]),
       [read"%156%7%193%178%166%95%143%44%163%75%143%46%163%79%145%104%193$6$5@$4@$3@$0@@$6$5@$4@$3@%218$2@$1@$0@@@|@|@|@|@|@|@@%178%166%95%143%44%163%75%163%79%145%104%193$5$4@$3@$2@$0@@$5$4@$3@$2@%219$1@$0@@@|@|@|@|@|@@%166%95%143%44%163%75$3$2@$1@$0@%226@|@|@|@@@@%166%108%143%110%163%117%145%118$4$3@$2@$1@$0@|@|@|@|@@|@"])
  fun op monom_insert_def x = x
    val op monom_insert_def =
    DT(((("canonical",24),
        [("arithmetic",[22,24,25,26,27,41,46,59,71,93,173,180]),
         ("bool",[15,25,36,51,52,54,58,63,93,96,104,105,107]),
         ("canonical",[8,9,21,22]),("combin",[19]),("numeral",[3,8]),
         ("pair",[7,9,16,49]),("prim_rec",[42]),
         ("relation",[113,115,121,126]),
         ("sat",[1,3,5,6,7,11,12,13,15])]),["DISK_THM"]),
       [read"%178%145%104%166%95%163%79%163%75%143%46%143%44%183%266$4@$0@$2@%218$1@$3@$5@@@%252%263%254@$2@$3@@%218$0@$2@%218$1@$3@$5@@@%218%277$4@$0@$1@@$2@$5@@%218$1@$3@%266$4@$0@$2@$5@@@@|@|@|@|@|@|@@%178%145%104%166%95%163%79%163%75%143%44%183%266$3@$0@$1@%219$2@$4@@@%252%263%254@$1@$2@@%218$0@$1@%219$2@$4@@@%218%277$3@$0@%275$3@@@$1@$4@@%219$2@%266$3@$0@$1@$4@@@@|@|@|@|@|@@%166%95%163%75%143%44%183%266$2@$0@$1@%226@@%218$0@$1@%226@@|@|@|@@@"])
  fun op varlist_insert_ind x = x
    val op varlist_insert_ind =
    DT(((("canonical",27),
        [("arithmetic",[22,24,25,26,27,41,46,59,71,93,173,180]),
         ("bool",
         [14,25,26,36,47,48,51,52,53,54,58,63,72,76,77,78,80,93,96,104,105,
          107,132,133,138,181]),("canonical",[1,2,3,4,5,6,7,9]),
         ("numeral",[3,8]),("pair",[5,7,9,16]),("prim_rec",[42]),
         ("relation",[101,113,115]),
         ("sat",[1,3,5,6,7,11,12,13,14,15])]),["DISK_THM"]),
       [read"%158%9%193%178%166%95%163%75%143%46%163%79%145%104%193$5$4@$3@$0@@$5$4@$3@%218$2@$1@$0@@@|@|@|@|@|@@%178%166%95%163%75%163%79%145%104%193$4$3@$2@$0@@$4$3@$2@%219$1@$0@@@|@|@|@|@@%166%95%163%75$2$1@$0@%226@|@|@@@@%166%108%163%112%145%116$3$2@$1@$0@|@|@|@@|@"])
  fun op varlist_insert_def x = x
    val op varlist_insert_def =
    DT(((("canonical",28),
        [("arithmetic",[22,24,25,26,27,41,46,59,71,93,173,180]),
         ("bool",[15,25,36,51,52,54,58,63,93,96,104,105,107]),
         ("canonical",[8,9,25,26]),("combin",[19]),("numeral",[3,8]),
         ("pair",[7,9,16,49]),("prim_rec",[42]),
         ("relation",[113,115,121,126]),
         ("sat",[1,3,5,6,7,11,12,13,15])]),["DISK_THM"]),
       [read"%178%145%104%166%95%163%79%163%75%143%46%183%282$3@$1@%218$0@$2@$4@@@%252%263%254@$1@$2@@%219$1@%218$0@$2@$4@@@%218%277$3@%275$3@@$0@@$1@$4@@%218$0@$2@%282$3@$1@$4@@@@|@|@|@|@|@@%178%145%104%166%95%163%79%163%75%183%282$2@$0@%219$1@$3@@@%252%263%254@$0@$1@@%219$0@%219$1@$3@@@%218%277$2@%275$2@@%275$2@@@$0@$3@@%219$1@%282$2@$0@$3@@@@|@|@|@|@@%166%95%163%75%183%282$1@$0@%226@@%219$0@%226@@|@|@@@"])
  fun op ivl_aux_ok x = x
    val op ivl_aux_ok =
    DT(((("canonical",39),
        [("bool",[14,25,56]),("canonical",[34,35]),("list",[43]),
         ("semi_ring",[43])]),["DISK_THM"]),
       [read"%166%95%193%261$0@@%168%127%163%107%162%71%180%262$3@$2@$0@$1@@%276$3@%284$0@$2@@%260$3@$2@$1@@@|@|@|@@|@"])
  fun op varlist_merge_ok x = x
    val op varlist_merge_ok =
    DT(((("canonical",40),
        [("bool",[14,25,26,27,30,56,58,63,64,105,129]),
         ("canonical",[34,35]),("list",[43]),("prelim",[33]),
         ("quote",[23]),("semi_ring",[37,39,43,48])]),["DISK_THM"]),
       [read"%166%95%193%261$0@@%168%127%163%131%163%142%180%260$3@$2@%264%255@$1@$0@@@%276$3@%260$3@$2@$1@@%260$3@$2@$0@@@|@|@|@@|@"])
  fun op ics_aux_ok x = x
    val op ics_aux_ok =
    DT(((("canonical",41),
        [("bool",[14,25,26,53,56,132,133,138]),
         ("canonical",[1,2,3,4,5,6,7,37,38]),
         ("semi_ring",[42])]),["DISK_THM"]),
       [read"%166%95%193%261$0@@%168%127%143%128%145%89%180%253$3@$2@$1@$0@@%277$3@$1@%257$3@$2@$0@@@|@|@|@@|@"])
  fun op interp_m_ok x = x
    val op interp_m_ok =
    DT(((("canonical",42),
        [("bool",[14,25,56]),("canonical",[35,36]),("list",[43]),
         ("semi_ring",[43])]),["DISK_THM"]),
       [read"%166%95%193%261$0@@%168%127%143%128%163%72%180%258$3@$2@$1@$0@@%276$3@$1@%260$3@$2@$0@@@|@|@|@@|@"])
  fun op canonical_sum_merge_ok x = x
    val op canonical_sum_merge_ok =
    DT(((("canonical",43),
        [("arithmetic",[22,24,25,26,27,41,46,59,71,88,93,173,180]),
         ("bool",
         [14,15,25,26,36,47,48,51,52,53,54,56,58,63,93,96,104,105,107,132,
          133,138]),("canonical",[1,2,3,4,5,6,7,8,9,17,18,35,36,37,38]),
         ("combin",[19]),("list",[43]),("numeral",[3,5,8]),
         ("pair",[7,8,9,16,49]),("prelim",[20,23]),("prim_rec",[42]),
         ("quote",[22]),("relation",[113,115,121,126]),
         ("sat",[1,3,5,6,7,11,12,13,14,15]),
         ("semi_ring",[35,38,39,41,42,43,46,47])]),["DISK_THM"]),
       [read"%166%95%193%261$0@@%168%127%145%129%145%141%180%257$3@$2@%244$3@$1@$0@@@%277$3@%257$3@$2@$1@@%257$3@$2@$0@@@|@|@|@@|@"])
  fun op monom_insert_ok x = x
    val op monom_insert_ok =
    DT(((("canonical",44),
        [("arithmetic",[22,24,25,26,27,41,46,59,71,93,173,180]),
         ("bool",
         [14,15,25,26,36,47,48,51,52,53,54,56,58,63,93,94,96,104,105,107,
          132,133,138]),
         ("canonical",[1,2,3,4,5,6,7,8,9,21,22,35,36,37,38]),
         ("combin",[19]),("list",[43]),("numeral",[3,8]),
         ("pair",[7,9,16,49]),("prelim",[20,23]),("prim_rec",[42]),
         ("quote",[22]),("relation",[113,115,121,126]),
         ("sat",[1,3,5,6,7,11,12,13,14,15]),
         ("semi_ring",[34,35,39,41,42,43])]),["DISK_THM"]),
       [read"%166%95%193%261$0@@%168%127%143%14%163%72%145%89%180%257$4@$3@%266$4@$2@$1@$0@@@%277$4@%276$4@$2@%260$4@$3@$1@@@%257$4@$3@$0@@@|@|@|@|@@|@"])
  fun op varlist_insert_ok x = x
    val op varlist_insert_ok =
    DT(((("canonical",45),
        [("arithmetic",[22,24,25,26,27,41,46,59,71,93,173,180]),
         ("bool",
         [14,15,25,26,36,47,48,51,52,53,54,56,58,63,93,94,96,104,105,107,
          132,133,138]),
         ("canonical",[1,2,3,4,5,6,7,8,9,25,26,35,36,37,38]),
         ("combin",[19]),("list",[43]),("numeral",[3,8]),
         ("pair",[7,9,16,49]),("prelim",[20,23]),("prim_rec",[42]),
         ("quote",[22]),("relation",[113,115,121,126]),
         ("sat",[1,3,5,6,7,11,12,13,14,15]),
         ("semi_ring",[34,35,39,41,42,43])]),["DISK_THM"]),
       [read"%166%95%193%261$0@@%168%127%163%72%145%89%180%257$3@$2@%282$3@$1@$0@@@%277$3@%260$3@$2@$1@@%257$3@$2@$0@@@|@|@|@@|@"])
  fun op canonical_sum_scalar_ok x = x
    val op canonical_sum_scalar_ok =
    DT(((("canonical",46),
        [("bool",[14,25,26,53,56,132,133,138]),
         ("canonical",[1,2,3,4,5,6,7,29,35,36,37,38]),("list",[43]),
         ("semi_ring",[37,42,43,44,45])]),["DISK_THM"]),
       [read"%166%95%193%261$0@@%168%127%143%14%145%89%180%257$3@$2@%247$3@$1@$0@@@%276$3@$1@%257$3@$2@$0@@@|@|@|@@|@"])
  fun op canonical_sum_scalar2_ok x = x
    val op canonical_sum_scalar2_ok =
    DT(((("canonical",47),
        [("arithmetic",[22,24,25,26,27,41,46,59,71,93,173,180]),
         ("bool",
         [14,15,25,26,27,30,36,47,48,51,52,53,54,56,58,63,64,93,94,96,104,
          105,107,129,132,133,138]),
         ("canonical",[1,2,3,4,5,6,7,8,9,21,22,25,26,30,34,35,36,37,38]),
         ("combin",[19]),("list",[43]),("numeral",[3,8]),
         ("pair",[7,9,16,49]),("prelim",[20,23,33]),("prim_rec",[42]),
         ("quote",[22,23]),("relation",[113,115,121,126]),
         ("sat",[1,3,5,6,7,11,12,13,14,15]),
         ("semi_ring",[34,35,36,37,39,41,42,43,44,45,48])]),["DISK_THM"]),
       [read"%166%95%193%261$0@@%168%127%163%72%145%89%180%257$3@$2@%248$3@$1@$0@@@%276$3@%260$3@$2@$1@@%257$3@$2@$0@@@|@|@|@@|@"])
  fun op canonical_sum_scalar3_ok x = x
    val op canonical_sum_scalar3_ok =
    DT(((("canonical",48),
        [("arithmetic",[22,24,25,26,27,41,46,59,71,93,173,180]),
         ("bool",
         [14,15,25,26,27,30,36,47,48,51,52,53,54,56,58,63,64,93,94,96,104,
          105,107,129,132,133,138]),
         ("canonical",[1,2,3,4,5,6,7,8,9,21,22,31,34,35,36,37,38]),
         ("combin",[19]),("list",[43]),("numeral",[3,8]),
         ("pair",[7,9,16,49]),("prelim",[20,23,33]),("prim_rec",[42]),
         ("quote",[22,23]),("relation",[113,115,121,126]),
         ("sat",[1,3,5,6,7,11,12,13,14,15]),
         ("semi_ring",[34,35,37,39,41,42,43,44,45,48,49])]),["DISK_THM"]),
       [read"%166%95%193%261$0@@%168%127%143%41%163%72%145%89%180%257$4@$3@%249$4@$2@$1@$0@@@%276$4@%276$4@$2@%260$4@$3@$1@@@%257$4@$3@$0@@@|@|@|@|@@|@"])
  fun op canonical_sum_prod_ok x = x
    val op canonical_sum_prod_ok =
    DT(((("canonical",49),
        [("arithmetic",[22,24,25,26,27,41,46,59,71,88,93,173,180]),
         ("bool",
         [14,15,25,26,27,30,36,47,48,51,52,53,54,56,58,63,64,93,94,96,104,
          105,107,129,132,133,138]),
         ("canonical",
         [1,2,3,4,5,6,7,8,9,17,18,21,22,25,26,30,31,32,34,35,36,37,38]),
         ("combin",[19]),("list",[43]),("numeral",[3,5,8]),
         ("pair",[7,8,9,16,49]),("prelim",[20,23,33]),("prim_rec",[42]),
         ("quote",[22,23]),("relation",[113,115,121,126]),
         ("sat",[1,3,5,6,7,11,12,13,14,15]),
         ("semi_ring",
         [34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,
          49])]),["DISK_THM"]),
       [read"%166%95%193%261$0@@%168%127%145%129%145%141%180%257$3@$2@%246$3@$1@$0@@@%276$3@%257$3@$2@$1@@%257$3@$2@$0@@@|@|@|@@|@"])
  fun op canonical_sum_simplify_ok x = x
    val op canonical_sum_simplify_ok =
    DT(((("canonical",50),
        [("bool",[14,25,26,27,30,53,56,63,64,132,133,138]),
         ("canonical",[1,2,3,4,5,6,7,33,35,36,37,38]),("list",[43]),
         ("semi_ring",[38,39,40,42,43])]),["DISK_THM"]),
       [read"%166%95%193%261$0@@%168%127%145%89%180%257$2@$1@%250$2@$0@@@%257$2@$1@$0@@|@|@@|@"])
  fun op datatype_spolynom x = x
    val op datatype_spolynom =
    DT(((("canonical",63),[("bool",[25,171])]),["DISK_THM"]),
       [read"%220%94%230@%227@%229@%228@@"])
  fun op spolynom_11 x = x
    val op spolynom_11 =
    DT(((("canonical",64),
        [("bool",[14,25,26,31,51,53,56,63,132,133,138,181]),
         ("canonical",[52,53,54,55,56,57,58,59,60]),("ind_type",[33,34]),
         ("pair",[8,9])]),["DISK_THM"]),
       [read"%178%162%15%162%20%182%192%230$1@@%230$0@@@%187$1@$0@@|@|@@%178%143%14%143%19%182%192%227$1@@%227$0@@@%180$1@$0@@|@|@@%178%167%24%167%34%167%29%167%37%182%192%229$3@$2@@%229$1@$0@@@%178%192$3@$1@@%192$2@$0@@@|@|@|@|@@%167%24%167%34%167%29%167%37%182%192%228$3@$2@@%228$1@$0@@@%178%192$3@$1@@%192$2@$0@@@|@|@|@|@@@@"])
  fun op spolynom_distinct x = x
    val op spolynom_distinct =
    DT(((("canonical",65),
        [("bool",[14,25,26,31,36,47,51,53,54,56,63,132,133,138,181]),
         ("canonical",[52,53,54,55,56,57,58,59,60]),("ind_type",[33,34]),
         ("pair",[8,9])]),["DISK_THM"]),
       [read"%178%143%19%162%15%285%192%230$0@@%227$1@@@|@|@@%178%167%34%167%24%162%15%285%192%230$0@@%229$1@$2@@@|@|@|@@%178%167%34%167%24%162%15%285%192%230$0@@%228$1@$2@@@|@|@|@@%178%167%34%167%24%143%14%285%192%227$0@@%229$1@$2@@@|@|@|@@%178%167%34%167%24%143%14%285%192%227$0@@%228$1@$2@@@|@|@|@@%167%37%167%34%167%29%167%24%285%192%229$0@$2@@%228$1@$3@@@|@|@|@|@@@@@@"])
  fun op spolynom_case_cong x = x
    val op spolynom_case_cong =
    DT(((("canonical",66),
        [("bool",[14,25,26,53,132,133,138,181]),
         ("canonical",[52,53,54,55,56,57,58,59,60,61])]),["DISK_THM"]),
       [read"%167%3%167%5%151%52%146%57%160%63%160%66%193%178%192$5@$4@@%178%162%15%193%192$5@%230$0@@@%181$4$0@@%54$0@@@|@@%178%143%14%193%192$5@%227$0@@@%181$3$0@@%60$0@@@|@@%178%167%24%167%34%193%192$6@%229$1@$0@@@%181$3$1@$0@@%65$1@$0@@@|@|@@%167%24%167%34%193%192$6@%228$1@$0@@@%181$2$1@$0@@%68$1@$0@@@|@|@@@@@@%181%278$5@$3@$2@$1@$0@@%278$4@%54@%60@%65@%68@@@|@|@|@|@|@|@"])
  fun op spolynom_nchotomy x = x
    val op spolynom_nchotomy =
    DT(((("canonical",67),
        [("bool",[14,25,26,53,132,133,138,181]),
         ("canonical",[52,53,54,55,56,57,58,59,60])]),["DISK_THM"]),
       [read"%167%96%241%200%71%192$1@%230$0@@|@@%241%194%14%192$1@%227$0@@|@@%241%204%90%204%91%192$2@%229$1@$0@@|@|@@%204%90%204%91%192$2@%228$1@$0@@|@|@@@@|@"])
  fun op spolynom_Axiom x = x
    val op spolynom_Axiom =
    DT(((("canonical",68),
        [("bool",[14,25,26,31,53,63,132,133,138,181]),
         ("canonical",[52,53,54,55,56,57,58,59,60]),("ind_type",[33,34]),
         ("pair",[8,9])]),["DISK_THM"]),
       [read"%151%56%146%57%161%64%161%67%198%70%178%162%15%181$1%230$0@@@$5$0@@|@@%178%143%14%181$1%227$0@@@$4$0@@|@@%178%167%24%167%34%181$2%229$1@$0@@@$4$1@$0@$2$1@@$2$0@@@|@|@@%167%24%167%34%181$2%228$1@$0@@@$3$1@$0@$2$1@@$2$0@@@|@|@@@@|@|@|@|@|@"])
  fun op spolynom_induction x = x
    val op spolynom_induction =
    DT(((("canonical",69),
        [("bool",[14,25,26,53,132,133,138]),
         ("canonical",[52,53,54,55,56,57,58,59,60])]),["DISK_THM"]),
       [read"%159%10%193%178%162%71$1%230$0@@|@@%178%143%14$1%227$0@@|@@%178%167%90%167%91%193%178$2$1@@$2$0@@@$2%229$1@$0@@@|@|@@%167%90%167%91%193%178$2$1@@$2$0@@@$2%228$1@$0@@@|@|@@@@@%167%90$1$0@|@@|@"])
  fun op spolynomial_normalize_ok x = x
    val op spolynomial_normalize_ok =
    DT(((("canonical",73),
        [("arithmetic",[22,24,25,26,27,41,46,59,71,88,93,173,180]),
         ("bool",
         [14,15,25,26,27,30,36,47,48,51,52,53,54,56,58,63,64,93,94,96,104,
          105,107,129,132,133,138]),
         ("canonical",
         [1,2,3,4,5,6,7,8,9,17,18,21,22,25,26,30,31,32,34,35,36,37,38,52,
          53,54,55,56,57,58,59,60,70,72]),("combin",[19]),("list",[43]),
         ("numeral",[3,5,8]),("pair",[7,8,9,16,49]),("prelim",[20,23,33]),
         ("prim_rec",[42]),("quote",[22,23]),
         ("relation",[113,115,121,126]),("sat",[1,3,5,6,7,11,12,13,14,15]),
         ("semi_ring",
         [34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,
          49])]),["DISK_THM"]),
       [read"%166%95%193%261$0@@%168%127%167%83%180%257$2@$1@%279$2@$0@@@%259$2@$1@$0@@|@|@@|@"])
  fun op spolynomial_simplify_ok x = x
    val op spolynomial_simplify_ok =
    DT(((("canonical",74),
        [("arithmetic",[22,24,25,26,27,41,46,59,71,88,93,173,180]),
         ("bool",
         [14,15,25,26,27,30,36,47,48,51,52,53,54,56,58,63,64,93,94,96,104,
          105,107,129,132,133,138]),
         ("canonical",
         [1,2,3,4,5,6,7,8,9,17,18,21,22,25,26,30,31,32,33,34,35,36,37,38,
          52,53,54,55,56,57,58,59,60,70,71,72]),("combin",[19]),
         ("list",[43]),("numeral",[3,5,8]),("pair",[7,8,9,16,49]),
         ("prelim",[20,23,33]),("prim_rec",[42]),("quote",[22,23]),
         ("relation",[113,115,121,126]),("sat",[1,3,5,6,7,11,12,13,14,15]),
         ("semi_ring",
         [34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,
          49])]),["DISK_THM"]),
       [read"%166%95%193%261$0@@%168%127%167%83%180%257$2@$1@%280$2@$0@@@%259$2@$1@$0@@|@|@@|@"])
  end
  val _ = DB.bindl "canonical"
  [("canonical_sum_TY_DEF",canonical_sum_TY_DEF,DB.Def),
   ("canonical_sum_case_def",canonical_sum_case_def,DB.Def),
   ("canonical_sum_size_def",canonical_sum_size_def,DB.Def),
   ("canonical_sum_merge_tupled_primitive_def",
    canonical_sum_merge_tupled_primitive_def,
    DB.Def),
   ("canonical_sum_merge_curried_def",
    canonical_sum_merge_curried_def,
    DB.Def),
   ("monom_insert_tupled_primitive_def",
    monom_insert_tupled_primitive_def,
    DB.Def), ("monom_insert_curried_def",monom_insert_curried_def,DB.Def),
   ("varlist_insert_tupled_primitive_def",
    varlist_insert_tupled_primitive_def,
    DB.Def),
   ("varlist_insert_curried_def",varlist_insert_curried_def,DB.Def),
   ("canonical_sum_scalar_def",canonical_sum_scalar_def,DB.Def),
   ("canonical_sum_scalar2_def",canonical_sum_scalar2_def,DB.Def),
   ("canonical_sum_scalar3_def",canonical_sum_scalar3_def,DB.Def),
   ("canonical_sum_prod_def",canonical_sum_prod_def,DB.Def),
   ("canonical_sum_simplify_def",canonical_sum_simplify_def,DB.Def),
   ("ivl_aux_def",ivl_aux_def,DB.Def),
   ("interp_vl_def",interp_vl_def,DB.Def),
   ("interp_m_def",interp_m_def,DB.Def),
   ("ics_aux_def",ics_aux_def,DB.Def),
   ("interp_cs_def",interp_cs_def,DB.Def),
   ("spolynom_TY_DEF",spolynom_TY_DEF,DB.Def),
   ("spolynom_case_def",spolynom_case_def,DB.Def),
   ("spolynom_size_def",spolynom_size_def,DB.Def),
   ("spolynom_normalize_def",spolynom_normalize_def,DB.Def),
   ("spolynom_simplify_def",spolynom_simplify_def,DB.Def),
   ("interp_sp_def",interp_sp_def,DB.Def),
   ("datatype_canonical_sum",datatype_canonical_sum,DB.Thm),
   ("canonical_sum_11",canonical_sum_11,DB.Thm),
   ("canonical_sum_distinct",canonical_sum_distinct,DB.Thm),
   ("canonical_sum_case_cong",canonical_sum_case_cong,DB.Thm),
   ("canonical_sum_nchotomy",canonical_sum_nchotomy,DB.Thm),
   ("canonical_sum_Axiom",canonical_sum_Axiom,DB.Thm),
   ("canonical_sum_induction",canonical_sum_induction,DB.Thm),
   ("canonical_sum_merge_ind",canonical_sum_merge_ind,DB.Thm),
   ("canonical_sum_merge_def",canonical_sum_merge_def,DB.Thm),
   ("monom_insert_ind",monom_insert_ind,DB.Thm),
   ("monom_insert_def",monom_insert_def,DB.Thm),
   ("varlist_insert_ind",varlist_insert_ind,DB.Thm),
   ("varlist_insert_def",varlist_insert_def,DB.Thm),
   ("ivl_aux_ok",ivl_aux_ok,DB.Thm),
   ("varlist_merge_ok",varlist_merge_ok,DB.Thm),
   ("ics_aux_ok",ics_aux_ok,DB.Thm), ("interp_m_ok",interp_m_ok,DB.Thm),
   ("canonical_sum_merge_ok",canonical_sum_merge_ok,DB.Thm),
   ("monom_insert_ok",monom_insert_ok,DB.Thm),
   ("varlist_insert_ok",varlist_insert_ok,DB.Thm),
   ("canonical_sum_scalar_ok",canonical_sum_scalar_ok,DB.Thm),
   ("canonical_sum_scalar2_ok",canonical_sum_scalar2_ok,DB.Thm),
   ("canonical_sum_scalar3_ok",canonical_sum_scalar3_ok,DB.Thm),
   ("canonical_sum_prod_ok",canonical_sum_prod_ok,DB.Thm),
   ("canonical_sum_simplify_ok",canonical_sum_simplify_ok,DB.Thm),
   ("datatype_spolynom",datatype_spolynom,DB.Thm),
   ("spolynom_11",spolynom_11,DB.Thm),
   ("spolynom_distinct",spolynom_distinct,DB.Thm),
   ("spolynom_case_cong",spolynom_case_cong,DB.Thm),
   ("spolynom_nchotomy",spolynom_nchotomy,DB.Thm),
   ("spolynom_Axiom",spolynom_Axiom,DB.Thm),
   ("spolynom_induction",spolynom_induction,DB.Thm),
   ("spolynomial_normalize_ok",spolynomial_normalize_ok,DB.Thm),
   ("spolynomial_simplify_ok",spolynomial_simplify_ok,DB.Thm)]

  local open Portable GrammarSpecials Parse
    fun UTOFF f = Feedback.trace("Parse.unicode_trace_off_complaints",0)f
  in
  val _ = mk_local_grms [("semi_ringTheory.semi_ring_grammars",
                          semi_ringTheory.semi_ring_grammars),
                         ("quoteTheory.quote_grammars",
                          quoteTheory.quote_grammars)]
  val _ = List.app (update_grms reveal) []
  val _ = update_grms temp_add_type "canonical_sum"
  val _ = update_grms temp_add_type "canonical_sum"








  val _ = update_grms
       (UTOFF temp_overload_on)
       ("Nil_monom", (Term.prim_mk_const { Name = "Nil_monom", Thy = "canonical"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("Nil_monom", (Term.prim_mk_const { Name = "Nil_monom", Thy = "canonical"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("Cons_monom", (Term.prim_mk_const { Name = "Cons_monom", Thy = "canonical"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("Cons_monom", (Term.prim_mk_const { Name = "Cons_monom", Thy = "canonical"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("Cons_varlist", (Term.prim_mk_const { Name = "Cons_varlist", Thy = "canonical"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("Cons_varlist", (Term.prim_mk_const { Name = "Cons_varlist", Thy = "canonical"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("canonical_sum_CASE", (Term.prim_mk_const { Name = "canonical_sum_CASE", Thy = "canonical"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("canonical_sum_size", (Term.prim_mk_const { Name = "canonical_sum_size", Thy = "canonical"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("canonical_sum_merge_tupled", (Term.prim_mk_const { Name = "canonical_sum_merge_tupled", Thy = "canonical"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("canonical_sum_merge_tupled", (Term.prim_mk_const { Name = "canonical_sum_merge_tupled", Thy = "canonical"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("canonical_sum_merge", (Term.prim_mk_const { Name = "canonical_sum_merge", Thy = "canonical"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("canonical_sum_merge", (Term.prim_mk_const { Name = "canonical_sum_merge", Thy = "canonical"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("monom_insert_tupled", (Term.prim_mk_const { Name = "monom_insert_tupled", Thy = "canonical"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("monom_insert_tupled", (Term.prim_mk_const { Name = "monom_insert_tupled", Thy = "canonical"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("monom_insert", (Term.prim_mk_const { Name = "monom_insert", Thy = "canonical"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("monom_insert", (Term.prim_mk_const { Name = "monom_insert", Thy = "canonical"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("varlist_insert_tupled", (Term.prim_mk_const { Name = "varlist_insert_tupled", Thy = "canonical"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("varlist_insert_tupled", (Term.prim_mk_const { Name = "varlist_insert_tupled", Thy = "canonical"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("varlist_insert", (Term.prim_mk_const { Name = "varlist_insert", Thy = "canonical"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("varlist_insert", (Term.prim_mk_const { Name = "varlist_insert", Thy = "canonical"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("canonical_sum_scalar", (Term.prim_mk_const { Name = "canonical_sum_scalar", Thy = "canonical"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("canonical_sum_scalar2", (Term.prim_mk_const { Name = "canonical_sum_scalar2", Thy = "canonical"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("canonical_sum_scalar3", (Term.prim_mk_const { Name = "canonical_sum_scalar3", Thy = "canonical"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("canonical_sum_prod", (Term.prim_mk_const { Name = "canonical_sum_prod", Thy = "canonical"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("canonical_sum_simplify", (Term.prim_mk_const { Name = "canonical_sum_simplify", Thy = "canonical"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("ivl_aux", (Term.prim_mk_const { Name = "ivl_aux", Thy = "canonical"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("interp_vl", (Term.prim_mk_const { Name = "interp_vl", Thy = "canonical"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("interp_m", (Term.prim_mk_const { Name = "interp_m", Thy = "canonical"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("ics_aux", (Term.prim_mk_const { Name = "ics_aux", Thy = "canonical"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("interp_cs", (Term.prim_mk_const { Name = "interp_cs", Thy = "canonical"}))
  val _ = update_grms temp_add_type "spolynom"
  val _ = update_grms temp_add_type "spolynom"










  val _ = update_grms
       (UTOFF temp_overload_on)
       ("SPvar", (Term.prim_mk_const { Name = "SPvar", Thy = "canonical"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("SPvar", (Term.prim_mk_const { Name = "SPvar", Thy = "canonical"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("SPconst", (Term.prim_mk_const { Name = "SPconst", Thy = "canonical"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("SPconst", (Term.prim_mk_const { Name = "SPconst", Thy = "canonical"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("SPplus", (Term.prim_mk_const { Name = "SPplus", Thy = "canonical"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("SPplus", (Term.prim_mk_const { Name = "SPplus", Thy = "canonical"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("SPmult", (Term.prim_mk_const { Name = "SPmult", Thy = "canonical"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("SPmult", (Term.prim_mk_const { Name = "SPmult", Thy = "canonical"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("spolynom_CASE", (Term.prim_mk_const { Name = "spolynom_CASE", Thy = "canonical"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("spolynom_size", (Term.prim_mk_const { Name = "spolynom_size", Thy = "canonical"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("spolynom_normalize", (Term.prim_mk_const { Name = "spolynom_normalize", Thy = "canonical"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("spolynom_simplify", (Term.prim_mk_const { Name = "spolynom_simplify", Thy = "canonical"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("spolynom_simplify", (Term.prim_mk_const { Name = "spolynom_simplify", Thy = "canonical"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("interp_sp", (Term.prim_mk_const { Name = "interp_sp", Thy = "canonical"}))
  val canonical_grammars = Parse.current_lgrms()
  end


  val _ =
    TypeBase.write [
      let
        open TypeBasePure
        val tyinfo0 = mk_datatype_info
          {ax=ORIG canonical_sum_Axiom,
           case_def=canonical_sum_case_def,
           case_cong=canonical_sum_case_cong,
           induction=ORIG canonical_sum_induction,
           nchotomy=canonical_sum_nchotomy,
           size=SOME(Parse.Term`(canonical$canonical_sum_size) :('a -> (num$num)) -> ('a canonical$canonical_sum) -> (num$num)`,
                     ORIG canonical_sum_size_def),
           encode = NONE,
           lift=NONE,
           one_one=SOME canonical_sum_11,
           distinct=SOME canonical_sum_distinct,
           fields=let fun T t s A = mk_thy_type{Thy=t,Tyop=s,Args=A}
    val U = mk_vartype
in
[] end,
           accessors=[],
           updates=[],
           recognizers=[],
           destructors=[]}
        val tyinfo0 = tyinfo0
        val () = computeLib.write_datatype_info tyinfo0
      in
        tyinfo0
      end
    ];


  val _ =
    TypeBase.write [
      let
        open TypeBasePure
        val tyinfo0 = mk_datatype_info
          {ax=ORIG spolynom_Axiom,
           case_def=spolynom_case_def,
           case_cong=spolynom_case_cong,
           induction=ORIG spolynom_induction,
           nchotomy=spolynom_nchotomy,
           size=SOME(Parse.Term`(canonical$spolynom_size) :('a -> (num$num)) -> ('a canonical$spolynom) -> (num$num)`,
                     ORIG spolynom_size_def),
           encode = NONE,
           lift=NONE,
           one_one=SOME spolynom_11,
           distinct=SOME spolynom_distinct,
           fields=let fun T t s A = mk_thy_type{Thy=t,Tyop=s,Args=A}
    val U = mk_vartype
in
[] end,
           accessors=[],
           updates=[],
           recognizers=[],
           destructors=[]}
        val tyinfo0 = tyinfo0
        val () = computeLib.write_datatype_info tyinfo0
      in
        tyinfo0
      end
    ];


  fun IMPORT P =
    let open Parse abstraction
        fun sing [x] = x | sing _ = raise Match
        val sr = sing (#Vals P)
        val ctab =
          [ Term`interp_sp ^sr`,
            Term`spolynom_simplify ^sr`,
            Term`spolynom_normalize ^sr`,
            Term`interp_cs ^sr`,
            Term`ics_aux ^sr`,
            Term`interp_m ^sr`,
            Term`interp_vl ^sr`,
            Term`ivl_aux ^sr`,
            Term`canonical_sum_simplify ^sr`,
            Term`canonical_sum_prod ^sr`,
            Term`canonical_sum_scalar3 ^sr`,
            Term`canonical_sum_scalar2 ^sr`,
            Term`canonical_sum_scalar ^sr`,
            Term`varlist_insert ^sr`,
            Term`monom_insert ^sr`,
            Term`canonical_sum_merge ^sr` ]
        val inst_fun = inst_thm_fun (compute_inst_infos ctab P) in
    { interp_sp_def = inst_fun interp_sp_def,
      spolynom_simplify_def = inst_fun spolynom_simplify_def,
      spolynom_normalize_def = inst_fun spolynom_normalize_def,
      spolynom_size_def = inst_fun spolynom_size_def,
      spolynom_case_def = inst_fun spolynom_case_def,
      spolynom_TY_DEF = inst_fun spolynom_TY_DEF,
      interp_cs_def = inst_fun interp_cs_def,
      ics_aux_def = inst_fun ics_aux_def,
      interp_m_def = inst_fun interp_m_def,
      interp_vl_def = inst_fun interp_vl_def,
      ivl_aux_def = inst_fun ivl_aux_def,
      canonical_sum_simplify_def = inst_fun canonical_sum_simplify_def,
      canonical_sum_prod_def = inst_fun canonical_sum_prod_def,
      canonical_sum_scalar3_def = inst_fun canonical_sum_scalar3_def,
      canonical_sum_scalar2_def = inst_fun canonical_sum_scalar2_def,
      canonical_sum_scalar_def = inst_fun canonical_sum_scalar_def,
      varlist_insert_curried_def = inst_fun varlist_insert_curried_def,
      varlist_insert_tupled_primitive_def = inst_fun varlist_insert_tupled_primitive_def,
      monom_insert_curried_def = inst_fun monom_insert_curried_def,
      monom_insert_tupled_primitive_def = inst_fun monom_insert_tupled_primitive_def,
      canonical_sum_merge_curried_def = inst_fun canonical_sum_merge_curried_def,
      canonical_sum_merge_tupled_primitive_def = inst_fun canonical_sum_merge_tupled_primitive_def,
      canonical_sum_size_def = inst_fun canonical_sum_size_def,
      canonical_sum_case_def = inst_fun canonical_sum_case_def,
      canonical_sum_TY_DEF = inst_fun canonical_sum_TY_DEF,
      spolynomial_simplify_ok = inst_fun spolynomial_simplify_ok,
      spolynomial_normalize_ok = inst_fun spolynomial_normalize_ok,
      spolynom_induction = inst_fun spolynom_induction,
      spolynom_Axiom = inst_fun spolynom_Axiom,
      spolynom_nchotomy = inst_fun spolynom_nchotomy,
      spolynom_case_cong = inst_fun spolynom_case_cong,
      spolynom_distinct = inst_fun spolynom_distinct,
      spolynom_11 = inst_fun spolynom_11,
      datatype_spolynom = inst_fun datatype_spolynom,
      canonical_sum_simplify_ok = inst_fun canonical_sum_simplify_ok,
      canonical_sum_prod_ok = inst_fun canonical_sum_prod_ok,
      canonical_sum_scalar3_ok = inst_fun canonical_sum_scalar3_ok,
      canonical_sum_scalar2_ok = inst_fun canonical_sum_scalar2_ok,
      canonical_sum_scalar_ok = inst_fun canonical_sum_scalar_ok,
      varlist_insert_ok = inst_fun varlist_insert_ok,
      monom_insert_ok = inst_fun monom_insert_ok,
      canonical_sum_merge_ok = inst_fun canonical_sum_merge_ok,
      interp_m_ok = inst_fun interp_m_ok,
      ics_aux_ok = inst_fun ics_aux_ok,
      varlist_merge_ok = inst_fun varlist_merge_ok,
      ivl_aux_ok = inst_fun ivl_aux_ok,
      varlist_insert_def = inst_fun varlist_insert_def,
      varlist_insert_ind = inst_fun varlist_insert_ind,
      monom_insert_def = inst_fun monom_insert_def,
      monom_insert_ind = inst_fun monom_insert_ind,
      canonical_sum_merge_def = inst_fun canonical_sum_merge_def,
      canonical_sum_merge_ind = inst_fun canonical_sum_merge_ind,
      canonical_sum_induction = inst_fun canonical_sum_induction,
      canonical_sum_Axiom = inst_fun canonical_sum_Axiom,
      canonical_sum_nchotomy = inst_fun canonical_sum_nchotomy,
      canonical_sum_case_cong = inst_fun canonical_sum_case_cong,
      canonical_sum_distinct = inst_fun canonical_sum_distinct,
      canonical_sum_11 = inst_fun canonical_sum_11,
      datatype_canonical_sum = inst_fun datatype_canonical_sum }
    end
  val _ = Theory.LoadableThyData.temp_encoded_update {
    thy = "canonical",
    thydataty = "compute",
    data =
        "canonical.canonical_sum_merge_def canonical.canonical_sum_prod_def canonical.interp_sp_def canonical.spolynom_simplify_def canonical.spolynom_normalize_def canonical.interp_cs_def canonical.ics_aux_def canonical.interp_m_def canonical.interp_vl_def canonical.ivl_aux_def canonical.canonical_sum_simplify_def canonical.canonical_sum_scalar2_def canonical.canonical_sum_scalar3_def canonical.canonical_sum_scalar_def canonical.monom_insert_def canonical.varlist_insert_def"
  }

val _ = if !Globals.print_thy_loads then print "done\n" else ()
val _ = Theory.load_complete "canonical"
end
