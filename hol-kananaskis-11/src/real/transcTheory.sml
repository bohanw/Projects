structure transcTheory :> transcTheory =
struct
  val _ = if !Globals.print_thy_loads then print "Loading transcTheory ... " else ()
  open Type Term Thm
  infixr -->

  fun C s t ty = mk_thy_const{Name=s,Thy=t,Ty=ty}
  fun T s t A = mk_thy_type{Tyop=s, Thy=t,Args=A}
  fun V s q = mk_var(s,q)
  val U     = mk_vartype
  (*  Parents *)
  local open powserTheory
  in end;
  val _ = Theory.link_parents
          ("transc",
          Arbnum.fromString "1488589315",
          Arbnum.fromString "197602")
          [("powser",
           Arbnum.fromString "1488589297",
           Arbnum.fromString "728384")];
  val _ = Theory.incorporate_types "transc" [];

  val idvector = 
    let fun ID(thy,oth) = {Thy = thy, Other = oth}
    in Vector.fromList
  [ID("min", "fun"), ID("min", "bool"), ID("pair", "prod"),
   ID("realax", "real"), ID("num", "num"), ID("bool", "!"),
   ID("arithmetic", "*"), ID("arithmetic", "+"), ID("pair", ","),
   ID("arithmetic", "-"), ID("real", "/"), ID("bool", "/\\"),
   ID("num", "0"), ID("prim_rec", "<"), ID("arithmetic", "<="),
   ID("min", "="), ID("min", "==>"), ID("arithmetic", ">="),
   ID("bool", "?"), ID("bool", "?!"), ID("min", "@"),
   ID("arithmetic", "BIT1"), ID("arithmetic", "BIT2"), ID("bool", "COND"),
   ID("arithmetic", "DIV"), ID("transc", "Dint"), ID("arithmetic", "EVEN"),
   ID("arithmetic", "FACT"), ID("arithmetic", "NUMERAL"), ID("num", "SUC"),
   ID("arithmetic", "ZERO"), ID("bool", "\\/"), ID("real", "abs"),
   ID("transc", "acs"), ID("transc", "asn"), ID("transc", "atn"),
   ID("transc", "cos"), ID("lim", "diffl"), ID("powser", "diffs"),
   ID("transc", "division"), ID("transc", "dsize"), ID("transc", "exp"),
   ID("transc", "fine"), ID("transc", "gauge"), ID("realax", "inv"),
   ID("transc", "ln"), ID("transc", "pi"), ID("real", "pow"),
   ID("realax", "real_add"), ID("realax", "real_lt"),
   ID("real", "real_lte"), ID("realax", "real_mul"),
   ID("realax", "real_neg"), ID("real", "real_of_num"),
   ID("real", "real_sub"), ID("transc", "root"), ID("transc", "rpow"),
   ID("transc", "rsum"), ID("transc", "sin"), ID("transc", "sqrt"),
   ID("real", "sum"), ID("seq", "suminf"), ID("seq", "sums"),
   ID("transc", "tan"), ID("transc", "tdiv"), ID("bool", "~")]
  end;
  local open SharingTables
  in
  val tyvector = build_type_vector idvector
  [TYOP [1], TYOP [3], TYOP [4], TYOP [0, 2, 1], TYOP [2, 3, 3],
   TYOP [0, 4, 0], TYOP [2, 1, 1], TYOP [0, 6, 5], TYOP [0, 1, 1],
   TYOP [0, 8, 1], TYOP [0, 4, 9], TYOP [0, 1, 8], TYOP [0, 2, 8],
   TYOP [0, 8, 0], TYOP [0, 1, 0], TYOP [0, 14, 13], TYOP [0, 8, 5],
   TYOP [0, 3, 2], TYOP [0, 3, 0], TYOP [0, 6, 18], TYOP [0, 8, 14],
   TYOP [0, 6, 20], TYOP [0, 12, 0], TYOP [0, 22, 0], TYOP [0, 18, 0],
   TYOP [0, 14, 0], TYOP [0, 25, 0], TYOP [0, 13, 0], TYOP [0, 2, 0],
   TYOP [0, 28, 0], TYOP [0, 2, 2], TYOP [0, 2, 30], TYOP [0, 3, 4],
   TYOP [0, 3, 32], TYOP [2, 2, 2], TYOP [0, 2, 34], TYOP [0, 2, 35],
   TYOP [0, 1, 6], TYOP [0, 1, 37], TYOP [0, 0, 0], TYOP [0, 0, 39],
   TYOP [0, 2, 28], TYOP [0, 3, 18], TYOP [0, 8, 13], TYOP [0, 1, 14],
   TYOP [0, 28, 2], TYOP [0, 14, 1], TYOP [0, 0, 11], TYOP [0, 8, 44],
   TYOP [0, 3, 3], TYOP [0, 1, 3], TYOP [0, 3, 1], TYOP [0, 34, 51],
   TYOP [0, 3, 14]]
  end
  val _ = Theory.incorporate_consts "transc" tyvector
     [("tdiv", 7), ("tan", 8), ("sqrt", 8), ("sin", 8), ("rsum", 10),
      ("rpow", 11), ("root", 12), ("pi", 1), ("ln", 8), ("gauge", 15),
      ("fine", 16), ("exp", 8), ("dsize", 17), ("division", 19),
      ("cos", 8), ("atn", 8), ("asn", 8), ("acs", 8), ("Dint", 21)];

  local open SharingTables
  in
  val tmvector = build_term_vector idvector tyvector
  [TMV("D", 3), TMV("D1", 3), TMV("D2", 3), TMV("E", 14), TMV("N", 2),
   TMV("a", 1), TMV("b", 1), TMV("c", 1), TMV("diff", 12), TMV("e", 1),
   TMV("f", 8), TMV("f'", 8), TMV("g", 8), TMV("g1", 8), TMV("g2", 8),
   TMV("h", 1), TMV("k", 1), TMV("k1", 1), TMV("k2", 1), TMV("l", 1),
   TMV("m", 2), TMV("m", 1), TMV("n", 2), TMV("p", 3), TMV("p1", 3),
   TMV("p2", 3), TMV("r", 2), TMV("t", 1), TMV("u", 1), TMV("x", 1),
   TMV("y", 1), TMC(5, 23), TMC(5, 24), TMC(5, 26), TMC(5, 27), TMC(5, 29),
   TMC(5, 25), TMC(6, 31), TMC(7, 31), TMC(8, 33), TMC(8, 36), TMC(8, 38),
   TMC(9, 31), TMC(10, 11), TMC(11, 40), TMC(12, 2), TMC(13, 41),
   TMC(14, 41), TMC(15, 40), TMC(15, 42), TMC(15, 43), TMC(15, 41),
   TMC(15, 44), TMC(16, 40), TMC(17, 41), TMC(18, 24), TMC(18, 27),
   TMC(18, 29), TMC(18, 25), TMC(19, 25), TMC(20, 45), TMC(20, 46),
   TMC(21, 30), TMC(22, 30), TMC(23, 47), TMC(24, 31), TMC(25, 21),
   TMC(26, 28), TMC(27, 30), TMC(28, 30), TMC(29, 30), TMC(30, 2),
   TMC(31, 40), TMC(32, 8), TMC(33, 8), TMC(34, 8), TMC(35, 8), TMC(36, 8),
   TMC(37, 48), TMC(38, 49), TMC(39, 19), TMC(40, 17), TMC(41, 8),
   TMC(42, 16), TMC(43, 15), TMC(44, 8), TMC(45, 8), TMC(46, 1),
   TMC(47, 50), TMC(48, 11), TMC(49, 44), TMC(50, 44), TMC(51, 11),
   TMC(52, 8), TMC(53, 3), TMC(54, 11), TMC(55, 12), TMC(56, 11),
   TMC(57, 10), TMC(58, 8), TMC(59, 8), TMC(60, 52), TMC(61, 51),
   TMC(62, 53), TMC(63, 8), TMC(64, 7), TMC(65, 39)]
  end
  local
  val DT = Thm.disk_thm val read = Term.read_raw tmvector
  in
  fun op atn x = x
    val op atn =
    DT(((("transc",143),[]),[]),
       [read"%36%30%52%76$0@@%61%29%44%90%93%43%87@%94%69%63%71@@@@@@$0@@%44%90$0@%43%87@%94%69%63%71@@@@@@%52%104$0@@$1@@@|@@|@"])
  fun op acs x = x
    val op acs =
    DT(((("transc",142),[]),[]),
       [read"%36%30%52%74$0@@%61%29%44%91%94%45@@$0@@%44%91$0@%87@@%52%77$0@@$1@@@|@@|@"])
  fun op asn x = x
    val op asn =
    DT(((("transc",141),[]),[]),
       [read"%36%30%52%75$0@@%61%29%44%91%93%43%87@%94%69%63%71@@@@@@$0@@%44%91$0@%43%87@%94%69%63%71@@@@@@%52%99$0@@$1@@@|@@|@"])
  fun op tan x = x
    val op tan =
    DT(((("transc",128),[]),[]),
       [read"%36%29%52%104$0@@%43%99$0@@%77$0@@@|@"])
  fun op pi x = x
    val op pi =
    DT(((("transc",98),[]),[]),
       [read"%52%87@%92%94%69%63%71@@@@%61%29%44%91%94%45@@$0@@%44%91$0@%94%69%63%71@@@@@%52%77$0@@%94%45@@@@|@@@"])
  fun op sqrt x = x
    val op sqrt =
    DT(((("transc",49),[]),[]),
       [read"%36%29%52%100$0@@%96%69%63%71@@@$0@@|@"])
  fun op root x = x
    val op root =
    DT(((("transc",48),[]),[]),
       [read"%35%22%36%29%52%96$1@$0@@%61%28%44%53%90%94%45@@$1@@%90%94%45@@$0@@@%52%88$0@$2@@$1@@|@@|@|@"])
  fun op exp x = x
    val op exp =
    DT(((("transc",0),[]),[]),
       [read"%36%29%52%82$0@@%102%22%92%22%85%94%68$0@@@|$0@@%88$1@$0@@|@@|@"])
  fun op cos x = x
    val op cos =
    DT(((("transc",1),[]),[]),
       [read"%36%29%52%77$0@@%102%22%92%22%64%67$0@@%43%88%93%94%69%62%71@@@@@%65$0@%69%63%71@@@@@%94%68$0@@@@%94%45@@|$0@@%88$1@$0@@|@@|@"])
  fun op sin x = x
    val op sin =
    DT(((("transc",2),[]),[]),
       [read"%36%29%52%99$0@@%102%22%92%22%64%67$0@@%94%45@@%43%88%93%94%69%62%71@@@@@%65%42$0@%69%62%71@@@@%69%63%71@@@@@%94%68$0@@@@|$0@@%88$1@$0@@|@@|@"])
  fun op ln x = x
    val op ln =
    DT(((("transc",33),[]),[]),
       [read"%36%29%52%86$0@@%61%28%52%82$0@@$1@|@@|@"])
  fun op division x = x
    val op division =
    DT(((("transc",172),[("pair",[16])]),["DISK_THM"]),
       [read"%36%5%36%6%32%0%48%80%41$2@$1@@$0@@%44%52$0%45@@$2@@%57%4%44%35%22%53%46$0@$1@@%90$2$0@@$2%70$0@@@@|@@%35%22%53%54$0@$1@@%52$2$0@@$3@@|@@|@@@|@|@|@"])
  fun op dsize x = x
    val op dsize =
    DT(((("transc",173),[]),[]),
       [read"%32%0%51%81$0@@%60%4%44%35%22%53%46$0@$1@@%90$2$0@@$2%70$0@@@@|@@%35%22%53%54$0@$1@@%52$2$0@@$2$1@@@|@@|@@|@"])
  fun op tdiv x = x
    val op tdiv =
    DT(((("transc",174),[("pair",[16])]),["DISK_THM"]),
       [read"%36%5%36%6%32%0%32%23%48%105%41$3@$2@@%39$1@$0@@@%44%80%41$3@$2@@$1@@%35%22%44%91$2$0@@$1$0@@@%91$1$0@@$2%70$0@@@@|@@@|@|@|@|@"])
  fun op gauge x = x
    val op gauge =
    DT(((("transc",175),[]),[]),
       [read"%33%3%34%12%48%84$1@$0@@%36%29%53$2$0@@%90%94%45@@$1$0@@@|@@|@|@"])
  fun op fine x = x
    val op fine =
    DT(((("transc",176),[("pair",[16])]),["DISK_THM"]),
       [read"%34%12%32%0%32%23%48%83$2@%39$1@$0@@@%35%22%53%46$0@%81$2@@@%90%95$2%70$0@@@$2$0@@@$3$1$0@@@@|@@|@|@|@"])
  fun op rsum x = x
    val op rsum =
    DT(((("transc",177),[("pair",[16])]),["DISK_THM"]),
       [read"%32%0%32%23%34%10%52%98%39$2@$1@@$0@@%101%40%45@%81$2@@@%22%92$1$2$0@@@%95$3%70$0@@@$3$0@@@|@@|@|@|@"])
  fun op Dint x = x
    val op Dint =
    DT(((("transc",178),[("pair",[16])]),["DISK_THM"]),
       [read"%36%5%36%6%34%10%36%16%48%66%41$3@$2@@$1@$0@@%36%9%53%90%94%45@@$0@@%56%12%44%84%29%44%91$6@$0@@%91$0@$5@@|@$0@@%32%0%32%23%53%44%105%41$7@$6@@%39$1@$0@@@%83$2@%39$1@$0@@@@%90%73%95%98%39$1@$0@@$5@@$4@@@$3@@|@|@@|@@|@@|@|@|@|@"])
  fun op rpow_def x = x
    val op rpow_def =
    DT(((("transc",209),[]),[]),
       [read"%36%5%36%6%52%97$1@$0@@%82%92$0@%86$1@@@@|@|@"])
  fun op SIN_COS_SQRT x = x
    val op SIN_COS_SQRT =
    DT(((("transc",165),
        [("arithmetic",[18]),("bool",[25,58,63]),("real",[173]),
         ("transc",[49,56,80])]),["DISK_THM"]),
       [read"%36%29%53%91%94%45@@%99$0@@@%52%99$0@@%100%95%94%69%62%71@@@@%88%77$0@@%69%63%71@@@@@@@|@"])
  fun op COS_SIN_SQRT x = x
    val op COS_SIN_SQRT =
    DT(((("transc",164),
        [("arithmetic",[18]),("bool",[25,58,63]),("real",[4,173]),
         ("transc",[49,56,80])]),["DISK_THM"]),
       [read"%36%29%53%91%94%45@@%77$0@@@%52%77$0@@%100%95%94%69%62%71@@@@%88%99$0@@%69%63%71@@@@@@@|@"])
  fun op SIN_ACS_NZ x = x
    val op SIN_ACS_NZ =
    DT(((("transc",163),
        [("real",[193]),("transc",[117,152])]),["DISK_THM"]),
       [read"%36%29%53%44%90%93%94%69%62%71@@@@@$0@@%90$0@%94%69%62%71@@@@@@%106%52%99%74$0@@@%94%45@@@@|@"])
  fun op COS_ASN_NZ x = x
    val op COS_ASN_NZ =
    DT(((("transc",162),
        [("real",[193]),("transc",[116,147])]),["DISK_THM"]),
       [read"%36%29%53%44%90%93%94%69%62%71@@@@@$0@@%90$0@%94%69%62%71@@@@@@%106%52%77%75$0@@@%94%45@@@@|@"])
  fun op COS_ATN_NZ x = x
    val op COS_ATN_NZ =
    DT(((("transc",161),
        [("real",[193]),("transc",[116,156])]),["DISK_THM"]),
       [read"%36%29%106%52%77%76$0@@@%94%45@@@|@"])
  fun op COS_SIN_SQ x = x
    val op COS_SIN_SQ =
    DT(((("transc",160),
        [("bool",[25,51,56,63]),("real",[4,173]),
         ("transc",[77,80,119])]),["DISK_THM"]),
       [read"%36%29%53%44%91%93%43%87@%94%69%63%71@@@@@@$0@@%91$0@%43%87@%94%69%63%71@@@@@@@%52%77$0@@%100%95%94%69%62%71@@@@%88%99$0@@%69%63%71@@@@@@@|@"])
  fun op SIN_COS_SQ x = x
    val op SIN_COS_SQ =
    DT(((("transc",159),
        [("bool",[25,51,56,63]),("real",[173]),
         ("transc",[77,80,121])]),["DISK_THM"]),
       [read"%36%29%53%44%91%94%45@@$0@@%91$0@%87@@@%52%99$0@@%100%95%94%69%62%71@@@@%88%77$0@@%69%63%71@@@@@@@|@"])
  fun op TAN_SEC x = x
    val op TAN_SEC =
    DT(((("transc",158),
        [("bool",[25,56,58]),("real",[4,18,26,31,135,235,236,246]),
         ("transc",[80,128])]),["DISK_THM"]),
       [read"%36%29%53%106%52%77$0@@%94%45@@@@%52%89%94%69%62%71@@@@%88%104$0@@%69%63%71@@@@@%88%85%77$0@@@%69%63%71@@@@@|@"])
  fun op TAN_ATN x = x
    val op TAN_ATN =
    DT(((("transc",157),
        [("bool",[7,25,51,56,63]),("transc",[140,154])]),["DISK_THM"]),
       [read"%36%29%53%44%90%93%43%87@%94%69%63%71@@@@@@$0@@%90$0@%43%87@%94%69%63%71@@@@@@@%52%76%104$0@@@$0@@|@"])
  fun op ATN_BOUNDS x = x
    val op ATN_BOUNDS =
    DT(((("transc",156),
        [("bool",[25,36,51,63]),("transc",[154])]),["DISK_THM"]),
       [read"%36%30%44%90%93%43%87@%94%69%63%71@@@@@@%76$0@@@%90%76$0@@%43%87@%94%69%63%71@@@@@@|@"])
  fun op ATN_TAN x = x
    val op ATN_TAN =
    DT(((("transc",155),
        [("bool",[25,36,56]),("transc",[154])]),["DISK_THM"]),
       [read"%36%30%52%104%76$0@@@$0@|@"])
  fun op ATN x = x
    val op ATN =
    DT(((("transc",154),
        [("bool",[7,15,25,53,58]),("transc",[140,143])]),["DISK_THM"]),
       [read"%36%30%44%90%93%43%87@%94%69%63%71@@@@@@%76$0@@@%44%90%76$0@@%43%87@%94%69%63%71@@@@@@%52%104%76$0@@@$0@@@|@"])
  fun op COS_ACS x = x
    val op COS_ACS =
    DT(((("transc",153),
        [("bool",[7,51,56,63]),("transc",[84,122,149])]),["DISK_THM"]),
       [read"%36%29%53%44%91%94%45@@$0@@%91$0@%87@@@%52%74%77$0@@@$0@@|@"])
  fun op ACS_BOUNDS_LT x = x
    val op ACS_BOUNDS_LT =
    DT(((("transc",152),
        [("bool",[25,51,53,58,63]),("real",[57,58,105]),
         ("transc",[79,104,150,151])]),["DISK_THM"]),
       [read"%36%30%53%44%90%93%94%69%62%71@@@@@$0@@%90$0@%94%69%62%71@@@@@@%44%90%94%45@@%74$0@@@%90%74$0@@%87@@@|@"])
  fun op ACS_BOUNDS x = x
    val op ACS_BOUNDS =
    DT(((("transc",151),
        [("bool",[25,51,63]),("transc",[149])]),["DISK_THM"]),
       [read"%36%30%53%44%91%93%94%69%62%71@@@@@$0@@%91$0@%94%69%62%71@@@@@@%44%91%94%45@@%74$0@@@%91%74$0@@%87@@@|@"])
  fun op ACS_COS x = x
    val op ACS_COS =
    DT(((("transc",150),[("bool",[25,56]),("transc",[149])]),["DISK_THM"]),
       [read"%36%30%53%44%91%93%94%69%62%71@@@@@$0@@%91$0@%94%69%62%71@@@@@@%52%77%74$0@@@$0@@|@"])
  fun op ACS x = x
    val op ACS =
    DT(((("transc",149),
        [("bool",[7,15,25,53,58]),("transc",[122,142])]),["DISK_THM"]),
       [read"%36%30%53%44%91%93%94%69%62%71@@@@@$0@@%91$0@%94%69%62%71@@@@@@%44%91%94%45@@%74$0@@@%44%91%74$0@@%87@@%52%77%74$0@@@$0@@@@|@"])
  fun op SIN_ASN x = x
    val op SIN_ASN =
    DT(((("transc",148),
        [("bool",[7,51,56,63]),("transc",[82,123,144])]),["DISK_THM"]),
       [read"%36%29%53%44%91%93%43%87@%94%69%63%71@@@@@@$0@@%91$0@%43%87@%94%69%63%71@@@@@@@%52%75%99$0@@@$0@@|@"])
  fun op ASN_BOUNDS_LT x = x
    val op ASN_BOUNDS_LT =
    DT(((("transc",147),
        [("bool",[25,51,53,63]),("real",[57,58,105]),
         ("transc",[89,103,145,146])]),["DISK_THM"]),
       [read"%36%30%53%44%90%93%94%69%62%71@@@@@$0@@%90$0@%94%69%62%71@@@@@@%44%90%93%43%87@%94%69%63%71@@@@@@%75$0@@@%90%75$0@@%43%87@%94%69%63%71@@@@@@@|@"])
  fun op ASN_BOUNDS x = x
    val op ASN_BOUNDS =
    DT(((("transc",146),
        [("bool",[25,51,63]),("transc",[144])]),["DISK_THM"]),
       [read"%36%30%53%44%91%93%94%69%62%71@@@@@$0@@%91$0@%94%69%62%71@@@@@@%44%91%93%43%87@%94%69%63%71@@@@@@%75$0@@@%91%75$0@@%43%87@%94%69%63%71@@@@@@@|@"])
  fun op ASN_SIN x = x
    val op ASN_SIN =
    DT(((("transc",145),[("bool",[25,56]),("transc",[144])]),["DISK_THM"]),
       [read"%36%30%53%44%91%93%94%69%62%71@@@@@$0@@%91$0@%94%69%62%71@@@@@@%52%99%75$0@@@$0@@|@"])
  fun op ASN x = x
    val op ASN =
    DT(((("transc",144),
        [("bool",[7,15,25,53,58]),("transc",[123,141])]),["DISK_THM"]),
       [read"%36%30%53%44%91%93%94%69%62%71@@@@@$0@@%91$0@%94%69%62%71@@@@@@%44%91%93%43%87@%94%69%63%71@@@@@@%75$0@@@%44%91%75$0@@%43%87@%94%69%63%71@@@@@@%52%99%75$0@@@$0@@@@|@"])
  fun op TAN_TOTAL x = x
    val op TAN_TOTAL =
    DT(((("transc",140),
        [("bool",[7,25,26,27,41,43,51,53,54,56,58,63,92]),
         ("lim",[16,17,18,55]),
         ("real",[10,43,58,59,60,70,89,92,103,158,193,235]),
         ("transc",[101,116,132,137,139])]),["DISK_THM"]),
       [read"%36%30%59%29%44%90%93%43%87@%94%69%63%71@@@@@@$0@@%44%90$0@%43%87@%94%69%63%71@@@@@@%52%104$0@@$1@@@|@|@"])
  fun op TAN_TOTAL_POS x = x
    val op TAN_TOTAL_POS =
    DT(((("transc",139),
        [("bool",[25,26,27,51,54,56,63]),("lim",[18,29]),
         ("real",[3,55,56,58,60,193]),
         ("transc",[79,101,115,129,137,138])]),["DISK_THM"]),
       [read"%36%30%53%91%94%45@@$0@@%58%29%44%91%94%45@@$0@@%44%90$0@%43%87@%94%69%63%71@@@@@@%52%104$0@@$1@@@|@@|@"])
  fun op TAN_TOTAL_LEMMA x = x
    val op TAN_TOTAL_LEMMA =
    DT(((("transc",138),
        [("bool",[14,25,26,27,51,53,54,58,63,96]),("lim",[1,8,18,19]),
         ("real",
         [3,15,20,22,26,45,51,58,68,94,104,106,122,136,151,152,162,168,175,
          193,208,214,218]),("sat",[1,3,5,6,7,11,12,14,15,17,18]),
         ("transc",[11,12,100,101,103,114,115,128])]),["DISK_THM"]),
       [read"%36%30%53%90%94%45@@$0@@%58%29%44%90%94%45@@$0@@%44%90$0@%43%87@%94%69%63%71@@@@@@%90$1@%104$0@@@@|@@|@"])
  fun op DIFF_TAN x = x
    val op DIFF_TAN =
    DT(((("transc",137),
        [("bool",[14,25,26,27,43,53,54,58,63]),("lim",[37,38,42]),
         ("real",[4,22,29,41,43,118,241]),
         ("sat",[1,3,5,6,7,11,12,14,15,17,18]),
         ("transc",[11,12,80,128])]),["DISK_THM"]),
       [read"%36%29%53%106%52%77$0@@%94%45@@@@%78%104@%85%88%77$0@@%69%63%71@@@@@$0@@|@"])
  fun op TAN_POS_PI2 x = x
    val op TAN_POS_PI2 =
    DT(((("transc",136),
        [("bool",[25,51,63]),("real",[20,26,106]),
         ("transc",[114,115,128])]),["DISK_THM"]),
       [read"%36%29%53%44%90%94%45@@$0@@%90$0@%43%87@%94%69%63%71@@@@@@@%90%94%45@@%104$0@@@|@"])
  fun op TAN_DOUBLE x = x
    val op TAN_DOUBLE =
    DT(((("transc",135),
        [("bool",[25,26,27,51,53,54]),("real",[146,241]),
         ("transc",[134])]),["DISK_THM"]),
       [read"%36%29%53%44%106%52%77$0@@%94%45@@@@%106%52%77%92%94%69%63%71@@@@$0@@@%94%45@@@@@%52%104%92%94%69%63%71@@@@$0@@@%43%92%94%69%63%71@@@@%104$0@@@%95%94%69%62%71@@@@%88%104$0@@%69%63%71@@@@@@@|@"])
  fun op TAN_ADD x = x
    val op TAN_ADD =
    DT(((("transc",134),
        [("bool",[25,26,27,51,52,53,54,56,58,63]),
         ("real",[9,15,17,18,19,26,29,40,45,99,201]),
         ("sat",[1,3,5,6,7,11,17,18]),
         ("transc",[87,88,128])]),["DISK_THM"]),
       [read"%36%29%36%30%53%44%106%52%77$1@@%94%45@@@@%44%106%52%77$0@@%94%45@@@@%106%52%77%89$1@$0@@@%94%45@@@@@@%52%104%89$1@$0@@@%43%89%104$1@@%104$0@@@%95%94%69%62%71@@@@%92%104$1@@%104$0@@@@@@|@|@"])
  fun op TAN_PERIODIC x = x
    val op TAN_PERIODIC =
    DT(((("transc",133),
        [("bool",[25,56]),("transc",[110,111,128])]),["DISK_THM"]),
       [read"%36%29%52%104%89$0@%92%94%69%63%71@@@@%87@@@@%104$0@@|@"])
  fun op TAN_NEG x = x
    val op TAN_NEG =
    DT(((("transc",132),
        [("bool",[25,56]),("real",[26,41]),
         ("transc",[89,90,128])]),["DISK_THM"]),
       [read"%36%29%52%104%93$0@@@%93%104$0@@@|@"])
  fun op TAN_NPI x = x
    val op TAN_NPI =
    DT(((("transc",131),
        [("bool",[25,56]),("real",[136]),
         ("transc",[113,128])]),["DISK_THM"]),
       [read"%35%22%52%104%92%94$0@@%87@@@%94%45@@|@"])
  fun op TAN_PI x = x
    val op TAN_PI =
    DT(((("transc",130),
        [("bool",[25,56]),("real",[136]),
         ("transc",[105,128])]),["DISK_THM"]),
       [read"%52%104%87@@%94%45@@"])
  fun op TAN_0 x = x
    val op TAN_0 =
    DT(((("transc",129),
        [("bool",[25,56]),("real",[136]),
         ("transc",[78,128])]),["DISK_THM"]),
       [read"%52%104%94%45@@@%94%45@@"])
  fun op SIN_ZERO x = x
    val op SIN_ZERO =
    DT(((("transc",127),
        [("arithmetic",[169]),("bool",[25,26,51,56,58,63]),
         ("real",[15,17,52,68,91,92,101,132,146,149]),
         ("transc",[89,113,125])]),["DISK_THM"]),
       [read"%36%29%48%52%99$0@@%94%45@@@%72%57%22%44%67$0@@%52$1@%92%94$0@@%43%87@%94%69%63%71@@@@@@@|@@%57%22%44%67$0@@%52$1@%93%92%94$0@@%43%87@%94%69%63%71@@@@@@@@|@@@|@"])
  fun op COS_ZERO x = x
    val op COS_ZERO =
    DT(((("transc",126),
        [("arithmetic",[24,27,64,71,159,170]),
         ("bool",[14,25,26,27,51,54,56,58,63]),("num",[9]),
         ("real",[18,31,39,40,43,52,92,101,131,146,149,159,162]),
         ("transc",[88,90,100,104,105,124])]),["DISK_THM"]),
       [read"%36%29%48%52%77$0@@%94%45@@@%72%57%22%44%106%67$0@@@%52$1@%92%94$0@@%43%87@%94%69%63%71@@@@@@@|@@%57%22%44%106%67$0@@@%52$1@%93%92%94$0@@%43%87@%94%69%63%71@@@@@@@@|@@@|@"])
  fun op SIN_ZERO_LEMMA x = x
    val op SIN_ZERO_LEMMA =
    DT(((("transc",125),
        [("arithmetic",[64,159,166,170]),
         ("bool",[25,26,27,51,53,54,56,58,63]),
         ("real",[4,18,31,39,40,58,61,86,96,122,131,173]),
         ("transc",[88,100,101,124])]),["DISK_THM"]),
       [read"%36%29%53%44%91%94%45@@$0@@%52%99$0@@%94%45@@@@%57%22%44%67$0@@%52$1@%92%94$0@@%43%87@%94%69%63%71@@@@@@@|@@|@"])
  fun op COS_ZERO_LEMMA x = x
    val op COS_ZERO_LEMMA =
    DT(((("transc",124),
        [("arithmetic",[25,64,158,167]),("bool",[7,25,51,53,54,56,58,63]),
         ("numeral",[3,6]),
         ("real",
         [4,7,15,17,18,22,31,39,40,42,43,58,67,73,95,130,131,132,144,145,
          148,157,174,276]),
         ("transc",[88,89,90,100,101,102,112,113,122])]),["DISK_THM"]),
       [read"%36%29%53%44%91%94%45@@$0@@%52%77$0@@%94%45@@@@%57%22%44%106%67$0@@@%52$1@%92%94$0@@%43%87@%94%69%63%71@@@@@@@|@@|@"])
  fun op SIN_TOTAL x = x
    val op SIN_TOTAL =
    DT(((("transc",123),
        [("bool",[7,25,51,53,56,58,63]),
         ("real",[29,33,40,43,84,96,149,156,157,159,161,200]),
         ("transc",[88,100,103,122])]),["DISK_THM"]),
       [read"%36%30%53%44%91%93%94%69%62%71@@@@@$0@@%91$0@%94%69%62%71@@@@@@%59%29%44%91%93%43%87@%94%69%63%71@@@@@@$0@@%44%91$0@%43%87@%94%69%63%71@@@@@@%52%99$0@@$1@@@|@@|@"])
  fun op COS_TOTAL x = x
    val op COS_TOTAL =
    DT(((("transc",122),
        [("bool",[7,25,26,27,36,51,53,54,56,63]),("lim",[16,17,18,30,55]),
         ("real",[10,11,58,59,60,91]),
         ("transc",[12,79,102,104,117])]),["DISK_THM"]),
       [read"%36%30%53%44%91%93%94%69%62%71@@@@@$0@@%91$0@%94%69%62%71@@@@@@%59%29%44%91%94%45@@$0@@%44%91$0@%87@@%52%77$0@@$1@@@|@@|@"])
  fun op SIN_POS_PI_LE x = x
    val op SIN_POS_PI_LE =
    DT(((("transc",121),
        [("bool",[25,51,52,56,63]),("real",[56]),
         ("transc",[78,105,117])]),["DISK_THM"]),
       [read"%36%29%53%44%91%94%45@@$0@@%91$0@%87@@@%91%94%45@@%99$0@@@|@"])
  fun op SIN_POS_PI2_LE x = x
    val op SIN_POS_PI2_LE =
    DT(((("transc",120),
        [("bool",[25,26,27,51,52,53,56,63]),("real",[11,56,74]),
         ("transc",[78,101,103,114])]),["DISK_THM"]),
       [read"%36%29%53%44%91%94%45@@$0@@%91$0@%43%87@%94%69%63%71@@@@@@@%91%94%45@@%99$0@@@|@"])
  fun op COS_POS_PI_LE x = x
    val op COS_POS_PI_LE =
    DT(((("transc",119),
        [("bool",[25,51,52,56,63]),("real",[56]),
         ("transc",[90,100,116])]),["DISK_THM"]),
       [read"%36%29%53%44%91%93%43%87@%94%69%63%71@@@@@@$0@@%91$0@%43%87@%94%69%63%71@@@@@@@%91%94%45@@%77$0@@@|@"])
  fun op COS_POS_PI2_LE x = x
    val op COS_POS_PI2_LE =
    DT(((("transc",118),
        [("bool",[25,51,52,56,63]),("real",[56,74]),
         ("transc",[79,100,115])]),["DISK_THM"]),
       [read"%36%29%53%44%91%94%45@@$0@@%91$0@%43%87@%94%69%63%71@@@@@@@%91%94%45@@%77$0@@@|@"])
  fun op SIN_POS_PI x = x
    val op SIN_POS_PI =
    DT(((("transc",117),
        [("bool",[25,51,58,63]),("real",[8,93,149,154,155]),
         ("transc",[90,106,116])]),["DISK_THM"]),
       [read"%36%29%53%44%90%94%45@@$0@@%90$0@%87@@@%90%94%45@@%99$0@@@|@"])
  fun op COS_POS_PI x = x
    val op COS_POS_PI =
    DT(((("transc",116),
        [("bool",[25,51,58,63]),("real",[10,43,65,74,158]),
         ("transc",[79,90,115])]),["DISK_THM"]),
       [read"%36%29%53%44%90%93%43%87@%94%69%63%71@@@@@@$0@@%90$0@%43%87@%94%69%63%71@@@@@@@%90%94%45@@%77$0@@@|@"])
  fun op COS_POS_PI2 x = x
    val op COS_POS_PI2 =
    DT(((("transc",115),
        [("bool",[7,25,51,53,56,63,92]),("lim",[18,30]),
         ("real",[48,58,61,73]),("sat",[1,3,5,6,7,11,15]),
         ("transc",[12,79,97,100,101])]),["DISK_THM"]),
       [read"%36%29%53%44%90%94%45@@$0@@%90$0@%43%87@%94%69%63%71@@@@@@@%90%94%45@@%77$0@@@|@"])
  fun op SIN_POS_PI2 x = x
    val op SIN_POS_PI2 =
    DT(((("transc",114),
        [("bool",[25,51,63]),("real",[12]),
         ("transc",[94,101])]),["DISK_THM"]),
       [read"%36%29%53%44%90%94%45@@$0@@%90$0@%43%87@%94%69%63%71@@@@@@@%90%94%45@@%99$0@@@|@"])
  fun op SIN_NPI x = x
    val op SIN_NPI =
    DT(((("transc",113),
        [("arithmetic",[64]),("bool",[14,25,56,58]),("num",[9]),
         ("real",[18,27,31,39,40,131]),
         ("transc",[78,87,105])]),["DISK_THM"]),
       [read"%35%22%52%99%92%94$0@@%87@@@%94%45@@|@"])
  fun op COS_NPI x = x
    val op COS_NPI =
    DT(((("transc",112),
        [("arithmetic",[64]),("bool",[14,25,56,58]),("num",[9]),
         ("real",[15,18,31,39,40,131,162,233]),
         ("transc",[79,88,104,105])]),["DISK_THM"]),
       [read"%35%22%52%77%92%94$0@@%87@@@%88%93%94%69%62%71@@@@@$0@@|@"])
  fun op COS_PERIODIC x = x
    val op COS_PERIODIC =
    DT(((("transc",111),
        [("bool",[25,56,58]),("real",[6,43,146]),
         ("transc",[109])]),["DISK_THM"]),
       [read"%36%29%52%77%89$0@%92%94%69%63%71@@@@%87@@@@%77$0@@|@"])
  fun op SIN_PERIODIC x = x
    val op SIN_PERIODIC =
    DT(((("transc",110),
        [("bool",[25,56,58]),("real",[6,43,146]),
         ("transc",[108])]),["DISK_THM"]),
       [read"%36%29%52%99%89$0@%92%94%69%63%71@@@@%87@@@@%99$0@@|@"])
  fun op COS_PERIODIC_PI x = x
    val op COS_PERIODIC_PI =
    DT(((("transc",109),
        [("bool",[25,56,58]),("real",[29,40,42,162]),
         ("transc",[88,104,105])]),["DISK_THM"]),
       [read"%36%29%52%77%89$0@%87@@@%93%77$0@@@|@"])
  fun op SIN_PERIODIC_PI x = x
    val op SIN_PERIODIC_PI =
    DT(((("transc",108),
        [("bool",[25,56,58]),("real",[27,29,40,42]),
         ("transc",[87,104,105])]),["DISK_THM"]),
       [read"%36%29%52%99%89$0@%87@@@%93%99$0@@@|@"])
  fun op COS_SIN x = x
    val op COS_SIN =
    DT(((("transc",107),
        [("bool",[25,56]),("real",[18,22,27,39]),
         ("transc",[87,90,100,103])]),["DISK_THM"]),
       [read"%36%29%52%77$0@@%99%95%43%87@%94%69%63%71@@@@@$0@@@|@"])
  fun op SIN_COS x = x
    val op SIN_COS =
    DT(((("transc",106),
        [("bool",[25,56]),("real",[7,18,22,39,43]),
         ("transc",[88,89,100,103])]),["DISK_THM"]),
       [read"%36%29%52%99$0@@%77%95%43%87@%94%69%63%71@@@@@$0@@@|@"])
  fun op SIN_PI x = x
    val op SIN_PI =
    DT(((("transc",105),
        [("bool",[25,54,58]),("numeral",[3,6]),
         ("real",[7,39,40,130,146,147]),
         ("transc",[87,100])]),["DISK_THM"]), [read"%52%99%87@@%94%45@@"])
  fun op COS_PI x = x
    val op COS_PI =
    DT(((("transc",104),
        [("bool",[25,54,58]),("numeral",[3,6]),
         ("real",[18,39,130,146,147,161]),
         ("transc",[88,100,103])]),["DISK_THM"]),
       [read"%52%77%87@@%93%94%69%62%71@@@@@"])
  fun op SIN_PI2 x = x
    val op SIN_PI2 =
    DT(((("transc",103),
        [("bool",[25,26,51,53,56,58,63]),
         ("real",[18,27,36,39,43,45,50,65,74,87,197,241]),
         ("transc",[80,94,100,101])]),["DISK_THM"]),
       [read"%52%99%43%87@%94%69%63%71@@@@@@%94%69%62%71@@@@"])
  fun op PI_POS x = x
    val op PI_POS =
    DT(((("transc",102),
        [("bool",[25,51,58,63]),("real",[80,149]),
         ("transc",[101])]),["DISK_THM"]), [read"%90%94%45@@%87@"])
  fun op PI2_BOUNDS x = x
    val op PI2_BOUNDS =
    DT(((("transc",101),
        [("bool",[7,14,15,25,26,27,51,53,54,58,63]),("real",[3,57,105]),
         ("transc",[79,96,97,99,100])]),["DISK_THM"]),
       [read"%44%90%94%45@@%43%87@%94%69%63%71@@@@@@%90%43%87@%94%69%63%71@@@@@%94%69%63%71@@@@@"])
  fun op COS_PI2 x = x
    val op COS_PI2 =
    DT(((("transc",100),
        [("bool",[7,14,15,25,26,56,58]),("transc",[97,99])]),["DISK_THM"]),
       [read"%52%77%43%87@%94%69%63%71@@@@@@%94%45@@"])
  fun op PI2 x = x
    val op PI2 =
    DT(((("transc",99),
        [("bool",[25,54,56,63]),("numeral",[3,6]),
         ("real",[15,17,18,19,26,130]),("transc",[98])]),["DISK_THM"]),
       [read"%52%43%87@%94%69%63%71@@@@@%61%29%44%91%94%45@@$0@@%44%91$0@%94%69%63%71@@@@@%52%77$0@@%94%45@@@@|@@"])
  fun op COS_ISZERO x = x
    val op COS_ISZERO =
    DT(((("transc",97),
        [("arithmetic",[46]),("bool",[7,25,26,27,36,43,51,52,53,56,63,92]),
         ("lim",[16,17,18,30,55]),("real",[10,58,59,60,73,91,128,193]),
         ("sat",[1,3,5,6,7,11,15]),
         ("transc",[12,79,94,96])]),["DISK_THM"]),
       [read"%59%29%44%91%94%45@@$0@@%44%91$0@%94%69%63%71@@@@@%52%77$0@@%94%45@@@@|@"])
  fun op COS_2 x = x
    val op COS_2 =
    DT(((("transc",96),
        [("arithmetic",[17,18,19,24,37,64,71,82,156,157]),
         ("bool",[8,14,25,26,27,51,52,54,56,58,63,64]),("num",[7]),
         ("numeral",[0,3,5,6,7,9,17,21,22,32,34,35,39,40,41]),
         ("prim_rec",[7]),
         ("real",
         [3,6,7,8,12,15,17,18,22,26,29,30,41,42,43,45,65,94,102,106,111,
          128,129,130,131,132,135,175,188,193,195,233,239,240,241,252,255,
          280,301]),("seq",[44,46,53,56]),("transc",[95])]),["DISK_THM"]),
       [read"%90%77%94%69%63%71@@@@@%94%45@@"])
  fun op COS_PAIRED x = x
    val op COS_PAIRED =
    DT(((("transc",95),
        [("arithmetic",[64,72,159,166,167,216]),
         ("bool",[14,25,26,27,53,58,63,64]),("numeral",[3,7]),
         ("real",[27,39,301]),("seq",[44,51]),
         ("transc",[1,5])]),["DISK_THM"]),
       [read"%36%29%103%22%92%43%88%93%94%69%62%71@@@@@$0@@%94%68%37%69%63%71@@@$0@@@@@%88$1@%37%69%63%71@@@$0@@@|@%77$0@@|@"])
  fun op SIN_POS x = x
    val op SIN_POS =
    DT(((("transc",94),
        [("arithmetic",[17,18,24,38,46,64,71,156,157]),
         ("bool",[25,26,27,51,52,54,56,58,63]),("num",[7]),
         ("prim_rec",[7,15]),
         ("real",
         [12,15,17,18,20,22,26,41,45,58,59,71,94,102,106,111,128,129,130,
          132,167,175,188,193,233,241,252,255,280,301]),
         ("seq",[44,46,49,51]),("transc",[93])]),["DISK_THM"]),
       [read"%36%29%53%44%90%94%45@@$0@@%90$0@%94%69%63%71@@@@@@%90%94%45@@%99$0@@@|@"])
  fun op SIN_PAIRED x = x
    val op SIN_PAIRED =
    DT(((("transc",93),
        [("arithmetic",[64,65,72,159,166,167,216]),
         ("bool",[14,25,26,27,53,58,63,64]),("numeral",[3,7]),
         ("real",[7,39,301]),("seq",[44,51]),
         ("transc",[2,4])]),["DISK_THM"]),
       [read"%36%29%103%22%92%43%88%93%94%69%62%71@@@@@$0@@%94%68%38%37%69%63%71@@@$0@@%69%62%71@@@@@@@%88$1@%38%37%69%63%71@@@$0@@%69%62%71@@@@@|@%99$0@@|@"])
  fun op COS_DOUBLE x = x
    val op COS_DOUBLE =
    DT(((("transc",92),
        [("bool",[25,56,58]),("real",[146,241]),
         ("transc",[88])]),["DISK_THM"]),
       [read"%36%29%52%77%92%94%69%63%71@@@@$0@@@%95%88%77$0@@%69%63%71@@@@%88%99$0@@%69%63%71@@@@@|@"])
  fun op SIN_DOUBLE x = x
    val op SIN_DOUBLE =
    DT(((("transc",91),
        [("bool",[58]),("real",[15,146]),("transc",[87])]),["DISK_THM"]),
       [read"%36%29%52%99%92%94%69%63%71@@@@$0@@@%92%94%69%63%71@@@@%92%99$0@@%77$0@@@@|@"])
  fun op COS_NEG x = x
    val op COS_NEG =
    DT(((("transc",90),
        [("bool",[25,56]),("real",[87,199,241]),
         ("transc",[86])]),["DISK_THM"]),
       [read"%36%29%52%77%93$0@@@%77$0@@|@"])
  fun op SIN_NEG x = x
    val op SIN_NEG =
    DT(((("transc",89),
        [("bool",[25,56]),("real",[36,199,241]),
         ("transc",[86])]),["DISK_THM"]),
       [read"%36%29%52%99%93$0@@@%93%99$0@@@|@"])
  fun op COS_ADD x = x
    val op COS_ADD =
    DT(((("transc",88),
        [("bool",[25,56]),("real",[87,199,241]),
         ("transc",[85])]),["DISK_THM"]),
       [read"%36%29%36%30%52%77%89$1@$0@@@%95%92%77$1@@%77$0@@@%92%99$1@@%99$0@@@@|@|@"])
  fun op SIN_ADD x = x
    val op SIN_ADD =
    DT(((("transc",87),
        [("bool",[25,56]),("real",[87,199,241]),
         ("transc",[85])]),["DISK_THM"]),
       [read"%36%29%36%30%52%99%89$1@$0@@@%89%92%99$1@@%77$0@@@%92%77$1@@%99$0@@@@|@|@"])
  fun op SIN_COS_NEG x = x
    val op SIN_COS_NEG =
    DT(((("transc",86),
        [("arithmetic",[18]),("bool",[14,25,54,56,58,63,64]),
         ("lim",[32,35,36,37,38,39,60]),("numeral",[3,7,15,16]),
         ("real",[7,15,17,22,29,38,41,42,43,86,92,161,173,234,240]),
         ("sat",[1,3,5,6,7,11,12,15,17,18]),
         ("transc",[11,12,78,79])]),["DISK_THM"]),
       [read"%36%29%52%89%88%89%99%93$0@@@%99$0@@@%69%63%71@@@@%88%95%77%93$0@@@%77$0@@@%69%63%71@@@@@%94%45@@|@"])
  fun op SIN_COS_ADD x = x
    val op SIN_COS_ADD =
    DT(((("transc",85),
        [("arithmetic",[18]),("bool",[14,25,54,56,58,63,64]),
         ("lim",[31,32,33,36,37,38,39,60]),("numeral",[3,7,15,16]),
         ("real",
         [7,15,17,18,22,27,29,38,39,41,42,43,86,161,162,173,234,240]),
         ("sat",[1,3,5,6,7,11,12,15,17,18]),
         ("transc",[11,12,78,79])]),["DISK_THM"]),
       [read"%36%29%36%30%52%89%88%95%99%89$1@$0@@@%89%92%99$1@@%77$0@@@%92%77$1@@%99$0@@@@@%69%63%71@@@@%88%95%77%89$1@$0@@@%95%92%77$1@@%77$0@@@%92%99$1@@%99$0@@@@@%69%63%71@@@@@%94%45@@|@|@"])
  fun op COS_BOUNDS x = x
    val op COS_BOUNDS =
    DT(((("transc",84),
        [("bool",[25,58,63]),("real",[232]),
         ("transc",[83])]),["DISK_THM"]),
       [read"%36%29%44%91%93%94%69%62%71@@@@@%77$0@@@%91%77$0@@%94%69%62%71@@@@@|@"])
  fun op COS_BOUND x = x
    val op COS_BOUND =
    DT(((("transc",83),
        [("bool",[25,26,27,53,54,58,63]),
         ("real",[6,11,22,28,51,72,94,165,241,249,251]),
         ("sat",[1,3,5,6,7,11,15]),("transc",[80])]),["DISK_THM"]),
       [read"%36%29%91%73%77$0@@@%94%69%62%71@@@@|@"])
  fun op SIN_BOUNDS x = x
    val op SIN_BOUNDS =
    DT(((("transc",82),
        [("bool",[25,58,63]),("real",[232]),
         ("transc",[81])]),["DISK_THM"]),
       [read"%36%29%44%91%93%94%69%62%71@@@@@%99$0@@@%91%99$0@@%94%69%62%71@@@@@|@"])
  fun op SIN_BOUND x = x
    val op SIN_BOUND =
    DT(((("transc",81),
        [("bool",[25,26,27,53,54,58,63]),
         ("real",[4,6,11,22,28,51,72,94,166,241,249,251]),
         ("sat",[1,3,5,6,7,11,15]),("transc",[80])]),["DISK_THM"]),
       [read"%36%29%91%73%99$0@@@%94%69%62%71@@@@|@"])
  fun op SIN_CIRCLE x = x
    val op SIN_CIRCLE =
    DT(((("transc",80),
        [("arithmetic",[18,65]),("bool",[14,25,56,58,63]),
         ("lim",[32,37,38,39,60]),
         ("real",[7,15,17,18,22,29,41,42,87,233,234,240]),
         ("sat",[1,3,5,6,7,11,12,15,17,18]),
         ("transc",[11,12,78,79])]),["DISK_THM"]),
       [read"%36%29%52%89%88%99$0@@%69%63%71@@@@%88%77$0@@%69%63%71@@@@@%94%69%62%71@@@@|@"])
  fun op COS_0 x = x
    val op COS_0 =
    DT(((("transc",79),
        [("arithmetic",[12,17,18,24,41,64,71,101,156,214]),
         ("bool",[25,51,56,58,63,64]),("prim_rec",[7]),
         ("real",[3,7,29,40,135,233,234,280]),("seq",[46,47]),
         ("transc",[1])]),["DISK_THM"]),
       [read"%52%77%94%45@@@%94%69%62%71@@@@"])
  fun op SIN_0 x = x
    val op SIN_0 =
    DT(((("transc",78),
        [("arithmetic",[46,159,170]),
         ("bool",[25,26,27,30,53,54,56,58,63,64]),("real",[39,40,234,280]),
         ("seq",[46,47]),("transc",[2])]),["DISK_THM"]),
       [read"%52%99%94%45@@@%94%45@@"])
  fun op SQRT_EQ x = x
    val op SQRT_EQ =
    DT(((("transc",77),
        [("arithmetic",[18]),("bool",[25,51,53,56,58,63]),
         ("real",[45,51,60,62,72,87,124,193,197,234,241]),
         ("sat",[1,3,5,6,7,11,15]),
         ("transc",[49,55,57,63])]),["DISK_THM"]),
       [read"%36%29%36%30%53%44%52%88$1@%69%63%71@@@@$0@@%91%94%45@@$1@@@%52$1@%100$0@@@|@|@"])
  fun op REAL_DIV_SQRT x = x
    val op REAL_DIV_SQRT =
    DT(((("transc",76),
        [("arithmetic",[18]),("bool",[25,27,30,51,53,56,58,63]),
         ("real",[11,17,26,29,30,39,56,187,193,234,236,241,246]),
         ("transc",[63,65,66,68,70])]),["DISK_THM"]),
       [read"%36%29%53%91%94%45@@$0@@%52%43$0@%100$0@@@%100$0@@@|@"])
  fun op SQRT_EVEN_POW2 x = x
    val op SQRT_EVEN_POW2 =
    DT(((("transc",75),
        [("arithmetic",[18,24,72,169,209,218]),("bool",[25,26,53,56,63]),
         ("prim_rec",[7]),("real",[127,243,263]),
         ("transc",[70])]),["DISK_THM"]),
       [read"%35%22%53%67$0@@%52%100%88%94%69%63%71@@@@$0@@@%88%94%69%63%71@@@@%65$0@%69%63%71@@@@@@|@"])
  fun op SQRT_MONO_LE x = x
    val op SQRT_MONO_LE =
    DT(((("transc",74),
        [("arithmetic",[18]),("bool",[25,36,63]),
         ("transc",[49,62])]),["DISK_THM"]),
       [read"%36%29%36%30%53%44%91%94%45@@$1@@%91$1@$0@@@%91%100$1@@%100$0@@@|@|@"])
  fun op SQRT_DIV x = x
    val op SQRT_DIV =
    DT(((("transc",73),
        [("arithmetic",[18]),("bool",[25,36,63]),
         ("transc",[49,61])]),["DISK_THM"]),
       [read"%36%29%36%30%53%44%91%94%45@@$1@@%91%94%45@@$0@@@%52%100%43$1@$0@@@%43%100$1@@%100$0@@@@|@|@"])
  fun op SQRT_INV x = x
    val op SQRT_INV =
    DT(((("transc",72),
        [("arithmetic",[18]),("bool",[25,36,63]),
         ("transc",[49,60])]),["DISK_THM"]),
       [read"%36%29%53%91%94%45@@$0@@%52%100%85$0@@@%85%100$0@@@@|@"])
  fun op SQRT_MUL x = x
    val op SQRT_MUL =
    DT(((("transc",71),
        [("arithmetic",[18]),("bool",[25,36,63]),
         ("transc",[49,59])]),["DISK_THM"]),
       [read"%36%29%36%30%53%44%91%94%45@@$1@@%91%94%45@@$0@@@%52%100%92$1@$0@@@%92%100$1@@%100$0@@@@|@|@"])
  fun op SQRT_POS_UNIQ x = x
    val op SQRT_POS_UNIQ =
    DT(((("transc",70),
        [("arithmetic",[18]),("bool",[25,36,63]),
         ("transc",[49,58])]),["DISK_THM"]),
       [read"%36%29%36%30%53%44%91%94%45@@$1@@%44%91%94%45@@$0@@%52%88$0@%69%63%71@@@@$1@@@@%52%100$1@@$0@@|@|@"])
  fun op POW_2_SQRT x = x
    val op POW_2_SQRT =
    DT(((("transc",69),
        [("arithmetic",[18]),("bool",[25,63]),
         ("transc",[49,56])]),["DISK_THM"]),
       [read"%53%91%94%45@@%29@@%52%100%88%29@%69%63%71@@@@@%29@@"])
  fun op SQRT_POW_2 x = x
    val op SQRT_POW_2 =
    DT(((("transc",68),
        [("bool",[25,36,53]),("transc",[67])]),["DISK_THM"]),
       [read"%36%29%53%91%94%45@@$0@@%52%88%100$0@@%69%63%71@@@@$0@@|@"])
  fun op SQRT_POW2 x = x
    val op SQRT_POW2 =
    DT(((("transc",67),
        [("arithmetic",[18]),("bool",[25,26,63]),("real",[247]),
         ("transc",[49,55])]),["DISK_THM"]),
       [read"%36%29%48%52%88%100$0@@%69%63%71@@@@$0@@%91%94%45@@$0@@|@"])
  fun op SQRT_POS_LE x = x
    val op SQRT_POS_LE =
    DT(((("transc",66),
        [("bool",[13,25,26,27,30,47,48,51,52,53,54,56,63,71,93,94,96]),
         ("real",[56]),("sat",[1,3,5,6,7,11,12,13,14,15]),
         ("transc",[63,65])]),["DISK_THM"]),
       [read"%36%29%53%91%94%45@@$0@@%91%94%45@@%100$0@@@|@"])
  fun op SQRT_POS_LT x = x
    val op SQRT_POS_LT =
    DT(((("transc",65),
        [("arithmetic",[18]),("bool",[25,63]),
         ("transc",[24,49,51])]),["DISK_THM"]),
       [read"%36%29%53%90%94%45@@$0@@%90%94%45@@%100$0@@@|@"])
  fun op SQRT_1 x = x
    val op SQRT_1 =
    DT(((("transc",64),
        [("arithmetic",[18]),("bool",[25,56]),
         ("transc",[49,53])]),["DISK_THM"]),
       [read"%52%100%94%69%62%71@@@@@%94%69%62%71@@@@"])
  fun op SQRT_0 x = x
    val op SQRT_0 =
    DT(((("transc",63),
        [("arithmetic",[18]),("bool",[25,56]),
         ("transc",[49,52])]),["DISK_THM"]),
       [read"%52%100%94%45@@@%94%45@@"])
  fun op ROOT_MONO_LE x = x
    val op ROOT_MONO_LE =
    DT(((("transc",62),
        [("bool",[25,26,27,47,48,51,53,54,58,63,93,94,96]),("num",[7]),
         ("real",[51,61,261]),("sat",[1,3,5,6,7,11,12,13,14,15]),
         ("transc",[55,57])]),["DISK_THM"]),
       [read"%36%29%36%30%53%44%91%94%45@@$1@@%91$1@$0@@@%91%96%70%22@@$1@@%96%70%22@@$0@@@|@|@"])
  fun op ROOT_DIV x = x
    val op ROOT_DIV =
    DT(((("transc",61),
        [("bool",[25,51,53,56,63]),("real",[26,121]),
         ("transc",[59,60])]),["DISK_THM"]),
       [read"%35%22%36%29%36%30%53%44%91%94%45@@$1@@%91%94%45@@$0@@@%52%96%70$2@@%43$1@$0@@@%43%96%70$2@@$1@@%96%70$2@@$0@@@@|@|@|@"])
  fun op ROOT_INV x = x
    val op ROOT_INV =
    DT(((("transc",60),
        [("bool",[25,53,56,58,63]),("real",[21,56,121,193,234,236]),
         ("transc",[55,57,58])]),["DISK_THM"]),
       [read"%35%22%36%29%53%91%94%45@@$0@@%52%96%70$1@@%85$0@@@%85%96%70$1@@$0@@@@|@|@"])
  fun op ROOT_MUL x = x
    val op ROOT_MUL =
    DT(((("transc",59),
        [("bool",[25,51,56,63]),("real",[71,246]),
         ("transc",[55,57,58])]),["DISK_THM"]),
       [read"%35%22%36%29%36%30%53%44%91%94%45@@$1@@%91%94%45@@$0@@@%52%96%70$2@@%92$1@$0@@@%92%96%70$2@@$1@@%96%70$2@@$0@@@@|@|@|@"])
  fun op ROOT_POS_UNIQ x = x
    val op ROOT_POS_UNIQ =
    DT(((("transc",58),[("bool",[25,63]),("transc",[56])]),["DISK_THM"]),
       [read"%35%22%36%29%36%30%53%44%91%94%45@@$1@@%44%91%94%45@@$0@@%52%88$0@%70$2@@@$1@@@@%52%96%70$2@@$1@@$0@@|@|@|@"])
  fun op ROOT_POS x = x
    val op ROOT_POS =
    DT(((("transc",57),
        [("bool",[25,63]),("real",[55,56,58]),
         ("transc",[52,54])]),["DISK_THM"]),
       [read"%35%22%36%29%53%91%94%45@@$0@@%91%94%45@@%96%70$1@@$0@@@|@|@"])
  fun op POW_ROOT_POS x = x
    val op POW_ROOT_POS =
    DT(((("transc",56),
        [("bool",[25,26,27,51,53,54,56,63,69]),
         ("real",[11,56,57,58,234,252,258,259]),
         ("transc",[48])]),["DISK_THM"]),
       [read"%35%22%36%29%53%91%94%45@@$0@@%52%96%70$1@@%88$0@%70$1@@@@$0@@|@|@"])
  fun op ROOT_POW_POS x = x
    val op ROOT_POW_POS =
    DT(((("transc",55),
        [("bool",[25,56]),("real",[56,234]),
         ("transc",[50,51,52])]),["DISK_THM"]),
       [read"%35%22%36%29%53%91%94%45@@$0@@%52%88%96%70$1@@$0@@%70$1@@@$0@@|@|@"])
  fun op ROOT_POS_LT x = x
    val op ROOT_POS_LT =
    DT(((("transc",54),
        [("bool",[25,63]),("transc",[24,51])]),["DISK_THM"]),
       [read"%35%22%36%29%53%90%94%45@@$0@@%90%94%45@@%96%70$1@@$0@@@|@|@"])
  fun op ROOT_1 x = x
    val op ROOT_1 =
    DT(((("transc",53),
        [("bool",[25,56]),("real",[74,136]),
         ("transc",[14,38,51])]),["DISK_THM"]),
       [read"%35%22%52%96%70$0@@%94%69%62%71@@@@@%94%69%62%71@@@@|@"])
  fun op ROOT_0 x = x
    val op ROOT_0 =
    DT(((("transc",52),
        [("bool",[14,25,26,27,51,53,56,69]),("num",[9]),
         ("real",[11,29,39,45,233]),("transc",[48])]),["DISK_THM"]),
       [read"%35%22%52%96%70$0@@%94%45@@@%94%45@@|@"])
  fun op ROOT_LN x = x
    val op ROOT_LN =
    DT(((("transc",51),
        [("bool",[25,26,27,36,51,52,53,54,58,63,69]),("num",[7]),
         ("real",[15,17,19,26,29,98,130]),
         ("transc",[24,34,37,43,48,50])]),["DISK_THM"]),
       [read"%35%22%36%29%53%90%94%45@@$0@@%52%96%70$1@@$0@@%82%43%86$0@@%94%70$1@@@@@@|@|@"])
  fun op ROOT_LT_LEMMA x = x
    val op ROOT_LT_LEMMA =
    DT(((("transc",50),
        [("bool",[25,26,27,54,58,63]),("num",[7]),
         ("real",[15,17,19,26,29,130]),("transc",[25,35])]),["DISK_THM"]),
       [read"%35%22%36%29%53%90%94%45@@$0@@%52%88%82%43%86$0@@%94%70$1@@@@@%70$1@@@$0@@|@|@"])
  fun op EXP_CONVERGES x = x
    val op EXP_CONVERGES =
    DT(((("transc",3),
        [("arithmetic",[46,56,64,93,143,156,157]),
         ("bool",[25,26,27,51,53,54,58,63]),("num",[7]),("prim_rec",[7]),
         ("real",
         [15,17,26,58,61,74,105,128,129,130,132,150,175,177,184,190,210,
          211,214,215,218,239,240,275]),("seq",[45,70]),
         ("transc",[0])]),["DISK_THM"]),
       [read"%36%29%103%22%92%22%85%94%68$0@@@|$0@@%88$1@$0@@|@%82$0@@|@"])
  fun op SIN_CONVERGES x = x
    val op SIN_CONVERGES =
    DT(((("transc",4),
        [("arithmetic",[157]),("bool",[25,26,27,30,51,63,64]),
         ("real",[18,26,39,58,71,106,129,190,191,206,210,211,218,237,245]),
         ("seq",[44,45,61]),("transc",[2,3])]),["DISK_THM"]),
       [read"%36%29%103%22%92%22%64%67$0@@%94%45@@%43%88%93%94%69%62%71@@@@@%65%42$0@%69%62%71@@@@%69%63%71@@@@@%94%68$0@@@@|$0@@%88$1@$0@@|@%99$0@@|@"])
  fun op COS_CONVERGES x = x
    val op COS_CONVERGES =
    DT(((("transc",5),
        [("arithmetic",[157]),("bool",[25,26,27,30,51,63,64]),
         ("real",[18,26,39,58,71,106,129,190,191,206,210,211,218,237,245]),
         ("seq",[44,45,61]),("transc",[1,3])]),["DISK_THM"]),
       [read"%36%29%103%22%92%22%64%67$0@@%43%88%93%94%69%62%71@@@@@%65$0@%69%63%71@@@@@%94%68$0@@@@%94%45@@|$0@@%88$1@$0@@|@%77$0@@|@"])
  fun op EXP_FDIFF x = x
    val op EXP_FDIFF =
    DT(((("transc",6),
        [("arithmetic",[156,157]),("bool",[14,25,26,27,54,58,63]),
         ("powser",[5]),("prim_rec",[7]),
         ("real",[17,18,30,98,105,129,132,175])]),["DISK_THM"]),
       [read"%49%79%22%85%94%68$0@@@|@@%22%85%94%68$0@@@|@"])
  fun op SIN_FDIFF x = x
    val op SIN_FDIFF =
    DT(((("transc",7),
        [("arithmetic",[12,65,156,157]),
         ("bool",[14,25,26,27,30,54,56,58,63,64]),("powser",[5]),
         ("prim_rec",[7]),
         ("real",[15,17,18,26,30,40,98,105,129,132,175])]),["DISK_THM"]),
       [read"%49%79%22%64%67$0@@%94%45@@%43%88%93%94%69%62%71@@@@@%65%42$0@%69%62%71@@@@%69%63%71@@@@@%94%68$0@@@@|@@%22%64%67$0@@%43%88%93%94%69%62%71@@@@@%65$0@%69%63%71@@@@@%94%68$0@@@@%94%45@@|@"])
  fun op COS_FDIFF x = x
    val op COS_FDIFF =
    DT(((("transc",8),
        [("arithmetic",[12,27,64,65,72,75,156,157,158,170,216]),
         ("bool",[8,14,25,26,27,30,53,54,56,58,63,64]),
         ("numeral",[3,5,7,17,21,34,35,40,41]),("powser",[5]),
         ("prim_rec",[7]),
         ("real",
         [15,17,18,26,30,40,41,92,98,102,105,129,132,175,
          233])]),["DISK_THM"]),
       [read"%49%79%22%64%67$0@@%43%88%93%94%69%62%71@@@@@%65$0@%69%63%71@@@@@%94%68$0@@@@%94%45@@|@@%22%93%22%64%67$0@@%94%45@@%43%88%93%94%69%62%71@@@@@%65%42$0@%69%62%71@@@@%69%63%71@@@@@%94%68$0@@@@|$0@@|@"])
  fun op SIN_NEGLEMMA x = x
    val op SIN_NEGLEMMA =
    DT(((("transc",9),[("seq",[46,56]),("transc",[4])]),["DISK_THM"]),
       [read"%36%29%52%93%99$0@@@%102%22%93%92%22%64%67$0@@%94%45@@%43%88%93%94%69%62%71@@@@@%65%42$0@%69%62%71@@@@%69%63%71@@@@@%94%68$0@@@@|$0@@%88$1@$0@@@|@@|@"])
  fun op DIFF_EXP x = x
    val op DIFF_EXP =
    DT(((("transc",10),
        [("arithmetic",[17]),("bool",[14,25,51,58,63]),("powser",[15]),
         ("prim_rec",[7]),("real",[59,124,129,217]),("seq",[44]),
         ("transc",[0,3,6])]),["DISK_THM"]),
       [read"%36%29%78%82@%82$0@@$0@|@"])
  fun op DIFF_SIN x = x
    val op DIFF_SIN =
    DT(((("transc",11),
        [("arithmetic",[17]),("bool",[14,25,51,53,58,63]),("powser",[15]),
         ("prim_rec",[7]),("real",[41,59,124,129,217]),("seq",[44,56]),
         ("transc",[1,2,4,5,7,8])]),["DISK_THM"]),
       [read"%36%29%78%99@%77$0@@$0@|@"])
  fun op DIFF_COS x = x
    val op DIFF_COS =
    DT(((("transc",12),
        [("arithmetic",[17]),("bool",[14,25,51,53,58,63]),
         ("powser",[6,15]),("prim_rec",[7]),("real",[41,59,124,129,217]),
         ("seq",[44,56]),("transc",[1,4,5,7,8,9])]),["DISK_THM"]),
       [read"%36%29%78%77@%93%99$0@@@$0@|@"])
  fun op DIFF_COMPOSITE x = x
    val op DIFF_COMPOSITE =
    DT(((("transc",13),
        [("bool",[25,51,63]),("lim",[32,33,35,36,37,39,41,42]),
         ("transc",[10,11,12])]),["DISK_THM"]),
       [read"%44%53%44%78%10@%19@%29@@%106%52%10%29@@%94%45@@@@@%78%29%85%10$0@@|@%93%43%19@%88%10%29@@%69%63%71@@@@@@%29@@@%44%53%44%78%10@%19@%29@@%44%78%12@%21@%29@@%106%52%12%29@@%94%45@@@@@@%78%29%43%10$0@@%12$0@@|@%43%95%92%19@%12%29@@@%92%21@%10%29@@@@%88%12%29@@%69%63%71@@@@@%29@@@%44%53%44%78%10@%19@%29@@%78%12@%21@%29@@@%78%29%89%10$0@@%12$0@@|@%89%19@%21@@%29@@@%44%53%44%78%10@%19@%29@@%78%12@%21@%29@@@%78%29%92%10$0@@%12$0@@|@%89%92%19@%12%29@@@%92%21@%10%29@@@@%29@@@%44%53%44%78%10@%19@%29@@%78%12@%21@%29@@@%78%29%95%10$0@@%12$0@@|@%95%19@%21@@%29@@@%44%53%78%10@%19@%29@@%78%29%93%10$0@@|@%93%19@@%29@@@%44%53%78%12@%21@%29@@%78%29%88%12$0@@%22@|@%92%92%94%22@@%88%12%29@@%42%22@%69%62%71@@@@@@%21@@%29@@@%44%53%78%12@%21@%29@@%78%29%82%12$0@@|@%92%82%12%29@@@%21@@%29@@@%44%53%78%12@%21@%29@@%78%29%99%12$0@@|@%92%77%12%29@@@%21@@%29@@@%53%78%12@%21@%29@@%78%29%77%12$0@@|@%92%93%99%12%29@@@@%21@@%29@@@@@@@@@@@"])
  fun op EXP_0 x = x
    val op EXP_0 =
    DT(((("transc",14),
        [("arithmetic",[17,24,41,64,101,156]),("bool",[25,56,58]),
         ("real",[7,29,40,133,233,234,280]),("seq",[46,47]),
         ("transc",[0])]),["DISK_THM"]),
       [read"%52%82%94%45@@@%94%69%62%71@@@@"])
  fun op EXP_LE_X x = x
    val op EXP_LE_X =
    DT(((("transc",15),
        [("arithmetic",[17,18,24,70,156,157]),("bool",[25,36,51,53,58,63]),
         ("real",[7,18,27,29,55,56,58,71,106,129,133,233,243,280]),
         ("seq",[44,48]),("transc",[0,3,14])]),["DISK_THM"]),
       [read"%36%29%53%91%94%45@@$0@@%91%89%94%69%62%71@@@@$0@@%82$0@@@|@"])
  fun op EXP_LT_1 x = x
    val op EXP_LT_1 =
    DT(((("transc",16),
        [("bool",[51,63]),("real",[58,59,124]),
         ("transc",[15])]),["DISK_THM"]),
       [read"%36%29%53%90%94%45@@$0@@%90%94%69%62%71@@@@%82$0@@@|@"])
  fun op EXP_ADD_MUL x = x
    val op EXP_ADD_MUL =
    DT(((("transc",17),
        [("bool",[14,25,56,58,63]),("lim",[31,32,33,35,37,38,60]),
         ("real",[7,15,22,27,29,41,42,87,92]),
         ("sat",[1,3,5,6,7,11,12,15,17,18]),
         ("transc",[10,14])]),["DISK_THM"]),
       [read"%36%29%36%30%52%92%82%89$1@$0@@@%82%93$1@@@@%82$0@@|@|@"])
  fun op EXP_NEG_MUL x = x
    val op EXP_NEG_MUL =
    DT(((("transc",18),
        [("bool",[25,53]),("real",[27]),("transc",[14,17])]),["DISK_THM"]),
       [read"%36%29%52%92%82$0@@%82%93$0@@@@%94%69%62%71@@@@|@"])
  fun op EXP_NEG_MUL2 x = x
    val op EXP_NEG_MUL2 =
    DT(((("transc",19),[("real",[15]),("transc",[18])]),["DISK_THM"]),
       [read"%36%29%52%92%82%93$0@@@%82$0@@@%94%69%62%71@@@@|@"])
  fun op EXP_NEG x = x
    val op EXP_NEG =
    DT(((("transc",20),[("real",[114]),("transc",[18])]),["DISK_THM"]),
       [read"%36%29%52%82%93$0@@@%85%82$0@@@|@"])
  fun op EXP_ADD x = x
    val op EXP_ADD =
    DT(((("transc",21),
        [("bool",[58]),("real",[15,17,29]),
         ("transc",[17,18])]),["DISK_THM"]),
       [read"%36%29%36%30%52%82%89$1@$0@@@%92%82$1@@%82$0@@@|@|@"])
  fun op EXP_POS_LE x = x
    val op EXP_POS_LE =
    DT(((("transc",22),
        [("bool",[58]),("real",[72,149]),("transc",[21])]),["DISK_THM"]),
       [read"%36%29%91%94%45@@%82$0@@|@"])
  fun op EXP_NZ x = x
    val op EXP_NZ =
    DT(((("transc",23),
        [("bool",[53,58]),("real",[3,39]),("transc",[18])]),["DISK_THM"]),
       [read"%36%29%106%52%82$0@@%94%45@@@|@"])
  fun op EXP_POS_LT x = x
    val op EXP_POS_LT =
    DT(((("transc",24),
        [("bool",[25,26,27,51,54,58,63]),("real",[57]),
         ("transc",[22,23])]),["DISK_THM"]),
       [read"%36%29%90%94%45@@%82$0@@|@"])
  fun op EXP_N x = x
    val op EXP_N =
    DT(((("transc",25),
        [("arithmetic",[25,64]),("bool",[14,25,36,56,58]),("num",[9]),
         ("real",[18,31,39,131,233]),("transc",[14,21])]),["DISK_THM"]),
       [read"%35%22%36%29%52%82%92%94$1@@$0@@@%88%82$0@@$1@@|@|@"])
  fun op EXP_SUB x = x
    val op EXP_SUB =
    DT(((("transc",26),
        [("bool",[25,56]),("real",[22,26]),
         ("transc",[20,21])]),["DISK_THM"]),
       [read"%36%29%36%30%52%82%95$1@$0@@@%43%82$1@@%82$0@@@|@|@"])
  fun op EXP_MONO_IMP x = x
    val op EXP_MONO_IMP =
    DT(((("transc",27),
        [("bool",[25,53,58]),("real",[17,18,26,29,94,110]),
         ("transc",[16,19,20,24,26])]),["DISK_THM"]),
       [read"%36%29%36%30%53%90$1@$0@@%90%82$1@@%82$0@@@|@|@"])
  fun op EXP_MONO_LT x = x
    val op EXP_MONO_LT =
    DT(((("transc",28),
        [("bool",[25,26,52,56]),("real",[48,56]),
         ("transc",[27])]),["DISK_THM"]),
       [read"%36%29%36%30%48%90%82$1@@%82$0@@@%90$1@$0@@|@|@"])
  fun op EXP_MONO_LE x = x
    val op EXP_MONO_LE =
    DT(((("transc",29),
        [("bool",[25,56,58]),("real",[48]),("transc",[28])]),["DISK_THM"]),
       [read"%36%29%36%30%48%91%82$1@@%82$0@@@%91$1@$0@@|@|@"])
  fun op EXP_INJ x = x
    val op EXP_INJ =
    DT(((("transc",30),
        [("bool",[25,56,58]),("real",[62]),("transc",[29])]),["DISK_THM"]),
       [read"%36%29%36%30%48%52%82$1@@%82$0@@@%52$1@$0@@|@|@"])
  fun op EXP_TOTAL_LEMMA x = x
    val op EXP_TOTAL_LEMMA =
    DT(((("transc",31),
        [("bool",[25,51,53,58,63]),("lim",[18,29]),("real",[7,85,95,156]),
         ("transc",[10,14,15])]),["DISK_THM"]),
       [read"%36%30%53%91%94%69%62%71@@@@$0@@%58%29%44%91%94%45@@$0@@%44%91$0@%95$1@%94%69%62%71@@@@@@%52%82$0@@$1@@@|@@|@"])
  fun op EXP_TOTAL x = x
    val op EXP_TOTAL =
    DT(((("transc",32),
        [("bool",[25,51,53,56,58,63]),("real",[53,58,104,105,192]),
         ("transc",[20,31])]),["DISK_THM"]),
       [read"%36%30%53%90%94%45@@$0@@%58%29%52%82$0@@$1@|@@|@"])
  fun op LN_EXP x = x
    val op LN_EXP =
    DT(((("transc",34),
        [("bool",[14,15,58]),("transc",[30,33])]),["DISK_THM"]),
       [read"%36%29%52%86%82$0@@@$0@|@"])
  fun op EXP_LN x = x
    val op EXP_LN =
    DT(((("transc",35),
        [("bool",[25,26,56]),("transc",[24,30,32,34])]),["DISK_THM"]),
       [read"%36%29%48%52%82%86$0@@@$0@@%90%94%45@@$0@@|@"])
  fun op LN_MUL x = x
    val op LN_MUL =
    DT(((("transc",36),
        [("bool",[25,51,56,58,63]),("real",[20]),
         ("transc",[21,30,35])]),["DISK_THM"]),
       [read"%36%29%36%30%53%44%90%94%45@@$1@@%90%94%45@@$0@@@%52%86%92$1@$0@@@%89%86$1@@%86$0@@@@|@|@"])
  fun op LN_INJ x = x
    val op LN_INJ =
    DT(((("transc",37),[("bool",[58]),("transc",[30,35])]),["DISK_THM"]),
       [read"%36%29%36%30%53%44%90%94%45@@$1@@%90%94%45@@$0@@@%48%52%86$1@@%86$0@@@%52$1@$0@@@|@|@"])
  fun op LN_1 x = x
    val op LN_1 =
    DT(((("transc",38),
        [("bool",[25,58,63]),("real",[74]),
         ("transc",[14,30,35])]),["DISK_THM"]),
       [read"%52%86%94%69%62%71@@@@@%94%45@@"])
  fun op LN_INV x = x
    val op LN_INV =
    DT(((("transc",39),
        [("bool",[25,56,58,63]),("real",[30,37,106,193]),
         ("transc",[36,38])]),["DISK_THM"]),
       [read"%36%29%53%90%94%45@@$0@@%52%86%85$0@@@%93%86$0@@@@|@"])
  fun op LN_DIV x = x
    val op LN_DIV =
    DT(((("transc",40),
        [("bool",[25,56,63]),("real",[22,26,106]),
         ("transc",[36,39])]),["DISK_THM"]),
       [read"%36%29%36%30%53%44%90%94%45@@$1@@%90%94%45@@$0@@@%52%86%43$1@$0@@@%95%86$1@@%86$0@@@@|@|@"])
  fun op LN_MONO_LT x = x
    val op LN_MONO_LT =
    DT(((("transc",41),[("bool",[58]),("transc",[28,35])]),["DISK_THM"]),
       [read"%36%29%36%30%53%44%90%94%45@@$1@@%90%94%45@@$0@@@%48%90%86$1@@%86$0@@@%90$1@$0@@@|@|@"])
  fun op LN_MONO_LE x = x
    val op LN_MONO_LE =
    DT(((("transc",42),[("bool",[58]),("transc",[29,35])]),["DISK_THM"]),
       [read"%36%29%36%30%53%44%90%94%45@@$1@@%90%94%45@@$0@@@%48%91%86$1@@%86$0@@@%91$1@$0@@@|@|@"])
  fun op LN_POW x = x
    val op LN_POW =
    DT(((("transc",43),
        [("bool",[25,56,58]),("transc",[25,32,34])]),["DISK_THM"]),
       [read"%35%22%36%29%53%90%94%45@@$0@@%52%86%88$0@$1@@@%92%94$1@@%86$0@@@@|@|@"])
  fun op LN_LE x = x
    val op LN_LE =
    DT(((("transc",44),
        [("bool",[25,51,53,58,63]),("real",[60,74,125]),
         ("transc",[15,24,34,42])]),["DISK_THM"]),
       [read"%36%29%53%91%94%45@@$0@@%91%86%89%94%69%62%71@@@@$0@@@$0@@|@"])
  fun op LN_LT_X x = x
    val op LN_LT_X =
    DT(((("transc",45),
        [("bool",[25,51,53,63]),("real",[7,47,48,51,55,58,60,61,74]),
         ("sat",[1,3,5,6,7,11,15]),("transc",[15,35])]),["DISK_THM"]),
       [read"%36%29%53%90%94%45@@$0@@%90%86$0@@$0@@|@"])
  fun op LN_POS x = x
    val op LN_POS =
    DT(((("transc",46),
        [("bool",[25,51,53,58,63]),("real",[59,74]),
         ("transc",[14,29,35])]),["DISK_THM"]),
       [read"%36%29%53%91%94%69%62%71@@@@$0@@%91%94%45@@%86$0@@@|@"])
  fun op DIFF_LN x = x
    val op DIFF_LN =
    DT(((("transc",166),
        [("bool",[25,36,51,53,56,58,63]),("lim",[18,69]),
         ("real",[74,124,154,193]),("sat",[1,3,5,6,7,11,17,18]),
         ("transc",[10,34,35])]),["DISK_THM"]),
       [read"%36%29%53%90%94%45@@$0@@%78%86@%85$0@@$0@@|@"])
  fun op DIFF_ASN_LEMMA x = x
    val op DIFF_ASN_LEMMA =
    DT(((("transc",167),
        [("bool",[25,51,53,63]),("lim",[18,69]),("real",[58]),
         ("transc",[11,145,147,148,162])]),["DISK_THM"]),
       [read"%36%29%53%44%90%93%94%69%62%71@@@@@$0@@%90$0@%94%69%62%71@@@@@@%78%75@%85%77%75$0@@@@$0@@|@"])
  fun op DIFF_ASN x = x
    val op DIFF_ASN =
    DT(((("transc",168),
        [("bool",[25,56,63]),("real",[58]),("sat",[1,3,5,6,7,11,17,18]),
         ("transc",[145,146,160,167])]),["DISK_THM"]),
       [read"%36%29%53%44%90%93%94%69%62%71@@@@@$0@@%90$0@%94%69%62%71@@@@@@%78%75@%85%100%95%94%69%62%71@@@@%88$0@%69%63%71@@@@@@@$0@@|@"])
  fun op DIFF_ACS_LEMMA x = x
    val op DIFF_ACS_LEMMA =
    DT(((("transc",169),
        [("bool",[25,51,53,63]),("lim",[18,69]),("real",[58,92,101]),
         ("transc",[12,150,152,153,163])]),["DISK_THM"]),
       [read"%36%29%53%44%90%93%94%69%62%71@@@@@$0@@%90$0@%94%69%62%71@@@@@@%78%74@%85%93%99%74$0@@@@@$0@@|@"])
  fun op DIFF_ACS x = x
    val op DIFF_ACS =
    DT(((("transc",170),
        [("arithmetic",[18]),("bool",[25,51,58,63]),
         ("real",[7,18,43,44,58,70,117,155,158,167,193,241]),
         ("sat",[1,3,5,6,7,11,17,18]),
         ("transc",[49,54,150,151,159,169])]),["DISK_THM"]),
       [read"%36%29%53%44%90%93%94%69%62%71@@@@@$0@@%90$0@%94%69%62%71@@@@@@%78%74@%93%85%100%95%94%69%62%71@@@@%88$0@%69%63%71@@@@@@@@$0@@|@"])
  fun op DIFF_ATN x = x
    val op DIFF_ATN =
    DT(((("transc",171),
        [("bool",[25,26,27,51,53,54,56,58,63]),("lim",[18,69]),
         ("real",[59,72,74,122,193,236,241]),
         ("transc",[116,137,155,156,157,158,161])]),["DISK_THM"]),
       [read"%36%29%78%76@%85%89%94%69%62%71@@@@%88$0@%69%63%71@@@@@@$0@|@"])
  fun op DIVISION_0 x = x
    val op DIVISION_0 =
    DT(((("transc",179),
        [("arithmetic",[10,46,59]),
         ("bool",[25,26,27,35,36,51,52,53,56,63,65,69]),("prim_rec",[6]),
         ("real",[11]),("transc",[173])]),["DISK_THM"]),
       [read"%36%5%36%6%53%52$1@$0@@%51%81%22%64%51$0@%45@@$2@$1@|@@%45@@|@|@"])
  fun op DIVISION_1 x = x
    val op DIVISION_1 =
    DT(((("transc",180),
        [("arithmetic",[17,18,21,59,106,132,143,207]),
         ("bool",[25,26,27,30,51,52,53,56,58,63,64,69,92]),("num",[7]),
         ("prim_rec",[6,19]),("real",[11,105]),
         ("transc",[173])]),["DISK_THM"]),
       [read"%36%5%36%6%53%90$1@$0@@%51%81%22%64%51$0@%45@@$2@$1@|@@%69%62%71@@@@|@|@"])
  fun op DIVISION_SINGLE x = x
    val op DIVISION_SINGLE =
    DT(((("transc",181),
        [("arithmetic",[17,21,37,143,207]),
         ("bool",[14,25,26,27,30,36,51,53,54,56,58,63,64,65]),
         ("num",[7,9]),("prim_rec",[6,7]),("real",[56]),
         ("transc",[172])]),["DISK_THM"]),
       [read"%36%5%36%6%53%91$1@$0@@%80%41$1@$0@@%22%64%51$0@%45@@$2@$1@|@@|@|@"])
  fun op DIVISION_LHS x = x
    val op DIVISION_LHS =
    DT(((("transc",182),[("bool",[25,56]),("transc",[172])]),["DISK_THM"]),
       [read"%32%0%36%5%36%6%53%80%41$1@$0@@$2@@%52$2%45@@$1@@|@|@|@"])
  fun op DIVISION_THM x = x
    val op DIVISION_THM =
    DT(((("transc",183),
        [("arithmetic",[56,95,142,143]),
         ("bool",[25,26,27,36,51,53,56,63,69]),("real",[11]),
         ("transc",[172,173])]),["DISK_THM"]),
       [read"%32%0%36%5%36%6%48%80%41$1@$0@@$2@@%44%52$2%45@@$1@@%44%35%22%53%46$0@%81$3@@@%90$3$0@@$3%70$0@@@@|@@%35%22%53%54$0@%81$3@@@%52$3$0@@$1@@|@@@@|@|@|@"])
  fun op DIVISION_RHS x = x
    val op DIVISION_RHS =
    DT(((("transc",184),
        [("arithmetic",[95,143]),("bool",[25,53,63]),
         ("transc",[183])]),["DISK_THM"]),
       [read"%32%0%36%5%36%6%53%80%41$1@$0@@$2@@%52$2%81$2@@@$0@@|@|@|@"])
  fun op DIVISION_LT_GEN x = x
    val op DIVISION_LT_GEN =
    DT(((("transc",185),
        [("arithmetic",[24,43,64,96,101]),("bool",[14,25,58,63]),
         ("num",[9]),("real",[12]),("transc",[183])]),["DISK_THM"]),
       [read"%32%0%36%5%36%6%35%20%35%22%53%44%80%41$3@$2@@$4@@%44%46$1@$0@@%47$0@%81$4@@@@@%90$4$1@@$4$0@@@|@|@|@|@|@"])
  fun op DIVISION_LT x = x
    val op DIVISION_LT =
    DT(((("transc",186),
        [("arithmetic",[34]),("bool",[14,25,51,53,63]),("num",[9]),
         ("prim_rec",[15]),("real",[12]),("transc",[183])]),["DISK_THM"]),
       [read"%32%0%36%5%36%6%53%80%41$1@$0@@$2@@%35%22%53%46$0@%81$3@@@%90$3%45@@$3%70$0@@@@|@@|@|@|@"])
  fun op DIVISION_LE x = x
    val op DIVISION_LE =
    DT(((("transc",187),
        [("arithmetic",[28,95,143]),("bool",[25,53,63]),
         ("prim_rec",[3,15]),("real",[55,58]),
         ("transc",[183,186])]),["DISK_THM"]),
       [read"%32%0%36%5%36%6%53%80%41$1@$0@@$2@@%91$1@$0@@|@|@|@"])
  fun op DIVISION_GT x = x
    val op DIVISION_GT =
    DT(((("transc",188),
        [("arithmetic",[95]),("bool",[25,51,63]),
         ("transc",[185])]),["DISK_THM"]),
       [read"%32%0%36%5%36%6%53%80%41$1@$0@@$2@@%35%22%53%46$0@%81$3@@@%90$3$0@@$3%81$3@@@@|@@|@|@|@"])
  fun op DIVISION_EQ x = x
    val op DIVISION_EQ =
    DT(((("transc",189),
        [("arithmetic",[28,95,143]),("bool",[25,26,27,53,56,63]),
         ("num",[7]),("prim_rec",[3,15]),("real",[105]),
         ("transc",[183,186])]),["DISK_THM"]),
       [read"%32%0%36%5%36%6%53%80%41$1@$0@@$2@@%48%52$1@$0@@%51%81$2@@%45@@@|@|@|@"])
  fun op DIVISION_LBOUND x = x
    val op DIVISION_LBOUND =
    DT(((("transc",190),
        [("arithmetic",[34,51,143]),("bool",[14,25,36,51,56,58,63]),
         ("num",[9]),("prim_rec",[15]),("real",[55,58,61,191]),
         ("transc",[183,187])]),["DISK_THM"]),
       [read"%32%0%36%5%36%6%53%80%41$1@$0@@$2@@%35%26%91$2@$3$0@@|@@|@|@|@"])
  fun op DIVISION_LBOUND_LT x = x
    val op DIVISION_LBOUND_LT =
    DT(((("transc",191),
        [("arithmetic",[43,51,60,96,143,207]),
         ("bool",[25,26,27,53,54,58,63]),
         ("transc",[182,183,184,186,188])]),["DISK_THM"]),
       [read"%32%0%36%5%36%6%53%44%80%41$1@$0@@$2@@%106%51%81$2@@%45@@@@%35%22%90$2@$3%70$0@@@|@@|@|@|@"])
  fun op DIVISION_UBOUND x = x
    val op DIVISION_UBOUND =
    DT(((("transc",192),
        [("arithmetic",
         [6,25,38,50,51,56,59,62,63,93,95,96,112,117,118,128,133,143]),
         ("bool",[14,25,26,27,30,36,51,52,53,54,56,58,63,64]),
         ("num",[7,9]),("prim_rec",[6]),("real",[58,61,191]),
         ("sat",[1,3,5,6,7,11,17,18]),("transc",[183,187])]),["DISK_THM"]),
       [read"%32%0%36%5%36%6%53%80%41$1@$0@@$2@@%35%26%91$3$0@@$1@|@@|@|@|@"])
  fun op DIVISION_UBOUND_LT x = x
    val op DIVISION_UBOUND_LT =
    DT(((("transc",193),
        [("bool",[25,63]),("transc",[184,188])]),["DISK_THM"]),
       [read"%32%0%36%5%36%6%35%22%53%44%80%41$2@$1@@$3@@%46$0@%81$3@@@@%90$3$0@@$1@@|@|@|@|@"])
  fun op DIVISION_APPEND x = x
    val op DIVISION_APPEND =
    DT(((("transc",194),
        [("arithmetic",
         [6,25,27,34,41,42,46,49,53,56,59,60,62,88,93,95,96,106,128,130,
          134,143,146,154,197,201]),
         ("bool",[14,25,26,27,30,51,52,53,54,56,58,63,64,69,96]),
         ("prim_rec",[6,15]),("real",[11,59]),
         ("transc",
         [173,174,176,182,183,184,185,189,190,193])]),["DISK_THM"]),
       [read"%36%5%36%6%36%7%53%44%55%1%55%24%44%105%41$4@$3@@%39$1@$0@@@%83%12@%39$1@$0@@@|@|@@%55%2%55%25%44%105%41$3@$2@@%39$1@$0@@@%83%12@%39$1@$0@@@|@|@@@%55%0%55%23%44%105%41$4@$2@@%39$1@$0@@@%83%12@%39$1@$0@@@|@|@@|@|@|@"])
  fun op DIVISION_EXISTS x = x
    val op DIVISION_EXISTS =
    DT(((("transc",195),
        [("arithmetic",[17]),
         ("bool",[25,26,27,30,36,51,52,53,56,63,64,96]),("num",[7]),
         ("pair",[16]),("prim_rec",[6,19]),("real",[51,55,56,59,60,61,74]),
         ("seq",[40]),
         ("transc",[174,175,176,179,180,181,194])]),["DISK_THM"]),
       [read"%36%5%36%6%34%12%53%44%91$2@$1@@%84%29%44%91$3@$0@@%91$0@$2@@|@$0@@@%55%0%55%23%44%105%41$4@$3@@%39$1@$0@@@%83$2@%39$1@$0@@@|@|@@|@|@|@"])
  fun op GAUGE_MIN x = x
    val op GAUGE_MIN =
    DT(((("transc",196),
        [("bool",[26,27,30,63,64]),("transc",[175])]),["DISK_THM"]),
       [read"%33%3%34%13%34%14%53%44%84$2@$1@@%84$2@$0@@@%84$2@%29%64%90$2$0@@$1$0@@@$2$0@@$1$0@@|@@|@|@|@"])
  fun op FINE_MIN x = x
    val op FINE_MIN =
    DT(((("transc",197),
        [("bool",[25,26,27,30,51,53,63,64]),("real",[12,48,59]),
         ("transc",[176])]),["DISK_THM"]),
       [read"%34%13%34%14%32%0%32%23%53%83%29%64%90$4$0@@$3$0@@@$4$0@@$3$0@@|@%39$1@$0@@@%44%83$3@%39$1@$0@@@%83$2@%39$1@$0@@@@|@|@|@|@"])
  fun op DINT_UNIQ x = x
    val op DINT_UNIQ =
    DT(((("transc",198),
        [("bool",[25,26,27,51,53,54,58,63]),
         ("real",[4,6,7,8,11,22,60,77,87,93,144,149,208,209,214]),
         ("transc",[178,195,196,197])]),["DISK_THM"]),
       [read"%36%5%36%6%34%10%36%17%36%18%53%44%91$4@$3@@%44%66%41$4@$3@@$2@$1@@%66%41$4@$3@@$2@$0@@@@%52$1@$0@@|@|@|@|@|@"])
  fun op INTEGRAL_NULL x = x
    val op INTEGRAL_NULL =
    DT(((("transc",199),
        [("bool",[25,35,36,51,53,56,63]),("real",[74,86,206,280]),
         ("transc",[174,175,177,178,189])]),["DISK_THM"]),
       [read"%34%10%36%5%66%41$0@$0@@$1@%94%45@@|@|@"])
  fun op FTC1 x = x
    val op FTC1 =
    DT(((("transc",200),
        [("arithmetic",[18,24]),
         ("bool",[15,25,26,27,30,36,51,53,54,56,58,63,64]),("lim",[1,14]),
         ("prim_rec",[7]),
         ("real",
         [4,6,7,8,15,17,20,22,26,38,40,42,55,56,58,60,61,75,76,78,85,86,87,
          93,94,95,99,100,105,106,110,129,144,145,148,149,159,160,162,176,
          177,204,206,208,209,211,213,214,284,285,293,295,306]),
         ("sat",[1,3,5,6,7,11,17,18]),
         ("transc",
         [174,175,176,177,178,182,184,190,192,199])]),["DISK_THM"]),
       [read"%34%10%34%11%36%5%36%6%53%44%91$1@$0@@%36%29%53%44%91$2@$0@@%91$0@$1@@@%78$4@$3$0@@$0@@|@@@%66%41$1@$0@@$2@%95$3$0@@$3$1@@@@|@|@|@|@"])
  fun op MCLAURIN x = x
    val op MCLAURIN =
    DT(((("transc",201),
        [("arithmetic",[24,25,27,28,34,62,64,65,101,128,130,156,157]),
         ("bool",[14,25,26,27,43,51,53,54,56,58,63]),
         ("lim",[16,17,18,31,32,33,36,37,38,39,42,43,55]),("num",[7,9]),
         ("prim_rec",[4,7,15]),
         ("real",
         [4,7,12,15,17,18,19,26,27,29,34,39,40,58,61,86,87,104,106,129,130,
          132,133,136,162,173,174,175,193,196,233,234,235,241,280,300,302,
          304]),("sat",[1,3,5,6,7,11,12,14,15,17,18])]),["DISK_THM"]),
       [read"%34%10%31%8%36%15%35%22%53%44%90%94%45@@$1@@%44%46%45@$0@@%44%50$2%45@@$3@@%35%20%36%27%53%44%46$1@$2@@%44%91%94%45@@$0@@%91$0@$3@@@@%78$4$1@@$4%70$1@@$0@@$0@@|@|@@@@@%58%27%44%90%94%45@@$0@@%44%90$0@$2@@%52$4$2@@%89%101%40%45@$1@@%20%92%43$4$0@%94%45@@@%94%68$0@@@@%88$3@$0@@|@@%92%43$3$1@$0@@%94%68$1@@@@%88$2@$1@@@@@@|@@|@|@|@|@"])
  fun op MCLAURIN_NEG x = x
    val op MCLAURIN_NEG =
    DT(((("transc",202),
        [("arithmetic",[24]),("bool",[14,25,36,51,53,56,58,63]),
         ("lim",[34,35,37,38]),
         ("real",[15,17,18,26,43,66,92,102,158,159,233,246,286]),
         ("sat",[1,3,5,6,7,11,12,15,17,18]),
         ("transc",[201])]),["DISK_THM"]),
       [read"%34%10%31%8%36%15%35%22%53%44%90$1@%94%45@@@%44%46%45@$0@@%44%50$2%45@@$3@@%35%20%36%27%53%44%46$1@$2@@%44%91$3@$0@@%91$0@%94%45@@@@@%78$4$1@@$4%70$1@@$0@@$0@@|@|@@@@@%58%27%44%90$2@$0@@%44%90$0@%94%45@@@%52$4$2@@%89%101%40%45@$1@@%20%92%43$4$0@%94%45@@@%94%68$0@@@@%88$3@$0@@|@@%92%43$3$1@$0@@%94%68$1@@@@%88$2@$1@@@@@@|@@|@|@|@|@"])
  fun op MCLAURIN_ALL_LT x = x
    val op MCLAURIN_ALL_LT =
    DT(((("transc",203),
        [("arithmetic",[46,60,79,207]),
         ("bool",[25,26,27,30,36,51,52,53,54,56,58,63,64,96]),
         ("numeral",[3,5,7,17,18]),
         ("real",
         [4,6,7,8,10,12,17,18,20,27,28,38,39,40,46,52,59,60,61,62,71,131,
          204,307,308,309,310,311,312,313,314,326,328,329]),
         ("sat",[1,3,5,6,7,11,12,13,14,15]),
         ("transc",[201,202])]),["DISK_THM"]),
       [read"%34%10%31%8%53%44%50$0%45@@$1@@%35%20%36%29%78$2$1@@$2%70$1@@$0@@$0@|@|@@@%36%29%35%22%53%44%106%52$1@%94%45@@@@%46%45@$0@@@%58%27%44%90%94%45@@%73$0@@@%44%90%73$0@@%73$2@@@%52$4$2@@%89%101%40%45@$1@@%20%92%43$4$0@%94%45@@@%94%68$0@@@@%88$3@$0@@|@@%92%43$3$1@$0@@%94%68$1@@@@%88$2@$1@@@@@@|@@|@|@@|@|@"])
  fun op MCLAURIN_ZERO x = x
    val op MCLAURIN_ZERO =
    DT(((("transc",204),
        [("arithmetic",[17,24,156]),("bool",[14,25,26,27,53,54,56,58]),
         ("num",[7,9]),("prim_rec",[4,19]),
         ("real",[7,26,27,29,39,40,118,135,233,280,331])]),["DISK_THM"]),
       [read"%31%8%35%22%36%29%53%44%52$0@%94%45@@@%46%45@$1@@@%52%101%40%45@$1@@%20%92%43$3$0@%94%45@@@%94%68$0@@@@%88$1@$0@@|@@$2%45@%94%45@@@@|@|@|@"])
  fun op MCLAURIN_ALL_LE x = x
    val op MCLAURIN_ALL_LE =
    DT(((("transc",205),
        [("arithmetic",[17,51,60,156,207]),
         ("bool",[14,25,26,27,30,36,51,52,53,54,56,58,63,94]),
         ("num",[7,9]),("real",[7,27,29,40,45,55,58,134,233,280,331]),
         ("transc",[203,204])]),["DISK_THM"]),
       [read"%34%10%31%8%53%44%50$0%45@@$1@@%35%20%36%29%78$2$1@@$2%70$1@@$0@@$0@|@|@@@%36%29%35%22%58%27%44%91%73$0@@%73$2@@@%52$4$2@@%89%101%40%45@$1@@%20%92%43$4$0@%94%45@@@%94%68$0@@@@%88$3@$0@@|@@%92%43$3$1@$0@@%94%68$1@@@@%88$2@$1@@@@@|@|@|@@|@|@"])
  fun op MCLAURIN_EXP_LT x = x
    val op MCLAURIN_EXP_LT =
    DT(((("transc",206),
        [("bool",[14,25,26,35,36,51,56,63]),("real",[15,18,26]),
         ("transc",[10,14,203])]),["DISK_THM"]),
       [read"%36%29%35%22%53%44%106%52$1@%94%45@@@@%46%45@$0@@@%58%27%44%90%94%45@@%73$0@@@%44%90%73$0@@%73$2@@@%52%82$2@@%89%101%40%45@$1@@%20%43%88$3@$0@@%94%68$0@@@|@@%92%43%82$0@@%94%68$1@@@@%88$2@$1@@@@@@|@@|@|@"])
  fun op MCLAURIN_EXP_LE x = x
    val op MCLAURIN_EXP_LE =
    DT(((("transc",207),
        [("bool",[14,25,26,35,36,51,56,63]),("real",[15,18,26]),
         ("transc",[10,14,205])]),["DISK_THM"]),
       [read"%36%29%35%22%58%27%44%91%73$0@@%73$2@@@%52%82$2@@%89%101%40%45@$1@@%20%43%88$3@$0@@%94%68$0@@@|@@%92%43%82$0@@%94%68$1@@@@%88$2@$1@@@@@|@|@|@"])
  fun op DIFF_LN_COMPOSITE x = x
    val op DIFF_LN_COMPOSITE =
    DT(((("transc",208),
        [("bool",[25,51,63]),("lim",[37]),("transc",[166])]),["DISK_THM"]),
       [read"%34%12%36%21%36%29%53%44%78$2@$1@$0@@%90%94%45@@$2$0@@@@%78%29%86$3$0@@|@%92%85$2$0@@@$1@@$0@@|@|@|@"])
  fun op GEN_RPOW x = x
    val op GEN_RPOW =
    DT(((("transc",210),
        [("bool",[14,25,26,47,48,53,54,56,58,63,105,124]),("num",[9]),
         ("real",[16,18,31,39,126,233]),("sat",[1,3,5,6,7,11,12,13,14,15]),
         ("transc",[14,21,35,209])]),["DISK_THM"]),
       [read"%36%5%35%22%53%90%94%45@@$1@@%52%88$1@$0@@%97$1@%94$0@@@@|@|@"])
  fun op RPOW_SUC_N x = x
    val op RPOW_SUC_N =
    DT(((("transc",211),
        [("bool",[25,56,63]),("real",[126]),
         ("transc",[210])]),["DISK_THM"]),
       [read"%36%5%35%22%53%90%94%45@@$1@@%52%97$1@%89%94$0@@%94%69%62%71@@@@@@%88$1@%70$0@@@@|@|@"])
  fun op RPOW_0 x = x
    val op RPOW_0 =
    DT(((("transc",212),
        [("bool",[25,56,58,105,124]),("real",[39]),
         ("transc",[14,209])]),["DISK_THM"]),
       [read"%36%5%53%90%94%45@@$0@@%52%97$0@%94%45@@@%94%69%62%71@@@@@|@"])
  fun op RPOW_1 x = x
    val op RPOW_1 =
    DT(((("transc",213),
        [("bool",[25,53,56,58,63,105,124]),("real",[240]),
         ("transc",[210])]),["DISK_THM"]),
       [read"%36%5%53%90%94%45@@$0@@%52%97$0@%94%69%62%71@@@@@$0@@|@"])
  fun op ONE_RPOW x = x
    val op ONE_RPOW =
    DT(((("transc",214),
        [("bool",[25,53,56,58,105,124]),("real",[40,425]),
         ("transc",[14,38,209])]),["DISK_THM"]),
       [read"%36%5%53%90%94%45@@$0@@%52%97%94%69%62%71@@@@$0@@%94%69%62%71@@@@@|@"])
  fun op RPOW_POS_LT x = x
    val op RPOW_POS_LT =
    DT(((("transc",215),
        [("bool",[25,53,58,63,105,124]),
         ("transc",[24,209])]),["DISK_THM"]),
       [read"%36%5%36%6%53%90%94%45@@$1@@%90%94%45@@%97$1@$0@@@|@|@"])
  fun op RPOW_NZ x = x
    val op RPOW_NZ =
    DT(((("transc",216),
        [("bool",[25,26,27,53,54,58,105,124]),
         ("transc",[23,209])]),["DISK_THM"]),
       [read"%36%5%36%6%53%106%52%94%45@@$1@@@%106%52%97$1@$0@@%94%45@@@@|@|@"])
  fun op LN_RPOW x = x
    val op LN_RPOW =
    DT(((("transc",217),
        [("bool",[25,53,56,58,105,124]),
         ("transc",[34,209])]),["DISK_THM"]),
       [read"%36%5%36%6%53%90%94%45@@$1@@%52%86%97$1@$0@@@%92$0@%86$1@@@@|@|@"])
  fun op RPOW_ADD x = x
    val op RPOW_ADD =
    DT(((("transc",218),
        [("bool",[25,56]),("real",[31]),
         ("transc",[21,209])]),["DISK_THM"]),
       [read"%36%5%36%6%36%7%52%97$2@%89$1@$0@@@%92%97$2@$1@@%97$2@$0@@@|@|@|@"])
  fun op RPOW_ADD_MUL x = x
    val op RPOW_ADD_MUL =
    DT(((("transc",219),
        [("bool",[25,51,53,54,56,58,63,96,105,124]),
         ("real",
         [4,6,7,8,18,22,27,28,31,38,39,55,62,86,308,309,311,312,313,314,
          326]),("sat",[1,3,5,6,7,11,15]),
         ("transc",[21,209])]),["DISK_THM"]),
       [read"%36%5%36%6%36%7%52%92%97$2@%89$1@$0@@@%97$2@%93$1@@@@%97$2@$0@@|@|@|@"])
  fun op RPOW_SUB x = x
    val op RPOW_SUB =
    DT(((("transc",220),
        [("bool",[25,56]),("real",[100]),
         ("transc",[26,209])]),["DISK_THM"]),
       [read"%36%5%36%6%36%7%52%97$2@%95$1@$0@@@%43%97$2@$1@@%97$2@$0@@@|@|@|@"])
  fun op RPOW_DIV x = x
    val op RPOW_DIV =
    DT(((("transc",221),
        [("bool",[25,51,53,56,58,63,105,124]),("real",[99]),
         ("transc",[26,40,209])]),["DISK_THM"]),
       [read"%36%5%36%6%36%7%53%44%90%94%45@@$2@@%90%94%45@@$1@@@%52%97%43$2@$1@@$0@@%43%97$2@$0@@%97$1@$0@@@@|@|@|@"])
  fun op RPOW_INV x = x
    val op RPOW_INV =
    DT(((("transc",222),
        [("bool",[25,51,53,56,58,63,105,124]),("real",[40,74,99,118]),
         ("transc",[14,26,38,40,209])]),["DISK_THM"]),
       [read"%36%5%36%6%53%90%94%45@@$1@@%52%97%85$1@@$0@@%85%97$1@$0@@@@|@|@"])
  fun op RPOW_MUL x = x
    val op RPOW_MUL =
    DT(((("transc",223),
        [("bool",[25,51,53,56,58,63,105,124]),("real",[9]),
         ("transc",[21,36,209])]),["DISK_THM"]),
       [read"%36%5%36%6%36%7%53%44%90%94%45@@$2@@%90%94%45@@$1@@@%52%97%92$2@$1@@$0@@%92%97$2@$0@@%97$1@$0@@@@|@|@|@"])
  fun op RPOW_RPOW x = x
    val op RPOW_RPOW =
    DT(((("transc",224),
        [("bool",
         [13,25,26,27,30,47,48,51,52,53,54,56,58,63,93,94,96,105,124]),
         ("real",[16,17]),("sat",[1,3,5,6,7,11,13,14,15]),
         ("transc",[34,209])]),["DISK_THM"]),
       [read"%36%5%36%6%36%7%53%90%94%45@@$2@@%52%97%97$2@$1@@$0@@%97$2@%92$1@$0@@@@|@|@|@"])
  fun op RPOW_LT x = x
    val op RPOW_LT =
    DT(((("transc",225),
        [("bool",[25,26,47,48,53,54,56,58,63,94,105,124]),
         ("real",[12,74,110]),("sat",[1,3,5,6,7,11,12,13,14,15]),
         ("transc",[14,28,35,209])]),["DISK_THM"]),
       [read"%36%5%36%6%36%7%53%90%94%69%62%71@@@@$2@@%48%90%97$2@$1@@%97$2@$0@@@%90$1@$0@@@|@|@|@"])
  fun op RPOW_LE x = x
    val op RPOW_LE =
    DT(((("transc",226),
        [("bool",[25,26,47,48,53,54,56,58,63,94,105,124]),
         ("real",[12,74,177]),("sat",[1,3,5,6,7,11,12,13,14,15]),
         ("transc",[14,28,29,35,209])]),["DISK_THM"]),
       [read"%36%5%36%6%36%7%53%90%94%69%62%71@@@@$2@@%48%91%97$2@$1@@%97$2@$0@@@%91$1@$0@@@|@|@|@"])
  fun op BASE_RPOW_LE x = x
    val op BASE_RPOW_LE =
    DT(((("transc",227),
        [("bool",[25,51,56,58,63,105,124]),("real",[176]),
         ("transc",[29,42,209])]),["DISK_THM"]),
       [read"%36%5%36%6%36%7%53%44%90%94%45@@$2@@%44%90%94%45@@$0@@%90%94%45@@$1@@@@%48%91%97$2@$1@@%97$0@$1@@@%91$2@$0@@@|@|@|@"])
  fun op BASE_RPOW_LT x = x
    val op BASE_RPOW_LT =
    DT(((("transc",228),
        [("bool",[25,51,56,58,63,105,124]),("real",[109]),
         ("transc",[28,41,209])]),["DISK_THM"]),
       [read"%36%5%36%6%36%7%53%44%90%94%45@@$2@@%44%90%94%45@@$0@@%90%94%45@@$1@@@@%48%90%97$2@$1@@%97$0@$1@@@%90$2@$0@@@|@|@|@"])
  fun op RPOW_UNIQ_BASE x = x
    val op RPOW_UNIQ_BASE =
    DT(((("transc",229),
        [("bool",
         [13,25,26,27,30,47,48,51,52,53,54,56,58,63,93,94,96,105,124]),
         ("real",[332]),("sat",[1,3,5,6,7,11,12,13,14,15]),
         ("transc",[34,37,209])]),["DISK_THM"]),
       [read"%36%5%36%6%36%7%53%44%90%94%45@@$2@@%44%90%94%45@@$0@@%44%106%52%94%45@@$1@@@%52%97$2@$1@@%97$0@$1@@@@@@%52$2@$0@@|@|@|@"])
  fun op RPOW_UNIQ_EXP x = x
    val op RPOW_UNIQ_EXP =
    DT(((("transc",230),
        [("bool",
         [13,25,26,27,30,47,48,51,52,53,54,56,58,63,93,94,96,105,124]),
         ("real",[12,74,98,193]),("sat",[1,3,5,6,7,11,12,13,14,15]),
         ("transc",[14,28,34,35,37,209])]),["DISK_THM"]),
       [read"%36%5%36%6%36%7%53%44%90%94%69%62%71@@@@$2@@%44%90%94%45@@$0@@%44%90%94%45@@$1@@%52%97$2@$1@@%97$2@$0@@@@@@%52$1@$0@@|@|@|@"])
  fun op RPOW_DIV_BASE x = x
    val op RPOW_DIV_BASE =
    DT(((("transc",231),
        [("bool",[25,26,47,48,53,54,56,58,63,105,124]),("real",[18,100]),
         ("sat",[1,3,5,6,7,11,12,13,14,15]),
         ("transc",[26,35,209])]),["DISK_THM"]),
       [read"%36%29%36%27%53%90%94%45@@$1@@%52%43%97$1@$0@@$1@@%97$1@%95$0@%94%69%62%71@@@@@@@|@|@"])
  fun op DIFF_COMPOSITE_EXP x = x
    val op DIFF_COMPOSITE_EXP =
    DT(((("transc",232),
        [("bool",[25,53,58,63,105,124]),("transc",[13])]),["DISK_THM"]),
       [read"%34%12%36%21%36%29%53%78$2@$1@$0@@%78%29%82$3$0@@|@%92%82$2$0@@@$1@@$0@@|@|@|@"])
  fun op DIFF_RPOW x = x
    val op DIFF_RPOW =
    DT(((("transc",233),
        [("bool",[25,56,58,63,105,124]),("lim",[34]),("real",[16,17,26]),
         ("transc",[166,209,231,232])]),["DISK_THM"]),
       [read"%36%29%36%30%53%90%94%45@@$1@@%78%29%97$0@$1@|@%92$0@%97$1@%95$0@%94%69%62%71@@@@@@@$1@@|@|@"])
  end
  val _ = DB.bindl "transc"
  [("atn",atn,DB.Def), ("acs",acs,DB.Def), ("asn",asn,DB.Def),
   ("tan",tan,DB.Def), ("pi",pi,DB.Def), ("sqrt",sqrt,DB.Def),
   ("root",root,DB.Def), ("exp",exp,DB.Def), ("cos",cos,DB.Def),
   ("sin",sin,DB.Def), ("ln",ln,DB.Def), ("division",division,DB.Def),
   ("dsize",dsize,DB.Def), ("tdiv",tdiv,DB.Def), ("gauge",gauge,DB.Def),
   ("fine",fine,DB.Def), ("rsum",rsum,DB.Def), ("Dint",Dint,DB.Def),
   ("rpow_def",rpow_def,DB.Def), ("SIN_COS_SQRT",SIN_COS_SQRT,DB.Thm),
   ("COS_SIN_SQRT",COS_SIN_SQRT,DB.Thm), ("SIN_ACS_NZ",SIN_ACS_NZ,DB.Thm),
   ("COS_ASN_NZ",COS_ASN_NZ,DB.Thm), ("COS_ATN_NZ",COS_ATN_NZ,DB.Thm),
   ("COS_SIN_SQ",COS_SIN_SQ,DB.Thm), ("SIN_COS_SQ",SIN_COS_SQ,DB.Thm),
   ("TAN_SEC",TAN_SEC,DB.Thm), ("TAN_ATN",TAN_ATN,DB.Thm),
   ("ATN_BOUNDS",ATN_BOUNDS,DB.Thm), ("ATN_TAN",ATN_TAN,DB.Thm),
   ("ATN",ATN,DB.Thm), ("COS_ACS",COS_ACS,DB.Thm),
   ("ACS_BOUNDS_LT",ACS_BOUNDS_LT,DB.Thm),
   ("ACS_BOUNDS",ACS_BOUNDS,DB.Thm), ("ACS_COS",ACS_COS,DB.Thm),
   ("ACS",ACS,DB.Thm), ("SIN_ASN",SIN_ASN,DB.Thm),
   ("ASN_BOUNDS_LT",ASN_BOUNDS_LT,DB.Thm),
   ("ASN_BOUNDS",ASN_BOUNDS,DB.Thm), ("ASN_SIN",ASN_SIN,DB.Thm),
   ("ASN",ASN,DB.Thm), ("TAN_TOTAL",TAN_TOTAL,DB.Thm),
   ("TAN_TOTAL_POS",TAN_TOTAL_POS,DB.Thm),
   ("TAN_TOTAL_LEMMA",TAN_TOTAL_LEMMA,DB.Thm),
   ("DIFF_TAN",DIFF_TAN,DB.Thm), ("TAN_POS_PI2",TAN_POS_PI2,DB.Thm),
   ("TAN_DOUBLE",TAN_DOUBLE,DB.Thm), ("TAN_ADD",TAN_ADD,DB.Thm),
   ("TAN_PERIODIC",TAN_PERIODIC,DB.Thm), ("TAN_NEG",TAN_NEG,DB.Thm),
   ("TAN_NPI",TAN_NPI,DB.Thm), ("TAN_PI",TAN_PI,DB.Thm),
   ("TAN_0",TAN_0,DB.Thm), ("SIN_ZERO",SIN_ZERO,DB.Thm),
   ("COS_ZERO",COS_ZERO,DB.Thm), ("SIN_ZERO_LEMMA",SIN_ZERO_LEMMA,DB.Thm),
   ("COS_ZERO_LEMMA",COS_ZERO_LEMMA,DB.Thm),
   ("SIN_TOTAL",SIN_TOTAL,DB.Thm), ("COS_TOTAL",COS_TOTAL,DB.Thm),
   ("SIN_POS_PI_LE",SIN_POS_PI_LE,DB.Thm),
   ("SIN_POS_PI2_LE",SIN_POS_PI2_LE,DB.Thm),
   ("COS_POS_PI_LE",COS_POS_PI_LE,DB.Thm),
   ("COS_POS_PI2_LE",COS_POS_PI2_LE,DB.Thm),
   ("SIN_POS_PI",SIN_POS_PI,DB.Thm), ("COS_POS_PI",COS_POS_PI,DB.Thm),
   ("COS_POS_PI2",COS_POS_PI2,DB.Thm), ("SIN_POS_PI2",SIN_POS_PI2,DB.Thm),
   ("SIN_NPI",SIN_NPI,DB.Thm), ("COS_NPI",COS_NPI,DB.Thm),
   ("COS_PERIODIC",COS_PERIODIC,DB.Thm),
   ("SIN_PERIODIC",SIN_PERIODIC,DB.Thm),
   ("COS_PERIODIC_PI",COS_PERIODIC_PI,DB.Thm),
   ("SIN_PERIODIC_PI",SIN_PERIODIC_PI,DB.Thm), ("COS_SIN",COS_SIN,DB.Thm),
   ("SIN_COS",SIN_COS,DB.Thm), ("SIN_PI",SIN_PI,DB.Thm),
   ("COS_PI",COS_PI,DB.Thm), ("SIN_PI2",SIN_PI2,DB.Thm),
   ("PI_POS",PI_POS,DB.Thm), ("PI2_BOUNDS",PI2_BOUNDS,DB.Thm),
   ("COS_PI2",COS_PI2,DB.Thm), ("PI2",PI2,DB.Thm),
   ("COS_ISZERO",COS_ISZERO,DB.Thm), ("COS_2",COS_2,DB.Thm),
   ("COS_PAIRED",COS_PAIRED,DB.Thm), ("SIN_POS",SIN_POS,DB.Thm),
   ("SIN_PAIRED",SIN_PAIRED,DB.Thm), ("COS_DOUBLE",COS_DOUBLE,DB.Thm),
   ("SIN_DOUBLE",SIN_DOUBLE,DB.Thm), ("COS_NEG",COS_NEG,DB.Thm),
   ("SIN_NEG",SIN_NEG,DB.Thm), ("COS_ADD",COS_ADD,DB.Thm),
   ("SIN_ADD",SIN_ADD,DB.Thm), ("SIN_COS_NEG",SIN_COS_NEG,DB.Thm),
   ("SIN_COS_ADD",SIN_COS_ADD,DB.Thm), ("COS_BOUNDS",COS_BOUNDS,DB.Thm),
   ("COS_BOUND",COS_BOUND,DB.Thm), ("SIN_BOUNDS",SIN_BOUNDS,DB.Thm),
   ("SIN_BOUND",SIN_BOUND,DB.Thm), ("SIN_CIRCLE",SIN_CIRCLE,DB.Thm),
   ("COS_0",COS_0,DB.Thm), ("SIN_0",SIN_0,DB.Thm),
   ("SQRT_EQ",SQRT_EQ,DB.Thm), ("REAL_DIV_SQRT",REAL_DIV_SQRT,DB.Thm),
   ("SQRT_EVEN_POW2",SQRT_EVEN_POW2,DB.Thm),
   ("SQRT_MONO_LE",SQRT_MONO_LE,DB.Thm), ("SQRT_DIV",SQRT_DIV,DB.Thm),
   ("SQRT_INV",SQRT_INV,DB.Thm), ("SQRT_MUL",SQRT_MUL,DB.Thm),
   ("SQRT_POS_UNIQ",SQRT_POS_UNIQ,DB.Thm),
   ("POW_2_SQRT",POW_2_SQRT,DB.Thm), ("SQRT_POW_2",SQRT_POW_2,DB.Thm),
   ("SQRT_POW2",SQRT_POW2,DB.Thm), ("SQRT_POS_LE",SQRT_POS_LE,DB.Thm),
   ("SQRT_POS_LT",SQRT_POS_LT,DB.Thm), ("SQRT_1",SQRT_1,DB.Thm),
   ("SQRT_0",SQRT_0,DB.Thm), ("ROOT_MONO_LE",ROOT_MONO_LE,DB.Thm),
   ("ROOT_DIV",ROOT_DIV,DB.Thm), ("ROOT_INV",ROOT_INV,DB.Thm),
   ("ROOT_MUL",ROOT_MUL,DB.Thm), ("ROOT_POS_UNIQ",ROOT_POS_UNIQ,DB.Thm),
   ("ROOT_POS",ROOT_POS,DB.Thm), ("POW_ROOT_POS",POW_ROOT_POS,DB.Thm),
   ("ROOT_POW_POS",ROOT_POW_POS,DB.Thm),
   ("ROOT_POS_LT",ROOT_POS_LT,DB.Thm), ("ROOT_1",ROOT_1,DB.Thm),
   ("ROOT_0",ROOT_0,DB.Thm), ("ROOT_LN",ROOT_LN,DB.Thm),
   ("ROOT_LT_LEMMA",ROOT_LT_LEMMA,DB.Thm),
   ("EXP_CONVERGES",EXP_CONVERGES,DB.Thm),
   ("SIN_CONVERGES",SIN_CONVERGES,DB.Thm),
   ("COS_CONVERGES",COS_CONVERGES,DB.Thm), ("EXP_FDIFF",EXP_FDIFF,DB.Thm),
   ("SIN_FDIFF",SIN_FDIFF,DB.Thm), ("COS_FDIFF",COS_FDIFF,DB.Thm),
   ("SIN_NEGLEMMA",SIN_NEGLEMMA,DB.Thm), ("DIFF_EXP",DIFF_EXP,DB.Thm),
   ("DIFF_SIN",DIFF_SIN,DB.Thm), ("DIFF_COS",DIFF_COS,DB.Thm),
   ("DIFF_COMPOSITE",DIFF_COMPOSITE,DB.Thm), ("EXP_0",EXP_0,DB.Thm),
   ("EXP_LE_X",EXP_LE_X,DB.Thm), ("EXP_LT_1",EXP_LT_1,DB.Thm),
   ("EXP_ADD_MUL",EXP_ADD_MUL,DB.Thm), ("EXP_NEG_MUL",EXP_NEG_MUL,DB.Thm),
   ("EXP_NEG_MUL2",EXP_NEG_MUL2,DB.Thm), ("EXP_NEG",EXP_NEG,DB.Thm),
   ("EXP_ADD",EXP_ADD,DB.Thm), ("EXP_POS_LE",EXP_POS_LE,DB.Thm),
   ("EXP_NZ",EXP_NZ,DB.Thm), ("EXP_POS_LT",EXP_POS_LT,DB.Thm),
   ("EXP_N",EXP_N,DB.Thm), ("EXP_SUB",EXP_SUB,DB.Thm),
   ("EXP_MONO_IMP",EXP_MONO_IMP,DB.Thm),
   ("EXP_MONO_LT",EXP_MONO_LT,DB.Thm), ("EXP_MONO_LE",EXP_MONO_LE,DB.Thm),
   ("EXP_INJ",EXP_INJ,DB.Thm), ("EXP_TOTAL_LEMMA",EXP_TOTAL_LEMMA,DB.Thm),
   ("EXP_TOTAL",EXP_TOTAL,DB.Thm), ("LN_EXP",LN_EXP,DB.Thm),
   ("EXP_LN",EXP_LN,DB.Thm), ("LN_MUL",LN_MUL,DB.Thm),
   ("LN_INJ",LN_INJ,DB.Thm), ("LN_1",LN_1,DB.Thm),
   ("LN_INV",LN_INV,DB.Thm), ("LN_DIV",LN_DIV,DB.Thm),
   ("LN_MONO_LT",LN_MONO_LT,DB.Thm), ("LN_MONO_LE",LN_MONO_LE,DB.Thm),
   ("LN_POW",LN_POW,DB.Thm), ("LN_LE",LN_LE,DB.Thm),
   ("LN_LT_X",LN_LT_X,DB.Thm), ("LN_POS",LN_POS,DB.Thm),
   ("DIFF_LN",DIFF_LN,DB.Thm), ("DIFF_ASN_LEMMA",DIFF_ASN_LEMMA,DB.Thm),
   ("DIFF_ASN",DIFF_ASN,DB.Thm), ("DIFF_ACS_LEMMA",DIFF_ACS_LEMMA,DB.Thm),
   ("DIFF_ACS",DIFF_ACS,DB.Thm), ("DIFF_ATN",DIFF_ATN,DB.Thm),
   ("DIVISION_0",DIVISION_0,DB.Thm), ("DIVISION_1",DIVISION_1,DB.Thm),
   ("DIVISION_SINGLE",DIVISION_SINGLE,DB.Thm),
   ("DIVISION_LHS",DIVISION_LHS,DB.Thm),
   ("DIVISION_THM",DIVISION_THM,DB.Thm),
   ("DIVISION_RHS",DIVISION_RHS,DB.Thm),
   ("DIVISION_LT_GEN",DIVISION_LT_GEN,DB.Thm),
   ("DIVISION_LT",DIVISION_LT,DB.Thm), ("DIVISION_LE",DIVISION_LE,DB.Thm),
   ("DIVISION_GT",DIVISION_GT,DB.Thm), ("DIVISION_EQ",DIVISION_EQ,DB.Thm),
   ("DIVISION_LBOUND",DIVISION_LBOUND,DB.Thm),
   ("DIVISION_LBOUND_LT",DIVISION_LBOUND_LT,DB.Thm),
   ("DIVISION_UBOUND",DIVISION_UBOUND,DB.Thm),
   ("DIVISION_UBOUND_LT",DIVISION_UBOUND_LT,DB.Thm),
   ("DIVISION_APPEND",DIVISION_APPEND,DB.Thm),
   ("DIVISION_EXISTS",DIVISION_EXISTS,DB.Thm),
   ("GAUGE_MIN",GAUGE_MIN,DB.Thm), ("FINE_MIN",FINE_MIN,DB.Thm),
   ("DINT_UNIQ",DINT_UNIQ,DB.Thm), ("INTEGRAL_NULL",INTEGRAL_NULL,DB.Thm),
   ("FTC1",FTC1,DB.Thm), ("MCLAURIN",MCLAURIN,DB.Thm),
   ("MCLAURIN_NEG",MCLAURIN_NEG,DB.Thm),
   ("MCLAURIN_ALL_LT",MCLAURIN_ALL_LT,DB.Thm),
   ("MCLAURIN_ZERO",MCLAURIN_ZERO,DB.Thm),
   ("MCLAURIN_ALL_LE",MCLAURIN_ALL_LE,DB.Thm),
   ("MCLAURIN_EXP_LT",MCLAURIN_EXP_LT,DB.Thm),
   ("MCLAURIN_EXP_LE",MCLAURIN_EXP_LE,DB.Thm),
   ("DIFF_LN_COMPOSITE",DIFF_LN_COMPOSITE,DB.Thm),
   ("GEN_RPOW",GEN_RPOW,DB.Thm), ("RPOW_SUC_N",RPOW_SUC_N,DB.Thm),
   ("RPOW_0",RPOW_0,DB.Thm), ("RPOW_1",RPOW_1,DB.Thm),
   ("ONE_RPOW",ONE_RPOW,DB.Thm), ("RPOW_POS_LT",RPOW_POS_LT,DB.Thm),
   ("RPOW_NZ",RPOW_NZ,DB.Thm), ("LN_RPOW",LN_RPOW,DB.Thm),
   ("RPOW_ADD",RPOW_ADD,DB.Thm), ("RPOW_ADD_MUL",RPOW_ADD_MUL,DB.Thm),
   ("RPOW_SUB",RPOW_SUB,DB.Thm), ("RPOW_DIV",RPOW_DIV,DB.Thm),
   ("RPOW_INV",RPOW_INV,DB.Thm), ("RPOW_MUL",RPOW_MUL,DB.Thm),
   ("RPOW_RPOW",RPOW_RPOW,DB.Thm), ("RPOW_LT",RPOW_LT,DB.Thm),
   ("RPOW_LE",RPOW_LE,DB.Thm), ("BASE_RPOW_LE",BASE_RPOW_LE,DB.Thm),
   ("BASE_RPOW_LT",BASE_RPOW_LT,DB.Thm),
   ("RPOW_UNIQ_BASE",RPOW_UNIQ_BASE,DB.Thm),
   ("RPOW_UNIQ_EXP",RPOW_UNIQ_EXP,DB.Thm),
   ("RPOW_DIV_BASE",RPOW_DIV_BASE,DB.Thm),
   ("DIFF_COMPOSITE_EXP",DIFF_COMPOSITE_EXP,DB.Thm),
   ("DIFF_RPOW",DIFF_RPOW,DB.Thm)]

  local open Portable GrammarSpecials Parse
    fun UTOFF f = Feedback.trace("Parse.unicode_trace_off_complaints",0)f
  in
  val _ = mk_local_grms [("powserTheory.powser_grammars",
                          powserTheory.powser_grammars)]
  val _ = List.app (update_grms reveal) []
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("exp", (Term.prim_mk_const { Name = "exp", Thy = "transc"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("exp", (Term.prim_mk_const { Name = "exp", Thy = "transc"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("cos", (Term.prim_mk_const { Name = "cos", Thy = "transc"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("cos", (Term.prim_mk_const { Name = "cos", Thy = "transc"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("sin", (Term.prim_mk_const { Name = "sin", Thy = "transc"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("sin", (Term.prim_mk_const { Name = "sin", Thy = "transc"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("ln", (Term.prim_mk_const { Name = "ln", Thy = "transc"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("ln", (Term.prim_mk_const { Name = "ln", Thy = "transc"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("root", (Term.prim_mk_const { Name = "root", Thy = "transc"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("root", (Term.prim_mk_const { Name = "root", Thy = "transc"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("sqrt", (Term.prim_mk_const { Name = "sqrt", Thy = "transc"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("sqrt", (Term.prim_mk_const { Name = "sqrt", Thy = "transc"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("pi", (Term.prim_mk_const { Name = "pi", Thy = "transc"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("pi", (Term.prim_mk_const { Name = "pi", Thy = "transc"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("tan", (Term.prim_mk_const { Name = "tan", Thy = "transc"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("tan", (Term.prim_mk_const { Name = "tan", Thy = "transc"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("asn", (Term.prim_mk_const { Name = "asn", Thy = "transc"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("asn", (Term.prim_mk_const { Name = "asn", Thy = "transc"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("acs", (Term.prim_mk_const { Name = "acs", Thy = "transc"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("acs", (Term.prim_mk_const { Name = "acs", Thy = "transc"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("atn", (Term.prim_mk_const { Name = "atn", Thy = "transc"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("atn", (Term.prim_mk_const { Name = "atn", Thy = "transc"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("division", (Term.prim_mk_const { Name = "division", Thy = "transc"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("division", (Term.prim_mk_const { Name = "division", Thy = "transc"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("dsize", (Term.prim_mk_const { Name = "dsize", Thy = "transc"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("dsize", (Term.prim_mk_const { Name = "dsize", Thy = "transc"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("tdiv", (Term.prim_mk_const { Name = "tdiv", Thy = "transc"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("tdiv", (Term.prim_mk_const { Name = "tdiv", Thy = "transc"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("gauge", (Term.prim_mk_const { Name = "gauge", Thy = "transc"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("gauge", (Term.prim_mk_const { Name = "gauge", Thy = "transc"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("fine", (Term.prim_mk_const { Name = "fine", Thy = "transc"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("fine", (Term.prim_mk_const { Name = "fine", Thy = "transc"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("rsum", (Term.prim_mk_const { Name = "rsum", Thy = "transc"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("rsum", (Term.prim_mk_const { Name = "rsum", Thy = "transc"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("Dint", (Term.prim_mk_const { Name = "Dint", Thy = "transc"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("Dint", (Term.prim_mk_const { Name = "Dint", Thy = "transc"}))
  val _ = update_grms
       (UTOFF (temp_set_fixity "rpow"))
       (Infix(HOLgrammars.RIGHT, 700))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("rpow", (Term.prim_mk_const { Name = "rpow", Thy = "transc"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("rpow", (Term.prim_mk_const { Name = "rpow", Thy = "transc"}))
  val transc_grammars = Parse.current_lgrms()
  end
  val _ = Theory.LoadableThyData.temp_encoded_update {
    thy = "transc", thydataty = "compute", data = "transc.rpow_def"
  }

val _ = if !Globals.print_thy_loads then print "done\n" else ()
val _ = Theory.load_complete "transc"
end
