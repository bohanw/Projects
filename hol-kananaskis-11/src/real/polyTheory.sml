structure polyTheory :> polyTheory =
struct
  val _ = if !Globals.print_thy_loads then print "Loading polyTheory ... " else ()
  open Type Term Thm
  infixr -->

  fun C s t ty = mk_thy_const{Name=s,Thy=t,Ty=ty}
  fun T s t A = mk_thy_type{Tyop=s, Thy=t,Args=A}
  fun V s q = mk_var(s,q)
  val U     = mk_vartype
  (*  Parents *)
  local open limTheory
  in end;
  val _ = Theory.link_parents
          ("poly",
          Arbnum.fromString "1488589402",
          Arbnum.fromString "581527")
          [("lim",
           Arbnum.fromString "1488589284",
           Arbnum.fromString "159894")];
  val _ = Theory.incorporate_types "poly" [];

  val idvector = 
    let fun ID(thy,oth) = {Thy = thy, Other = oth}
    in Vector.fromList
  [ID("min", "fun"), ID("min", "bool"), ID("list", "list"),
   ID("realax", "real"), ID("num", "num"), ID("bool", "!"),
   ID("poly", "##"), ID("arithmetic", "+"), ID("pair", ","),
   ID("pair", "prod"), ID("bool", "/\\"), ID("num", "0"),
   ID("prim_rec", "<"), ID("arithmetic", "<="), ID("min", "="),
   ID("min", "==>"), ID("bool", "?"), ID("bool", "?!"), ID("min", "@"),
   ID("arithmetic", "BIT1"), ID("bool", "COND"), ID("list", "CONS"),
   ID("list", "EVERY"), ID("pred_set", "FINITE"), ID("pred_set", "GSPEC"),
   ID("list", "HD"), ID("list", "LENGTH"), ID("list", "MAP"),
   ID("list", "NIL"), ID("arithmetic", "NUMERAL"), ID("prim_rec", "PRE"),
   ID("num", "SUC"), ID("list", "TL"), ID("arithmetic", "ZERO"),
   ID("bool", "\\/"), ID("real", "abs"), ID("lim", "contl"),
   ID("poly", "degree"), ID("poly", "diff"), ID("lim", "differentiable"),
   ID("lim", "diffl"), ID("poly", "normalize"), ID("poly", "poly"),
   ID("poly", "poly_add"), ID("poly", "poly_diff_aux"),
   ID("poly", "poly_divides"), ID("poly", "poly_exp"),
   ID("poly", "poly_mul"), ID("poly", "poly_neg"),
   ID("poly", "poly_order"), ID("real", "pow"), ID("realax", "real_add"),
   ID("real", "real_gt"), ID("realax", "real_lt"), ID("real", "real_lte"),
   ID("realax", "real_mul"), ID("realax", "real_neg"),
   ID("real", "real_of_num"), ID("real", "real_sub"),
   ID("poly", "rsquarefree"), ID("bool", "~")]
  end;
  local open SharingTables
  in
  val tyvector = build_type_vector idvector
  [TYOP [1], TYOP [3], TYOP [2, 1], TYOP [0, 2, 0], TYOP [4],
   TYOP [0, 2, 4], TYOP [0, 1, 5], TYOP [0, 2, 2], TYOP [0, 2, 7],
   TYOP [0, 4, 2], TYOP [0, 2, 9], TYOP [0, 2, 3], TYOP [0, 4, 7],
   TYOP [0, 1, 1], TYOP [0, 2, 13], TYOP [0, 1, 7], TYOP [0, 1, 0],
   TYOP [0, 4, 1], TYOP [0, 17, 0], TYOP [0, 18, 0], TYOP [0, 16, 0],
   TYOP [0, 20, 0], TYOP [0, 3, 0], TYOP [0, 4, 0], TYOP [0, 23, 0],
   TYOP [0, 4, 4], TYOP [0, 4, 25], TYOP [9, 1, 0], TYOP [0, 0, 27],
   TYOP [0, 1, 28], TYOP [0, 0, 0], TYOP [0, 0, 30], TYOP [0, 4, 23],
   TYOP [0, 7, 0], TYOP [0, 7, 33], TYOP [0, 13, 0], TYOP [0, 13, 35],
   TYOP [0, 1, 16], TYOP [0, 23, 4], TYOP [0, 0, 8], TYOP [0, 0, 26],
   TYOP [0, 16, 3], TYOP [0, 1, 27], TYOP [0, 42, 16], TYOP [0, 2, 1],
   TYOP [0, 13, 7], TYOP [0, 13, 16], TYOP [0, 13, 37], TYOP [0, 1, 17],
   TYOP [0, 1, 13]]
  end
  val _ = Theory.incorporate_consts "poly" tyvector
     [("rsquarefree", 3), ("poly_order", 6), ("poly_neg", 7),
      ("poly_mul", 8), ("poly_exp", 10), ("poly_divides", 11),
      ("poly_diff_aux", 12), ("poly_add", 8), ("poly", 14),
      ("normalize", 7), ("diff", 7), ("degree", 5), ("##", 15)];

  local open SharingTables
  in
  val tmvector = build_term_vector idvector tyvector
  [TMV("N", 4), TMV("P", 16), TMV("a", 1), TMV("b", 1), TMV("c", 1),
   TMV("d", 2), TMV("d", 4), TMV("e", 2), TMV("h", 1), TMV("h1", 1),
   TMV("h2", 1), TMV("i", 17), TMV("k", 1), TMV("k1", 1), TMV("l", 2),
   TMV("l2", 2), TMV("m", 4), TMV("n", 4), TMV("p", 2), TMV("p1", 2),
   TMV("p2", 2), TMV("q", 2), TMV("r", 2), TMV("r", 1), TMV("s", 2),
   TMV("t", 2), TMV("t1", 2), TMV("t2", 2), TMV("x", 1), TMC(5, 19),
   TMC(5, 21), TMC(5, 22), TMC(5, 24), TMC(5, 20), TMC(6, 15), TMC(7, 26),
   TMC(8, 29), TMC(10, 31), TMC(11, 4), TMC(12, 32), TMC(13, 32),
   TMC(14, 31), TMC(14, 34), TMC(14, 36), TMC(14, 11), TMC(14, 32),
   TMC(14, 37), TMC(15, 31), TMC(16, 19), TMC(16, 22), TMC(16, 24),
   TMC(16, 20), TMC(17, 24), TMC(18, 38), TMC(19, 25), TMC(20, 39),
   TMC(20, 40), TMC(21, 15), TMC(22, 41), TMC(23, 20), TMC(24, 43),
   TMC(25, 44), TMC(26, 5), TMC(27, 45), TMC(28, 2), TMC(29, 25),
   TMC(30, 25), TMC(31, 25), TMC(32, 7), TMC(33, 4), TMC(34, 31),
   TMC(35, 13), TMC(36, 46), TMC(37, 5), TMC(38, 7), TMC(39, 46),
   TMC(40, 47), TMC(41, 7), TMC(42, 14), TMC(43, 8), TMC(44, 12),
   TMC(45, 11), TMC(46, 10), TMC(47, 8), TMC(48, 7), TMC(49, 6),
   TMC(50, 48), TMC(51, 49), TMC(52, 37), TMC(53, 37), TMC(54, 37),
   TMC(55, 49), TMC(56, 13), TMC(57, 17), TMC(58, 49), TMC(59, 3),
   TMC(60, 30)]
  end
  local
  val DT = Thm.disk_thm val read = Term.read_raw tmvector
  in
  fun op poly_def x = x
    val op poly_def =
    DT(((("poly",0),[("list",[13])]),["DISK_THM"]),
       [read"%37%33%28%46%78%64@$0@@%93%38@@|@@%33%8%31%25%33%28%46%78%57$2@$1@@$0@@%87$2@%91$0@%78$1@$0@@@@|@|@|@@"])
  fun op poly_add_def x = x
    val op poly_add_def =
    DT(((("poly",1),[("list",[13])]),["DISK_THM"]),
       [read"%37%31%15%44%79%64@$0@@$0@|@@%33%8%31%25%31%15%44%79%57$2@$1@@$0@@%55%44$0@%64@@%57$2@$1@@%57%87$2@%61$0@@@%79$1@%68$0@@@@@|@|@|@@"])
  fun op poly_cmul_def x = x
    val op poly_cmul_def =
    DT(((("poly",2),[("list",[13])]),["DISK_THM"]),
       [read"%37%33%4%44%34$0@%64@@%64@|@@%33%4%33%8%31%25%44%34$2@%57$1@$0@@@%57%91$2@$1@@%34$2@$0@@@|@|@|@@"])
  fun op poly_neg_def x = x
    val op poly_neg_def =
    DT(((("poly",3),[]),[]), [read"%42%84@%34%92%93%65%54%69@@@@@@"])
  fun op poly_mul_def x = x
    val op poly_mul_def =
    DT(((("poly",4),[("list",[13])]),["DISK_THM"]),
       [read"%37%31%15%44%83%64@$0@@%64@|@@%33%8%31%25%31%15%44%83%57$2@$1@@$0@@%55%44$1@%64@@%34$2@$0@@%79%34$2@$0@@%57%93%38@@%83$1@$0@@@@@|@|@|@@"])
  fun op poly_exp_def x = x
    val op poly_exp_def =
    DT(((("poly",5),[("prim_rec",[38])]),["DISK_THM"]),
       [read"%37%31%18%44%82$0@%38@@%57%93%65%54%69@@@@%64@@|@@%31%18%32%17%44%82$1@%67$0@@@%83$1@%82$1@$0@@@|@|@@"])
  fun op poly_diff_aux_def x = x
    val op poly_diff_aux_def =
    DT(((("poly",6),[("list",[13])]),["DISK_THM"]),
       [read"%37%32%17%44%80$0@%64@@%64@|@@%32%17%33%8%31%25%44%80$2@%57$1@$0@@@%57%91%93$2@@$1@@%80%67$2@@$0@@@|@|@|@@"])
  fun op poly_diff_def x = x
    val op poly_diff_def =
    DT(((("poly",7),[]),[]),
       [read"%31%14%44%74$0@@%55%44$0@%64@@%64@%80%65%54%69@@@%68$0@@@@|@"])
  fun op poly_divides x = x
    val op poly_divides =
    DT(((("poly",59),[]),[]),
       [read"%31%19%31%20%41%81$1@$0@@%49%21%43%78$1@@%78%83$2@$0@@@|@@|@|@"])
  fun op poly_order x = x
    val op poly_order =
    DT(((("poly",71),[]),[]),
       [read"%33%2%31%18%45%85$1@$0@@%53%17%37%81%82%57%92$2@@%57%93%65%54%69@@@@%64@@@$0@@$1@@%96%81%82%57%92$2@@%57%93%65%54%69@@@@%64@@@%67$0@@@$1@@@|@@|@|@"])
  fun op rsquarefree x = x
    val op rsquarefree =
    DT(((("poly",82),[]),[]),
       [read"%31%18%41%95$0@@%37%96%43%78$0@@%78%64@@@@%33%2%70%45%85$0@$1@@%38@@%45%85$0@$1@@%65%54%69@@@@|@@@|@"])
  fun op normalize x = x
    val op normalize =
    DT(((("poly",86),[("list",[13])]),["DISK_THM"]),
       [read"%37%44%77%64@@%64@@%33%8%31%25%44%77%57$1@$0@@@%55%44%77$0@@%64@@%55%46$1@%93%38@@@%64@%57$1@%64@@@%57$1@%77$0@@@@|@|@@"])
  fun op degree x = x
    val op degree =
    DT(((("poly",88),[]),[]), [read"%31%18%45%73$0@@%66%62%77$0@@@@|@"])
  fun op POLY_ADD_CLAUSES x = x
    val op POLY_ADD_CLAUSES =
    DT(((("poly",8),
        [("bool",[14,25,26,27,51,56,64]),("list",[17,18,42,50]),
         ("poly",[1])]),["DISK_THM"]),
       [read"%37%44%79%64@%20@@%20@@%37%44%79%19@%64@@%19@@%44%79%57%9@%26@@%57%10@%27@@@%57%87%9@%10@@%79%26@%27@@@@@"])
  fun op POLY_CMUL_CLAUSES x = x
    val op POLY_CMUL_CLAUSES =
    DT(((("poly",9),[("bool",[25,51,56]),("poly",[2])]),["DISK_THM"]),
       [read"%37%44%34%4@%64@@%64@@%44%34%4@%57%8@%25@@@%57%91%4@%8@@%34%4@%25@@@@"])
  fun op POLY_NEG_CLAUSES x = x
    val op POLY_NEG_CLAUSES =
    DT(((("poly",10),
        [("bool",[25,51,56]),("poly",[3,9]),
         ("real",[18,308])]),["DISK_THM"]),
       [read"%37%44%84%64@@%64@@%44%84%57%8@%25@@@%57%92%8@@%84%25@@@@"])
  fun op POLY_MUL_CLAUSES x = x
    val op POLY_MUL_CLAUSES =
    DT(((("poly",11),
        [("bool",[25,26,27,51,56,64]),("list",[50]),
         ("poly",[4])]),["DISK_THM"]),
       [read"%37%44%83%64@%20@@%64@@%37%44%83%57%9@%64@@%20@@%34%9@%20@@@%44%83%57%9@%57%13@%26@@@%20@@%79%34%9@%20@@%57%93%38@@%83%57%13@%26@@%20@@@@@@"])
  fun op POLY_DIFF_CLAUSES x = x
    val op POLY_DIFF_CLAUSES =
    DT(((("poly",12),
        [("bool",[25,26,27,51,56,64]),("list",[18,50]),
         ("poly",[6,7])]),["DISK_THM"]),
       [read"%37%44%74%64@@%64@@%37%44%74%57%4@%64@@@%64@@%44%74%57%8@%25@@@%80%65%54%69@@@%25@@@@"])
  fun op POLY_ADD x = x
    val op POLY_ADD =
    DT(((("poly",13),
        [("bool",[14,25,26,27,36,51,53,54,56,58,63,64,96]),
         ("list",[17,18,42,50]),("poly",[0,1]),
         ("real",
         [4,6,7,8,18,27,28,38,39,55,62,308,309,311,312,313,314,325,326]),
         ("sat",[1,3,5,6,7,11,15])]),["DISK_THM"]),
       [read"%31%19%31%20%33%28%46%78%79$2@$1@@$0@@%87%78$2@$0@@%78$1@$0@@@|@|@|@"])
  fun op POLY_CMUL x = x
    val op POLY_CMUL =
    DT(((("poly",14),
        [("arithmetic",[46,60,79,207]),
         ("bool",[14,25,36,51,53,54,56,58,63,96]),("list",[42]),
         ("numeral",[3]),("poly",[0,2]),
         ("real",
         [4,6,8,15,17,18,27,28,29,38,39,40,55,62,131,308,309,311,312,313,
          314,325,326,328]),("sat",[1,3,5,6,7,11,12,15])]),["DISK_THM"]),
       [read"%31%18%33%4%33%28%46%78%34$1@$2@@$0@@%91$1@%78$2@$0@@@|@|@|@"])
  fun op POLY_NEG x = x
    val op POLY_NEG =
    DT(((("poly",15),
        [("bool",[25,51,53,54,56,58,63,96]),("poly",[3,14]),
         ("real",[8,18,28,39,55,62,308,309,311,312,313,314,326]),
         ("sat",[1,3,5,6,7,11,15])]),["DISK_THM"]),
       [read"%31%18%33%28%46%78%84$1@@$0@@%92%78$1@$0@@@|@|@"])
  fun op POLY_MUL x = x
    val op POLY_MUL =
    DT(((("poly",16),
        [("bool",[14,25,26,27,36,51,53,54,56,58,63,64,96]),
         ("list",[42,50]),("poly",[0,4,13,14]),
         ("real",
         [4,6,7,8,15,17,18,27,28,38,39,40,55,62,308,309,311,312,313,314,
          325,326]),("sat",[1,3,5,6,7,11,15])]),["DISK_THM"]),
       [read"%33%28%31%19%31%20%46%78%83$1@$0@@$2@@%91%78$1@$2@@%78$0@$2@@@|@|@|@"])
  fun op POLY_EXP x = x
    val op POLY_EXP =
    DT(((("poly",17),
        [("bool",[14,25,36,51,53,54,56,58,63,96]),("num",[9]),
         ("poly",[0,5,16]),
         ("real",[8,27,28,29,39,40,55,62,233,309,311,312,313,314,326]),
         ("sat",[1,3,5,6,7,11,15])]),["DISK_THM"]),
       [read"%31%18%32%17%33%28%46%78%82$2@$1@@$0@@%86%78$2@$0@@$1@@|@|@|@"])
  fun op POLY_DIFF_LEMMA x = x
    val op POLY_DIFF_LEMMA =
    DT(((("poly",18),
        [("arithmetic",[65]),("bool",[14,25,36,53,58,63]),
         ("lim",[31,32,34,39]),("list",[42]),("poly",[0,6]),
         ("real",[9,15,17,40,233])]),["DISK_THM"]),
       [read"%31%14%32%17%33%28%76%28%91%86$0@%67$2@@@%78$3@$0@@|@%91%86$0@$1@@%78%80%67$1@@$2@@$0@@@$0@|@|@|@"])
  fun op POLY_DIFF x = x
    val op POLY_DIFF =
    DT(((("poly",19),
        [("arithmetic",[17]),("bool",[14,25,35,36,53,63]),("lim",[31,32]),
         ("list",[42]),("poly",[0,12,18]),
         ("real",[7,18,233,240])]),["DISK_THM"]),
       [read"%31%14%33%28%76%28%78$2@$0@|@%78%74$1@@$0@@$0@|@|@"])
  fun op POLY_DIFFERENTIABLE x = x
    val op POLY_DIFFERENTIABLE =
    DT(((("poly",20),
        [("bool",[25,63]),("lim",[16]),("poly",[19])]),["DISK_THM"]),
       [read"%31%14%33%28%75%28%78$2@$0@|@$0@|@|@"])
  fun op POLY_CONT x = x
    val op POLY_CONT =
    DT(((("poly",21),[("lim",[18]),("poly",[19])]),["DISK_THM"]),
       [read"%31%14%33%28%72%28%78$2@$0@|@$0@|@|@"])
  fun op POLY_IVT_POS x = x
    val op POLY_IVT_POS =
    DT(((("poly",22),
        [("bool",[26,27,36,51,53,56,58,63,105,124]),("lim",[29]),
         ("poly",[21]),("real",[11,24,57,58])]),["DISK_THM"]),
       [read"%31%18%33%2%33%3%47%37%89$1@$0@@%37%89%78$2@$1@@%93%38@@@%88%78$2@$0@@%93%38@@@@@%51%28%37%89$2@$0@@%37%89$0@$1@@%46%78$3@$0@@%93%38@@@@|@@|@|@|@"])
  fun op POLY_IVT_NEG x = x
    val op POLY_IVT_NEG =
    DT(((("poly",23),
        [("arithmetic",[46,60,79,207]),
         ("bool",[25,51,53,54,56,58,63,93,96]),("numeral",[3,5,17,18]),
         ("poly",[15,22]),
         ("real",
         [7,8,12,17,18,20,24,27,28,39,40,46,59,60,61,62,71,131,307,308,309,
          310,311,312,313,314,326,328,329]),
         ("sat",[1,3,5,6,7,11,12,13,15])]),["DISK_THM"]),
       [read"%31%18%33%2%33%3%47%37%89$1@$0@@%37%88%78$2@$1@@%93%38@@@%89%78$2@$0@@%93%38@@@@@%51%28%37%89$2@$0@@%37%89$0@$1@@%46%78$3@$0@@%93%38@@@@|@@|@|@|@"])
  fun op POLY_MVT x = x
    val op POLY_MVT =
    DT(((("poly",24),
        [("bool",[14,25,36,51,53,63]),("lim",[17,57]),
         ("poly",[19,20,21])]),["DISK_THM"]),
       [read"%31%18%33%2%33%3%47%89$1@$0@@%51%28%37%89$2@$0@@%37%89$0@$1@@%46%94%78$3@$1@@%78$3@$2@@@%91%94$1@$2@@%78%74$3@@$0@@@@@|@@|@|@|@"])
  fun op POLY_ADD_RZERO x = x
    val op POLY_ADD_RZERO =
    DT(((("poly",25),
        [("bool",[25,26,36,56,59]),("poly",[0,13]),
         ("real",[27])]),["DISK_THM"]),
       [read"%31%18%43%78%79$0@%64@@@%78$0@@|@"])
  fun op POLY_MUL_ASSOC x = x
    val op POLY_MUL_ASSOC =
    DT(((("poly",26),
        [("bool",[25,26,36,56,59]),("poly",[16]),
         ("real",[17])]),["DISK_THM"]),
       [read"%31%18%31%21%31%22%43%78%83$2@%83$1@$0@@@@%78%83%83$2@$1@@$0@@@|@|@|@"])
  fun op POLY_EXP_ADD x = x
    val op POLY_EXP_ADD =
    DT(((("poly",27),
        [("arithmetic",[24]),("bool",[14,25,26,51,53,54,56,58,59,63,96]),
         ("num",[9]),("poly",[0,5,16]),
         ("real",
         [8,15,17,18,27,28,29,39,40,55,62,308,309,311,312,313,314,325,
          326]),("sat",[1,3,5,6,7,11,15])]),["DISK_THM"]),
       [read"%32%6%32%17%31%18%43%78%82$0@%35$1@$2@@@@%78%83%82$0@$1@@%82$0@$2@@@@|@|@|@"])
  fun op POLY_DIFF_AUX_ADD x = x
    val op POLY_DIFF_AUX_ADD =
    DT(((("poly",28),
        [("bool",[14,25,26,27,36,51,53,54,56,58,59,63,64,96]),
         ("list",[17,18,42,50]),("poly",[0,1,6]),
         ("real",
         [4,6,8,15,18,27,28,38,39,55,62,308,309,311,312,313,314,325,326]),
         ("sat",[1,3,5,6,7,11,15])]),["DISK_THM"]),
       [read"%31%19%31%20%32%17%43%78%80$0@%79$2@$1@@@@%78%79%80$0@$2@@%80$0@$1@@@@|@|@|@"])
  fun op POLY_DIFF_AUX_CMUL x = x
    val op POLY_DIFF_AUX_CMUL =
    DT(((("poly",29),
        [("bool",[14,25,26,36,56,59,170]),("list",[42]),("poly",[0,2,6]),
         ("real",[15,17,425])]),["DISK_THM"]),
       [read"%31%18%33%4%32%17%43%78%80$0@%34$1@$2@@@@%78%34$1@%80$0@$2@@@@|@|@|@"])
  fun op POLY_DIFF_AUX_NEG x = x
    val op POLY_DIFF_AUX_NEG =
    DT(((("poly",30),[("bool",[25,36,56]),("poly",[3,29])]),["DISK_THM"]),
       [read"%31%18%32%17%43%78%80$0@%84$1@@@@%78%84%80$0@$1@@@@|@|@"])
  fun op POLY_DIFF_AUX_MUL_LEMMA x = x
    val op POLY_DIFF_AUX_MUL_LEMMA =
    DT(((("poly",31),
        [("bool",[14,25,26,27,36,56,58,59,64]),("list",[17,18,42,50]),
         ("poly",[0,1,6]),("real",[18,326,330])]),["DISK_THM"]),
       [read"%31%18%32%17%43%78%80%67$0@@$1@@@%78%79%80$0@$1@@$1@@@|@|@"])
  fun op POLY_DIFF_ADD x = x
    val op POLY_DIFF_ADD =
    DT(((("poly",32),
        [("bool",[14,25,26,27,56,64]),("list",[18,42,50]),
         ("poly",[1,7,25,28])]),["DISK_THM"]),
       [read"%31%19%31%20%43%78%74%79$1@$0@@@@%78%79%74$1@@%74$0@@@@|@|@"])
  fun op POLY_DIFF_CMUL x = x
    val op POLY_DIFF_CMUL =
    DT(((("poly",33),
        [("bool",[14,25,26,27,36,56,64]),("list",[18,42,50]),
         ("poly",[2,7,29])]),["DISK_THM"]),
       [read"%31%18%33%4%43%78%74%34$0@$1@@@@%78%34$0@%74$1@@@@|@|@"])
  fun op POLY_DIFF_NEG x = x
    val op POLY_DIFF_NEG =
    DT(((("poly",34),[("bool",[25,36,56]),("poly",[3,33])]),["DISK_THM"]),
       [read"%31%18%43%78%74%84$0@@@@%78%84%74$0@@@@|@"])
  fun op POLY_DIFF_MUL_LEMMA x = x
    val op POLY_DIFF_MUL_LEMMA =
    DT(((("poly",35),
        [("bool",[14,25,26,27,36,51,53,54,56,58,59,63,64,96]),
         ("list",[18,42,50]),("poly",[0,1,6,7,13,31]),
         ("real",
         [4,6,7,8,18,27,28,38,39,40,55,62,308,309,311,312,313,314,325,
          326]),("sat",[1,3,5,6,7,11,15])]),["DISK_THM"]),
       [read"%31%25%33%8%43%78%74%57$0@$1@@@@%78%79%57%93%38@@%74$1@@@$1@@@|@|@"])
  fun op POLY_DIFF_MUL x = x
    val op POLY_DIFF_MUL =
    DT(((("poly",36),
        [("bool",[14,25,26,27,30,36,51,53,54,56,58,59,63,64,96]),
         ("list",[42]),("poly",[0,1,4,7,12,13,16,25,32,33,35]),
         ("real",
         [4,6,7,8,15,17,18,27,28,38,39,55,62,308,309,311,312,313,314,325,
          326]),("sat",[1,3,5,6,7,11,15])]),["DISK_THM"]),
       [read"%31%19%31%20%43%78%74%83$1@$0@@@@%78%79%83$1@%74$0@@@%83%74$1@@$0@@@@|@|@"])
  fun op POLY_DIFF_EXP x = x
    val op POLY_DIFF_EXP =
    DT(((("poly",37),
        [("arithmetic",[24,64]),
         ("bool",[14,25,26,51,53,54,56,58,59,63,96]),("num",[9]),
         ("numeral",[3,5]),("poly",[0,5,12,13,14,16,36]),
         ("real",
         [4,6,7,8,15,17,18,27,28,29,38,39,40,55,62,131,308,309,311,312,313,
          314,325,326,327]),("sat",[1,3,5,6,7,11,15])]),["DISK_THM"]),
       [read"%31%18%32%17%43%78%74%82$1@%67$0@@@@@%78%83%34%93%67$0@@@%82$1@$0@@@%74$1@@@@|@|@"])
  fun op POLY_DIFF_EXP_PRIME x = x
    val op POLY_DIFF_EXP_PRIME =
    DT(((("poly",38),
        [("bool",[25,26,27,36,56,58,59,64,105,129,170]),("list",[18,50]),
         ("poly",[0,6,7,14,16,37]),
         ("real",[15,17,18,27,40])]),["DISK_THM"]),
       [read"%32%17%33%2%43%78%74%82%57%92$0@@%57%93%65%54%69@@@@%64@@@%67$1@@@@@%78%34%93%67$1@@@%82%57%92$0@@%57%93%65%54%69@@@@%64@@@$1@@@@|@|@"])
  fun op POLY_LINEAR_REM x = x
    val op POLY_LINEAR_REM =
    DT(((("poly",39),
        [("bool",[14,25,26,27,51,53,54,56,58,63,64,96]),
         ("list",[17,18,42,48,50]),("poly",[1,2,4,8,11]),
         ("real",
         [4,6,8,15,18,27,28,38,39,55,62,308,309,311,312,313,314,326]),
         ("sat",[1,3,5,6,7,11,15])]),["DISK_THM"]),
       [read"%31%25%33%8%49%21%51%23%44%57$2@$3@@%79%57$0@%64@@%83%57%92%2@@%57%93%65%54%69@@@@%64@@@$1@@@|@|@|@|@"])
  fun op POLY_LINEAR_DIVIDES x = x
    val op POLY_LINEAR_DIVIDES =
    DT(((("poly",40),
        [("arithmetic",[46,60,79,207]),
         ("bool",[14,25,26,27,51,52,53,54,56,58,63,64,96]),
         ("list",[17,18,42,50]),("numeral",[3]),
         ("poly",[0,1,2,4,13,16,39]),
         ("real",
         [7,8,18,27,28,29,38,39,40,55,62,131,308,309,311,312,313,314,326,
          328]),("sat",[1,3,5,6,7,11,12,15])]),["DISK_THM"]),
       [read"%33%2%31%18%41%46%78$0@$1@@%93%38@@@%70%44$0@%64@@%49%21%44$1@%83%57%92$2@@%57%93%65%54%69@@@@%64@@@$0@@|@@@|@|@"])
  fun op POLY_LENGTH_MUL x = x
    val op POLY_LENGTH_MUL =
    DT(((("poly",41),
        [("bool",[14,25,26,27,36,56,64]),("list",[22,42,50]),
         ("poly",[2,4,8])]),["DISK_THM"]),
       [read"%31%21%45%62%83%57%92%2@@%57%93%65%54%69@@@@%64@@@$0@@@%67%62$0@@@|@"])
  fun op POLY_ROOTS_INDEX_LEMMA x = x
    val op POLY_ROOTS_INDEX_LEMMA =
    DT(((("poly",42),
        [("arithmetic",[24,25,46,60,71,79,93,147,172,173,180,207]),
         ("bool",
         [13,14,25,26,27,30,36,37,43,47,48,51,52,53,54,56,58,59,63,64,71,
          72,75,78,81,84,93,94,95,96,101,104,105,124,129,143,145,146]),
         ("combin",[19]),("list",[90]),("num",[9]),
         ("numeral",[3,5,8,17,18]),("poly",[0,16,40,41]),("prim_rec",[1]),
         ("real",
         [4,6,7,8,12,17,18,20,27,28,29,38,39,40,45,46,59,60,61,62,71,131,
          307,308,309,310,311,312,313,314,325,326,328,329]),
         ("sat",[1,3,5,6,7,11,12,13,14,15])]),["DISK_THM"]),
       [read"%32%17%31%18%47%37%96%43%78$0@@%78%64@@@@%45%62$0@@$1@@@%48%11%33%28%47%46%78$2@$0@@%93%38@@@%50%16%37%40$0@$4@@%46$1@$2$0@@@|@@|@|@@|@|@"])
  fun op POLY_ROOTS_INDEX_LENGTH x = x
    val op POLY_ROOTS_INDEX_LENGTH =
    DT(((("poly",43),
        [("bool",
         [13,25,26,27,30,36,47,48,51,52,53,54,56,58,63,71,72,75,78,81,84,
          93,94,96,146]),("combin",[19]),("poly",[42]),
         ("sat",[1,3,5,6,7,11,12,13,14,15])]),["DISK_THM"]),
       [read"%31%18%47%96%43%78$0@@%78%64@@@@%48%11%33%28%47%46%78$2@$0@@%93%38@@@%50%17%37%40$0@%62$3@@@%46$1@$2$0@@@|@@|@|@@|@"])
  fun op POLY_ROOTS_FINITE_LEMMA x = x
    val op POLY_ROOTS_FINITE_LEMMA =
    DT(((("poly",44),
        [("arithmetic",[24,25,41,46,59,71,93,173,176,180]),
         ("bool",
         [25,26,36,47,48,52,53,54,56,58,63,71,72,75,78,81,84,93,94,96,104,
          105,107,146]),("combin",[19]),("numeral",[3,8]),("poly",[43]),
         ("sat",[1,3,5,6,7,11,12,13,14,15])]),["DISK_THM"]),
       [read"%31%18%47%96%43%78$0@@%78%64@@@@%50%0%48%11%33%28%47%46%78$3@$0@@%93%38@@@%50%17%37%39$0@$3@@%46$1@$2$0@@@|@@|@|@|@@|@"])
  fun op FINITE_LEMMA x = x
    val op FINITE_LEMMA =
    DT(((("poly",45),
        [("arithmetic",
         [24,25,27,41,46,59,60,71,79,93,172,173,177,180,207]),
         ("bool",
         [13,14,25,26,27,30,36,37,43,47,48,51,52,53,54,56,58,63,64,71,72,
          74,76,77,78,80,81,93,94,96,104,105,107,146]),("num",[9]),
         ("numeral",[3,5,6,7,8,17,18]),
         ("real",
         [4,6,7,8,12,17,18,20,27,28,29,38,39,40,46,52,59,60,61,62,71,131,
          204,307,308,309,310,311,312,313,314,325,326,328,329]),
         ("sat",[1,3,5,6,7,11,12,13,14,15,17,18,19,20,23])]),["DISK_THM"]),
       [read"%29%11%32%0%30%1%47%33%28%47$1$0@@%50%17%37%39$0@$3@@%46$1@$4$0@@@|@@|@@%51%2%33%28%47$2$0@@%89$0@$1@@|@|@@|@|@|@"])
  fun op POLY_ROOTS_FINITE x = x
    val op POLY_ROOTS_FINITE =
    DT(((("poly",46),
        [("bool",
         [25,26,36,47,48,53,54,56,58,59,63,71,72,75,76,78,80,81,83,84,93,
          94,96,146]),("combin",[19]),("poly",[0,44,45]),("real",[11]),
         ("sat",[1,3,5,6,7,11,12,13,14,15])]),["DISK_THM"]),
       [read"%31%18%41%96%43%78$0@@%78%64@@@@%50%0%48%11%33%28%47%46%78$3@$0@@%93%38@@@%50%17%37%39$0@$3@@%46$1@$2$0@@@|@@|@|@|@@|@"])
  fun op POLY_ENTIRE_LEMMA x = x
    val op POLY_ENTIRE_LEMMA =
    DT(((("poly",47),
        [("arithmetic",[24,25,27,41,46,59,71,93,128,173,180]),
         ("bool",
         [25,26,27,36,51,52,54,56,58,63,64,93,96,101,104,105,107,129]),
         ("numeral",[3,8]),("poly",[16,46]),("real",[45]),
         ("sat",[1,3,5,6,7,11,12,13,15])]),["DISK_THM"]),
       [read"%31%18%31%21%47%37%96%43%78$1@@%78%64@@@@%96%43%78$0@@%78%64@@@@@%96%43%78%83$1@$0@@@%78%64@@@@|@|@"])
  fun op POLY_ENTIRE x = x
    val op POLY_ENTIRE =
    DT(((("poly",48),
        [("bool",[25,26,36,47,48,53,54,56,58,59,63,93,94,96]),
         ("poly",[0,16,47]),("real",[39,40]),
         ("sat",[1,3,5,6,7,11,12,13,14,15])]),["DISK_THM"]),
       [read"%31%18%31%21%41%43%78%83$1@$0@@@%78%64@@@%70%43%78$1@@%78%64@@@%43%78$0@@%78%64@@@@|@|@"])
  fun op POLY_MUL_LCANCEL x = x
    val op POLY_MUL_LCANCEL =
    DT(((("poly",49),
        [("arithmetic",[46,60,79,207]),
         ("bool",[25,26,36,51,53,54,56,58,59,63,93,96]),
         ("numeral",[3,5,17,18]),("poly",[0,13,15,16,48]),
         ("real",
         [4,6,7,8,12,17,18,20,27,28,38,39,40,46,55,59,60,61,62,71,131,307,
          308,309,310,311,312,313,314,325,326,328,329]),
         ("sat",[1,3,5,6,7,11,12,13,15])]),["DISK_THM"]),
       [read"%31%18%31%21%31%22%41%43%78%83$2@$1@@@%78%83$2@$0@@@@%70%43%78$2@@%78%64@@@%43%78$1@@%78$0@@@@|@|@|@"])
  fun op POLY_EXP_EQ_0 x = x
    val op POLY_EXP_EQ_0 =
    DT(((("poly",50),
        [("bool",[14,25,26,27,47,48,51,53,54,56,59,63,74]),("num",[7,9]),
         ("numeral",[3,6]),("poly",[0,5,16]),("real",[27,40,45,331]),
         ("sat",[1,3,5,6,7,11,12,13,14,15])]),["DISK_THM"]),
       [read"%31%18%32%17%41%43%78%82$1@$0@@@%78%64@@@%37%43%78$1@@%78%64@@@%96%45$0@%38@@@@|@|@"])
  fun op POLY_PRIME_EQ_0 x = x
    val op POLY_PRIME_EQ_0 =
    DT(((("poly",51),
        [("arithmetic",[46,79,172,207]),
         ("bool",[25,26,51,53,54,56,58,59,63]),("numeral",[3,5,6,17,18]),
         ("poly",[0]),
         ("real",
         [4,6,7,8,18,22,27,28,29,38,39,40,62,131,307,308,309,311,312,313,
          314,325,326,328,329]),
         ("sat",[1,3,5,6,7,11,12,15])]),["DISK_THM"]),
       [read"%33%2%96%43%78%57$0@%57%93%65%54%69@@@@%64@@@@%78%64@@@|@"])
  fun op POLY_EXP_PRIME_EQ_0 x = x
    val op POLY_EXP_PRIME_EQ_0 =
    DT(((("poly",52),
        [("bool",[25,26,47,48,53,54,63,71,94]),("poly",[50,51]),
         ("sat",[1,3,5,6,7,11,12,13,14,15])]),["DISK_THM"]),
       [read"%33%2%32%17%96%43%78%82%57$1@%57%93%65%54%69@@@@%64@@@$0@@@%78%64@@@|@|@"])
  fun op POLY_ZERO_LEMMA x = x
    val op POLY_ZERO_LEMMA =
    DT(((("poly",53),
        [("arithmetic",[46,60,79,207]),
         ("bool",
         [25,26,27,30,36,51,52,53,54,56,58,59,63,64,71,93,96,105,124]),
         ("numeral",[3,5,6,17,18]),("poly",[0,45,46]),
         ("real",
         [4,6,7,8,12,17,18,20,27,28,29,38,39,40,45,46,52,59,60,61,62,71,
          131,204,307,308,309,310,311,312,313,314,326,328,329,425]),
         ("sat",[1,3,5,6,7,11,12,13,14,15])]),["DISK_THM"]),
       [read"%33%8%31%25%47%43%78%57$1@$0@@@%78%64@@@%37%46$1@%93%38@@@%43%78$0@@%78%64@@@@|@|@"])
  fun op POLY_ZERO x = x
    val op POLY_ZERO =
    DT(((("poly",54),
        [("arithmetic",[46,60,79,207]),
         ("bool",[14,25,26,51,53,54,56,58,59,63,96]),("list",[30,42]),
         ("numeral",[3]),("poly",[0,53]),
         ("real",[7,29,39,40,62,131,309,311,312,314,328]),
         ("sat",[1,3,5,6,7,11,12,15])]),["DISK_THM"]),
       [read"%31%18%41%43%78$0@@%78%64@@@%58%4%46$0@%93%38@@|@$0@@|@"])
  fun op POLY_DIFF_AUX_ISZERO x = x
    val op POLY_DIFF_AUX_ISZERO =
    DT(((("poly",55),
        [("bool",[14,25,26,27,36,52,56,63]),("list",[30,42]),("num",[7]),
         ("poly",[6]),("real",[45,331])]),["DISK_THM"]),
       [read"%31%18%32%17%41%58%4%46$0@%93%38@@|@%80%67$0@@$1@@@%58%4%46$0@%93%38@@|@$1@@|@|@"])
  fun op POLY_DIFF_ISZERO x = x
    val op POLY_DIFF_ISZERO =
    DT(((("poly",56),
        [("arithmetic",[17,46,60,79,207]),
         ("bool",[14,25,26,36,51,53,54,56,58,59,63,96]),("list",[30,42]),
         ("numeral",[3]),("poly",[0,12,54,55]),
         ("real",[7,29,39,40,62,131,309,311,312,314,328]),
         ("sat",[1,3,5,6,7,11,12,15])]),["DISK_THM"]),
       [read"%31%18%47%43%78%74$0@@@%78%64@@@%51%8%43%78$1@@%78%57$0@%64@@@|@@|@"])
  fun op POLY_DIFF_ZERO x = x
    val op POLY_DIFF_ZERO =
    DT(((("poly",57),
        [("bool",[14,25,26,27,36,53,56,63,64]),("list",[18,30,42,50]),
         ("poly",[6,7,54]),("real",[40])]),["DISK_THM"]),
       [read"%31%18%47%43%78$0@@%78%64@@@%43%78%74$0@@@%78%64@@@|@"])
  fun op POLY_DIFF_WELLDEF x = x
    val op POLY_DIFF_WELLDEF =
    DT(((("poly",58),
        [("arithmetic",[46,60,79,207]),
         ("bool",[25,26,36,51,53,54,56,58,59,63,93,96]),
         ("numeral",[3,5,17,18]),("poly",[0,13,15,32,34,57]),
         ("real",
         [4,6,7,8,12,17,18,20,27,28,38,39,40,46,55,59,60,61,62,71,131,307,
          308,309,310,311,312,313,314,325,326,328,329]),
         ("sat",[1,3,5,6,7,11,12,13,15])]),["DISK_THM"]),
       [read"%31%18%31%21%47%43%78$1@@%78$0@@@%43%78%74$1@@@%78%74$0@@@@|@|@"])
  fun op POLY_PRIMES x = x
    val op POLY_PRIMES =
    DT(((("poly",60),
        [("bool",[25,26,36,51,53,54,56,58,59,63,96]),("poly",[0,16,40,59]),
         ("real",
         [4,6,8,15,17,18,22,27,28,29,38,39,40,45,55,62,86,308,309,311,312,
          313,314,325,326]),("sat",[1,3,5,6,7,11,15])]),["DISK_THM"]),
       [read"%33%2%31%18%31%21%41%81%57$2@%57%93%65%54%69@@@@%64@@@%83$1@$0@@@%70%81%57$2@%57%93%65%54%69@@@@%64@@@$1@@%81%57$2@%57%93%65%54%69@@@@%64@@@$0@@@|@|@|@"])
  fun op POLY_DIVIDES_REFL x = x
    val op POLY_DIVIDES_REFL =
    DT(((("poly",61),
        [("bool",[25,26,51,53,54,56,58,59,63,96]),("poly",[0,16,59]),
         ("real",
         [8,18,27,28,29,39,40,55,62,308,309,311,312,313,314,325,326]),
         ("sat",[1,3,5,6,7,11,15])]),["DISK_THM"]),
       [read"%31%18%81$0@$0@|@"])
  fun op POLY_DIVIDES_TRANS x = x
    val op POLY_DIVIDES_TRANS =
    DT(((("poly",62),
        [("bool",[25,26,36,56,59]),("poly",[16,59]),
         ("real",[17])]),["DISK_THM"]),
       [read"%31%18%31%21%31%22%47%37%81$2@$1@@%81$1@$0@@@%81$2@$0@@|@|@|@"])
  fun op POLY_DIVIDES_EXP x = x
    val op POLY_DIVIDES_EXP =
    DT(((("poly",63),
        [("arithmetic",[24,25,27,46,71,93,172,173,176,177,180,269]),
         ("bool",
         [14,25,26,36,43,51,52,53,54,56,58,59,63,93,96,101,104,105]),
         ("num",[9]),("numeral",[3,8]),("poly",[5,16,59,61,62]),
         ("real",[8,15,18,28,39,55,62,308,309,311,312,313,314,326]),
         ("sat",[1,3,5,6,7,11,12,13,15])]),["DISK_THM"]),
       [read"%31%18%32%16%32%17%47%40$1@$0@@%81%82$2@$1@@%82$2@$0@@@|@|@|@"])
  fun op POLY_EXP_DIVIDES x = x
    val op POLY_EXP_DIVIDES =
    DT(((("poly",64),
        [("bool",[25,26,47,48,53,54,58,63,71,93,94,96]),("poly",[62,63]),
         ("sat",[1,3,5,6,7,11,12,13,14,15])]),["DISK_THM"]),
       [read"%31%18%31%21%32%16%32%17%47%37%81%82$3@$0@@$2@@%40$1@$0@@@%81%82$3@$1@@$2@@|@|@|@|@"])
  fun op POLY_DIVIDES_ADD x = x
    val op POLY_DIVIDES_ADD =
    DT(((("poly",65),
        [("bool",[25,26,51,53,54,56,58,59,63,96]),("poly",[13,16,59]),
         ("real",
         [4,6,8,18,27,28,38,39,55,62,308,309,311,312,313,314,325,326]),
         ("sat",[1,3,5,6,7,11,15])]),["DISK_THM"]),
       [read"%31%18%31%21%31%22%47%37%81$2@$1@@%81$2@$0@@@%81$2@%79$1@$0@@@|@|@|@"])
  fun op POLY_DIVIDES_SUB x = x
    val op POLY_DIVIDES_SUB =
    DT(((("poly",66),
        [("bool",[25,26,51,53,54,56,58,59,63,96]),("poly",[13,15,16,59]),
         ("real",
         [4,6,8,18,27,28,38,39,55,62,307,308,309,311,312,313,314,325,326]),
         ("sat",[1,3,5,6,7,11,15])]),["DISK_THM"]),
       [read"%31%18%31%21%31%22%47%37%81$2@$1@@%81$2@%79$1@$0@@@@%81$2@$0@@|@|@|@"])
  fun op POLY_DIVIDES_SUB2 x = x
    val op POLY_DIVIDES_SUB2 =
    DT(((("poly",67),
        [("arithmetic",[46,60,79,207]),
         ("bool",[25,26,51,53,54,56,58,59,63,96]),("numeral",[3,5,17,18]),
         ("poly",[13,16,59,66]),
         ("real",
         [4,6,7,8,12,17,18,20,27,28,38,39,40,46,59,60,61,62,71,131,307,308,
          309,310,311,312,313,314,325,326,328,329]),
         ("sat",[1,3,5,6,7,11,12,13,14,15])]),["DISK_THM"]),
       [read"%31%18%31%21%31%22%47%37%81$2@$0@@%81$2@%79$1@$0@@@@%81$2@$1@@|@|@|@"])
  fun op POLY_DIVIDES_ZERO x = x
    val op POLY_DIVIDES_ZERO =
    DT(((("poly",68),
        [("bool",[25,26,36,56,59]),("poly",[0,16,59]),
         ("real",[40])]),["DISK_THM"]),
       [read"%31%18%31%21%47%43%78$1@@%78%64@@@%81$0@$1@@|@|@"])
  fun op POLY_ORDER_EXISTS x = x
    val op POLY_ORDER_EXISTS =
    DT(((("poly",69),
        [("arithmetic",[46,79,172,207]),
         ("bool",
         [14,25,26,27,30,36,47,48,51,53,54,56,58,59,63,72,78,93,94,96,101,
          105,124,145,146]),("combin",[19]),("list",[90]),("num",[9]),
         ("numeral",[3,5,6,17,18]),("poly",[0,5,16,26,40,41,48,49,59]),
         ("prim_rec",[1,38]),
         ("real",
         [4,6,7,8,15,17,18,27,28,29,38,39,40,55,62,131,307,308,309,311,312,
          313,314,325,326,328,329]),
         ("sat",[1,3,5,6,7,11,12,13,14,15])]),["DISK_THM"]),
       [read"%33%2%32%6%31%18%47%37%45%62$0@@$1@@%96%43%78$0@@%78%64@@@@@%50%17%37%81%82%57%92$3@@%57%93%65%54%69@@@@%64@@@$0@@$1@@%96%81%82%57%92$3@@%57%93%65%54%69@@@@%64@@@%67$0@@@$1@@@|@@|@|@|@"])
  fun op POLY_ORDER x = x
    val op POLY_ORDER =
    DT(((("poly",70),
        [("arithmetic",[24,25,41,46,59,71,93,173,176,177,180]),
         ("bool",
         [13,25,26,27,30,36,43,47,48,51,52,53,54,56,58,63,71,72,78,81,92,
          93,94,96,104,105,107,122,146]),("numeral",[3,8]),
         ("poly",[64,69]),
         ("sat",[1,3,5,6,7,11,12,13,14,15])]),["DISK_THM"]),
       [read"%31%18%33%2%47%96%43%78$1@@%78%64@@@@%52%17%37%81%82%57%92$1@@%57%93%65%54%69@@@@%64@@@$0@@$2@@%96%81%82%57%92$1@@%57%93%65%54%69@@@@%64@@@%67$0@@@$2@@@|@@|@|@"])
  fun op ORDER x = x
    val op ORDER =
    DT(((("poly",72),
        [("bool",
         [2,13,25,26,27,30,36,43,47,48,51,52,53,54,56,58,59,63,69,71,72,75,
          78,80,84,93,94,96,122,146]),("poly",[0,16,59,70,71]),
         ("real",[40]),
         ("sat",[1,3,5,6,7,11,12,13,14,15,17,18,19,20,23])]),["DISK_THM"]),
       [read"%31%18%33%2%32%17%41%37%81%82%57%92$1@@%57%93%65%54%69@@@@%64@@@$0@@$2@@%96%81%82%57%92$1@@%57%93%65%54%69@@@@%64@@@%67$0@@@$2@@@@%37%45$0@%85$1@$2@@@%96%43%78$2@@%78%64@@@@@|@|@|@"])
  fun op ORDER_THM x = x
    val op ORDER_THM =
    DT(((("poly",73),
        [("bool",
         [13,25,26,27,30,43,47,48,51,52,53,54,56,58,63,71,93,94,96]),
         ("poly",[72]),("sat",[1,3,5,6,7,11,12,13,14,15])]),["DISK_THM"]),
       [read"%31%18%33%2%47%96%43%78$1@@%78%64@@@@%37%81%82%57%92$0@@%57%93%65%54%69@@@@%64@@@%85$0@$1@@@$1@@%96%81%82%57%92$0@@%57%93%65%54%69@@@@%64@@@%67%85$0@$1@@@@$1@@@@|@|@"])
  fun op ORDER_UNIQUE x = x
    val op ORDER_UNIQUE =
    DT(((("poly",74),
        [("bool",[25,26,43,47,48,53,54,58,63,71,93,94,96]),("poly",[72]),
         ("sat",[1,3,5,6,7,11,12,13,14,15])]),["DISK_THM"]),
       [read"%31%18%33%2%32%17%47%37%96%43%78$2@@%78%64@@@@%37%81%82%57%92$1@@%57%93%65%54%69@@@@%64@@@$0@@$2@@%96%81%82%57%92$1@@%57%93%65%54%69@@@@%64@@@%67$0@@@$2@@@@@%45$0@%85$1@$2@@@|@|@|@"])
  fun op ORDER_POLY x = x
    val op ORDER_POLY =
    DT(((("poly",75),
        [("bool",[25,26,56,59]),("poly",[16,59,71])]),["DISK_THM"]),
       [read"%31%18%31%21%33%2%47%43%78$2@@%78$1@@@%45%85$0@$2@@%85$0@$1@@@|@|@|@"])
  fun op ORDER_ROOT x = x
    val op ORDER_ROOT =
    DT(((("poly",76),
        [("bool",
         [14,25,26,27,30,47,48,51,52,53,54,56,58,59,63,78,80,94,96]),
         ("num",[7,9]),("poly",[0,5,16,40,59,73]),
         ("real",
         [4,6,7,8,15,17,18,27,28,29,38,39,40,55,62,308,309,311,312,313,314,
          325,326]),("sat",[1,3,5,6,7,11,12,13,14,15])]),["DISK_THM"]),
       [read"%31%18%33%2%41%46%78$1@$0@@%93%38@@@%70%43%78$1@@%78%64@@@%96%45%85$0@$1@@%38@@@@|@|@"])
  fun op ORDER_DIVIDES x = x
    val op ORDER_DIVIDES =
    DT(((("poly",77),
        [("arithmetic",[24,25,41,46,59,60,71,93,173,176,180]),
         ("bool",
         [25,26,27,30,36,47,48,52,53,54,56,58,59,63,93,94,96,104,105,107]),
         ("numeral",[3,8]),("poly",[0,16,59,64,73]),("real",[40]),
         ("sat",[1,3,5,6,7,11,12,13,14,15])]),["DISK_THM"]),
       [read"%31%18%33%2%32%17%41%81%82%57%92$1@@%57%93%65%54%69@@@@%64@@@$0@@$2@@%70%43%78$2@@%78%64@@@%40$0@%85$1@$2@@@@|@|@|@"])
  fun op ORDER_DECOMP x = x
    val op ORDER_DECOMP =
    DT(((("poly",78),
        [("bool",[25,26,51,53,54,56,58,59,63,96]),("poly",[5,16,59,73]),
         ("real",[8,15,17,18,28,39,55,62,308,309,311,312,313,314,326]),
         ("sat",[1,3,5,6,7,11,15])]),["DISK_THM"]),
       [read"%31%18%33%2%47%96%43%78$1@@%78%64@@@@%49%21%37%43%78$2@@%78%83%82%57%92$1@@%57%93%65%54%69@@@@%64@@@%85$1@$2@@@$0@@@@%96%81%57%92$1@@%57%93%65%54%69@@@@%64@@@$0@@@|@@|@|@"])
  fun op ORDER_MUL x = x
    val op ORDER_MUL =
    DT(((("poly",79),
        [("bool",
         [13,25,26,27,30,36,43,47,48,51,52,53,54,56,58,59,63,93,94,96,105,
          124,170]),("poly",[5,16,27,48,49,52,59,60,72,73,78]),
         ("real",[8,15,17,18,28,39,55,62,308,309,311,312,313,314,326]),
         ("sat",[1,3,5,6,7,11,12,13,14,15])]),["DISK_THM"]),
       [read"%33%2%31%18%31%21%47%96%43%78%83$1@$0@@@%78%64@@@@%45%85$2@%83$1@$0@@@%35%85$2@$1@@%85$2@$0@@@@|@|@|@"])
  fun op ORDER_DIFF x = x
    val op ORDER_DIFF =
    DT(((("poly",80),
        [("arithmetic",[46,60,79,207]),
         ("bool",
         [14,25,26,27,36,43,47,48,51,52,53,54,56,58,59,63,93,94,96]),
         ("num",[7,9]),("numeral",[3,5,17,18]),
         ("poly",[5,13,14,15,16,36,38,49,52,57,58,59,74,78]),
         ("prim_rec",[1]),
         ("real",
         [4,6,7,8,12,15,17,18,20,27,28,29,30,38,39,40,46,55,59,60,61,62,71,
          131,307,308,309,310,311,312,313,314,325,326,328,329,331,332]),
         ("sat",[1,3,5,6,7,11,12,13,14,15])]),["DISK_THM"]),
       [read"%31%18%33%2%47%37%96%43%78%74$1@@@%78%64@@@@%96%45%85$0@$1@@%38@@@@%45%85$0@$1@@%67%85$0@%74$1@@@@@|@|@"])
  fun op POLY_SQUAREFREE_DECOMP_ORDER x = x
    val op POLY_SQUAREFREE_DECOMP_ORDER =
    DT(((("poly",81),
        [("arithmetic",[24,25,27,46,66,71,93,172,173,176,177,180,198]),
         ("bool",
         [13,25,26,27,30,36,43,47,48,51,52,53,54,56,58,59,61,63,64,93,94,
          96,101,104,105,124]),("numeral",[3,5,8]),
         ("poly",[13,16,48,57,59,75,77,79,80]),("prim_rec",[3]),
         ("real",
         [4,6,8,15,17,18,27,28,38,39,55,62,308,309,311,312,313,314,326]),
         ("sat",[1,3,5,6,7,11,12,13,14,15])]),["DISK_THM"]),
       [read"%31%18%31%21%31%5%31%7%31%22%31%24%47%37%96%43%78%74$5@@@%78%64@@@@%37%43%78$5@@%78%83$4@$3@@@@%37%43%78%74$5@@@%78%83$2@$3@@@@%43%78$3@@%78%79%83$1@$5@@%83$0@%74$5@@@@@@@@@%33%2%45%85$0@$5@@%56%45%85$0@$6@@%38@@%38@%65%54%69@@@@|@@|@|@|@|@|@|@"])
  fun op RSQUAREFREE_ROOTS x = x
    val op RSQUAREFREE_ROOTS =
    DT(((("poly",83),
        [("arithmetic",[17]),
         ("bool",
         [13,25,26,27,30,36,37,47,48,51,52,53,54,56,58,59,63,71,76,80,81,
          93,94,96]),("poly",[0,56,57,75,76,80,82]),("prim_rec",[1]),
         ("real",[27,40]),
         ("sat",[1,3,5,6,7,11,12,13,14,15])]),["DISK_THM"]),
       [read"%31%18%41%95$0@@%33%2%96%37%46%78$1@$0@@%93%38@@@%46%78%74$1@@$0@@%93%38@@@@|@@|@"])
  fun op RSQUAREFREE_DECOMP x = x
    val op RSQUAREFREE_DECOMP =
    DT(((("poly",84),
        [("arithmetic",[17]),
         ("bool",
         [25,26,27,30,36,47,48,51,52,53,54,56,58,59,63,72,80,94,96,105,
          124]),("numeral",[3,6]),("poly",[0,5,16,40,59,76,78,82]),
         ("real",
         [4,6,8,18,27,28,29,38,39,40,55,62,308,309,311,312,313,314,325,
          326]),("sat",[1,3,5,6,7,11,12,13,14,15])]),["DISK_THM"]),
       [read"%31%18%33%2%47%37%95$1@@%46%78$1@$0@@%93%38@@@@%49%21%37%43%78$2@@%78%83%57%92$1@@%57%93%65%54%69@@@@%64@@@$0@@@@%96%46%78$0@$1@@%93%38@@@@|@@|@|@"])
  fun op POLY_SQUAREFREE_DECOMP x = x
    val op POLY_SQUAREFREE_DECOMP =
    DT(((("poly",85),
        [("bool",[25,26,27,30,47,48,51,52,53,54,56,58,63,64,94,96]),
         ("numeral",[3,6]),("poly",[48,57,76,81,82]),
         ("sat",[1,3,5,6,7,11,13,14,15])]),["DISK_THM"]),
       [read"%31%18%31%21%31%5%31%7%31%22%31%24%47%37%96%43%78%74$5@@@%78%64@@@@%37%43%78$5@@%78%83$4@$3@@@@%37%43%78%74$5@@@%78%83$2@$3@@@@%43%78$3@@%78%79%83$1@$5@@%83$0@%74$5@@@@@@@@@%37%95$4@@%33%2%41%46%78$5@$0@@%93%38@@@%46%78$6@$0@@%93%38@@@|@@@|@|@|@|@|@|@"])
  fun op POLY_NORMALIZE x = x
    val op POLY_NORMALIZE =
    DT(((("poly",87),
        [("bool",[14,25,26,27,30,36,56,59,63,64]),("list",[42]),
         ("poly",[0,86]),("real",[7,40])]),["DISK_THM"]),
       [read"%31%18%43%78%77$0@@@%78$0@@|@"])
  fun op DEGREE_ZERO x = x
    val op DEGREE_ZERO =
    DT(((("poly",89),
        [("bool",[14,25,53,56,63,64]),("list",[22,30,42]),
         ("poly",[54,86,88]),("prim_rec",[3])]),["DISK_THM"]),
       [read"%31%18%47%43%78$0@@%78%64@@@%45%73$0@@%38@@|@"])
  fun op POLY_ROOTS_FINITE_SET x = x
    val op POLY_ROOTS_FINITE_SET =
    DT(((("poly",90),
        [("arithmetic",[24,25,27,41,46,59,71,93,172,173,177,180]),
         ("bool",
         [13,14,25,26,27,30,36,37,43,47,48,51,52,53,54,56,58,63,71,72,76,
          78,80,81,84,93,94,96,104,105,107,124,143]),("num",[9]),
         ("numeral",[3,5,8]),("pair",[4]),("poly",[46]),
         ("pred_set",[0,3,6,9,18,80,185,187,192]),
         ("sat",[1,3,5,6,7,11,12,13,14,15])]),["DISK_THM"]),
       [read"%31%18%47%96%43%78$0@@%78%64@@@@%59%60%28%36$0@%46%78$1@$0@@%93%38@@@|@@@|@"])
  fun op POLY_MONO x = x
    val op POLY_MONO =
    DT(((("poly",91),
        [("bool",[14,25,51,63,87]),("list",[23,42]),("poly",[0]),
         ("real",[55,61,75,183,333,334,335,336])]),["DISK_THM"]),
       [read"%33%28%33%12%31%18%47%90%71$2@@$1@@%90%71%78$0@$2@@@%78%63%71@$0@@$1@@@|@|@|@"])
  end
  val _ = DB.bindl "poly"
  [("poly_def",poly_def,DB.Def), ("poly_add_def",poly_add_def,DB.Def),
   ("poly_cmul_def",poly_cmul_def,DB.Def),
   ("poly_neg_def",poly_neg_def,DB.Def),
   ("poly_mul_def",poly_mul_def,DB.Def),
   ("poly_exp_def",poly_exp_def,DB.Def),
   ("poly_diff_aux_def",poly_diff_aux_def,DB.Def),
   ("poly_diff_def",poly_diff_def,DB.Def),
   ("poly_divides",poly_divides,DB.Def), ("poly_order",poly_order,DB.Def),
   ("rsquarefree",rsquarefree,DB.Def), ("normalize",normalize,DB.Def),
   ("degree",degree,DB.Def), ("POLY_ADD_CLAUSES",POLY_ADD_CLAUSES,DB.Thm),
   ("POLY_CMUL_CLAUSES",POLY_CMUL_CLAUSES,DB.Thm),
   ("POLY_NEG_CLAUSES",POLY_NEG_CLAUSES,DB.Thm),
   ("POLY_MUL_CLAUSES",POLY_MUL_CLAUSES,DB.Thm),
   ("POLY_DIFF_CLAUSES",POLY_DIFF_CLAUSES,DB.Thm),
   ("POLY_ADD",POLY_ADD,DB.Thm), ("POLY_CMUL",POLY_CMUL,DB.Thm),
   ("POLY_NEG",POLY_NEG,DB.Thm), ("POLY_MUL",POLY_MUL,DB.Thm),
   ("POLY_EXP",POLY_EXP,DB.Thm),
   ("POLY_DIFF_LEMMA",POLY_DIFF_LEMMA,DB.Thm),
   ("POLY_DIFF",POLY_DIFF,DB.Thm),
   ("POLY_DIFFERENTIABLE",POLY_DIFFERENTIABLE,DB.Thm),
   ("POLY_CONT",POLY_CONT,DB.Thm), ("POLY_IVT_POS",POLY_IVT_POS,DB.Thm),
   ("POLY_IVT_NEG",POLY_IVT_NEG,DB.Thm), ("POLY_MVT",POLY_MVT,DB.Thm),
   ("POLY_ADD_RZERO",POLY_ADD_RZERO,DB.Thm),
   ("POLY_MUL_ASSOC",POLY_MUL_ASSOC,DB.Thm),
   ("POLY_EXP_ADD",POLY_EXP_ADD,DB.Thm),
   ("POLY_DIFF_AUX_ADD",POLY_DIFF_AUX_ADD,DB.Thm),
   ("POLY_DIFF_AUX_CMUL",POLY_DIFF_AUX_CMUL,DB.Thm),
   ("POLY_DIFF_AUX_NEG",POLY_DIFF_AUX_NEG,DB.Thm),
   ("POLY_DIFF_AUX_MUL_LEMMA",POLY_DIFF_AUX_MUL_LEMMA,DB.Thm),
   ("POLY_DIFF_ADD",POLY_DIFF_ADD,DB.Thm),
   ("POLY_DIFF_CMUL",POLY_DIFF_CMUL,DB.Thm),
   ("POLY_DIFF_NEG",POLY_DIFF_NEG,DB.Thm),
   ("POLY_DIFF_MUL_LEMMA",POLY_DIFF_MUL_LEMMA,DB.Thm),
   ("POLY_DIFF_MUL",POLY_DIFF_MUL,DB.Thm),
   ("POLY_DIFF_EXP",POLY_DIFF_EXP,DB.Thm),
   ("POLY_DIFF_EXP_PRIME",POLY_DIFF_EXP_PRIME,DB.Thm),
   ("POLY_LINEAR_REM",POLY_LINEAR_REM,DB.Thm),
   ("POLY_LINEAR_DIVIDES",POLY_LINEAR_DIVIDES,DB.Thm),
   ("POLY_LENGTH_MUL",POLY_LENGTH_MUL,DB.Thm),
   ("POLY_ROOTS_INDEX_LEMMA",POLY_ROOTS_INDEX_LEMMA,DB.Thm),
   ("POLY_ROOTS_INDEX_LENGTH",POLY_ROOTS_INDEX_LENGTH,DB.Thm),
   ("POLY_ROOTS_FINITE_LEMMA",POLY_ROOTS_FINITE_LEMMA,DB.Thm),
   ("FINITE_LEMMA",FINITE_LEMMA,DB.Thm),
   ("POLY_ROOTS_FINITE",POLY_ROOTS_FINITE,DB.Thm),
   ("POLY_ENTIRE_LEMMA",POLY_ENTIRE_LEMMA,DB.Thm),
   ("POLY_ENTIRE",POLY_ENTIRE,DB.Thm),
   ("POLY_MUL_LCANCEL",POLY_MUL_LCANCEL,DB.Thm),
   ("POLY_EXP_EQ_0",POLY_EXP_EQ_0,DB.Thm),
   ("POLY_PRIME_EQ_0",POLY_PRIME_EQ_0,DB.Thm),
   ("POLY_EXP_PRIME_EQ_0",POLY_EXP_PRIME_EQ_0,DB.Thm),
   ("POLY_ZERO_LEMMA",POLY_ZERO_LEMMA,DB.Thm),
   ("POLY_ZERO",POLY_ZERO,DB.Thm),
   ("POLY_DIFF_AUX_ISZERO",POLY_DIFF_AUX_ISZERO,DB.Thm),
   ("POLY_DIFF_ISZERO",POLY_DIFF_ISZERO,DB.Thm),
   ("POLY_DIFF_ZERO",POLY_DIFF_ZERO,DB.Thm),
   ("POLY_DIFF_WELLDEF",POLY_DIFF_WELLDEF,DB.Thm),
   ("POLY_PRIMES",POLY_PRIMES,DB.Thm),
   ("POLY_DIVIDES_REFL",POLY_DIVIDES_REFL,DB.Thm),
   ("POLY_DIVIDES_TRANS",POLY_DIVIDES_TRANS,DB.Thm),
   ("POLY_DIVIDES_EXP",POLY_DIVIDES_EXP,DB.Thm),
   ("POLY_EXP_DIVIDES",POLY_EXP_DIVIDES,DB.Thm),
   ("POLY_DIVIDES_ADD",POLY_DIVIDES_ADD,DB.Thm),
   ("POLY_DIVIDES_SUB",POLY_DIVIDES_SUB,DB.Thm),
   ("POLY_DIVIDES_SUB2",POLY_DIVIDES_SUB2,DB.Thm),
   ("POLY_DIVIDES_ZERO",POLY_DIVIDES_ZERO,DB.Thm),
   ("POLY_ORDER_EXISTS",POLY_ORDER_EXISTS,DB.Thm),
   ("POLY_ORDER",POLY_ORDER,DB.Thm), ("ORDER",ORDER,DB.Thm),
   ("ORDER_THM",ORDER_THM,DB.Thm), ("ORDER_UNIQUE",ORDER_UNIQUE,DB.Thm),
   ("ORDER_POLY",ORDER_POLY,DB.Thm), ("ORDER_ROOT",ORDER_ROOT,DB.Thm),
   ("ORDER_DIVIDES",ORDER_DIVIDES,DB.Thm),
   ("ORDER_DECOMP",ORDER_DECOMP,DB.Thm), ("ORDER_MUL",ORDER_MUL,DB.Thm),
   ("ORDER_DIFF",ORDER_DIFF,DB.Thm),
   ("POLY_SQUAREFREE_DECOMP_ORDER",POLY_SQUAREFREE_DECOMP_ORDER,DB.Thm),
   ("RSQUAREFREE_ROOTS",RSQUAREFREE_ROOTS,DB.Thm),
   ("RSQUAREFREE_DECOMP",RSQUAREFREE_DECOMP,DB.Thm),
   ("POLY_SQUAREFREE_DECOMP",POLY_SQUAREFREE_DECOMP,DB.Thm),
   ("POLY_NORMALIZE",POLY_NORMALIZE,DB.Thm),
   ("DEGREE_ZERO",DEGREE_ZERO,DB.Thm),
   ("POLY_ROOTS_FINITE_SET",POLY_ROOTS_FINITE_SET,DB.Thm),
   ("POLY_MONO",POLY_MONO,DB.Thm)]

  local open Portable GrammarSpecials Parse
    fun UTOFF f = Feedback.trace("Parse.unicode_trace_off_complaints",0)f
  in
  val _ = mk_local_grms [("limTheory.lim_grammars",limTheory.lim_grammars)]
  val _ = List.app (update_grms reveal) []
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("poly", (Term.prim_mk_const { Name = "poly", Thy = "poly"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("poly_add", (Term.prim_mk_const { Name = "poly_add", Thy = "poly"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("+", (Term.prim_mk_const { Name = "poly_add", Thy = "poly"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("##", (Term.prim_mk_const { Name = "##", Thy = "poly"}))
  val _ = update_grms
       (UTOFF (temp_set_fixity "##"))
       (Infix(HOLgrammars.LEFT, 600))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("poly_neg", (Term.prim_mk_const { Name = "poly_neg", Thy = "poly"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("poly_neg", (Term.prim_mk_const { Name = "poly_neg", Thy = "poly"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("~", (Term.prim_mk_const { Name = "poly_neg", Thy = "poly"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("poly_mul", (Term.prim_mk_const { Name = "poly_mul", Thy = "poly"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("*", (Term.prim_mk_const { Name = "poly_mul", Thy = "poly"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("poly_exp", (Term.prim_mk_const { Name = "poly_exp", Thy = "poly"}))
  val _ = update_grms
       (UTOFF (temp_set_fixity "poly_exp"))
       (Infix(HOLgrammars.RIGHT, 700))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("poly_diff_aux", (Term.prim_mk_const { Name = "poly_diff_aux", Thy = "poly"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("diff", (Term.prim_mk_const { Name = "diff", Thy = "poly"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("diff", (Term.prim_mk_const { Name = "diff", Thy = "poly"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("poly_divides", (Term.prim_mk_const { Name = "poly_divides", Thy = "poly"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("poly_divides", (Term.prim_mk_const { Name = "poly_divides", Thy = "poly"}))
  val _ = update_grms
       (UTOFF (temp_set_fixity "poly_divides"))
       (Infix(HOLgrammars.LEFT, 475))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("poly_order", (Term.prim_mk_const { Name = "poly_order", Thy = "poly"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("poly_order", (Term.prim_mk_const { Name = "poly_order", Thy = "poly"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("rsquarefree", (Term.prim_mk_const { Name = "rsquarefree", Thy = "poly"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("rsquarefree", (Term.prim_mk_const { Name = "rsquarefree", Thy = "poly"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("normalize", (Term.prim_mk_const { Name = "normalize", Thy = "poly"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("degree", (Term.prim_mk_const { Name = "degree", Thy = "poly"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("degree", (Term.prim_mk_const { Name = "degree", Thy = "poly"}))
  val poly_grammars = Parse.current_lgrms()
  end

val _ = if !Globals.print_thy_loads then print "done\n" else ()
val _ = Theory.load_complete "poly"
end
