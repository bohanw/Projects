structure enumeralTheory :> enumeralTheory =
struct
  val _ = if !Globals.print_thy_loads then print "Loading enumeralTheory ... " else ()
  open Type Term Thm
  infixr -->

  fun C s t ty = mk_thy_const{Name=s,Thy=t,Ty=ty}
  fun T s t A = mk_thy_type{Tyop=s, Thy=t,Args=A}
  fun V s q = mk_var(s,q)
  val U     = mk_vartype
  (*  Parents *)
  local open res_quanTheory totoTheory
  in end;
  val _ = Theory.link_parents
          ("enumeral",
          Arbnum.fromString "1488588072",
          Arbnum.fromString "842514")
          [("res_quan",
           Arbnum.fromString "1488586843",
           Arbnum.fromString "965166"),
           ("toto",
           Arbnum.fromString "1488587912",
           Arbnum.fromString "619395")];
  val _ = Theory.incorporate_types "enumeral" [("bt", 1), ("bl", 1)];

  val idvector = 
    let fun ID(thy,oth) = {Thy = thy, Other = oth}
    in Vector.fromList
  [ID("min", "fun"), ID("enumeral", "bl"), ID("list", "list"),
   ID("pair", "prod"), ID("toto", "toto"), ID("option", "option"),
   ID("enumeral", "bt"), ID("min", "bool"), ID("num", "num"),
   ID("ind_type", "recspace"), ID("bool", "!"), ID("arithmetic", "+"),
   ID("pair", ","), ID("bool", "/\\"), ID("num", "0"), ID("min", "="),
   ID("toto", "cpn"), ID("min", "==>"), ID("bool", "?"), ID("min", "@"),
   ID("list", "APPEND"), ID("bool", "ARB"), ID("arithmetic", "BIT1"),
   ID("arithmetic", "BIT2"), ID("enumeral", "BL_ACCUM"),
   ID("enumeral", "BL_CONS"), ID("ind_type", "BOTTOM"), ID("bool", "COND"),
   ID("list", "CONS"), ID("ind_type", "CONSTR"), ID("bool", "DATATYPE"),
   ID("pred_set", "DIFF"), ID("pred_set", "EMPTY"),
   ID("enumeral", "ENUMERAL"), ID("toto", "EQUAL"), ID("bool", "F"),
   ID("ind_type", "FCONS"), ID("toto", "GREATER"), ID("pred_set", "GSPEC"),
   ID("combin", "I"), ID("bool", "IN"), ID("pred_set", "INSERT"),
   ID("pred_set", "INTER"), ID("enumeral", "K2"), ID("toto", "LESS"),
   ID("enumeral", "LESS_ALL"), ID("list", "LIST_TO_SET"),
   ID("list", "NIL"), ID("option", "NONE"), ID("arithmetic", "NUMERAL"),
   ID("enumeral", "OL"), ID("enumeral", "OL_bt"),
   ID("enumeral", "OL_bt_lb"), ID("enumeral", "OL_bt_lb_ub"),
   ID("enumeral", "OL_bt_ub"), ID("enumeral", "OL_sublists"),
   ID("enumeral", "OL_sublists_tupled"), ID("enumeral", "OU"),
   ID("enumeral", "OWL"), ID("option", "SOME"), ID("num", "SUC"),
   ID("bool", "T"), ID("bool", "TYPE_DEFINITION"), ID("pred_set", "UNION"),
   ID("enumeral", "UO"), ID("relation", "WF"), ID("relation", "WFREC"),
   ID("arithmetic", "ZERO"), ID("bool", "\\/"), ID("toto", "apto"),
   ID("enumeral", "bl_CASE"), ID("enumeral", "bl_rev"),
   ID("enumeral", "bl_size"), ID("enumeral", "bl_to_bt"),
   ID("enumeral", "bl_to_set"), ID("enumeral", "bt_CASE"),
   ID("enumeral", "bt_rev"), ID("enumeral", "bt_size"),
   ID("enumeral", "bt_to_bl"), ID("enumeral", "bt_to_list"),
   ID("enumeral", "bt_to_list_ac"), ID("enumeral", "bt_to_ol"),
   ID("enumeral", "bt_to_ol_ac"), ID("enumeral", "bt_to_ol_lb"),
   ID("enumeral", "bt_to_ol_lb_ac"), ID("enumeral", "bt_to_ol_lb_ub"),
   ID("enumeral", "bt_to_ol_lb_ub_ac"), ID("enumeral", "bt_to_ol_ub"),
   ID("enumeral", "bt_to_ol_ub_ac"), ID("enumeral", "bt_to_set_lb"),
   ID("enumeral", "bt_to_set_lb_ub"), ID("enumeral", "bt_to_set_ub"),
   ID("toto", "cpn_CASE"), ID("enumeral", "incr_sbuild"),
   ID("enumeral", "incr_smerge"), ID("enumeral", "incr_smerge_tupled"),
   ID("enumeral", "incr_ssort"), ID("list", "list_CASE"),
   ID("enumeral", "list_to_bl"), ID("enumeral", "list_to_bt"),
   ID("enumeral", "lol_set"), ID("enumeral", "nbl"),
   ID("enumeral", "node"), ID("enumeral", "nt"), ID("enumeral", "onebl"),
   ID("option", "option_CASE"), ID("pair", "pair_CASE"),
   ID("enumeral", "sdiff"), ID("enumeral", "sdiff_tupled"),
   ID("enumeral", "sinter"), ID("enumeral", "sinter_tupled"),
   ID("enumeral", "smerge"), ID("enumeral", "smerge_out"),
   ID("enumeral", "smerge_out_tupled"), ID("enumeral", "smerge_tupled"),
   ID("enumeral", "zerbl"), ID("bool", "~")]
  end;
  local open SharingTables
  in
  val tyvector = build_type_vector idvector
  [TYV "'a", TYOP [1, 0], TYOP [0, 1, 1], TYOP [2, 0], TYOP [3, 3, 3],
   TYOP [4, 0], TYOP [3, 5, 4], TYOP [0, 6, 3], TYOP [5, 3], TYOP [2, 8],
   TYOP [3, 3, 9], TYOP [3, 5, 10], TYOP [0, 11, 3], TYOP [0, 9, 3],
   TYOP [0, 3, 13], TYOP [0, 5, 14], TYOP [0, 3, 3], TYOP [0, 3, 16],
   TYOP [0, 5, 17], TYOP [6, 0], TYOP [0, 19, 2], TYOP [0, 0, 20],
   TYOP [0, 19, 19], TYOP [0, 0, 22], TYOP [0, 19, 23], TYOP [7],
   TYOP [0, 0, 25], TYOP [0, 9, 26], TYV "'c", TYOP [6, 28], TYOP [2, 28],
   TYOP [0, 30, 29], TYOP [0, 3, 1], TYOP [0, 5, 16], TYOP [0, 11, 9],
   TYOP [0, 9, 9], TYOP [0, 3, 35], TYOP [0, 5, 36], TYOP [0, 3, 9],
   TYOP [0, 5, 38], TYOP [0, 0, 26], TYOP [0, 19, 40], TYOP [0, 5, 41],
   TYOP [0, 0, 41], TYOP [0, 5, 43], TYOP [0, 19, 26], TYOP [0, 0, 45],
   TYOP [0, 5, 46], TYOP [0, 0, 16], TYOP [0, 19, 48], TYOP [0, 5, 49],
   TYOP [0, 0, 3], TYOP [0, 19, 51], TYOP [0, 5, 52], TYOP [0, 0, 49],
   TYOP [0, 5, 54], TYOP [0, 0, 52], TYOP [0, 5, 56], TYOP [0, 19, 16],
   TYOP [0, 0, 58], TYOP [0, 5, 59], TYOP [0, 19, 3], TYOP [0, 0, 61],
   TYOP [0, 5, 62], TYOP [0, 5, 58], TYOP [0, 5, 61], TYOP [0, 19, 1],
   TYOP [8], TYOP [0, 19, 67], TYOP [0, 0, 67], TYOP [0, 69, 68], TYV "'b",
   TYOP [0, 19, 71], TYOP [0, 0, 72], TYOP [0, 19, 73], TYOP [0, 74, 71],
   TYOP [0, 71, 75], TYOP [0, 19, 76], TYOP [0, 1, 26], TYOP [0, 5, 78],
   TYOP [0, 1, 19], TYOP [0, 1, 67], TYOP [0, 69, 81], TYOP [0, 19, 80],
   TYOP [0, 1, 71], TYOP [0, 19, 84], TYOP [0, 0, 85], TYOP [0, 86, 71],
   TYOP [0, 84, 87], TYOP [0, 71, 88], TYOP [0, 1, 89], TYOP [0, 26, 26],
   TYOP [0, 26, 91], TYOP [0, 5, 92], TYOP [0, 3, 25], TYOP [0, 26, 94],
   TYOP [0, 5, 95], TYOP [3, 5, 9], TYOP [0, 97, 25], TYOP [0, 9, 25],
   TYOP [0, 5, 99], TYOP [0, 5, 45], TYOP [0, 19, 25], TYOP [0, 0, 102],
   TYOP [0, 5, 103], TYOP [0, 5, 102], TYOP [0, 5, 94], TYOP [0, 26, 25],
   TYOP [0, 0, 107], TYOP [0, 5, 108], TYOP [0, 0, 2], TYOP [3, 0, 19],
   TYOP [9, 111], TYOP [0, 112, 25], TYOP [9, 0], TYOP [0, 114, 25],
   TYOP [0, 1, 25], TYOP [0, 3, 94], TYOP [0, 5, 117], TYOP [0, 3, 99],
   TYOP [0, 5, 119], TYOP [0, 9, 99], TYOP [0, 97, 98], TYOP [0, 6, 25],
   TYOP [0, 6, 123], TYOP [0, 11, 25], TYOP [0, 11, 125], TYOP [0, 21, 25],
   TYOP [0, 2, 127], TYOP [0, 1, 128], TYOP [0, 24, 25], TYOP [0, 19, 130],
   TYOP [0, 71, 71], TYOP [0, 71, 132], TYOP [0, 19, 133],
   TYOP [0, 19, 134], TYOP [0, 0, 135], TYOP [0, 1, 132],
   TYOP [0, 19, 137], TYOP [0, 0, 138], TYOP [0, 1, 112],
   TYOP [0, 19, 114], TYOP [0, 71, 25], TYOP [0, 142, 25],
   TYOP [0, 116, 25], TYOP [0, 102, 25], TYOP [0, 107, 25],
   TYOP [0, 86, 25], TYOP [0, 147, 25], TYOP [0, 139, 25],
   TYOP [0, 149, 25], TYOP [0, 136, 25], TYOP [0, 151, 25],
   TYOP [0, 69, 25], TYOP [0, 153, 25], TYOP [0, 84, 25],
   TYOP [0, 155, 25], TYOP [0, 144, 25], TYOP [0, 137, 25],
   TYOP [0, 158, 25], TYOP [0, 145, 25], TYOP [0, 74, 25],
   TYOP [0, 161, 25], TYOP [0, 99, 25], TYOP [0, 163, 25],
   TYOP [0, 115, 25], TYOP [0, 165, 25], TYOP [0, 113, 25],
   TYOP [0, 167, 25], TYOP [0, 118, 25], TYOP [0, 169, 25],
   TYOP [0, 120, 25], TYOP [0, 171, 25], TYOP [0, 100, 25],
   TYOP [0, 173, 25], TYOP [0, 94, 25], TYOP [0, 30, 25],
   TYOP [0, 176, 25], TYOP [0, 5, 25], TYOP [0, 178, 25], TYOP [0, 67, 67],
   TYOP [0, 67, 180], TYOP [3, 0, 25], TYOP [0, 25, 182], TYOP [0, 0, 183],
   TYOP [0, 19, 111], TYOP [0, 0, 185], TYOP [0, 3, 4], TYOP [0, 3, 187],
   TYOP [0, 9, 10], TYOP [0, 3, 189], TYOP [0, 9, 97], TYOP [0, 5, 191],
   TYOP [0, 4, 6], TYOP [0, 5, 193], TYOP [0, 10, 11], TYOP [0, 5, 195],
   TYOP [0, 25, 25], TYOP [0, 25, 197], TYOP [0, 71, 142],
   TYOP [0, 1, 116], TYOP [0, 19, 102], TYOP [0, 29, 25],
   TYOP [0, 29, 202], TYOP [16], TYOP [0, 204, 25], TYOP [0, 204, 205],
   TYOP [0, 26, 107], TYOP [0, 80, 25], TYOP [0, 80, 208],
   TYOP [0, 27, 25], TYOP [0, 27, 210], TYOP [0, 98, 25],
   TYOP [0, 98, 212], TYOP [0, 7, 25], TYOP [0, 7, 214], TYOP [0, 12, 25],
   TYOP [0, 12, 216], TYOP [0, 34, 25], TYOP [0, 34, 218],
   TYOP [0, 67, 25], TYOP [0, 67, 220], TYOP [0, 114, 115],
   TYOP [0, 112, 113], TYOP [0, 140, 25], TYOP [0, 224, 25],
   TYOP [0, 72, 25], TYOP [0, 226, 25], TYOP [0, 141, 25],
   TYOP [0, 228, 25], TYOP [0, 121, 25], TYOP [0, 230, 121],
   TYOP [0, 122, 25], TYOP [0, 232, 122], TYOP [0, 124, 25],
   TYOP [0, 234, 124], TYOP [0, 126, 25], TYOP [0, 236, 126],
   TYOP [0, 25, 17], TYOP [0, 8, 35], TYOP [0, 67, 114],
   TYOP [0, 240, 114], TYOP [0, 0, 241], TYOP [0, 67, 242],
   TYOP [0, 67, 112], TYOP [0, 244, 112], TYOP [0, 111, 245],
   TYOP [0, 67, 246], TYOP [0, 240, 240], TYOP [0, 114, 248],
   TYOP [0, 244, 244], TYOP [0, 112, 250], TYOP [0, 0, 182],
   TYOP [0, 252, 26], TYOP [0, 0, 91], TYOP [0, 3, 26], TYOP [0, 3, 8],
   TYOP [0, 115, 228], TYOP [0, 113, 224], TYOP [0, 27, 27],
   TYOP [0, 259, 27], TYOP [0, 121, 260], TYOP [0, 98, 98],
   TYOP [0, 262, 98], TYOP [0, 122, 263], TYOP [0, 7, 7], TYOP [0, 265, 7],
   TYOP [0, 124, 266], TYOP [0, 12, 12], TYOP [0, 268, 12],
   TYOP [0, 126, 269], TYOP [0, 34, 34], TYOP [0, 271, 34],
   TYOP [0, 126, 272], TYOP [0, 0, 204], TYOP [0, 0, 274],
   TYOP [0, 5, 275], TYOP [1, 28], TYOP [0, 277, 29], TYOP [0, 25, 198],
   TYOP [0, 204, 279], TYOP [0, 3, 17], TYOP [0, 204, 281],
   TYOP [0, 48, 3], TYOP [0, 3, 283], TYOP [0, 3, 284], TYOP [0, 8, 99],
   TYOP [0, 286, 25], TYOP [0, 25, 287], TYOP [0, 9, 288], TYOP [0, 8, 27],
   TYOP [0, 290, 26], TYOP [0, 26, 291], TYOP [0, 9, 292], TYOP [0, 8, 13],
   TYOP [0, 294, 3], TYOP [0, 3, 295], TYOP [0, 9, 296], TYOP [0, 239, 9],
   TYOP [0, 9, 298], TYOP [0, 9, 299], TYOP [0, 30, 277], TYOP [0, 3, 19],
   TYOP [0, 25, 175], TYOP [0, 8, 303], TYOP [0, 255, 26],
   TYOP [0, 26, 305], TYOP [0, 8, 306], TYOP [0, 16, 3], TYOP [0, 3, 308],
   TYOP [0, 8, 309], TYOP [0, 38, 9], TYOP [0, 9, 311], TYOP [0, 8, 312],
   TYOP [0, 17, 3], TYOP [0, 4, 314], TYOP [0, 14, 3], TYOP [0, 10, 316],
   TYOP [0, 36, 9], TYOP [0, 10, 318], TYOP [0, 97, 173], TYOP [0, 4, 3],
   TYOP [0, 5, 321], TYOP [0, 322, 3], TYOP [0, 6, 323], TYOP [0, 10, 3],
   TYOP [0, 5, 325], TYOP [0, 326, 3], TYOP [0, 11, 327], TYOP [0, 10, 9],
   TYOP [0, 5, 329], TYOP [0, 330, 9], TYOP [0, 11, 331]]
  end
  val _ = Theory.incorporate_consts "enumeral" tyvector
     [("zerbl", 2), ("smerge_tupled", 7), ("smerge_out_tupled", 12),
      ("smerge_out", 15), ("smerge", 18), ("sinter_tupled", 7),
      ("sinter", 18), ("sdiff_tupled", 7), ("sdiff", 18), ("onebl", 21),
      ("nt", 19), ("node", 24), ("nbl", 1), ("lol_set", 27),
      ("list_to_bt", 31), ("list_to_bl", 32), ("incr_ssort", 33),
      ("incr_smerge_tupled", 34), ("incr_smerge", 37), ("incr_sbuild", 39),
      ("bt_to_set_ub", 42), ("bt_to_set_lb_ub", 44), ("bt_to_set_lb", 47),
      ("bt_to_ol_ub_ac", 50), ("bt_to_ol_ub", 53),
      ("bt_to_ol_lb_ub_ac", 55), ("bt_to_ol_lb_ub", 57),
      ("bt_to_ol_lb_ac", 60), ("bt_to_ol_lb", 63), ("bt_to_ol_ac", 64),
      ("bt_to_ol", 65), ("bt_to_list_ac", 58), ("bt_to_list", 61),
      ("bt_to_bl", 66), ("bt_size", 70), ("bt_rev", 20), ("bt_CASE", 77),
      ("bl_to_set", 79), ("bl_to_bt", 80), ("bl_size", 82), ("bl_rev", 83),
      ("bl_CASE", 90), ("UO", 93), ("OWL", 96), ("OU", 93),
      ("OL_sublists_tupled", 98), ("OL_sublists", 100), ("OL_bt_ub", 101),
      ("OL_bt_lb_ub", 47), ("OL_bt_lb", 104), ("OL_bt", 105), ("OL", 106),
      ("LESS_ALL", 109), ("K2", 69), ("ENUMERAL", 101), ("BL_CONS", 110),
      ("BL_ACCUM", 21)];

  local open SharingTables
  in
  val tmvector = build_term_vector idvector tyvector
  [TMV("'bl'", 113), TMV("'bt'", 115), TMV("M", 1), TMV("M", 19),
   TMV("M'", 1), TMV("M'", 19), TMV("OL_sublists_tupled", 98),
   TMV("P", 116), TMV("P", 102), TMV("P", 99), TMV("P", 118),
   TMV("P", 120), TMV("P", 100), TMV("R", 121), TMV("R", 122),
   TMV("R", 124), TMV("R", 126), TMV("a", 0), TMV("a", 1), TMV("a", 26),
   TMV("a", 9), TMV("a", 97), TMV("a", 6), TMV("a", 11), TMV("a", 112),
   TMV("a'", 1), TMV("a0", 0), TMV("a0", 19), TMV("a0", 114),
   TMV("a0'", 0), TMV("a0'", 19), TMV("a0'", 114), TMV("a0'", 112),
   TMV("a1", 0), TMV("a1", 19), TMV("a1'", 0), TMV("a1'", 19),
   TMV("a2", 1), TMV("a2", 19), TMV("a2", 114), TMV("a2", 112),
   TMV("a2'", 1), TMV("a2'", 19), TMV("ac", 19), TMV("b", 1), TMV("b", 19),
   TMV("b", 26), TMV("b0", 19), TMV("bb", 1), TMV("bb", 19), TMV("bl", 1),
   TMV("bl", 129), TMV("bt", 131), TMV("c", 26), TMV("cmp", 5),
   TMV("f", 19), TMV("f", 69), TMV("f", 84), TMV("f", 74), TMV("f'", 84),
   TMV("f'", 74), TMV("f0", 71), TMV("f1", 86), TMV("f1", 136),
   TMV("f1", 137), TMV("f1'", 86), TMV("f2", 139), TMV("fn", 84),
   TMV("fn", 72), TMV("ft", 19), TMV("incr_smerge_tupled", 34),
   TMV("l", 19), TMV("l", 3), TMV("l", 30), TMV("lb", 0), TMV("lft", 19),
   TMV("lol", 9), TMV("lol_set", 27), TMV("m", 3), TMV("m'", 3),
   TMV("n", 67), TMV("p", 0), TMV("r", 0), TMV("r", 19), TMV("rep", 140),
   TMV("rep", 141), TMV("rft", 19), TMV("s", 26), TMV("sdiff_tupled", 7),
   TMV("sinter_tupled", 7), TMV("sl", 26), TMV("smerge_out_tupled", 12),
   TMV("smerge_tupled", 7), TMV("t", 19), TMV("t", 26), TMV("u", 26),
   TMV("ub", 0), TMV("v", 71), TMV("v", 26), TMV("v", 9), TMV("v", 8),
   TMV("v", 5), TMV("v'", 71), TMV("v1", 3), TMV("v1", 9), TMV("v1", 4),
   TMV("v1", 10), TMV("v2", 3), TMV("v2", 9), TMV("v2", 8), TMV("v3", 3),
   TMV("v3", 9), TMV("v4", 8), TMV("x", 0), TMV("x", 5), TMV("x1", 3),
   TMV("x1", 9), TMV("x2", 3), TMV("x2", 9), TMV("y", 0), TMV("y'", 0),
   TMV("z", 0), TMC(10, 107), TMC(10, 143), TMC(10, 144), TMC(10, 145),
   TMC(10, 146), TMC(10, 148), TMC(10, 150), TMC(10, 152), TMC(10, 154),
   TMC(10, 156), TMC(10, 157), TMC(10, 159), TMC(10, 160), TMC(10, 162),
   TMC(10, 164), TMC(10, 166), TMC(10, 168), TMC(10, 170), TMC(10, 172),
   TMC(10, 174), TMC(10, 175), TMC(10, 177), TMC(10, 163), TMC(10, 165),
   TMC(10, 167), TMC(10, 179), TMC(11, 181), TMC(12, 184), TMC(12, 186),
   TMC(12, 188), TMC(12, 190), TMC(12, 192), TMC(12, 194), TMC(12, 196),
   TMC(13, 198), TMC(14, 67), TMC(15, 40), TMC(15, 199), TMC(15, 200),
   TMC(15, 198), TMC(15, 201), TMC(15, 203), TMC(15, 206), TMC(15, 207),
   TMC(15, 209), TMC(15, 211), TMC(15, 213), TMC(15, 215), TMC(15, 217),
   TMC(15, 219), TMC(15, 117), TMC(15, 121), TMC(15, 221), TMC(15, 222),
   TMC(15, 223), TMC(17, 198), TMC(18, 107), TMC(18, 144), TMC(18, 145),
   TMC(18, 156), TMC(18, 225), TMC(18, 227), TMC(18, 229), TMC(18, 165),
   TMC(18, 167), TMC(19, 231), TMC(19, 233), TMC(19, 235), TMC(19, 237),
   TMC(20, 17), TMC(21, 0), TMC(21, 19), TMC(22, 180), TMC(23, 180),
   TMC(24, 21), TMC(25, 110), TMC(26, 114), TMC(26, 112), TMC(27, 238),
   TMC(28, 48), TMC(28, 239), TMC(29, 243), TMC(29, 247), TMC(30, 197),
   TMC(31, 92), TMC(32, 26), TMC(33, 101), TMC(34, 204), TMC(35, 25),
   TMC(36, 249), TMC(36, 251), TMC(37, 204), TMC(38, 253), TMC(39, 197),
   TMC(39, 91), TMC(39, 16), TMC(39, 35), TMC(40, 108), TMC(41, 254),
   TMC(42, 92), TMC(43, 69), TMC(44, 204), TMC(45, 109), TMC(46, 255),
   TMC(47, 3), TMC(47, 9), TMC(48, 8), TMC(49, 180), TMC(50, 106),
   TMC(51, 105), TMC(52, 104), TMC(53, 47), TMC(54, 101), TMC(55, 100),
   TMC(56, 98), TMC(57, 93), TMC(58, 96), TMC(59, 256), TMC(60, 180),
   TMC(61, 25), TMC(62, 257), TMC(62, 258), TMC(63, 92), TMC(64, 93),
   TMC(65, 230), TMC(65, 232), TMC(65, 234), TMC(65, 236), TMC(66, 261),
   TMC(66, 264), TMC(66, 267), TMC(66, 270), TMC(66, 273), TMC(67, 67),
   TMC(68, 198), TMC(69, 276), TMC(70, 90), TMC(71, 83), TMC(72, 82),
   TMC(73, 80), TMC(73, 278), TMC(74, 79), TMC(75, 77), TMC(76, 20),
   TMC(77, 70), TMC(78, 66), TMC(79, 61), TMC(80, 58), TMC(81, 65),
   TMC(82, 64), TMC(83, 63), TMC(84, 60), TMC(85, 57), TMC(86, 55),
   TMC(87, 53), TMC(88, 50), TMC(89, 47), TMC(90, 44), TMC(91, 42),
   TMC(92, 280), TMC(92, 282), TMC(93, 39), TMC(94, 37), TMC(95, 34),
   TMC(96, 33), TMC(97, 285), TMC(97, 289), TMC(97, 293), TMC(97, 297),
   TMC(97, 300), TMC(98, 32), TMC(98, 301), TMC(99, 302), TMC(99, 31),
   TMC(100, 27), TMC(101, 1), TMC(102, 24), TMC(103, 19), TMC(104, 21),
   TMC(105, 304), TMC(105, 307), TMC(105, 310), TMC(105, 313),
   TMC(106, 315), TMC(106, 317), TMC(106, 319), TMC(106, 320),
   TMC(106, 324), TMC(106, 328), TMC(106, 332), TMC(107, 18), TMC(108, 7),
   TMC(109, 18), TMC(110, 7), TMC(111, 18), TMC(112, 15), TMC(113, 12),
   TMC(114, 7), TMC(115, 2), TMC(116, 197)]
  end
  local
  val DT = Thm.disk_thm val read = Term.read_raw tmvector
  in
  fun op bl_TY_DEF x = x
    val op bl_TY_DEF =
    DT(((("enumeral",15),
        [("bool",[14,25,26,53,132,133,138])]),["DISK_THM"]),
       [read"%182%84%243%32%138%0%177%146%32%177%256%176$0@%204%157@%150%192@%193@@%80%199|@@@%256%186%24%156%176$1@%24%204%240%157@@%150%192@%193@@%212$0@%80%199|@@|$0@@@$2$0@@|@@%178%26%180%34%186%40%156%176$3@%26%34%40%204%240%240%157@@@%150$2@$1@@%212$0@%80%199|@@|||$2@$1@$0@@@$4$0@@|@|@|@@@@$1$0@@|@@$0$1@@|@|@$0@|@"])
  fun op bl_case_def x = x
    val op bl_case_def =
    DT(((("enumeral",23),
        [("bool",[14,25,26,31,53,63,132,133,138,181]),
         ("enumeral",[16,17,18,19,20,21,22]),("ind_type",[33,34]),
         ("pair",[8,9])]),["DISK_THM"]),
       [read"%156%123%97%131%57%127%62%159%258%297@$2@$1@$0@@$2@|@|@|@@%156%124%18%123%97%131%57%127%62%159%258%320$3@@$2@$1@$0@@$1$3@@|@|@|@|@@%122%26%125%34%124%37%123%97%131%57%127%62%159%258%300$5@$4@$3@@$2@$1@$0@@$0$5@$4@$3@@|@|@|@|@|@|@@@"])
  fun op bl_size_def x = x
    val op bl_size_def =
    DT(((("enumeral",24),
        [("bool",[14,25,26,31,53,63,132,133,138,181]),
         ("enumeral",[16,17,18,19,20,21,22]),("ind_type",[33,34]),
         ("pair",[8,9])]),["DISK_THM"]),
       [read"%156%130%56%174%260$0@%297@@%157@|@@%156%130%56%124%18%174%260$1@%320$0@@@%148%229%194%255@@@%260$1@$0@@@|@|@@%130%56%122%26%125%34%124%37%174%260$3@%300$2@$1@$0@@@%148%229%194%255@@@%148$3$2@@%148%266$3@$1@@%260$3@$0@@@@@|@|@|@|@@@"])
  fun op bt_TY_DEF x = x
    val op bt_TY_DEF =
    DT(((("enumeral",0),
        [("bool",[14,25,26,53,132,133,138])]),["DISK_THM"]),
       [read"%184%85%242%31%137%1%177%145%31%177%256%175$0@%203%157@%192@%80%198|@@@%185%28%178%33%185%39%156%175$3@%28%33%39%203%240%157@@$1@%211$2@%211$0@%80%198|@@@|||$2@$1@$0@@@%156$4$2@@$4$0@@@|@|@|@@@$1$0@@|@@$0$1@@|@|@$0@|@"])
  fun op bt_size_def x = x
    val op bt_size_def =
    DT(((("enumeral",7),
        [("bool",[14,25,26,31,53,63,132,133,138,181]),
         ("enumeral",[1,2,3,4,5]),("ind_type",[33,34])]),["DISK_THM"]),
       [read"%156%130%56%174%266$0@%299@@%157@|@@%130%56%125%27%122%33%125%38%174%266$3@%298$2@$1@$0@@@%148%229%194%255@@@%148%266$3@$2@@%148$3$1@@%266$3@$0@@@@@|@|@|@|@@"])
  fun op BL_ACCUM x = x
    val op BL_ACCUM =
    DT(((("enumeral",35),
        [("bool",[14,25,26,31,53,63,132,133,138,181]),
         ("enumeral",[16,17,18,19,20,21,22]),("ind_type",[33,34]),
         ("pair",[8,9])]),["DISK_THM"]),
       [read"%156%122%17%125%43%160%196$1@$0@%297@@%300$1@$0@%297@@|@|@@%156%122%17%125%43%124%50%160%196$2@$1@%320$0@@@%300$2@$1@$0@@|@|@|@@%122%17%125%43%122%82%125%86%124%50%160%196$4@$3@%300$2@$1@$0@@@%320%196$4@%298$3@$2@$1@@$0@@@|@|@|@|@|@@@"])
  fun op BL_CONS x = x
    val op BL_CONS =
    DT(((("enumeral",36),[]),[]),
       [read"%122%17%124%50%160%197$1@$0@@%196$1@%299@$0@@|@|@"])
  fun op list_to_bl x = x
    val op list_to_bl =
    DT(((("enumeral",37),[("list",[13])]),["DISK_THM"]),
       [read"%156%160%292%226@@%297@@%122%17%142%72%160%292%201$1@$0@@@%197$1@%292$0@@@|@|@@"])
  fun op bt_to_list x = x
    val op bt_to_list =
    DT(((("enumeral",38),
        [("bool",[14,25,26,31,53,63,132,133,138,181]),
         ("enumeral",[1,2,3,4,5]),("ind_type",[33,34])]),["DISK_THM"]),
       [read"%156%172%268%299@@%226@@%125%71%122%113%125%83%172%268%298$2@$1@$0@@@%191%191%268$2@@%201$1@%226@@@%268$0@@@|@|@|@@"])
  fun op bt_to_list_ac x = x
    val op bt_to_list_ac =
    DT(((("enumeral",39),
        [("bool",[14,25,26,31,53,63,132,133,138,181]),
         ("enumeral",[1,2,3,4,5]),("ind_type",[33,34])]),["DISK_THM"]),
       [read"%156%142%78%172%269%299@$0@@$0@|@@%125%71%122%113%125%83%142%78%172%269%298$3@$2@$1@@$0@@%269$3@%201$2@%269$1@$0@@@@|@|@|@|@@"])
  fun op bt_rev x = x
    val op bt_rev =
    DT(((("enumeral",41),
        [("bool",[14,25,26,31,53,63,132,133,138,181]),
         ("enumeral",[1,2,3,4,5]),("ind_type",[33,34])]),["DISK_THM"]),
       [read"%156%124%50%160%265%299@$0@@$0@|@@%125%75%122%82%125%86%124%50%160%265%298$3@$2@$1@@$0@@%265$3@%300$2@$1@$0@@@|@|@|@|@@"])
  fun op K2 x = x
    val op K2 =
    DT(((("enumeral",42),[]),[]),
       [read"%122%17%174%222$0@@%229%195%255@@@|@"])
  fun op bl_rev x = x
    val op bl_rev =
    DT(((("enumeral",43),
        [("bool",[14,25,26,31,53,63,132,133,138,181]),
         ("enumeral",[16,17,18,19,20,21,22]),("ind_type",[33,34]),
         ("pair",[8,9])]),["DISK_THM"]),
       [read"%156%125%69%162%259$0@%297@@$0@|@@%156%125%69%124%44%162%259$1@%320$0@@@%259$1@$0@@|@|@@%125%69%122%17%125%55%124%44%162%259$3@%300$2@$1@$0@@@%259%298$3@$2@$1@@$0@@|@|@|@|@@@"])
  fun op bl_to_bt x = x
    val op bl_to_bt =
    DT(((("enumeral",44),[]),[]), [read"%166%261@%259%299@@"])
  fun op bt_to_bl x = x
    val op bt_to_bl =
    DT(((("enumeral",45),[]),[]),
       [read"%125%93%160%267$0@@%265$0@%297@@|@"])
  fun op list_to_bt x = x
    val op list_to_bt =
    DT(((("enumeral",46),[]),[]),
       [read"%143%73%163%295$0@@%262%293$0@@@|@"])
  fun op OL x = x
    val op OL =
    DT(((("enumeral",47),[("list",[13])]),["DISK_THM"]),
       [read"%156%147%54%161%230$0@%226@@%241@|@@%147%54%122%17%142%72%161%230$2@%201$1@$0@@@%156%230$2@$0@@%122%81%177%219$0@%225$1@@@%164%257$3@$2@$0@@%223@@|@@@|@|@|@@"])
  fun op smerge_tupled_primitive x = x
    val op smerge_tupled_primitive =
    DT(((("enumeral",48),[]),[]),
       [read"%169%319@%252%189%15%156%248$0@@%156%142%78%142%72%122%119%122%113%147%54%177%164%257$0@$1@$2@@%209@@$5%154$0@%151$3@$4@@@%154$0@%151%201$1@$3@@%201$2@$4@@@@@|@|@|@|@|@@%156%142%78%142%72%122%119%122%113%147%54%177%164%257$0@$1@$2@@%213@@$5%154$0@%151%201$1@$3@@$4@@@%154$0@%151%201$1@$3@@%201$2@$4@@@@@|@|@|@|@|@@%142%78%142%72%122%119%122%113%147%54%177%164%257$0@$1@$2@@%223@@$5%154$0@%151$3@%201$2@$4@@@@%154$0@%151%201$1@$3@@%201$2@$4@@@@@|@|@|@|@|@@@@|@@%92%22%309$0@%54%105%305$0@%107%110%287$1@%287$0@%217%226@@%119%78%217%201$1@$0@@||@@%113%72%287$2@%217%201$1@$0@@@%120%79%217%282%257$7@$3@$1@@%201$3@$9%154$7@%151$2@%201$1@$0@@@@@@%201$3@$9%154$7@%151$2@$0@@@@@%201$1@$9%154$7@%151%201$3@$2@@$0@@@@@@||@||@||@||@||@@"])
  fun op smerge_curried x = x
    val op smerge_curried =
    DT(((("enumeral",49),[]),[]),
       [read"%147%114%142%115%142%117%172%316$2@$1@$0@@%319%154$2@%151$1@$0@@@@|@|@|@"])
  fun op OL_sublists_tupled_primitive x = x
    val op OL_sublists_tupled_primitive =
    DT(((("enumeral",54),[]),[]),
       [read"%168%236@%251%188%14%156%247$0@@%156%144%76%147%54$2%153$0@$1@@%153$0@%202%228@$1@@@|@|@@%142%78%144%76%147%54$3%153$0@$1@@%153$0@%202%239$2@@$1@@@|@|@|@@@|@@%6%21%308$0@%54%104%288$0@%215%241@@%109%76%301$1@%215$5%153$3@$0@@@@%78%215%156%230$4@$0@@$6%153$4@$1@@@@|@||@||@||@@"])
  fun op OL_sublists_curried x = x
    val op OL_sublists_curried =
    DT(((("enumeral",55),[]),[]),
       [read"%147%114%144%116%161%235$1@$0@@%236%153$1@$0@@@|@|@"])
  fun op lol_set_primitive x = x
    val op lol_set_primitive =
    DT(((("enumeral",58),[]),[]),
       [read"%167%296@%250%187%13%156%246$0@@%156%144%76$1$0@%202%228@$0@@|@@%142%78%144%76$2$0@%202%239$1@@$0@@|@|@@@|@@%77%20%289$0@%216%207@@%100%76%302$1@%216$3$0@@@%78%216%244%225$0@@$4$1@@@|@||@||@@"])
  fun op incr_smerge_tupled_primitive x = x
    val op incr_smerge_tupled_primitive =
    DT(((("enumeral",61),[]),[]),
       [read"%171%285@%254%190%16%156%249$0@@%144%76%142%78%142%72%147%54$4%155$0@%152%316$0@$1@$2@@$3@@@%155$0@%152$1@%202%239$2@@$3@@@@|@|@|@|@@|@@%70%23%311$0@%54%106%307$0@%72%111%291$0@%218%202%239$1@@%227@@@%112%76%304$1@%218%202%239$3@@$0@@@%78%218%202%228@$8%155$6@%152%316$6@$4@$0@@$1@@@@@|@||@||@||@||@@"])
  fun op incr_smerge_curried x = x
    val op incr_smerge_curried =
    DT(((("enumeral",62),[]),[]),
       [read"%147%114%142%115%144%118%173%284$2@$1@$0@@%285%155$2@%152$1@$0@@@@|@|@|@"])
  fun op smerge_out_tupled_primitive x = x
    val op smerge_out_tupled_primitive =
    DT(((("enumeral",66),[]),[]),
       [read"%170%318@%253%190%16%156%249$0@@%156%144%76%142%72%147%54$3%155$0@%152$1@$2@@@%155$0@%152$1@%202%228@$2@@@@|@|@|@@%144%76%142%78%142%72%147%54$4%155$0@%152%316$0@$1@$2@@$3@@@%155$0@%152$1@%202%239$2@@$3@@@@|@|@|@|@@@|@@%91%23%310$0@%54%106%306$0@%72%111%290$0@%217$1@@%112%76%303$1@%217$7%155$5@%152$3@$0@@@@@%78%217$8%155$6@%152%316$6@$4@$0@@$1@@@@|@||@||@||@||@@"])
  fun op smerge_out_curried x = x
    val op smerge_out_curried =
    DT(((("enumeral",67),[]),[]),
       [read"%147%114%142%115%144%118%172%317$2@$1@$0@@%318%155$2@%152$1@$0@@@@|@|@|@"])
  fun op incr_sbuild x = x
    val op incr_sbuild =
    DT(((("enumeral",70),[("list",[13])]),["DISK_THM"]),
       [read"%156%147%54%173%283$0@%226@@%227@|@@%147%54%122%113%142%72%173%283$2@%201$1@$0@@@%284$2@%201$1@%226@@%283$2@$0@@@|@|@|@@"])
  fun op incr_ssort x = x
    val op incr_ssort =
    DT(((("enumeral",71),[]),[]),
       [read"%147%54%142%72%172%286$1@$0@@%317$1@%226@%283$1@$0@@@|@|@"])
  fun op bt_to_set x = x
    val op bt_to_set =
    DT(((("enumeral",72),
        [("bool",[14,25,26,31,53,63,132,133,138,181]),
         ("enumeral",[1,2,3,4,5]),("ind_type",[33,34])]),["DISK_THM"]),
       [read"%156%147%54%165%208$0@%299@@%207@|@@%147%54%125%71%122%113%125%83%165%208$3@%298$2@$1@$0@@@%244%244%214%119%149$0@%156%219$0@%208$4@$3@@@%164%257$4@$0@$2@@%223@@@|@@%220$1@%207@@@%214%121%149$0@%156%219$0@%208$4@$1@@@%164%257$4@$2@$0@@%223@@@|@@@|@|@|@|@@"])
  fun op bt_to_set_lb x = x
    val op bt_to_set_lb =
    DT(((("enumeral",73),[]),[]),
       [read"%147%54%122%74%125%93%165%278$2@$1@$0@@%214%113%149$0@%156%219$0@%208$3@$1@@@%164%257$3@$2@$0@@%223@@@|@@|@|@|@"])
  fun op bt_to_set_ub x = x
    val op bt_to_set_ub =
    DT(((("enumeral",74),[]),[]),
       [read"%147%54%125%93%122%96%165%280$2@$1@$0@@%214%113%149$0@%156%219$0@%208$3@$2@@@%164%257$3@$0@$1@@%223@@@|@@|@|@|@"])
  fun op bt_to_set_lb_ub x = x
    val op bt_to_set_lb_ub =
    DT(((("enumeral",75),[]),[]),
       [read"%147%54%122%74%125%93%122%96%165%279$3@$2@$1@$0@@%214%113%149$0@%156%219$0@%208$4@$2@@@%156%164%257$4@$3@$0@@%223@@%164%257$4@$0@$1@@%223@@@@|@@|@|@|@|@"])
  fun op bt_to_ol_lb_ub x = x
    val op bt_to_ol_lb_ub =
    DT(((("enumeral",79),
        [("bool",[14,25,26,31,53,63,132,133,138,181]),
         ("enumeral",[1,2,3,4,5]),("ind_type",[33,34])]),["DISK_THM"]),
       [read"%156%147%54%122%74%122%96%172%274$2@$1@%299@$0@@%226@|@|@|@@%147%54%122%74%125%71%122%113%125%83%122%96%172%274$5@$4@%298$3@$2@$1@@$0@@%200%164%257$5@$4@$2@@%223@@%200%164%257$5@$2@$0@@%223@@%191%191%274$5@$4@$3@$2@@%201$2@%226@@@%274$5@$2@$1@$0@@@%274$5@$4@$3@$0@@@%274$5@$4@$1@$0@@@|@|@|@|@|@|@@"])
  fun op bt_to_ol_lb x = x
    val op bt_to_ol_lb =
    DT(((("enumeral",80),
        [("bool",[14,25,26,31,53,63,132,133,138,181]),
         ("enumeral",[1,2,3,4,5]),("ind_type",[33,34])]),["DISK_THM"]),
       [read"%156%147%54%122%74%172%272$1@$0@%299@@%226@|@|@@%147%54%122%74%125%71%122%113%125%83%172%272$4@$3@%298$2@$1@$0@@@%200%164%257$4@$3@$1@@%223@@%191%191%274$4@$3@$2@$1@@%201$1@%226@@@%272$4@$1@$0@@@%272$4@$3@$0@@@|@|@|@|@|@@"])
  fun op bt_to_ol_ub x = x
    val op bt_to_ol_ub =
    DT(((("enumeral",81),
        [("bool",[14,25,26,31,53,63,132,133,138,181]),
         ("enumeral",[1,2,3,4,5]),("ind_type",[33,34])]),["DISK_THM"]),
       [read"%156%147%54%122%96%172%276$1@%299@$0@@%226@|@|@@%147%54%125%71%122%113%125%83%122%96%172%276$4@%298$3@$2@$1@@$0@@%200%164%257$4@$2@$0@@%223@@%191%191%276$4@$3@$2@@%201$2@%226@@@%274$4@$2@$1@$0@@@%276$4@$3@$0@@@|@|@|@|@|@@"])
  fun op bt_to_ol x = x
    val op bt_to_ol =
    DT(((("enumeral",82),
        [("bool",[14,25,26,31,53,63,132,133,138,181]),
         ("enumeral",[1,2,3,4,5]),("ind_type",[33,34])]),["DISK_THM"]),
       [read"%156%147%54%172%270$0@%299@@%226@|@@%147%54%125%71%122%113%125%83%172%270$3@%298$2@$1@$0@@@%191%191%276$3@$2@$1@@%201$1@%226@@@%272$3@$1@$0@@@|@|@|@|@@"])
  fun op bt_to_ol_lb_ub_ac x = x
    val op bt_to_ol_lb_ub_ac =
    DT(((("enumeral",88),
        [("bool",[14,25,26,31,53,63,132,133,138,181]),
         ("enumeral",[1,2,3,4,5]),("ind_type",[33,34])]),["DISK_THM"]),
       [read"%156%147%54%122%74%122%96%142%78%172%275$3@$2@%299@$1@$0@@$0@|@|@|@|@@%147%54%122%74%125%71%122%113%125%83%122%96%142%78%172%275$6@$5@%298$4@$3@$2@@$1@$0@@%200%164%257$6@$5@$3@@%223@@%200%164%257$6@$3@$1@@%223@@%275$6@$5@$4@$3@%201$3@%275$6@$3@$2@$1@$0@@@@%275$6@$5@$4@$1@$0@@@%275$6@$5@$2@$1@$0@@@|@|@|@|@|@|@|@@"])
  fun op bt_to_ol_lb_ac x = x
    val op bt_to_ol_lb_ac =
    DT(((("enumeral",89),
        [("bool",[14,25,26,31,53,63,132,133,138,181]),
         ("enumeral",[1,2,3,4,5]),("ind_type",[33,34])]),["DISK_THM"]),
       [read"%156%147%54%122%74%142%78%172%273$2@$1@%299@$0@@$0@|@|@|@@%147%54%122%74%125%71%122%113%125%83%142%78%172%273$5@$4@%298$3@$2@$1@@$0@@%200%164%257$5@$4@$2@@%223@@%275$5@$4@$3@$2@%201$2@%273$5@$2@$1@$0@@@@%273$5@$4@$1@$0@@@|@|@|@|@|@|@@"])
  fun op bt_to_ol_ub_ac x = x
    val op bt_to_ol_ub_ac =
    DT(((("enumeral",90),
        [("bool",[14,25,26,31,53,63,132,133,138,181]),
         ("enumeral",[1,2,3,4,5]),("ind_type",[33,34])]),["DISK_THM"]),
       [read"%156%147%54%122%96%142%78%172%277$2@%299@$1@$0@@$0@|@|@|@@%147%54%125%71%122%113%125%83%122%96%142%78%172%277$5@%298$4@$3@$2@@$1@$0@@%200%164%257$5@$3@$1@@%223@@%277$5@$4@$3@%201$3@%275$5@$3@$2@$1@$0@@@@%277$5@$4@$1@$0@@@|@|@|@|@|@|@@"])
  fun op bt_to_ol_ac x = x
    val op bt_to_ol_ac =
    DT(((("enumeral",91),
        [("bool",[14,25,26,31,53,63,132,133,138,181]),
         ("enumeral",[1,2,3,4,5]),("ind_type",[33,34])]),["DISK_THM"]),
       [read"%156%147%54%142%78%172%271$1@%299@$0@@$0@|@|@@%147%54%125%71%122%113%125%83%142%78%172%271$4@%298$3@$2@$1@@$0@@%277$4@$3@$2@%201$2@%273$4@$2@$1@$0@@@@|@|@|@|@|@@"])
  fun op OWL x = x
    val op OWL =
    DT(((("enumeral",92),[]),[]),
       [read"%147%54%126%87%142%72%161%238$2@$1@$0@@%156%165$1@%225$0@@@%230$2@$0@@@|@|@|@"])
  fun op OU x = x
    val op OU =
    DT(((("enumeral",94),[]),[]),
       [read"%147%54%126%94%126%95%165%237$2@$1@$0@@%244%214%113%149$0@%156%219$0@$2@@%122%121%177%219$0@$2@@%164%257$4@$1@$0@@%223@@|@@@|@@$0@@|@|@|@"])
  fun op UO x = x
    val op UO =
    DT(((("enumeral",95),[]),[]),
       [read"%147%54%126%87%126%94%165%245$2@$1@$0@@%244$1@%214%119%149$0@%156%219$0@$1@@%122%121%177%219$0@$3@@%164%257$4@$0@$1@@%223@@|@@@|@@@|@|@|@"])
  fun op LESS_ALL x = x
    val op LESS_ALL =
    DT(((("enumeral",99),[]),[]),
       [read"%147%54%122%113%126%87%161%224$2@$1@$0@@%122%119%177%219$0@$1@@%164%257$3@$2@$0@@%223@@|@@|@|@|@"])
  fun op bl_to_set x = x
    val op bl_to_set =
    DT(((("enumeral",102),
        [("bool",[14,25,26,31,53,63,132,133,138,181]),
         ("enumeral",[16,17,18,19,20,21,22]),("ind_type",[33,34]),
         ("pair",[8,9])]),["DISK_THM"]),
       [read"%156%147%54%165%263$0@%297@@%207@|@@%156%147%54%124%44%165%263$1@%320$0@@@%263$1@$0@@|@|@@%147%54%122%113%125%93%124%44%165%263$3@%300$2@$1@$0@@@%237$3@%244%220$2@%207@@%214%119%149$0@%156%219$0@%208$4@$2@@@%164%257$4@$3@$0@@%223@@@|@@@%263$3@$0@@@|@|@|@|@@@"])
  fun op sinter_tupled_primitive x = x
    val op sinter_tupled_primitive =
    DT(((("enumeral",107),[]),[]),
       [read"%169%315@%252%189%15%156%248$0@@%156%142%78%142%72%122%119%122%113%147%54%177%164%257$0@$1@$2@@%209@@$5%154$0@%151$3@$4@@@%154$0@%151%201$1@$3@@%201$2@$4@@@@@|@|@|@|@|@@%156%142%78%142%72%122%119%122%113%147%54%177%164%257$0@$1@$2@@%213@@$5%154$0@%151%201$1@$3@@$4@@@%154$0@%151%201$1@$3@@%201$2@$4@@@@@|@|@|@|@|@@%142%78%142%72%122%119%122%113%147%54%177%164%257$0@$1@$2@@%223@@$5%154$0@%151$3@%201$2@$4@@@@%154$0@%151%201$1@$3@@%201$2@$4@@@@@|@|@|@|@|@@@@|@@%89%22%309$0@%54%105%305$0@%107%110%287$1@%217%226@@%113%72%287$2@%217%226@@%119%78%217%282%257$7@$3@$1@@$9%154$7@%151$2@%201$1@$0@@@@@%201$3@$9%154$7@%151$2@$0@@@@@$9%154$7@%151%201$3@$2@@$0@@@@@||@||@||@||@||@@"])
  fun op sinter_curried x = x
    val op sinter_curried =
    DT(((("enumeral",108),[]),[]),
       [read"%147%114%142%115%142%117%172%314$2@$1@$0@@%315%154$2@%151$1@$0@@@@|@|@|@"])
  fun op sdiff_tupled_primitive x = x
    val op sdiff_tupled_primitive =
    DT(((("enumeral",112),[]),[]),
       [read"%169%313@%252%189%15%156%248$0@@%156%142%78%142%72%122%119%122%113%147%54%177%164%257$0@$1@$2@@%209@@$5%154$0@%151$3@$4@@@%154$0@%151%201$1@$3@@%201$2@$4@@@@@|@|@|@|@|@@%156%142%78%142%72%122%119%122%113%147%54%177%164%257$0@$1@$2@@%213@@$5%154$0@%151%201$1@$3@@$4@@@%154$0@%151%201$1@$3@@%201$2@$4@@@@@|@|@|@|@|@@%142%78%142%72%122%119%122%113%147%54%177%164%257$0@$1@$2@@%223@@$5%154$0@%151$3@%201$2@$4@@@@%154$0@%151%201$1@$3@@%201$2@$4@@@@@|@|@|@|@|@@@@|@@%88%22%309$0@%54%105%305$0@%107%110%287$1@%217%226@@%113%72%287$2@%217%201$1@$0@@@%119%78%217%282%257$7@$3@$1@@%201$3@$9%154$7@%151$2@%201$1@$0@@@@@@$9%154$7@%151$2@$0@@@@$9%154$7@%151%201$3@$2@@$0@@@@@||@||@||@||@||@@"])
  fun op sdiff_curried x = x
    val op sdiff_curried =
    DT(((("enumeral",113),[]),[]),
       [read"%147%114%142%115%142%117%172%312$2@$1@$0@@%313%154$2@%151$1@$0@@@@|@|@|@"])
  fun op OL_bt_lb_ub x = x
    val op OL_bt_lb_ub =
    DT(((("enumeral",122),
        [("bool",[14,25,26,31,53,63,132,133,138,181]),
         ("enumeral",[1,2,3,4,5]),("ind_type",[33,34])]),["DISK_THM"]),
       [read"%156%147%54%122%74%122%96%161%233$2@$1@%299@$0@@%164%257$2@$1@$0@@%223@@|@|@|@@%147%54%122%74%125%71%122%113%125%83%122%96%161%233$5@$4@%298$3@$2@$1@@$0@@%156%233$5@$4@$3@$2@@%233$5@$2@$1@$0@@@|@|@|@|@|@|@@"])
  fun op OL_bt_lb x = x
    val op OL_bt_lb =
    DT(((("enumeral",123),
        [("bool",[14,25,26,31,53,63,132,133,138,181]),
         ("enumeral",[1,2,3,4,5]),("ind_type",[33,34])]),["DISK_THM"]),
       [read"%156%147%54%122%74%161%232$1@$0@%299@@%241@|@|@@%147%54%122%74%125%71%122%113%125%83%161%232$4@$3@%298$2@$1@$0@@@%156%233$4@$3@$2@$1@@%232$4@$1@$0@@@|@|@|@|@|@@"])
  fun op OL_bt_ub x = x
    val op OL_bt_ub =
    DT(((("enumeral",124),
        [("bool",[14,25,26,31,53,63,132,133,138,181]),
         ("enumeral",[1,2,3,4,5]),("ind_type",[33,34])]),["DISK_THM"]),
       [read"%156%147%54%122%96%161%234$1@%299@$0@@%241@|@|@@%147%54%125%71%122%113%125%83%122%96%161%234$4@%298$3@$2@$1@@$0@@%156%234$4@$3@$2@@%233$4@$2@$1@$0@@@|@|@|@|@|@@"])
  fun op OL_bt x = x
    val op OL_bt =
    DT(((("enumeral",125),
        [("bool",[14,25,26,31,53,63,132,133,138,181]),
         ("enumeral",[1,2,3,4,5]),("ind_type",[33,34])]),["DISK_THM"]),
       [read"%156%147%54%161%231$0@%299@@%241@|@@%147%54%125%71%122%113%125%83%161%231$3@%298$2@$1@$0@@@%156%234$3@$2@$1@@%232$3@$1@$0@@@|@|@|@|@@"])
  fun op bt_distinct x = x
    val op bt_distinct =
    DT(((("enumeral",33),[("enumeral",[10])]),["DISK_THM"]),
       [read"%125%38%122%33%125%27%321%162%299@%298$0@$1@$2@@@|@|@|@"])
  fun op bt_case_cong x = x
    val op bt_case_cong =
    DT(((("enumeral",11),
        [("bool",[14,25,26,53,132,133,138,181]),
         ("enumeral",[1,2,3,4,5,6])]),["DISK_THM"]),
       [read"%125%3%125%5%123%97%135%58%177%156%162$3@$2@@%156%177%162$2@%299@@%159$1@%102@@@%125%27%122%33%125%38%177%162$5@%298$2@$1@$0@@@%159$3$2@$1@$0@@%60$2@$1@$0@@@|@|@|@@@@%159%264$3@$1@$0@@%264$2@%102@%60@@@|@|@|@|@"])
  fun op bt_nchotomy x = x
    val op bt_nchotomy =
    DT(((("enumeral",12),
        [("bool",[14,25,26,53,132,133,138,181]),
         ("enumeral",[1,2,3,4,5])]),["DISK_THM"]),
       [read"%125%49%256%162$0@%299@@%180%45%178%17%180%47%162$3@%298$2@$1@$0@@|@|@|@@|@"])
  fun op bt_Axiom x = x
    val op bt_Axiom =
    DT(((("enumeral",13),
        [("bool",[14,25,26,31,53,63,132,133,138,181]),
         ("enumeral",[1,2,3,4,5]),("ind_type",[33,34])]),["DISK_THM"]),
       [read"%123%61%129%63%183%68%156%159$0%299@@$2@@%125%27%122%33%125%38%159$3%298$2@$1@$0@@@$4$1@$2@$0@$3$2@@$3$0@@@|@|@|@@|@|@|@"])
  fun op bt_induction x = x
    val op bt_induction =
    DT(((("enumeral",14),
        [("bool",[14,25,26,53,132,133,138]),
         ("enumeral",[1,2,3,4,5])]),["DISK_THM"]),
       [read"%134%8%177%156$0%299@@%125%45%125%47%177%156$2$1@@$2$0@@@%122%17$3%298$2@$0@$1@@|@@|@|@@@%125%45$1$0@|@@|@"])
  fun op datatype_bl x = x
    val op datatype_bl =
    DT(((("enumeral",25),[("bool",[25,171])]),["DISK_THM"]),
       [read"%205%51%297@%320@%300@@"])
  fun op bl_11 x = x
    val op bl_11 =
    DT(((("enumeral",26),
        [("bool",[14,25,26,31,51,53,56,63,132,133,138,181]),
         ("enumeral",[16,17,18,19,20,21,22]),("ind_type",[33,34]),
         ("pair",[8,9])]),["DISK_THM"]),
       [read"%156%124%18%124%25%161%160%320$1@@%320$0@@@%160$1@$0@@|@|@@%122%26%125%34%124%37%122%29%125%36%124%41%161%160%300$5@$4@$3@@%300$2@$1@$0@@@%156%158$5@$2@@%156%162$4@$1@@%160$3@$0@@@@|@|@|@|@|@|@@"])
  fun op bl_distinct x = x
    val op bl_distinct =
    DT(((("enumeral",27),
        [("bool",[14,25,26,31,36,47,51,53,54,56,63,132,133,138,181]),
         ("enumeral",[16,17,18,19,20,21,22]),("ind_type",[33,34]),
         ("pair",[8,9])]),["DISK_THM"]),
       [read"%156%124%18%321%160%297@%320$0@@@|@@%156%124%37%125%34%122%26%321%160%297@%300$0@$1@$2@@@|@|@|@@%124%37%125%34%122%26%124%18%321%160%320$0@@%300$1@$2@$3@@@|@|@|@|@@@"])
  fun op bl_case_cong x = x
    val op bl_case_cong =
    DT(((("enumeral",28),
        [("bool",[14,25,26,53,132,133,138,181]),
         ("enumeral",[16,17,18,19,20,21,22,23])]),["DISK_THM"]),
       [read"%124%2%124%4%123%97%131%57%127%62%177%156%160$4@$3@@%156%177%160$3@%297@@%159$2@%102@@@%156%124%18%177%160$4@%320$0@@@%159$2$0@@%59$0@@@|@@%122%26%125%34%124%37%177%160$6@%300$2@$1@$0@@@%159$3$2@$1@$0@@%65$2@$1@$0@@@|@|@|@@@@@%159%258$4@$2@$1@$0@@%258$3@%102@%59@%65@@@|@|@|@|@|@"])
  fun op bl_nchotomy x = x
    val op bl_nchotomy =
    DT(((("enumeral",29),
        [("bool",[14,25,26,53,132,133,138,181]),
         ("enumeral",[16,17,18,19,20,21,22])]),["DISK_THM"]),
       [read"%124%48%256%160$0@%297@@%256%179%44%160$1@%320$0@@|@@%178%17%180%47%179%44%160$3@%300$2@$1@$0@@|@|@|@@@|@"])
  fun op bl_Axiom x = x
    val op bl_Axiom =
    DT(((("enumeral",30),
        [("bool",[14,25,26,31,53,63,132,133,138,181]),
         ("enumeral",[16,17,18,19,20,21,22]),("ind_type",[33,34]),
         ("pair",[8,9])]),["DISK_THM"]),
       [read"%123%61%133%64%128%66%181%67%156%159$0%297@@$3@@%156%124%18%159$1%320$0@@@$3$0@$1$0@@@|@@%122%26%125%34%124%37%159$3%300$2@$1@$0@@@$4$2@$1@$0@$3$0@@@|@|@|@@@|@|@|@|@"])
  fun op bl_induction x = x
    val op bl_induction =
    DT(((("enumeral",31),
        [("bool",[14,25,26,53,132,133,138]),
         ("enumeral",[16,17,18,19,20,21,22])]),["DISK_THM"]),
       [read"%132%7%177%156$0%297@@%156%124%44%177$1$0@@$1%320$0@@@|@@%124%44%177$1$0@@%125%47%122%17$3%300$0@$1@$2@@|@|@@|@@@@%124%44$1$0@|@@|@"])
  fun op bt_11 x = x
    val op bt_11 =
    DT(((("enumeral",32),[("enumeral",[9])]),["DISK_THM"]),
       [read"%125%27%122%33%125%38%125%30%122%35%125%42%161%162%298$5@$4@$3@@%298$2@$1@$0@@@%156%162$5@$2@@%156%158$4@$1@@%162$3@$0@@@@|@|@|@|@|@|@"])
  fun op datatype_bt x = x
    val op datatype_bt =
    DT(((("enumeral",8),[("bool",[25,171])]),["DISK_THM"]),
       [read"%205%52%299@%298@@"])
  fun op bt_case_def x = x
    val op bt_case_def =
    DT(((("enumeral",34),[("enumeral",[6])]),["DISK_THM"]),
       [read"%156%123%97%135%58%159%264%299@$1@$0@@$1@|@|@@%125%27%122%33%125%38%123%97%135%58%159%264%298$4@$3@$2@@$1@$0@@$0$4@$3@$2@@|@|@|@|@|@@"])
  fun op bt_to_list_thm x = x
    val op bt_to_list_thm =
    DT(((("enumeral",40),
        [("bool",[14,25,26,36,53,56,58,63,132,133,138]),
         ("enumeral",[1,2,3,4,5,38,39]),
         ("list",[20,55,56])]),["DISK_THM"]),
       [read"%125%93%172%268$0@@%269$0@%226@@|@"])
  fun op smerge_ind x = x
    val op smerge_ind =
    DT(((("enumeral",50),
        [("arithmetic",[22,24,25,26,27,41,46,59,71,88,93,173,180]),
         ("bool",
         [25,26,36,47,48,51,52,53,54,58,63,72,76,78,80,93,96,104,105,107,
          124]),("list",[7,46]),("numeral",[3,5,7,8]),
         ("pair",[5,7,8,9,16]),("prim_rec",[42]),
         ("relation",[101,113,115]),
         ("sat",[1,3,5,6,7,11,12,13,14,15])]),["DISK_THM"]),
       [read"%139%10%177%156%147%54$1$0@%226@%226@|@@%156%147%54%122%113%142%72$3$2@%201$1@$0@@%226@|@|@|@@%156%147%54%122%119%142%78$3$2@%226@%201$1@$0@@|@|@|@@%147%54%122%113%142%72%122%119%142%78%177%156%177%164%257$4@$3@$1@@%209@@$5$4@$2@$0@@@%156%177%164%257$4@$3@$1@@%213@@$5$4@%201$3@$2@@$0@@@%177%164%257$4@$3@$1@@%223@@$5$4@$2@%201$1@$0@@@@@@$5$4@%201$3@$2@@%201$1@$0@@@|@|@|@|@|@@@@@%147%101%142%103%142%107$3$2@$1@$0@|@|@|@@|@"])
  fun op smerge x = x
    val op smerge =
    DT(((("enumeral",51),
        [("arithmetic",[22,24,25,26,27,41,46,59,71,88,93,173,180]),
         ("bool",[15,25,36,51,52,53,54,58,63,93,96,104,105,107,124]),
         ("combin",[19]),("enumeral",[48,49]),("list",[6,7]),
         ("numeral",[3,5,7,8]),("pair",[7,8,9,16,49]),("prim_rec",[42]),
         ("relation",[113,115,121,126]),("sat",[1,3,5,6,7,11,12,13,15]),
         ("toto",[20])]),["DISK_THM"]),
       [read"%156%147%54%172%316$0@%226@%226@@%226@|@@%156%122%113%142%72%147%54%172%316$0@%201$2@$1@@%226@@%201$2@$1@@|@|@|@@%156%122%119%142%78%147%54%172%316$0@%226@%201$2@$1@@@%201$2@$1@@|@|@|@@%122%119%122%113%142%78%142%72%147%54%172%316$0@%201$3@$1@@%201$4@$2@@@%282%257$0@$3@$4@@%201$3@%316$0@$1@%201$4@$2@@@@%201$3@%316$0@$1@$2@@@%201$4@%316$0@%201$3@$1@@$2@@@@|@|@|@|@|@@@@"])
  fun op smerge_nil x = x
    val op smerge_nil =
    DT(((("enumeral",52),
        [("arithmetic",[22,24,25,26,27,41,46,59,71,88,93,173,180]),
         ("bool",[15,25,36,51,52,53,54,56,58,63,93,96,104,105,107,124]),
         ("combin",[19]),("enumeral",[48,49]),("list",[6,7,46]),
         ("numeral",[3,5,7,8]),("pair",[7,8,9,16,49]),("prim_rec",[42]),
         ("relation",[113,115,121,126]),("sat",[1,3,5,6,7,11,12,13,15]),
         ("toto",[20])]),["DISK_THM"]),
       [read"%147%54%142%72%156%172%316$1@$0@%226@@$0@@%172%316$1@%226@$0@@$0@@|@|@"])
  fun op smerge_OL x = x
    val op smerge_OL =
    DT(((("enumeral",53),
        [("arithmetic",[22,24,25,26,27,41,46,59,71,88,93,173,180]),
         ("bool",[14,15,25,36,51,52,53,54,56,58,63,93,96,104,105,107,124]),
         ("combin",[19]),("enumeral",[47,48,49,52]),
         ("list",[6,7,25,43,120]),("numeral",[3,5,7,8]),
         ("pair",[7,8,9,16,49]),("pred_set",[3,33,41,80]),
         ("prim_rec",[42]),("relation",[113,115,121,126]),
         ("sat",[1,3,5,6,7,11,12,13,15]),
         ("toto",[17,20,21,42,48,56,59,61])]),["DISK_THM"]),
       [read"%147%54%142%72%142%78%177%156%230$2@$1@@%230$2@$0@@@%230$2@%316$2@$1@$0@@@|@|@|@"])
  fun op OL_sublists_ind x = x
    val op OL_sublists_ind =
    DT(((("enumeral",56),
        [("arithmetic",[22,24,25,26,27,41,46,59,71,93,173,180]),
         ("basicSize",[4]),
         ("bool",[25,27,36,51,52,53,54,58,63,93,96,104,105,107]),
         ("list",[7,46]),("numeral",[3,5,7,8]),("option",[6]),
         ("pair",[5,7,9,16]),("prim_rec",[42]),("relation",[101,113,115]),
         ("sat",[1,3,5,6,7,11,12,13,15])]),["DISK_THM"]),
       [read"%141%12%177%156%147%54$1$0@%227@|@@%156%147%54%144%76%177$2$1@$0@@$2$1@%202%228@$0@@@|@|@@%147%54%142%78%144%76%177$3$2@$0@@$3$2@%202%239$1@@$0@@@|@|@|@@@@%147%101%144%104$2$1@$0@|@|@@|@"])
  fun op OL_sublists x = x
    val op OL_sublists =
    DT(((("enumeral",57),
        [("arithmetic",[22,24,25,26,27,41,46,59,71,93,173,180]),
         ("basicSize",[4]),
         ("bool",[15,25,36,51,52,54,58,63,93,96,104,105,107]),
         ("combin",[19]),("enumeral",[54,55]),("list",[6,7]),
         ("numeral",[3,5,7,8]),("option",[7]),("pair",[7,9,16,49]),
         ("prim_rec",[42]),("relation",[113,115,121,126]),
         ("sat",[1,3,5,6,7,11,12,13,15])]),["DISK_THM"]),
       [read"%156%147%54%161%235$0@%227@@%241@|@@%156%144%76%147%54%161%235$0@%202%228@$1@@@%235$0@$1@@|@|@@%142%78%144%76%147%54%161%235$0@%202%239$2@@$1@@@%156%230$0@$2@@%235$0@$1@@@|@|@|@@@"])
  fun op lol_set_ind x = x
    val op lol_set_ind =
    DT(((("enumeral",59),
        [("arithmetic",[22,24,25,26,27,41,46,59,71,93,173,180]),
         ("basicSize",[4]),
         ("bool",[25,27,36,51,52,53,54,58,63,93,96,104,105,107]),
         ("list",[7,46]),("numeral",[3,5,7,8]),("option",[6]),
         ("prim_rec",[42]),("relation",[101,113,115]),
         ("sat",[1,3,5,6,7,11,12,13,15])]),["DISK_THM"]),
       [read"%136%9%177%156$0%227@@%156%144%76%177$1$0@@$1%202%228@$0@@@|@@%142%78%144%76%177$2$0@@$2%202%239$1@@$0@@@|@|@@@@%144%99$1$0@|@@|@"])
  fun op lol_set x = x
    val op lol_set =
    DT(((("enumeral",60),
        [("arithmetic",[22,24,25,26,27,41,46,59,71,93,173,180]),
         ("basicSize",[4]),
         ("bool",[15,25,36,51,52,54,58,63,93,96,104,105,107]),
         ("combin",[19]),("enumeral",[58]),("list",[6,7]),
         ("numeral",[3,5,7,8]),("option",[7]),("prim_rec",[42]),
         ("relation",[113,115,121,126]),
         ("sat",[1,3,5,6,7,11,12,13,15])]),["DISK_THM"]),
       [read"%156%165%296%227@@%207@@%156%144%76%165%296%202%228@$0@@@%296$0@@|@@%142%78%144%76%165%296%202%239$1@@$0@@@%244%225$1@@%296$0@@@|@|@@@"])
  fun op incr_smerge_ind x = x
    val op incr_smerge_ind =
    DT(((("enumeral",63),
        [("arithmetic",[24,25,26,27,46,59,71,93,173,180]),
         ("basicSize",[4]),("bool",[25,27,36,53,54,58,63,104]),
         ("list",[7,46]),("numeral",[3,5,8]),("option",[6]),
         ("pair",[5,7,9,16]),("prim_rec",[42]),("relation",[101,113,115]),
         ("sat",[1,3,5,6,7,11,15])]),["DISK_THM"]),
       [read"%140%11%177%156%147%54%142%72$2$1@$0@%227@|@|@@%156%147%54%142%72%144%76$3$2@$1@%202%228@$0@@|@|@|@@%147%54%142%72%142%78%144%76%177$4$3@%316$3@$2@$1@@$0@@$4$3@$2@%202%239$1@@$0@@@|@|@|@|@@@@%147%101%142%103%144%108$3$2@$1@$0@|@|@|@@|@"])
  fun op incr_smerge x = x
    val op incr_smerge =
    DT(((("enumeral",64),
        [("arithmetic",[24,25,26,27,46,59,71,93,173,180]),
         ("basicSize",[4]),("bool",[15,25,36,54,58,63,104]),
         ("combin",[19]),("enumeral",[61,62]),("list",[6,7]),
         ("numeral",[3,5,8]),("option",[7]),("pair",[7,9,16,49]),
         ("prim_rec",[42]),("relation",[113,115,121,126])]),["DISK_THM"]),
       [read"%156%142%72%147%54%173%284$0@$1@%227@@%202%239$1@@%227@@|@|@@%156%144%76%142%72%147%54%173%284$0@$1@%202%228@$2@@@%202%239$1@@$2@@|@|@|@@%142%78%144%76%142%72%147%54%173%284$0@$1@%202%239$3@@$2@@@%202%228@%284$0@%316$0@$1@$3@@$2@@@|@|@|@|@@@"])
  fun op incr_smerge_OL x = x
    val op incr_smerge_OL =
    DT(((("enumeral",65),
        [("arithmetic",[22,24,25,26,27,41,46,59,71,93,173,180]),
         ("basicSize",[4]),
         ("bool",[15,25,36,51,52,53,54,58,63,93,96,104,105,107,124]),
         ("combin",[19]),("enumeral",[53,54,55,56,61,62]),("list",[6,7]),
         ("numeral",[3,5,7,8]),("option",[7]),("pair",[7,9,16,49]),
         ("prim_rec",[42]),("relation",[113,115,121,126]),
         ("sat",[1,3,5,6,7,11,12,13,15])]),["DISK_THM"]),
       [read"%147%54%144%76%142%72%177%156%235$2@$1@@%230$2@$0@@@%235$2@%284$2@$0@$1@@@|@|@|@"])
  fun op smerge_out_ind x = x
    val op smerge_out_ind =
    DT(((("enumeral",68),
        [("arithmetic",[22,24,25,26,27,41,46,59,71,93,173,180]),
         ("basicSize",[4]),
         ("bool",[25,27,36,51,52,53,54,58,63,93,96,104,105,107]),
         ("list",[7,46]),("numeral",[3,5,7,8]),("option",[6]),
         ("pair",[5,7,9,16]),("prim_rec",[42]),("relation",[101,113,115]),
         ("sat",[1,3,5,6,7,11,12,13,15])]),["DISK_THM"]),
       [read"%140%11%177%156%147%54%142%72$2$1@$0@%227@|@|@@%156%147%54%142%72%144%76%177$3$2@$1@$0@@$3$2@$1@%202%228@$0@@@|@|@|@@%147%54%142%72%142%78%144%76%177$4$3@%316$3@$2@$1@@$0@@$4$3@$2@%202%239$1@@$0@@@|@|@|@|@@@@%147%101%142%103%144%108$3$2@$1@$0@|@|@|@@|@"])
  fun op smerge_out x = x
    val op smerge_out =
    DT(((("enumeral",69),
        [("arithmetic",[22,24,25,26,27,41,46,59,71,93,173,180]),
         ("basicSize",[4]),
         ("bool",[15,25,36,51,52,54,58,63,93,96,104,105,107]),
         ("combin",[19]),("enumeral",[66,67]),("list",[6,7]),
         ("numeral",[3,5,7,8]),("option",[7]),("pair",[7,9,16,49]),
         ("prim_rec",[42]),("relation",[113,115,121,126]),
         ("sat",[1,3,5,6,7,11,12,13,15])]),["DISK_THM"]),
       [read"%156%142%72%147%54%172%317$0@$1@%227@@$1@|@|@@%156%144%76%142%72%147%54%172%317$0@$1@%202%228@$2@@@%317$0@$1@$2@@|@|@|@@%142%78%144%76%142%72%147%54%172%317$0@$1@%202%239$3@@$2@@@%317$0@%316$0@$1@$3@@$2@@|@|@|@|@@@"])
  fun op IN_bt_to_set x = x
    val op IN_bt_to_set =
    DT(((("enumeral",76),
        [("bool",[25,26,27,52,54,58,63]),("enumeral",[72]),("pair",[3]),
         ("pred_set",[6,10,33,80]),
         ("sat",[1,3,5,6,7,11,13,15])]),["DISK_THM"]),
       [read"%156%147%54%122%119%161%219$0@%208$1@%299@@@%210@|@|@@%147%54%125%71%122%113%125%83%122%119%161%219$0@%208$4@%298$3@$2@$1@@@@%256%156%219$0@%208$4@$3@@@%164%257$4@$0@$2@@%223@@@%256%158$0@$2@@%156%219$0@%208$4@$1@@@%164%257$4@$2@$0@@%223@@@@@|@|@|@|@|@@"])
  fun op NOT_IN_nt x = x
    val op NOT_IN_nt =
    DT(((("enumeral",77),[("enumeral",[76])]),["DISK_THM"]),
       [read"%147%54%122%119%161%219$0@%208$1@%299@@@%210@|@|@"])
  fun op IN_node x = x
    val op IN_node =
    DT(((("enumeral",78),
        [("bool",[25,26,27,51,52,56,58,63]),("enumeral",[72]),("pair",[3]),
         ("pred_set",[6,10,33,80]),
         ("toto",[17,19,21,42,48])]),["DISK_THM"]),
       [read"%147%54%122%113%125%71%122%119%125%83%161%219$3@%208$4@%298$2@$1@$0@@@@%281%257$4@$3@$1@@%219$3@%208$4@$2@@@%241@%219$3@%208$4@$0@@@@|@|@|@|@|@"])
  fun op ol_set x = x
    val op ol_set =
    DT(((("enumeral",83),
        [("bool",
         [14,25,26,27,30,36,48,51,52,53,54,56,58,63,64,105,129,132,133,138,
          147]),("enumeral",[1,2,3,4,5,72,73,74,75,76,77,79,80,81,82]),
         ("list",[25,230]),("pair",[3]),("pred_set",[3,6,10,33,80,367]),
         ("toto",[54,56])]),["DISK_THM"]),
       [read"%147%54%125%93%165%208$1@$0@@%225%270$1@$0@@@|@|@"])
  fun op OL_bt_to_ol_lb_ub x = x
    val op OL_bt_to_ol_lb_ub =
    DT(((("enumeral",84),
        [("bool",
         [14,25,26,27,30,36,48,51,52,53,54,56,58,63,64,105,124,129,132,133,
          138,147]),("enumeral",[1,2,3,4,5,47,75,76,77,79]),
         ("list",[20,25,43,81,120,230]),("pair",[3]),
         ("pred_set",[3,6,10,33,80,367]),("toto",[54,56])]),["DISK_THM"]),
       [read"%147%54%125%93%122%74%122%96%230$3@%274$3@$1@$2@$0@@|@|@|@|@"])
  fun op OL_bt_to_ol_lb x = x
    val op OL_bt_to_ol_lb =
    DT(((("enumeral",85),
        [("bool",
         [14,25,26,27,30,36,48,51,52,53,54,56,58,63,64,105,124,129,132,133,
          138,147]),("enumeral",[1,2,3,4,5,47,73,75,76,77,79,80,84]),
         ("list",[20,25,43,81,120,230]),("pair",[3]),
         ("pred_set",[3,6,10,33,80,367]),("toto",[54,56])]),["DISK_THM"]),
       [read"%147%54%125%93%122%74%230$2@%272$2@$0@$1@@|@|@|@"])
  fun op OL_bt_to_ol_ub x = x
    val op OL_bt_to_ol_ub =
    DT(((("enumeral",86),
        [("bool",
         [14,25,26,27,30,36,48,51,52,53,54,56,58,63,64,105,124,129,132,133,
          138,147]),("enumeral",[1,2,3,4,5,47,74,75,76,77,79,81,84]),
         ("list",[20,25,43,81,120,230]),("pair",[3]),
         ("pred_set",[3,6,10,33,80,367]),("toto",[54,56])]),["DISK_THM"]),
       [read"%147%54%125%93%122%96%230$2@%276$2@$1@$0@@|@|@|@"])
  fun op OL_bt_to_ol x = x
    val op OL_bt_to_ol =
    DT(((("enumeral",87),
        [("bool",
         [14,25,26,27,30,36,48,51,52,53,54,56,58,63,64,105,124,129,132,133,
          138,147]),
         ("enumeral",[1,2,3,4,5,47,73,74,75,76,77,79,80,81,82,85,86]),
         ("list",[20,25,43,81,120,230]),("pair",[3]),
         ("pred_set",[3,6,10,33,80,367]),("toto",[54,56])]),["DISK_THM"]),
       [read"%147%54%125%93%230$1@%270$1@$0@@|@|@"])
  fun op OWL_bt_to_ol x = x
    val op OWL_bt_to_ol =
    DT(((("enumeral",93),
        [("bool",[25,51,56,63]),("enumeral",[83,87,92])]),["DISK_THM"]),
       [read"%147%54%125%93%238$1@%208$1@$0@@%270$1@$0@@|@|@"])
  fun op EMPTY_OU x = x
    val op EMPTY_OU =
    DT(((("enumeral",96),
        [("bool",[25,26,27,36,51,56]),("enumeral",[94]),
         ("pred_set",[10,41,367])]),["DISK_THM"]),
       [read"%147%54%126%90%165%237$1@%207@$0@@$0@|@|@"])
  fun op OU_EMPTY x = x
    val op OU_EMPTY =
    DT(((("enumeral",97),
        [("bool",[25,26,27,36,51,53,56]),("enumeral",[94]),
         ("pred_set",[10,41,369])]),["DISK_THM"]),
       [read"%147%54%126%94%165%237$1@$0@%207@@$0@|@|@"])
  fun op LESS_UO_LEM x = x
    val op LESS_UO_LEM =
    DT(((("enumeral",98),
        [("bool",[25,26,27,30,52,53,56,58,63,101,105,124,145]),
         ("enumeral",[95]),("pair",[3]),("pred_set",[6,33,131]),
         ("toto",[62])]),["DISK_THM"]),
       [read"%147%54%122%113%122%119%126%87%161%122%121%177%219$0@%245$4@%220$3@%207@@$1@@@%164%257$4@$2@$0@@%223@@|@@%164%257$3@$1@$2@@%223@@|@|@|@|@"])
  fun op LESS_ALL_OU x = x
    val op LESS_ALL_OU =
    DT(((("enumeral",100),
        [("bool",
         [2,15,25,26,27,30,36,48,51,52,53,54,55,56,58,63,64,75,84,99,105,
          124,129]),("enumeral",[94,99]),("pair",[3]),
         ("pred_set",[6,18,33]),
         ("sat",[1,3,5,6,7,11,12,13,14,15,16,17,18,19,20,23]),
         ("toto",[21,29,45,46,62])]),["DISK_THM"]),
       [read"%147%54%122%113%126%95%126%98%161%224$3@$2@%237$3@$1@$0@@@%156%224$3@$2@$1@@%224$3@$2@$0@@@|@|@|@|@"])
  fun op OU_ASSOC x = x
    val op OU_ASSOC =
    DT(((("enumeral",101),
        [("bool",[25,26,27,30,36,51,52,53,54,56,58,63,64,99,100,105,129]),
         ("enumeral",[94,99,100]),("pair",[3]),("pred_set",[3,6,33]),
         ("sat",[1,3,5,6,7,11,12,13,14,15,16,17,18]),
         ("toto",[29,45])]),["DISK_THM"]),
       [read"%147%54%126%19%126%46%126%53%165%237$3@$2@%237$3@$1@$0@@@%237$3@%237$3@$2@$1@@$0@@|@|@|@|@"])
  fun op LESS_ALL_UO_LEM x = x
    val op LESS_ALL_UO_LEM =
    DT(((("enumeral",103),
        [("bool",[25,26,27,52,53,54,55,58,63,101,105,124,145]),
         ("enumeral",[95,99]),("pair",[3]),("pred_set",[3,6,10,33,80]),
         ("sat",[1,3,5,6,7,11,12,13,14,15,17,18,19,20,23])]),["DISK_THM"]),
       [read"%147%54%122%17%126%87%177%224$2@$1@$0@@%165%245$2@%220$1@%207@@$0@@%220$1@$0@@@|@|@|@"])
  fun op LESS_ALL_OU_UO_LEM x = x
    val op LESS_ALL_OU_UO_LEM =
    DT(((("enumeral",104),
        [("bool",[2,15,25,26,53,54,55,58,63,75,84,99,100]),
         ("enumeral",[94,99,103]),("pair",[3]),("pred_set",[3,6,33,80]),
         ("sat",[1,3,5,6,7,11,12,13,14,15,17,18,19,20,23])]),["DISK_THM"]),
       [read"%147%54%122%17%126%87%126%94%177%156%224$3@$2@$1@@%224$3@$2@$0@@@%165%237$3@%245$3@%220$2@%207@@$1@@$0@@%220$2@%237$3@$1@$0@@@@|@|@|@|@"])
  fun op bt_to_ol_ID_IMP x = x
    val op bt_to_ol_ID_IMP =
    DT(((("enumeral",105),
        [("bool",
         [14,25,26,27,30,36,48,51,52,53,54,55,56,58,63,73,74,75,99,100,101,
          105,124,132,133,138,145]),("combin",[1,3,5,19,20]),
         ("enumeral",
         [16,17,18,19,20,21,22,35,36,37,43,44,46,47,72,83,87,94,95,96,97,
          98,99,100,101,102,103,104]),("list",[43,48,50,120,240]),
         ("pred_set",[0,3,10,35,131]),("res_quan",[0]),
         ("sat",[1,3,5,6,7,11,12,13,14,15,17,18,19,20,23]),
         ("toto",[21,42,48,51,56])]),["DISK_THM"]),
       [read"%147%54%142%72%177%230$1@$0@@%172%270$1@%294$0@@@$0@@|@|@"])
  fun op OL_UNION_IMP x = x
    val op OL_UNION_IMP =
    DT(((("enumeral",106),
        [("arithmetic",[22,24,25,26,27,41,46,59,71,88,93,173,180]),
         ("bool",[14,15,25,36,51,52,53,54,56,58,63,93,96,104,105,107,124]),
         ("combin",[19]),("enumeral",[48,49,52,53]),("list",[6,7,25,43]),
         ("numeral",[3,5,7,8]),("pair",[7,8,9,16,49]),
         ("pred_set",[0,3,33,41,80]),("prim_rec",[42]),
         ("relation",[113,115,121,126]),("res_quan",[0]),
         ("sat",[1,3,5,6,7,11,12,13,15]),
         ("toto",[17,20,21,42])]),["DISK_THM"]),
       [read"%147%54%142%72%177%230$1@$0@@%142%78%177%230$2@$0@@%156%230$2@%316$2@$1@$0@@@%165%225%316$2@$1@$0@@@%244%225$1@@%225$0@@@@@|@@|@|@"])
  fun op sinter_ind x = x
    val op sinter_ind =
    DT(((("enumeral",109),
        [("arithmetic",[22,24,25,26,27,41,46,59,71,88,93,173,180]),
         ("bool",
         [25,26,36,47,48,51,52,53,54,58,63,72,76,78,80,93,96,104,105,107,
          124]),("list",[7,46]),("numeral",[3,5,7,8]),
         ("pair",[5,7,8,9,16]),("prim_rec",[42]),
         ("relation",[101,113,115]),
         ("sat",[1,3,5,6,7,11,12,13,14,15])]),["DISK_THM"]),
       [read"%139%10%177%156%147%54$1$0@%226@%226@|@@%156%147%54%122%113%142%72$3$2@%201$1@$0@@%226@|@|@|@@%156%147%54%122%119%142%78$3$2@%226@%201$1@$0@@|@|@|@@%147%54%122%113%142%72%122%119%142%78%177%156%177%164%257$4@$3@$1@@%209@@$5$4@$2@$0@@@%156%177%164%257$4@$3@$1@@%213@@$5$4@%201$3@$2@@$0@@@%177%164%257$4@$3@$1@@%223@@$5$4@$2@%201$1@$0@@@@@@$5$4@%201$3@$2@@%201$1@$0@@@|@|@|@|@|@@@@@%147%101%142%103%142%107$3$2@$1@$0@|@|@|@@|@"])
  fun op sinter x = x
    val op sinter =
    DT(((("enumeral",110),
        [("arithmetic",[22,24,25,26,27,41,46,59,71,88,93,173,180]),
         ("bool",[15,25,36,51,52,53,54,58,63,93,96,104,105,107,124]),
         ("combin",[19]),("enumeral",[107,108]),("list",[6,7]),
         ("numeral",[3,5,7,8]),("pair",[7,8,9,16,49]),("prim_rec",[42]),
         ("relation",[113,115,121,126]),("sat",[1,3,5,6,7,11,12,13,15]),
         ("toto",[20])]),["DISK_THM"]),
       [read"%156%147%54%172%314$0@%226@%226@@%226@|@@%156%122%113%142%72%147%54%172%314$0@%201$2@$1@@%226@@%226@|@|@|@@%156%122%119%142%78%147%54%172%314$0@%226@%201$2@$1@@@%226@|@|@|@@%122%119%122%113%142%78%142%72%147%54%172%314$0@%201$3@$1@@%201$4@$2@@@%282%257$0@$3@$4@@%314$0@$1@%201$4@$2@@@%201$3@%314$0@$1@$2@@@%314$0@%201$3@$1@@$2@@@|@|@|@|@|@@@@"])
  fun op OL_INTER_IMP x = x
    val op OL_INTER_IMP =
    DT(((("enumeral",111),
        [("arithmetic",[22,24,25,26,27,41,46,59,71,88,93,173,180]),
         ("bool",
         [14,15,25,26,27,36,51,52,53,54,56,58,63,83,93,96,104,105,107,
          124]),("combin",[19]),("enumeral",[47,107,108,109]),
         ("list",[6,7,25,43,120]),("numeral",[3,5,7,8]),
         ("pair",[7,8,9,16,49]),("pred_set",[0,3,10,45,80]),
         ("prim_rec",[42]),("relation",[113,115,121,126]),("res_quan",[0]),
         ("sat",[1,3,5,6,7,11,12,13,14,15,17,18]),
         ("toto",[17,20,21,42,45,49,56,57])]),["DISK_THM"]),
       [read"%147%54%142%72%177%230$1@$0@@%142%78%177%230$2@$0@@%156%230$2@%314$2@$1@$0@@@%165%225%314$2@$1@$0@@@%221%225$1@@%225$0@@@@@|@@|@|@"])
  fun op sdiff_ind x = x
    val op sdiff_ind =
    DT(((("enumeral",114),
        [("arithmetic",[22,24,25,26,27,41,46,59,71,88,93,173,180]),
         ("bool",
         [25,26,36,47,48,51,52,53,54,58,63,72,76,78,80,93,96,104,105,107,
          124]),("list",[7,46]),("numeral",[3,5,7,8]),
         ("pair",[5,7,8,9,16]),("prim_rec",[42]),
         ("relation",[101,113,115]),
         ("sat",[1,3,5,6,7,11,12,13,14,15])]),["DISK_THM"]),
       [read"%139%10%177%156%147%54$1$0@%226@%226@|@@%156%147%54%122%113%142%72$3$2@%201$1@$0@@%226@|@|@|@@%156%147%54%122%119%142%78$3$2@%226@%201$1@$0@@|@|@|@@%147%54%122%113%142%72%122%119%142%78%177%156%177%164%257$4@$3@$1@@%209@@$5$4@$2@$0@@@%156%177%164%257$4@$3@$1@@%213@@$5$4@%201$3@$2@@$0@@@%177%164%257$4@$3@$1@@%223@@$5$4@$2@%201$1@$0@@@@@@$5$4@%201$3@$2@@%201$1@$0@@@|@|@|@|@|@@@@@%147%101%142%103%142%107$3$2@$1@$0@|@|@|@@|@"])
  fun op sdiff x = x
    val op sdiff =
    DT(((("enumeral",115),
        [("arithmetic",[22,24,25,26,27,41,46,59,71,88,93,173,180]),
         ("bool",[15,25,36,51,52,53,54,58,63,93,96,104,105,107,124]),
         ("combin",[19]),("enumeral",[112,113]),("list",[6,7]),
         ("numeral",[3,5,7,8]),("pair",[7,8,9,16,49]),("prim_rec",[42]),
         ("relation",[113,115,121,126]),("sat",[1,3,5,6,7,11,12,13,15]),
         ("toto",[20])]),["DISK_THM"]),
       [read"%156%147%54%172%312$0@%226@%226@@%226@|@@%156%122%113%142%72%147%54%172%312$0@%201$2@$1@@%226@@%201$2@$1@@|@|@|@@%156%122%119%142%78%147%54%172%312$0@%226@%201$2@$1@@@%226@|@|@|@@%122%119%122%113%142%78%142%72%147%54%172%312$0@%201$3@$1@@%201$4@$2@@@%282%257$0@$3@$4@@%201$3@%312$0@$1@%201$4@$2@@@@%312$0@$1@$2@@%312$0@%201$3@$1@@$2@@@|@|@|@|@|@@@@"])
  fun op OL_DIFF_IMP x = x
    val op OL_DIFF_IMP =
    DT(((("enumeral",116),
        [("arithmetic",[22,24,25,26,27,41,46,59,71,88,93,173,180]),
         ("bool",
         [2,14,15,25,26,27,36,48,50,51,52,53,54,55,56,58,63,73,75,84,93,96,
          99,100,104,105,107,124]),("combin",[19]),
         ("enumeral",[47,112,113,114]),("list",[6,7,25,43,46,120]),
         ("numeral",[3,5,7,8]),("pair",[7,8,9,16,49]),
         ("pred_set",[0,3,67,80]),("prim_rec",[42]),
         ("relation",[113,115,121,126]),("res_quan",[0]),
         ("sat",[1,3,5,6,7,11,12,13,14,15,17,18,19,20,23]),
         ("toto",[17,20,21,29,42,45,48,51,56])]),["DISK_THM"]),
       [read"%147%54%142%72%177%230$1@$0@@%142%78%177%230$2@$0@@%156%230$2@%312$2@$1@$0@@@%165%225%312$2@$1@$0@@@%206%225$1@@%225$0@@@@@|@@|@|@"])
  fun op ENUMERAL_set x = x
    val op ENUMERAL_set =
    DT(((("enumeral",117),
        [("arithmetic",[22,24,25,26,27,41,46,59,71,88,93,173,180]),
         ("basicSize",[4]),
         ("bool",
         [2,14,15,25,26,27,36,51,52,53,54,56,58,63,73,75,84,93,96,99,104,
          105,107,124]),("combin",[19]),
         ("enumeral",
         [47,48,49,52,53,54,55,56,58,61,62,65,66,67,68,70,71,83,87,105]),
         ("list",[6,7,25,43,120]),("numeral",[3,5,7,8]),("option",[7]),
         ("pair",[7,8,9,16,49]),("pred_set",[3,33,35,41,80,93]),
         ("prim_rec",[42]),("relation",[113,115,121,126]),
         ("sat",[1,3,5,6,7,11,12,13,14,15,17,18,19,20,23]),
         ("toto",[17,20,21,42])]),["DISK_THM"]),
       [read"%147%54%142%72%165%225$0@@%208$1@%294%286$1@$0@@@@|@|@"])
  fun op OL_ENUMERAL x = x
    val op OL_ENUMERAL =
    DT(((("enumeral",118),
        [("bool",[25,53,54,56,58,63]),("enumeral",[83,87,105]),
         ("sat",[1,3,5,6,7,11,13,14,15,17,18,19,20,23])]),["DISK_THM"]),
       [read"%147%54%142%72%177%230$1@$0@@%165%225$0@@%208$1@%294$0@@@@|@|@"])
  fun op OWL_UNION_THM x = x
    val op OWL_UNION_THM =
    DT(((("enumeral",119),
        [("bool",[25,53,54,55,58,63,83,99,100]),("enumeral",[92,106]),
         ("sat",[1,3,5,6,7,11,12,13,14,15,17,18,19,20,23])]),["DISK_THM"]),
       [read"%147%54%126%87%142%72%126%94%142%78%177%156%238$4@$3@$2@@%238$4@$1@$0@@@%238$4@%244$3@$1@@%316$4@$2@$0@@@|@|@|@|@|@"])
  fun op OWL_INTER_THM x = x
    val op OWL_INTER_THM =
    DT(((("enumeral",120),
        [("bool",[25,53,54,55,58,63,83,99,100]),("enumeral",[92,111]),
         ("sat",[1,3,5,6,7,11,12,13,14,15,17,18,19,20,23])]),["DISK_THM"]),
       [read"%147%54%126%87%142%72%126%94%142%78%177%156%238$4@$3@$2@@%238$4@$1@$0@@@%238$4@%221$3@$1@@%314$4@$2@$0@@@|@|@|@|@|@"])
  fun op OWL_DIFF_THM x = x
    val op OWL_DIFF_THM =
    DT(((("enumeral",121),
        [("bool",[25,53,54,55,58,63,83,99,100]),("enumeral",[92,116]),
         ("sat",[1,3,5,6,7,11,12,13,14,15,17,18,19,20,23])]),["DISK_THM"]),
       [read"%147%54%126%87%142%72%126%94%142%78%177%156%238$4@$3@$2@@%238$4@$1@$0@@@%238$4@%206$3@$1@@%312$4@$2@$0@@@|@|@|@|@|@"])
  fun op better_bt_to_ol x = x
    val op better_bt_to_ol =
    DT(((("enumeral",126),
        [("bool",
         [14,25,26,27,30,53,54,55,56,58,63,64,105,109,124,129,132,133,138,
          181]),
         ("enumeral",
         [1,2,3,4,5,38,40,79,80,81,82,88,89,90,91,122,123,124,125]),
         ("list",[20,55,56,104]),
         ("sat",[1,3,5,6,7,11,12,13,14,15,16,17,18,19,20,23]),
         ("toto",[56])]),["DISK_THM"]),
       [read"%147%54%125%93%172%270$1@$0@@%200%231$1@$0@@%269$0@%226@@%271$1@$0@%226@@@|@|@"])
  fun op set_OWL_thm x = x
    val op set_OWL_thm =
    DT(((("enumeral",127),
        [("arithmetic",[22,24,25,26,27,41,46,59,71,88,93,173,180]),
         ("basicSize",[4]),
         ("bool",
         [2,14,15,25,26,27,36,51,52,53,54,56,58,63,73,75,84,93,96,99,104,
          105,107,124]),("combin",[19]),
         ("enumeral",
         [47,48,49,52,53,54,55,56,58,61,62,65,66,67,68,70,71,92]),
         ("list",[6,7,25,43,120]),("numeral",[3,5,7,8]),("option",[7]),
         ("pair",[7,8,9,16,49]),("pred_set",[3,33,35,41,80,93]),
         ("prim_rec",[42]),("relation",[113,115,121,126]),
         ("sat",[1,3,5,6,7,11,12,13,14,15,17,18]),
         ("toto",[17,20,21,42])]),["DISK_THM"]),
       [read"%147%54%142%72%238$1@%225$0@@%286$1@$0@@|@|@"])
  end
  val _ = DB.bindl "enumeral"
  [("bl_TY_DEF",bl_TY_DEF,DB.Def), ("bl_case_def",bl_case_def,DB.Def),
   ("bl_size_def",bl_size_def,DB.Def), ("bt_TY_DEF",bt_TY_DEF,DB.Def),
   ("bt_size_def",bt_size_def,DB.Def), ("BL_ACCUM",BL_ACCUM,DB.Def),
   ("BL_CONS",BL_CONS,DB.Def), ("list_to_bl",list_to_bl,DB.Def),
   ("bt_to_list",bt_to_list,DB.Def),
   ("bt_to_list_ac",bt_to_list_ac,DB.Def), ("bt_rev",bt_rev,DB.Def),
   ("K2",K2,DB.Def), ("bl_rev",bl_rev,DB.Def),
   ("bl_to_bt",bl_to_bt,DB.Def), ("bt_to_bl",bt_to_bl,DB.Def),
   ("list_to_bt",list_to_bt,DB.Def), ("OL",OL,DB.Def),
   ("smerge_tupled_primitive",smerge_tupled_primitive,DB.Def),
   ("smerge_curried",smerge_curried,DB.Def),
   ("OL_sublists_tupled_primitive",OL_sublists_tupled_primitive,DB.Def),
   ("OL_sublists_curried",OL_sublists_curried,DB.Def),
   ("lol_set_primitive",lol_set_primitive,DB.Def),
   ("incr_smerge_tupled_primitive",incr_smerge_tupled_primitive,DB.Def),
   ("incr_smerge_curried",incr_smerge_curried,DB.Def),
   ("smerge_out_tupled_primitive",smerge_out_tupled_primitive,DB.Def),
   ("smerge_out_curried",smerge_out_curried,DB.Def),
   ("incr_sbuild",incr_sbuild,DB.Def), ("incr_ssort",incr_ssort,DB.Def),
   ("bt_to_set",bt_to_set,DB.Def), ("bt_to_set_lb",bt_to_set_lb,DB.Def),
   ("bt_to_set_ub",bt_to_set_ub,DB.Def),
   ("bt_to_set_lb_ub",bt_to_set_lb_ub,DB.Def),
   ("bt_to_ol_lb_ub",bt_to_ol_lb_ub,DB.Def),
   ("bt_to_ol_lb",bt_to_ol_lb,DB.Def), ("bt_to_ol_ub",bt_to_ol_ub,DB.Def),
   ("bt_to_ol",bt_to_ol,DB.Def),
   ("bt_to_ol_lb_ub_ac",bt_to_ol_lb_ub_ac,DB.Def),
   ("bt_to_ol_lb_ac",bt_to_ol_lb_ac,DB.Def),
   ("bt_to_ol_ub_ac",bt_to_ol_ub_ac,DB.Def),
   ("bt_to_ol_ac",bt_to_ol_ac,DB.Def), ("OWL",OWL,DB.Def),
   ("OU",OU,DB.Def), ("UO",UO,DB.Def), ("LESS_ALL",LESS_ALL,DB.Def),
   ("bl_to_set",bl_to_set,DB.Def),
   ("sinter_tupled_primitive",sinter_tupled_primitive,DB.Def),
   ("sinter_curried",sinter_curried,DB.Def),
   ("sdiff_tupled_primitive",sdiff_tupled_primitive,DB.Def),
   ("sdiff_curried",sdiff_curried,DB.Def),
   ("OL_bt_lb_ub",OL_bt_lb_ub,DB.Def), ("OL_bt_lb",OL_bt_lb,DB.Def),
   ("OL_bt_ub",OL_bt_ub,DB.Def), ("OL_bt",OL_bt,DB.Def),
   ("bt_distinct",bt_distinct,DB.Thm),
   ("bt_case_cong",bt_case_cong,DB.Thm),
   ("bt_nchotomy",bt_nchotomy,DB.Thm), ("bt_Axiom",bt_Axiom,DB.Thm),
   ("bt_induction",bt_induction,DB.Thm),
   ("datatype_bl",datatype_bl,DB.Thm), ("bl_11",bl_11,DB.Thm),
   ("bl_distinct",bl_distinct,DB.Thm),
   ("bl_case_cong",bl_case_cong,DB.Thm),
   ("bl_nchotomy",bl_nchotomy,DB.Thm), ("bl_Axiom",bl_Axiom,DB.Thm),
   ("bl_induction",bl_induction,DB.Thm), ("bt_11",bt_11,DB.Thm),
   ("datatype_bt",datatype_bt,DB.Thm), ("bt_case_def",bt_case_def,DB.Thm),
   ("bt_to_list_thm",bt_to_list_thm,DB.Thm),
   ("smerge_ind",smerge_ind,DB.Thm), ("smerge",smerge,DB.Thm),
   ("smerge_nil",smerge_nil,DB.Thm), ("smerge_OL",smerge_OL,DB.Thm),
   ("OL_sublists_ind",OL_sublists_ind,DB.Thm),
   ("OL_sublists",OL_sublists,DB.Thm), ("lol_set_ind",lol_set_ind,DB.Thm),
   ("lol_set",lol_set,DB.Thm), ("incr_smerge_ind",incr_smerge_ind,DB.Thm),
   ("incr_smerge",incr_smerge,DB.Thm),
   ("incr_smerge_OL",incr_smerge_OL,DB.Thm),
   ("smerge_out_ind",smerge_out_ind,DB.Thm),
   ("smerge_out",smerge_out,DB.Thm), ("IN_bt_to_set",IN_bt_to_set,DB.Thm),
   ("NOT_IN_nt",NOT_IN_nt,DB.Thm), ("IN_node",IN_node,DB.Thm),
   ("ol_set",ol_set,DB.Thm),
   ("OL_bt_to_ol_lb_ub",OL_bt_to_ol_lb_ub,DB.Thm),
   ("OL_bt_to_ol_lb",OL_bt_to_ol_lb,DB.Thm),
   ("OL_bt_to_ol_ub",OL_bt_to_ol_ub,DB.Thm),
   ("OL_bt_to_ol",OL_bt_to_ol,DB.Thm),
   ("OWL_bt_to_ol",OWL_bt_to_ol,DB.Thm), ("EMPTY_OU",EMPTY_OU,DB.Thm),
   ("OU_EMPTY",OU_EMPTY,DB.Thm), ("LESS_UO_LEM",LESS_UO_LEM,DB.Thm),
   ("LESS_ALL_OU",LESS_ALL_OU,DB.Thm), ("OU_ASSOC",OU_ASSOC,DB.Thm),
   ("LESS_ALL_UO_LEM",LESS_ALL_UO_LEM,DB.Thm),
   ("LESS_ALL_OU_UO_LEM",LESS_ALL_OU_UO_LEM,DB.Thm),
   ("bt_to_ol_ID_IMP",bt_to_ol_ID_IMP,DB.Thm),
   ("OL_UNION_IMP",OL_UNION_IMP,DB.Thm), ("sinter_ind",sinter_ind,DB.Thm),
   ("sinter",sinter,DB.Thm), ("OL_INTER_IMP",OL_INTER_IMP,DB.Thm),
   ("sdiff_ind",sdiff_ind,DB.Thm), ("sdiff",sdiff,DB.Thm),
   ("OL_DIFF_IMP",OL_DIFF_IMP,DB.Thm),
   ("ENUMERAL_set",ENUMERAL_set,DB.Thm),
   ("OL_ENUMERAL",OL_ENUMERAL,DB.Thm),
   ("OWL_UNION_THM",OWL_UNION_THM,DB.Thm),
   ("OWL_INTER_THM",OWL_INTER_THM,DB.Thm),
   ("OWL_DIFF_THM",OWL_DIFF_THM,DB.Thm),
   ("better_bt_to_ol",better_bt_to_ol,DB.Thm),
   ("set_OWL_thm",set_OWL_thm,DB.Thm)]

  local open Portable GrammarSpecials Parse
    fun UTOFF f = Feedback.trace("Parse.unicode_trace_off_complaints",0)f
  in
  val _ = mk_local_grms [("res_quanTheory.res_quan_grammars",
                          res_quanTheory.res_quan_grammars),
                         ("totoTheory.toto_grammars",
                          totoTheory.toto_grammars)]
  val _ = List.app (update_grms reveal) []
  val _ = update_grms temp_add_type "bt"
  val _ = update_grms temp_add_type "bt"






  val _ = update_grms
       (UTOFF temp_overload_on)
       ("nt", (Term.prim_mk_const { Name = "nt", Thy = "enumeral"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("nt", (Term.prim_mk_const { Name = "nt", Thy = "enumeral"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("node", (Term.prim_mk_const { Name = "node", Thy = "enumeral"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("node", (Term.prim_mk_const { Name = "node", Thy = "enumeral"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("bt_CASE", (Term.prim_mk_const { Name = "bt_CASE", Thy = "enumeral"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("bt_size", (Term.prim_mk_const { Name = "bt_size", Thy = "enumeral"}))
  val _ = update_grms temp_add_type "bl"
  val _ = update_grms temp_add_type "bl"








  val _ = update_grms
       (UTOFF temp_overload_on)
       ("nbl", (Term.prim_mk_const { Name = "nbl", Thy = "enumeral"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("nbl", (Term.prim_mk_const { Name = "nbl", Thy = "enumeral"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("zerbl", (Term.prim_mk_const { Name = "zerbl", Thy = "enumeral"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("zerbl", (Term.prim_mk_const { Name = "zerbl", Thy = "enumeral"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("onebl", (Term.prim_mk_const { Name = "onebl", Thy = "enumeral"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("onebl", (Term.prim_mk_const { Name = "onebl", Thy = "enumeral"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("bl_CASE", (Term.prim_mk_const { Name = "bl_CASE", Thy = "enumeral"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("bl_size", (Term.prim_mk_const { Name = "bl_size", Thy = "enumeral"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("BL_ACCUM", (Term.prim_mk_const { Name = "BL_ACCUM", Thy = "enumeral"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("BL_CONS", (Term.prim_mk_const { Name = "BL_CONS", Thy = "enumeral"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("BL_CONS", (Term.prim_mk_const { Name = "BL_CONS", Thy = "enumeral"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("list_to_bl", (Term.prim_mk_const { Name = "list_to_bl", Thy = "enumeral"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("bt_to_list", (Term.prim_mk_const { Name = "bt_to_list", Thy = "enumeral"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("bt_to_list_ac", (Term.prim_mk_const { Name = "bt_to_list_ac", Thy = "enumeral"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("bt_rev", (Term.prim_mk_const { Name = "bt_rev", Thy = "enumeral"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("K2", (Term.prim_mk_const { Name = "K2", Thy = "enumeral"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("K2", (Term.prim_mk_const { Name = "K2", Thy = "enumeral"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("bl_rev", (Term.prim_mk_const { Name = "bl_rev", Thy = "enumeral"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("bl_to_bt", (Term.prim_mk_const { Name = "bl_to_bt", Thy = "enumeral"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("bl_to_bt", (Term.prim_mk_const { Name = "bl_to_bt", Thy = "enumeral"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("bt_to_bl", (Term.prim_mk_const { Name = "bt_to_bl", Thy = "enumeral"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("bt_to_bl", (Term.prim_mk_const { Name = "bt_to_bl", Thy = "enumeral"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("list_to_bt", (Term.prim_mk_const { Name = "list_to_bt", Thy = "enumeral"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("list_to_bt", (Term.prim_mk_const { Name = "list_to_bt", Thy = "enumeral"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("OL", (Term.prim_mk_const { Name = "OL", Thy = "enumeral"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("smerge_tupled", (Term.prim_mk_const { Name = "smerge_tupled", Thy = "enumeral"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("smerge_tupled", (Term.prim_mk_const { Name = "smerge_tupled", Thy = "enumeral"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("smerge", (Term.prim_mk_const { Name = "smerge", Thy = "enumeral"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("smerge", (Term.prim_mk_const { Name = "smerge", Thy = "enumeral"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("OL_sublists_tupled", (Term.prim_mk_const { Name = "OL_sublists_tupled", Thy = "enumeral"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("OL_sublists_tupled", (Term.prim_mk_const { Name = "OL_sublists_tupled", Thy = "enumeral"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("OL_sublists", (Term.prim_mk_const { Name = "OL_sublists", Thy = "enumeral"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("OL_sublists", (Term.prim_mk_const { Name = "OL_sublists", Thy = "enumeral"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("lol_set", (Term.prim_mk_const { Name = "lol_set", Thy = "enumeral"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("lol_set", (Term.prim_mk_const { Name = "lol_set", Thy = "enumeral"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("incr_smerge_tupled", (Term.prim_mk_const { Name = "incr_smerge_tupled", Thy = "enumeral"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("incr_smerge_tupled", (Term.prim_mk_const { Name = "incr_smerge_tupled", Thy = "enumeral"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("incr_smerge", (Term.prim_mk_const { Name = "incr_smerge", Thy = "enumeral"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("incr_smerge", (Term.prim_mk_const { Name = "incr_smerge", Thy = "enumeral"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("smerge_out_tupled", (Term.prim_mk_const { Name = "smerge_out_tupled", Thy = "enumeral"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("smerge_out_tupled", (Term.prim_mk_const { Name = "smerge_out_tupled", Thy = "enumeral"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("smerge_out", (Term.prim_mk_const { Name = "smerge_out", Thy = "enumeral"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("smerge_out", (Term.prim_mk_const { Name = "smerge_out", Thy = "enumeral"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("incr_sbuild", (Term.prim_mk_const { Name = "incr_sbuild", Thy = "enumeral"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("incr_ssort", (Term.prim_mk_const { Name = "incr_ssort", Thy = "enumeral"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("incr_ssort", (Term.prim_mk_const { Name = "incr_ssort", Thy = "enumeral"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("ENUMERAL", (Term.prim_mk_const { Name = "ENUMERAL", Thy = "enumeral"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("bt_to_set_lb", (Term.prim_mk_const { Name = "bt_to_set_lb", Thy = "enumeral"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("bt_to_set_lb", (Term.prim_mk_const { Name = "bt_to_set_lb", Thy = "enumeral"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("bt_to_set_ub", (Term.prim_mk_const { Name = "bt_to_set_ub", Thy = "enumeral"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("bt_to_set_ub", (Term.prim_mk_const { Name = "bt_to_set_ub", Thy = "enumeral"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("bt_to_set_lb_ub", (Term.prim_mk_const { Name = "bt_to_set_lb_ub", Thy = "enumeral"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("bt_to_set_lb_ub", (Term.prim_mk_const { Name = "bt_to_set_lb_ub", Thy = "enumeral"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("bt_to_ol_lb_ub", (Term.prim_mk_const { Name = "bt_to_ol_lb_ub", Thy = "enumeral"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("bt_to_ol_lb", (Term.prim_mk_const { Name = "bt_to_ol_lb", Thy = "enumeral"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("bt_to_ol_ub", (Term.prim_mk_const { Name = "bt_to_ol_ub", Thy = "enumeral"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("bt_to_ol", (Term.prim_mk_const { Name = "bt_to_ol", Thy = "enumeral"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("bt_to_ol_lb_ub_ac", (Term.prim_mk_const { Name = "bt_to_ol_lb_ub_ac", Thy = "enumeral"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("bt_to_ol_lb_ac", (Term.prim_mk_const { Name = "bt_to_ol_lb_ac", Thy = "enumeral"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("bt_to_ol_ub_ac", (Term.prim_mk_const { Name = "bt_to_ol_ub_ac", Thy = "enumeral"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("bt_to_ol_ac", (Term.prim_mk_const { Name = "bt_to_ol_ac", Thy = "enumeral"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("OWL", (Term.prim_mk_const { Name = "OWL", Thy = "enumeral"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("OWL", (Term.prim_mk_const { Name = "OWL", Thy = "enumeral"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("OU", (Term.prim_mk_const { Name = "OU", Thy = "enumeral"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("OU", (Term.prim_mk_const { Name = "OU", Thy = "enumeral"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("UO", (Term.prim_mk_const { Name = "UO", Thy = "enumeral"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("UO", (Term.prim_mk_const { Name = "UO", Thy = "enumeral"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("LESS_ALL", (Term.prim_mk_const { Name = "LESS_ALL", Thy = "enumeral"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("LESS_ALL", (Term.prim_mk_const { Name = "LESS_ALL", Thy = "enumeral"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("bl_to_set", (Term.prim_mk_const { Name = "bl_to_set", Thy = "enumeral"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("sinter_tupled", (Term.prim_mk_const { Name = "sinter_tupled", Thy = "enumeral"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("sinter_tupled", (Term.prim_mk_const { Name = "sinter_tupled", Thy = "enumeral"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("sinter", (Term.prim_mk_const { Name = "sinter", Thy = "enumeral"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("sinter", (Term.prim_mk_const { Name = "sinter", Thy = "enumeral"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("sdiff_tupled", (Term.prim_mk_const { Name = "sdiff_tupled", Thy = "enumeral"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("sdiff_tupled", (Term.prim_mk_const { Name = "sdiff_tupled", Thy = "enumeral"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("sdiff", (Term.prim_mk_const { Name = "sdiff", Thy = "enumeral"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("sdiff", (Term.prim_mk_const { Name = "sdiff", Thy = "enumeral"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("OL_bt_lb_ub", (Term.prim_mk_const { Name = "OL_bt_lb_ub", Thy = "enumeral"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("OL_bt_lb", (Term.prim_mk_const { Name = "OL_bt_lb", Thy = "enumeral"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("OL_bt_ub", (Term.prim_mk_const { Name = "OL_bt_ub", Thy = "enumeral"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("OL_bt", (Term.prim_mk_const { Name = "OL_bt", Thy = "enumeral"}))
  val enumeral_grammars = Parse.current_lgrms()
  end


  val _ =
    TypeBase.write [
      let
        open TypeBasePure
        val tyinfo0 = mk_datatype_info
          {ax=ORIG bt_Axiom,
           case_def=bt_case_def,
           case_cong=bt_case_cong,
           induction=ORIG bt_induction,
           nchotomy=bt_nchotomy,
           size=SOME(Parse.Term`(enumeral$bt_size) :('a -> (num$num)) -> ('a enumeral$bt) -> (num$num)`,
                     ORIG bt_size_def),
           encode = NONE,
           lift=NONE,
           one_one=SOME bt_11,
           distinct=SOME bt_distinct,
           fields=let fun T t s A = mk_thy_type{Thy=t,Tyop=s,Args=A}
    val U = mk_vartype
in
[] end,
           accessors=[],
           updates=[],
           recognizers=[],
           destructors=[]}
        val tyinfo0 = tyinfo0
        val () = computeLib.write_datatype_info tyinfo0
      in
        tyinfo0
      end
    ];


  val _ =
    TypeBase.write [
      let
        open TypeBasePure
        val tyinfo0 = mk_datatype_info
          {ax=ORIG bl_Axiom,
           case_def=bl_case_def,
           case_cong=bl_case_cong,
           induction=ORIG bl_induction,
           nchotomy=bl_nchotomy,
           size=SOME(Parse.Term`(enumeral$bl_size) :('a -> (num$num)) -> ('a enumeral$bl) -> (num$num)`,
                     ORIG bl_size_def),
           encode = NONE,
           lift=NONE,
           one_one=SOME bl_11,
           distinct=SOME bl_distinct,
           fields=let fun T t s A = mk_thy_type{Thy=t,Tyop=s,Args=A}
    val U = mk_vartype
in
[] end,
           accessors=[],
           updates=[],
           recognizers=[],
           destructors=[]}
        val tyinfo0 = tyinfo0
        val () = computeLib.write_datatype_info tyinfo0
      in
        tyinfo0
      end
    ];
  val _ = Theory.LoadableThyData.temp_encoded_update {
    thy = "enumeral",
    thydataty = "compute",
    data =
        "enumeral.BL_ACCUM enumeral.BL_CONS enumeral.OL_bt enumeral.OL_bt_ub enumeral.OL_bt_lb enumeral.OL_bt_lb_ub enumeral.sdiff enumeral.sinter enumeral.bl_to_set enumeral.LESS_ALL enumeral.UO enumeral.OU enumeral.OWL enumeral.bt_to_ol_ac enumeral.bt_to_ol_ub_ac enumeral.bt_to_ol_lb_ac enumeral.bt_to_ol_lb_ub_ac enumeral.bt_to_ol enumeral.bt_to_ol_ub enumeral.bt_to_ol_lb enumeral.bt_to_ol_lb_ub enumeral.bt_to_set_lb_ub enumeral.bt_to_set_ub enumeral.bt_to_set_lb enumeral.bt_to_set enumeral.incr_ssort enumeral.incr_sbuild enumeral.smerge_out enumeral.incr_smerge enumeral.lol_set enumeral.OL_sublists enumeral.smerge enumeral.OL enumeral.list_to_bt enumeral.bt_to_bl enumeral.bl_to_bt enumeral.bl_rev enumeral.K2 enumeral.bt_rev enumeral.bt_to_list_ac enumeral.bt_to_list enumeral.list_to_bl"
  }

val _ = if !Globals.print_thy_loads then print "done\n" else ()
val _ = Theory.load_complete "enumeral"
end
