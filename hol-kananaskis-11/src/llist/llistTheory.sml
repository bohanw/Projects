structure llistTheory :> llistTheory =
struct
  val _ = if !Globals.print_thy_loads then print "Loading llistTheory ... " else ()
  open Type Term Thm
  infixr -->

  fun C s t ty = mk_thy_const{Name=s,Thy=t,Ty=ty}
  fun T s t A = mk_thy_type{Tyop=s, Thy=t,Args=A}
  fun V s q = mk_var(s,q)
  val U     = mk_vartype
  (*  Parents *)
  local open quantHeuristicsTheory rich_listTheory set_relationTheory
  in end;
  val _ = Theory.link_parents
          ("llist",
          Arbnum.fromString "1488588204",
          Arbnum.fromString "981600")
          [("set_relation",
           Arbnum.fromString "1488586303",
           Arbnum.fromString "649331"),
           ("quantHeuristics",
           Arbnum.fromString "1488586638",
           Arbnum.fromString "944227"),
           ("rich_list",
           Arbnum.fromString "1488586542",
           Arbnum.fromString "856749")];
  val _ = Theory.incorporate_types "llist" [("llist", 1)];

  val idvector = 
    let fun ID(thy,oth) = {Thy = thy, Other = oth}
    in Vector.fromList
  [ID("min", "fun"), ID("option", "option"), ID("list", "list"),
   ID("llist", "llist"), ID("min", "bool"), ID("num", "num"),
   ID("pair", "prod"), ID("bool", "!"), ID("arithmetic", "+"),
   ID("pair", ","), ID("arithmetic", "-"), ID("bool", "/\\"),
   ID("num", "0"), ID("prim_rec", "<"), ID("arithmetic", "<="),
   ID("min", "="), ID("min", "==>"), ID("bool", "?"), ID("bool", "?!"),
   ID("min", "@"), ID("list", "APPEND"), ID("arithmetic", "BIT1"),
   ID("pred_set", "CHOICE"), ID("bool", "COND"), ID("list", "CONS"),
   ID("pred_set", "DIFF"), ID("list", "EL"), ID("pred_set", "EMPTY"),
   ID("bool", "F"), ID("pair", "FST"), ID("pred_set", "GSPEC"),
   ID("option", "IS_SOME"), ID("llist", "LAPPEND"), ID("llist", "LCONS"),
   ID("llist", "LDROP"), ID("list", "LENGTH"), ID("bool", "LET"),
   ID("llist", "LFILTER"), ID("llist", "LFINITE"), ID("llist", "LFLATTEN"),
   ID("llist", "LHD"), ID("llist", "LLENGTH"), ID("llist", "LMAP"),
   ID("llist", "LNIL"), ID("llist", "LNTH"), ID("llist", "LPREFIX"),
   ID("llist", "LTAKE"), ID("llist", "LTL"), ID("llist", "LUNFOLD"),
   ID("llist", "LUNZIP"), ID("llist", "LZIP"), ID("list", "NIL"),
   ID("option", "NONE"), ID("arithmetic", "NUMERAL"),
   ID("option", "OPTION_JOIN"), ID("option", "OPTION_MAP"),
   ID("pair", "SND"), ID("option", "SOME"), ID("pred_set", "SUBSET"),
   ID("num", "SUC"), ID("bool", "T"), ID("list", "TAKE"),
   ID("option", "THE"), ID("bool", "TYPE_DEFINITION"),
   ID("pair", "UNCURRY"), ID("pred_set", "UNION"),
   ID("arithmetic", "ZERO"), ID("bool", "\\/"),
   ID("set_relation", "domain"), ID("llist", "every"),
   ID("llist", "exists"), ID("set_relation", "finite_prefixes"),
   ID("llist", "fromList"), ID("list", "isPREFIX"),
   ID("set_relation", "linear_order"),
   ID("llist", "linear_order_to_list_f"), ID("llist", "llength_rel"),
   ID("llist", "llist_abs"), ID("llist", "llist_rep"),
   ID("llist", "lrep_ok"), ID("set_relation", "minimal_elements"),
   ID("combin", "o"), ID("option", "option_CASE"), ID("pair", "pair_CASE"),
   ID("set_relation", "range"), ID("set_relation", "rrestrict"),
   ID("llist", "toList"), ID("bool", "~")]
  end;
  local open SharingTables
  in
  val tyvector = build_type_vector idvector
  [TYV "'a", TYOP [2, 0], TYOP [1, 1], TYOP [3, 0], TYOP [0, 3, 2],
   TYOP [4], TYOP [1, 0], TYOP [5], TYOP [0, 7, 6], TYOP [0, 8, 5],
   TYOP [0, 3, 8], TYOP [0, 8, 3], TYOP [0, 7, 5], TYOP [0, 3, 12],
   TYOP [6, 0, 0], TYOP [0, 14, 5], TYOP [6, 15, 0], TYOP [1, 16],
   TYOP [0, 15, 17], TYOP [0, 1, 3], TYOP [0, 3, 5], TYOP [0, 0, 5],
   TYOP [0, 21, 20], TYV "'b", TYOP [6, 0, 23], TYOP [3, 24], TYOP [3, 23],
   TYOP [6, 3, 26], TYOP [0, 27, 25], TYOP [0, 25, 27], TYOP [0, 0, 26],
   TYOP [1, 24], TYOP [0, 0, 31], TYOP [0, 32, 30], TYOP [1, 3],
   TYOP [0, 3, 34], TYOP [0, 7, 4], TYOP [0, 3, 20], TYOP [0, 3, 6],
   TYOP [0, 7, 38], TYOP [0, 3, 26], TYOP [0, 0, 23], TYOP [0, 41, 40],
   TYOP [1, 7], TYOP [0, 3, 43], TYOP [3, 3], TYOP [0, 45, 3],
   TYOP [0, 3, 3], TYOP [0, 21, 47], TYOP [0, 7, 35], TYOP [0, 0, 47],
   TYOP [0, 3, 47], TYOP [0, 23, 5], TYOP [0, 26, 5], TYOP [0, 0, 53],
   TYOP [6, 23, 0], TYOP [1, 55], TYOP [0, 23, 56], TYV "'c",
   TYOP [0, 58, 0], TYOP [6, 58, 0], TYOP [1, 60], TYOP [0, 58, 61],
   TYV "'d", TYOP [3, 58], TYOP [3, 63], TYOP [3, 64], TYOP [3, 65],
   TYOP [0, 21, 5], TYOP [0, 52, 5], TYOP [0, 58, 5], TYOP [0, 70, 5],
   TYOP [0, 63, 5], TYOP [0, 72, 5], TYOP [0, 41, 5], TYOP [0, 74, 5],
   TYOP [0, 68, 5], TYOP [0, 54, 5], TYOP [0, 77, 5], TYOP [0, 30, 5],
   TYOP [0, 79, 5], TYOP [0, 32, 5], TYOP [0, 81, 5], TYOP [0, 69, 5],
   TYOP [0, 59, 5], TYOP [0, 84, 5], TYOP [0, 62, 5], TYOP [0, 86, 5],
   TYOP [0, 9, 5], TYOP [0, 88, 5], TYOP [0, 20, 5], TYOP [0, 90, 5],
   TYOP [0, 13, 5], TYOP [0, 92, 5], TYOP [0, 15, 5], TYOP [0, 94, 5],
   TYOP [0, 1, 5], TYOP [0, 96, 5], TYOP [0, 53, 5], TYOP [0, 64, 5],
   TYOP [0, 99, 5], TYOP [0, 65, 5], TYOP [0, 101, 5], TYOP [0, 45, 5],
   TYOP [0, 103, 5], TYOP [0, 67, 5], TYOP [0, 105, 5], TYOP [0, 25, 5],
   TYOP [0, 107, 5], TYOP [0, 12, 5], TYOP [0, 7, 7], TYOP [0, 7, 110],
   TYOP [0, 0, 14], TYOP [0, 0, 112], TYOP [0, 23, 24], TYOP [0, 0, 114],
   TYOP [6, 0, 5], TYOP [0, 5, 116], TYOP [0, 0, 117], TYOP [6, 58, 23],
   TYOP [0, 23, 119], TYOP [0, 58, 120], TYOP [0, 0, 16],
   TYOP [0, 15, 122], TYOP [0, 26, 27], TYOP [0, 3, 124], TYOP [6, 14, 5],
   TYOP [0, 5, 126], TYOP [0, 14, 127], TYOP [0, 5, 5], TYOP [0, 5, 129],
   TYOP [0, 7, 12], TYOP [0, 0, 21], TYOP [0, 21, 68], TYOP [0, 22, 5],
   TYOP [0, 22, 134], TYOP [0, 9, 88], TYOP [0, 20, 90], TYOP [0, 13, 92],
   TYOP [0, 35, 5], TYOP [0, 35, 139], TYOP [0, 8, 9], TYOP [0, 1, 96],
   TYOP [0, 26, 53], TYOP [0, 64, 99], TYOP [0, 65, 101],
   TYOP [0, 25, 107], TYOP [0, 6, 5], TYOP [0, 6, 147], TYOP [1, 23],
   TYOP [0, 149, 5], TYOP [0, 149, 150], TYOP [1, 58], TYOP [0, 152, 5],
   TYOP [0, 152, 153], TYOP [0, 2, 5], TYOP [0, 2, 155], TYOP [2, 23],
   TYOP [1, 157], TYOP [0, 158, 5], TYOP [0, 158, 159], TYOP [2, 58],
   TYOP [1, 161], TYOP [0, 162, 5], TYOP [0, 162, 163], TYOP [0, 34, 5],
   TYOP [0, 34, 165], TYOP [1, 26], TYOP [0, 167, 5], TYOP [0, 167, 168],
   TYOP [1, 64], TYOP [0, 170, 5], TYOP [0, 170, 171], TYOP [0, 43, 5],
   TYOP [0, 43, 173], TYOP [0, 31, 5], TYOP [0, 31, 175], TYOP [0, 17, 5],
   TYOP [0, 17, 177], TYOP [0, 27, 5], TYOP [0, 27, 179], TYOP [0, 37, 5],
   TYOP [0, 181, 5], TYOP [0, 10, 5], TYOP [0, 183, 5], TYOP [0, 12, 7],
   TYOP [0, 1, 1], TYOP [0, 1, 186], TYOP [0, 21, 0], TYOP [0, 5, 51],
   TYOP [0, 26, 26], TYOP [0, 26, 190], TYOP [0, 5, 191], TYOP [0, 6, 6],
   TYOP [0, 6, 193], TYOP [0, 5, 194], TYOP [0, 2, 2], TYOP [0, 2, 196],
   TYOP [0, 5, 197], TYOP [0, 43, 43], TYOP [0, 43, 199], TYOP [0, 5, 200],
   TYOP [0, 17, 17], TYOP [0, 17, 202], TYOP [0, 5, 203], TYOP [0, 0, 186],
   TYOP [0, 157, 157], TYOP [0, 23, 206], TYOP [0, 161, 161],
   TYOP [0, 58, 208], TYOP [0, 21, 21], TYOP [0, 21, 210], TYOP [0, 1, 0],
   TYOP [0, 7, 212], TYOP [0, 24, 0], TYOP [0, 0, 116], TYOP [0, 215, 21],
   TYOP [0, 14, 126], TYOP [0, 217, 15], TYOP [0, 23, 190],
   TYOP [0, 64, 64], TYOP [0, 58, 220], TYOP [0, 65, 65],
   TYOP [0, 63, 222], TYOP [0, 45, 45], TYOP [0, 3, 224], TYOP [0, 66, 66],
   TYOP [0, 64, 226], TYOP [0, 67, 67], TYOP [0, 65, 228],
   TYOP [0, 25, 25], TYOP [0, 24, 230], TYOP [0, 26, 167],
   TYOP [0, 7, 232], TYOP [0, 64, 170], TYOP [0, 7, 234], TYOP [0, 1, 7],
   TYOP [0, 21, 17], TYOP [0, 237, 237], TYOP [0, 27, 27],
   TYOP [0, 239, 239], TYOP [0, 52, 190], TYOP [0, 66, 64],
   TYOP [0, 67, 65], TYOP [0, 26, 149], TYOP [0, 45, 34], TYOP [0, 26, 43],
   TYOP [0, 64, 3], TYOP [0, 59, 247], TYOP [0, 64, 26], TYOP [0, 58, 23],
   TYOP [0, 250, 249], TYOP [0, 7, 244], TYOP [0, 64, 152],
   TYOP [0, 7, 253], TYOP [0, 26, 158], TYOP [0, 7, 255],
   TYOP [0, 64, 162], TYOP [0, 7, 257], TYOP [1, 45], TYOP [0, 45, 259],
   TYOP [0, 23, 3], TYOP [0, 57, 261], TYOP [0, 58, 3], TYOP [0, 62, 263],
   TYOP [0, 58, 26], TYOP [1, 119], TYOP [0, 58, 266], TYOP [0, 267, 265],
   TYOP [1, 6], TYOP [0, 269, 6], TYOP [1, 34], TYOP [0, 271, 34],
   TYOP [0, 186, 196], TYOP [0, 158, 158], TYOP [0, 206, 274],
   TYOP [0, 162, 162], TYOP [0, 208, 276], TYOP [0, 34, 269],
   TYOP [0, 38, 278], TYOP [0, 34, 271], TYOP [0, 35, 280],
   TYOP [0, 110, 199], TYOP [0, 31, 149], TYOP [0, 24, 23],
   TYOP [0, 284, 283], TYOP [0, 31, 167], TYOP [0, 24, 26],
   TYOP [0, 287, 286], TYOP [0, 61, 266], TYOP [0, 60, 119],
   TYOP [0, 290, 289], TYOP [0, 0, 6], TYOP [0, 23, 149], TYOP [0, 1, 2],
   TYOP [0, 7, 43], TYOP [0, 24, 31], TYOP [0, 16, 17], TYOP [0, 15, 94],
   TYOP [0, 7, 186], TYOP [0, 6, 0], TYOP [0, 2, 1], TYOP [0, 34, 3],
   TYOP [0, 259, 45], TYOP [0, 43, 7], TYOP [0, 9, 183], TYOP [0, 0, 126],
   TYOP [0, 0, 306], TYOP [0, 307, 217], TYOP [0, 0, 119],
   TYOP [0, 58, 309], TYOP [0, 310, 290], TYOP [0, 125, 239],
   TYOP [0, 15, 21], TYOP [0, 20, 103], TYOP [0, 15, 68],
   TYOP [0, 21, 313], TYOP [0, 59, 250], TYOP [0, 41, 317],
   TYOP [0, 214, 287], TYOP [0, 30, 319], TYOP [0, 129, 210],
   TYOP [0, 0, 2], TYOP [0, 322, 2], TYOP [0, 2, 323], TYOP [0, 6, 324],
   TYOP [0, 0, 34], TYOP [0, 326, 34], TYOP [0, 34, 327], TYOP [0, 6, 328],
   TYOP [0, 5, 97], TYOP [0, 2, 330], TYOP [0, 294, 2], TYOP [0, 2, 332],
   TYOP [0, 2, 333], TYOP [0, 35, 34], TYOP [0, 34, 335],
   TYOP [0, 34, 336], TYOP [0, 8, 6], TYOP [0, 6, 338], TYOP [0, 43, 339],
   TYOP [0, 287, 26], TYOP [0, 26, 341], TYOP [0, 31, 342],
   TYOP [0, 55, 5], TYOP [0, 344, 5], TYOP [0, 5, 345], TYOP [0, 56, 346],
   TYOP [0, 23, 26], TYOP [0, 0, 348], TYOP [0, 349, 26],
   TYOP [0, 24, 350], TYOP [0, 23, 21], TYOP [0, 352, 5],
   TYOP [0, 55, 353], TYOP [0, 21, 15], TYOP [0, 15, 355]]
  end
  val _ = Theory.incorporate_consts "llist" tyvector
     [("toList", 4), ("lrep_ok", 9), ("llist_rep", 10), ("llist_abs", 11),
      ("llength_rel", 13), ("linear_order_to_list_f", 18),
      ("fromList", 19), ("exists", 22), ("every", 22), ("LZIP", 28),
      ("LUNZIP", 29), ("LUNFOLD", 33), ("LTL", 35), ("LTAKE", 36),
      ("LPREFIX", 37), ("LNTH", 39), ("LNIL", 3), ("LMAP", 42),
      ("LLENGTH", 44), ("LHD", 38), ("LFLATTEN", 46), ("LFINITE", 20),
      ("LFILTER", 48), ("LDROP", 49), ("LCONS", 50), ("LAPPEND", 51)];

  local open SharingTables
  in
  val tmvector = build_term_vector idvector tyvector
  [TMV("LFINITE'", 20), TMV("P", 21), TMV("P", 52), TMV("P", 20),
   TMV("Q", 21), TMV("Q", 20), TMV("R", 54), TMV("R", 37), TMV("X", 21),
   TMV("a", 0), TMV("a", 3), TMV("a0", 8), TMV("a0", 3), TMV("a1", 7),
   TMV("b", 23), TMV("e", 0), TMV("exists'", 20), TMV("f", 41),
   TMV("f", 30), TMV("f", 32), TMV("f", 57), TMV("g", 30), TMV("g", 59),
   TMV("g", 62), TMV("h", 0), TMV("h", 23), TMV("h", 58), TMV("h", 63),
   TMV("h", 3), TMV("h1", 0), TMV("h2", 0), TMV("h2", 23), TMV("hd", 0),
   TMV("i", 7), TMV("j", 7), TMV("k1", 7), TMV("k2", 7), TMV("l", 1),
   TMV("l", 3), TMV("l", 26), TMV("l'", 1), TMV("l1", 1), TMV("l1", 3),
   TMV("l2", 1), TMV("l2", 3), TMV("l2", 26), TMV("l3", 3), TMV("ll", 3),
   TMV("ll", 26), TMV("ll", 64), TMV("ll", 45), TMV("ll", 25),
   TMV("ll'", 26), TMV("ll1", 3), TMV("ll2", 3), TMV("ll2", 26),
   TMV("ll3", 3), TMV("ll4", 3), TMV("llength_rel'", 13), TMV("lo", 15),
   TMV("lrep_ok'", 9), TMV("m", 7), TMV("min", 21), TMV("n", 23),
   TMV("n", 7), TMV("r", 8), TMV("rep", 10), TMV("s", 0), TMV("s", 58),
   TMV("s'", 0), TMV("t", 8), TMV("t", 1), TMV("t", 3), TMV("t", 26),
   TMV("t", 64), TMV("t", 65), TMV("t", 45), TMV("t", 66), TMV("t", 25),
   TMV("t1", 3), TMV("t2", 3), TMV("t2", 26), TMV("tl", 23), TMV("tl", 1),
   TMV("tl", 67), TMV("v", 0), TMV("v", 24), TMV("v", 55), TMV("v1", 0),
   TMV("v2", 23), TMV("x", 0), TMV("x", 23), TMV("x", 58), TMV("x", 1),
   TMV("x", 3), TMV("xs", 1), TMV("y", 0), TMV("y", 23), TMV("y", 1),
   TMV("y", 3), TMV("ys", 1), TMC(7, 68), TMC(7, 69), TMC(7, 71),
   TMC(7, 73), TMC(7, 75), TMC(7, 76), TMC(7, 78), TMC(7, 80), TMC(7, 82),
   TMC(7, 83), TMC(7, 85), TMC(7, 87), TMC(7, 89), TMC(7, 91), TMC(7, 93),
   TMC(7, 88), TMC(7, 95), TMC(7, 97), TMC(7, 90), TMC(7, 98), TMC(7, 100),
   TMC(7, 102), TMC(7, 104), TMC(7, 106), TMC(7, 108), TMC(7, 109),
   TMC(8, 111), TMC(9, 113), TMC(9, 115), TMC(9, 118), TMC(9, 121),
   TMC(9, 123), TMC(9, 125), TMC(9, 128), TMC(10, 111), TMC(11, 130),
   TMC(12, 7), TMC(13, 131), TMC(14, 131), TMC(15, 132), TMC(15, 130),
   TMC(15, 133), TMC(15, 135), TMC(15, 136), TMC(15, 137), TMC(15, 138),
   TMC(15, 140), TMC(15, 141), TMC(15, 142), TMC(15, 37), TMC(15, 143),
   TMC(15, 144), TMC(15, 145), TMC(15, 146), TMC(15, 131), TMC(15, 148),
   TMC(15, 151), TMC(15, 154), TMC(15, 156), TMC(15, 160), TMC(15, 164),
   TMC(15, 166), TMC(15, 169), TMC(15, 172), TMC(15, 174), TMC(15, 176),
   TMC(15, 178), TMC(15, 180), TMC(16, 130), TMC(17, 68), TMC(17, 69),
   TMC(17, 80), TMC(17, 89), TMC(17, 182), TMC(17, 184), TMC(17, 88),
   TMC(17, 97), TMC(17, 90), TMC(17, 98), TMC(17, 109), TMC(18, 80),
   TMC(19, 185), TMC(20, 187), TMC(21, 110), TMC(22, 188), TMC(23, 189),
   TMC(23, 192), TMC(23, 195), TMC(23, 198), TMC(23, 201), TMC(23, 204),
   TMC(24, 205), TMC(24, 207), TMC(24, 209), TMC(25, 211), TMC(26, 213),
   TMC(27, 21), TMC(28, 5), TMC(29, 214), TMC(30, 216), TMC(30, 218),
   TMC(31, 155), TMC(32, 51), TMC(32, 191), TMC(33, 50), TMC(33, 219),
   TMC(33, 221), TMC(33, 223), TMC(33, 225), TMC(33, 227), TMC(33, 229),
   TMC(33, 231), TMC(34, 49), TMC(34, 233), TMC(34, 235), TMC(35, 236),
   TMC(36, 238), TMC(36, 240), TMC(37, 48), TMC(37, 241), TMC(38, 20),
   TMC(38, 53), TMC(39, 46), TMC(39, 242), TMC(39, 243), TMC(40, 38),
   TMC(40, 244), TMC(40, 245), TMC(41, 44), TMC(41, 246), TMC(42, 42),
   TMC(42, 248), TMC(42, 251), TMC(43, 3), TMC(43, 26), TMC(43, 64),
   TMC(43, 45), TMC(43, 25), TMC(44, 39), TMC(44, 252), TMC(44, 254),
   TMC(45, 37), TMC(45, 143), TMC(46, 36), TMC(46, 256), TMC(46, 258),
   TMC(47, 35), TMC(47, 232), TMC(47, 260), TMC(48, 33), TMC(48, 262),
   TMC(48, 264), TMC(48, 268), TMC(49, 29), TMC(50, 28), TMC(51, 1),
   TMC(52, 6), TMC(52, 2), TMC(52, 158), TMC(52, 34), TMC(52, 167),
   TMC(52, 43), TMC(52, 31), TMC(52, 17), TMC(53, 110), TMC(54, 270),
   TMC(54, 272), TMC(55, 273), TMC(55, 275), TMC(55, 277), TMC(55, 279),
   TMC(55, 281), TMC(55, 282), TMC(55, 285), TMC(55, 288), TMC(55, 291),
   TMC(56, 284), TMC(57, 292), TMC(57, 293), TMC(57, 294), TMC(57, 35),
   TMC(57, 232), TMC(57, 295), TMC(57, 296), TMC(57, 297), TMC(58, 298),
   TMC(59, 110), TMC(60, 5), TMC(61, 299), TMC(62, 300), TMC(62, 301),
   TMC(62, 302), TMC(62, 303), TMC(62, 304), TMC(63, 305), TMC(64, 308),
   TMC(64, 311), TMC(64, 312), TMC(65, 211), TMC(66, 7), TMC(67, 130),
   TMC(68, 313), TMC(69, 22), TMC(69, 314), TMC(70, 22), TMC(71, 315),
   TMC(72, 19), TMC(73, 142), TMC(74, 315), TMC(75, 18), TMC(76, 13),
   TMC(77, 11), TMC(78, 10), TMC(79, 9), TMC(80, 316), TMC(81, 318),
   TMC(81, 320), TMC(81, 321), TMC(82, 325), TMC(82, 329), TMC(82, 331),
   TMC(82, 334), TMC(82, 337), TMC(82, 340), TMC(82, 343), TMC(82, 347),
   TMC(83, 351), TMC(83, 354), TMC(84, 313), TMC(85, 356), TMC(86, 4),
   TMC(86, 255), TMC(87, 129)]
  end
  local
  val DT = Thm.disk_thm val read = Term.read_raw tmvector
  in
  fun op lrep_ok_def x = x
    val op lrep_ok_def =
    DT(((("llist",0),[]),[]),
       [read"%144%314@%11%173%60%136$0$1@@%116%11%169$1$0@@%301%148$0@%64%257|@@%170%24%176%70%136%148$2@%64%188%155$0@%137@@%278$2@@$1%135$0@%265%184%300@@@@@|@@$3$0@@|@|@@@|@@|@|@"])
  fun op llist_TY_DEF x = x
    val op llist_TY_DEF =
    DT(((("llist",4),
        [("bool",[14,25,26,53,132,133,138]),("llist",[0])]),["DISK_THM"]),
       [read"%175%66%295%314@$0@|@"])
  fun op llist_absrep x = x
    val op llist_absrep =
    DT(((("llist",5),[("bool",[117]),("llist",[4])]),["DISK_THM"]),
       [read"%136%119%10%150%312%313$0@@@$0@|@@%116%65%141%314$0@@%148%313%312$0@@@$0@@|@@"])
  fun op LNIL x = x
    val op LNIL =
    DT(((("llist",6),[]),[]), [read"%150%234@%312%64%257|@@"])
  fun op LCONS x = x
    val op LCONS =
    DT(((("llist",7),[]),[]),
       [read"%101%24%119%72%150%205$1@$0@@%312%64%188%155$0@%137@@%278$2@@%313$1@%135$0@%265%184%300@@@@@|@@|@|@"])
  fun op LHD x = x
    val op LHD =
    DT(((("llist",9),[]),[]), [read"%119%47%156%226$0@@%313$0@%137@@|@"])
  fun op LTL x = x
    val op LTL =
    DT(((("llist",10),[]),[]),
       [read"%119%47%162%247$0@@%320%226$0@@%260@%85%281%312%64%313$2@%127$0@%265%184%300@@@@|@@|@@|@"])
  fun op LNTH x = x
    val op LNTH =
    DT(((("llist",22),[("prim_rec",[38])]),["DISK_THM"]),
       [read"%136%119%47%156%239%137@$0@@%226$0@@|@@%126%64%119%47%156%239%287$1@@$0@@%266%271%239$1@@%247$0@@@@|@|@@"])
  fun op LUNFOLD x = x
    val op LUNFOLD =
    DT(((("llist",28),
        [("bool",[2,14,15,25,26,36,53,54,56,63]),("combin",[3,5,19,20]),
         ("llist",[26]),("sat",[1,3,7,17,18])]),["DISK_THM"]),
       [read"%109%19%101%90%151%250$1@$0@@%325$1$0@@%235@%86%327$0@%88%89%206$0@%250$4@$1@@||@|@@|@|@"])
  fun op LTAKE x = x
    val op LTAKE =
    DT(((("llist",33),[("prim_rec",[38])]),["DISK_THM"]),
       [read"%136%119%47%159%244%137@$0@@%280%256@@|@@%126%64%119%47%159%244%287$1@@$0@@%319%226$0@@%258@%32%322%244$2@%292%247$1@@@@%258@%83%280%192$1@$0@@|@|@@|@|@@"])
  fun op LMAP x = x
    val op LMAP =
    DT(((("llist",43),
        [("bool",[2,15,25,26,27,51,56,58,105,129,147]),
         ("llist",[15,16,17,18,26]),("option",[7,16]),
         ("pair",[49])]),["DISK_THM"]),
       [read"%136%105%17%151%231$0@%234@@%235@|@@%105%17%101%24%119%72%151%231$2@%205$1@$0@@@%206$2$1@@%231$2@$0@@@|@|@|@@"])
  fun op LAPPEND x = x
    val op LAPPEND =
    DT(((("llist",44),
        [("bool",[2,25,26,27,51,52,56,58,63,64,101,105,124,129,145,147]),
         ("combin",[8]),("llist",[14,15,16,17,19,21,25,30]),
         ("option",[10,13,16]),("pair",[8,9,16])]),["DISK_THM"]),
       [read"%136%119%94%150%203%234@$0@@$0@|@@%101%24%119%72%119%94%150%203%205$2@$1@@$0@@%205$2@%203$1@$0@@@|@|@|@@"])
  fun op LFINITE_def x = x
    val op LFINITE_def =
    DT(((("llist",52),[]),[]),
       [read"%145%221@%12%114%0%169%119%12%169%301%150$0@%234@@%170%24%178%72%136%150$2@%205$1@$0@@@$3$0@@|@|@@@$1$0@@|@@$0$1@@|@|@"])
  fun op llength_rel_def x = x
    val op llength_rel_def =
    DT(((("llist",59),[]),[]),
       [read"%146%311@%12%13%115%58%169%119%12%126%13%169%301%136%150$1@%234@@%155$0@%137@@@%170%24%180%64%178%72%136%150$4@%205$2@$0@@@%136%155$3@%287$1@@@$5$0@$1@@@|@|@|@@@$2$1@$0@@|@|@@$0$2@$1@@|@||@"])
  fun op LLENGTH x = x
    val op LLENGTH =
    DT(((("llist",64),[]),[]),
       [read"%119%47%165%229$0@@%190%221$0@@%283%182%64%311$1@$0@|@@@%262@@|@"])
  fun op toList x = x
    val op toList =
    DT(((("llist",77),[]),[]),
       [read"%119%47%159%331$0@@%189%221$0@@%244%294%229$0@@@$0@@%258@@|@"])
  fun op fromList x = x
    val op fromList =
    DT(((("llist",79),[("list",[13])]),["DISK_THM"]),
       [read"%136%150%307%256@@%234@@%101%24%118%71%150%307%192$1@$0@@@%205$1@%307$0@@@|@|@@"])
  fun op LDROP x = x
    val op LDROP =
    DT(((("llist",88),[("prim_rec",[38])]),["DISK_THM"]),
       [read"%136%119%47%162%213%137@$0@@%281$0@@|@@%126%64%119%47%162%213%287$1@@$0@@%267%272%213$1@@%247$0@@@@|@|@@"])
  fun op exists_def x = x
    val op exists_def =
    DT(((("llist",99),[]),[]),
       [read"%143%305@%1%12%114%16%169%119%12%169%301%170%24%178%72%136%150$2@%205$1@$0@@@$5$1@@|@|@@%170%24%178%72%136%150$2@%205$1@$0@@@$3$0@@|@|@@@$1$0@@|@@$0$1@@|@||@"])
  fun op every_def x = x
    val op every_def =
    DT(((("llist",109),[]),[]),
       [read"%106%1%119%47%141%303$1@$0@@%333%305%318%333@$1@@$0@@@|@|@"])
  fun op LFILTER x = x
    val op LFILTER =
    DT(((("llist",115),
        [("arithmetic",[24,25,27,28,37,46,59,71,93,173,177,180]),
         ("bool",
         [2,15,25,26,27,30,36,47,48,51,52,53,54,55,56,58,60,63,64,72,74,75,
          83,84,96,99,101,104,105,124,129,143,147]),
         ("combin",[8,11,15,16,17,33,34,35]),
         ("llist",[14,15,16,18,23,26,89,104,105]),("marker",[6,9]),
         ("numeral",[3,5,8]),("option",[7,10,16]),("pair",[49]),
         ("prim_rec",[1]),
         ("sat",[1,3,5,6,7,11,12,13,14,15,17,18,19,20,23]),
         ("while",[9])]),["DISK_THM"]),
       [read"%106%1%119%47%150%219$1@$0@@%186%333%305$1@$0@@@%234@%186$1%290%226$0@@@@%205%290%226$0@@@%219$1@%292%247$0@@@@@%219$1@%292%247$0@@@@@@|@|@"])
  fun op LFLATTEN x = x
    val op LFLATTEN =
    DT(((("llist",120),
        [("arithmetic",[24,25,27,28,37,46,59,71,93,173,177,180]),
         ("bool",
         [2,14,15,25,26,27,30,32,36,37,47,48,50,51,52,53,54,55,56,58,60,63,
          64,71,72,96,99,101,104,105,124,129,143,145,147]),
         ("combin",[1,3,5,8]),
         ("llist",[14,15,16,19,20,21,23,25,89,105,109,111,112]),
         ("marker",[6]),("numeral",[3,5,8]),("option",[10,12,13,16,29]),
         ("pair",[8,9]),("prim_rec",[1]),
         ("sat",[1,3,5,6,7,11,12,13,14,15,17,18,19,20,23]),
         ("while",[1,5,9])]),["DISK_THM"]),
       [read"%123%50%150%223$0@@%186%304%150%234@@$0@@%234@%186%150%292%228$0@@@%234@@%223%293%249$0@@@@%205%290%226%292%228$0@@@@@%223%209%292%247%292%228$0@@@@@%293%249$0@@@@@@@@|@"])
  fun op LZIP_THM x = x
    val op LZIP_THM =
    DT(((("llist",125),
        [("bool",[2,25,26,27,51,52,56,58,105,129,147]),
         ("llist",[15,16,17,18,26]),("option",[7,16]),
         ("pair",[4,16,25,49])]),["DISK_THM"]),
       [read"%136%119%42%154%255%133$0@%235@@@%238@|@@%136%120%45%154%255%133%234@$0@@@%238@|@@%101%29%102%31%119%79%120%81%154%255%133%205$3@$1@@%206$2@$0@@@@%212%129$3@$2@@%255%133$1@$0@@@@|@|@|@|@@@"])
  fun op LUNZIP_THM x = x
    val op LUNZIP_THM =
    DT(((("llist",126),
        [("bool",[2,25,26,27,32,51,53,56,58,64,105,124,129,147]),
         ("llist",[15,16,26]),("option",[7,11,16]),
         ("pair",[4,8,9,16,49])]),["DISK_THM"]),
       [read"%136%168%254%238@@%133%234@%235@@@%101%90%102%97%125%78%168%254%212%129$2@$1@@$0@@@%218%298%53%55%133%205$4@$1@@%206$3@$0@@||@@%254$0@@@|@|@|@@"])
  fun op linear_order_to_list_f_def x = x
    val op linear_order_to_list_f_def =
    DT(((("llist",138),[]),[]),
       [read"%117%59%167%310$0@@%217%62%191%142$0@%197@@%264@%285%132%330$1@%195%299%302$1@@%329$1@@@$0@@@%185$0@@@@|@%315%299%302$0@@%329$0@@@$0@@@|@"])
  fun op LPREFIX_def x = x
    val op LPREFIX_def =
    DT(((("llist",140),[]),[]),
       [read"%119%42%119%44%141%242$1@$0@@%321%331$1@@%150$1@$0@@%95%321%331$1@@%159%244%216$0@@$1@@%280$0@@@%100%308$1@$0@|@|@@|@|@"])
  fun op lrep_ok_rules x = x
    val op lrep_ok_rules =
    DT(((("llist",1),
        [("bool",[14,25,26,53,132,133,138]),("llist",[0])]),["DISK_THM"]),
       [read"%136%314%64%257|@@%101%24%116%70%169%314$0@@%314%64%188%155$0@%137@@%278$2@@$1%135$0@%265%184%300@@@@@|@@|@|@@"])
  fun op lrep_ok_coind x = x
    val op lrep_ok_coind =
    DT(((("llist",2),
        [("bool",[14,25,26,53,132,133,138]),("llist",[0])]),["DISK_THM"]),
       [read"%113%60%169%116%11%169$1$0@@%301%148$0@%64%257|@@%170%24%176%70%136%148$2@%64%188%155$0@%137@@%278$2@@$1%135$0@%265%184%300@@@@@|@@$3$0@@|@|@@@|@@%116%11%169$1$0@@%314$0@@|@@|@"])
  fun op lrep_ok_cases x = x
    val op lrep_ok_cases =
    DT(((("llist",3),
        [("bool",[14,25,26,53,132,133,138]),("llist",[0])]),["DISK_THM"]),
       [read"%116%11%141%314$0@@%301%148$0@%64%257|@@%170%24%176%70%136%148$2@%64%188%155$0@%137@@%278$2@@$1%135$0@%265%184%300@@@@@|@@%314$0@@|@|@@@|@"])
  fun op llist_rep_LCONS x = x
    val op llist_rep_LCONS =
    DT(((("llist",8),
        [("bool",[14,25,26,53,56,58,63,132,133,138]),
         ("llist",[0,5,7])]),["DISK_THM"]),
       [read"%148%313%205%24@%72@@@%64%188%155$0@%137@@%278%24@@%313%72@%135$0@%265%184%300@@@@@|@"])
  fun op LHD_LCONS x = x
    val op LHD_LCONS =
    DT(((("llist",11),
        [("arithmetic",[62]),("bool",[25,56,58,105,129,147]),
         ("llist",[8,9]),("option",[10])]),["DISK_THM"]),
       [read"%156%226%205%24@%72@@@%278%24@@"])
  fun op LTL_LCONS x = x
    val op LTL_LCONS =
    DT(((("llist",12),
        [("arithmetic",[79,128]),("bool",[14,25,51,56,58,105,129,147]),
         ("llist",[5,8,10,11]),("numeral",[3,6]),
         ("option",[7,10])]),["DISK_THM"]),
       [read"%162%247%205%24@%72@@@%281%72@@"])
  fun op LHDTL_CONS_THM x = x
    val op LHDTL_CONS_THM =
    DT(((("llist",13),
        [("bool",[25,56]),("llist",[11,12]),
         ("option",[10])]),["DISK_THM"]),
       [read"%101%24%119%72%136%156%226%205$1@$0@@@%278$1@@@%162%247%205$1@$0@@@%281$0@@@|@|@"])
  fun op llist_CASES x = x
    val op llist_CASES =
    DT(((("llist",14),
        [("bool",
         [14,25,26,36,51,52,53,54,55,56,58,63,105,106,124,129,132,133,
          138]),("llist",[0,5,6,7]),
         ("sat",[1,3,5,6,7,11,14,17,18,19,20,23])]),["DISK_THM"]),
       [read"%119%38%301%150$0@%234@@%170%24%178%72%150$2@%205$1@$0@@|@|@@|@"])
  fun op LHD_THM x = x
    val op LHD_THM =
    DT(((("llist",15),
        [("bool",[14,25,26,53,56,63,132,133,138]),("llist",[0,5,6,9,13]),
         ("option",[10])]),["DISK_THM"]),
       [read"%136%156%226%234@@%257@@%102%25%120%73%157%227%206$1@$0@@@%279$1@@|@|@@"])
  fun op LTL_THM x = x
    val op LTL_THM =
    DT(((("llist",16),
        [("bool",[14,25,26,53,56,63,132,133,138]),
         ("llist",[0,5,6,10,13,15]),("option",[7,10])]),["DISK_THM"]),
       [read"%136%162%247%234@@%260@@%102%25%120%73%163%248%206$1@$0@@@%282$0@@|@|@@"])
  fun op LCONS_NOT_NIL x = x
    val op LCONS_NOT_NIL =
    DT(((("llist",17),
        [("arithmetic",[62]),
         ("bool",[14,25,26,27,53,56,58,63,105,129,132,133,138,147]),
         ("llist",[0,5,6,7]),("option",[11])]),["DISK_THM"]),
       [read"%101%24%119%72%136%333%150%205$1@$0@@%234@@@%333%150%234@%205$1@$0@@@@|@|@"])
  fun op LCONS_11 x = x
    val op LCONS_11 =
    DT(((("llist",18),
        [("arithmetic",[62,65]),
         ("bool",
         [14,25,26,27,51,53,56,58,60,63,105,106,124,129,132,133,138,147]),
         ("llist",[0,5,7]),("num",[7]),("option",[10])]),["DISK_THM"]),
       [read"%101%29%119%79%101%30%119%80%141%150%205$3@$2@@%205$1@$0@@@%136%140$3@$1@@%150$2@$0@@@|@|@|@|@"])
  fun op LHD_EQ_NONE x = x
    val op LHD_EQ_NONE =
    DT(((("llist",19),
        [("bool",[25,26,27,54,56,58,63]),("llist",[14,15,17]),
         ("option",[11])]),["DISK_THM"]),
       [read"%119%47%136%141%156%226$0@@%257@@%150$0@%234@@@%141%156%257@%226$0@@@%150$0@%234@@@|@"])
  fun op LTL_EQ_NONE x = x
    val op LTL_EQ_NONE =
    DT(((("llist",20),
        [("bool",[25,26,27,54,56,58,63]),("llist",[14,16,17]),
         ("option",[11])]),["DISK_THM"]),
       [read"%119%47%136%141%162%247$0@@%260@@%150$0@%234@@@%141%162%260@%247$0@@@%150$0@%234@@@|@"])
  fun op LHDTL_EQ_SOME x = x
    val op LHDTL_EQ_SOME =
    DT(((("llist",21),
        [("bool",[25,26,27,51,54,56,58,63]),("llist",[14,15,16,17,18]),
         ("option",[10,11])]),["DISK_THM"]),
       [read"%101%24%119%72%119%47%141%150$0@%205$2@$1@@@%136%156%226$0@@%278$2@@@%162%247$0@@%281$1@@@@|@|@|@"])
  fun op LNTH_THM x = x
    val op LNTH_THM =
    DT(((("llist",23),
        [("bool",[14,25,56]),("llist",[15,16,22]),("num",[9]),
         ("option",[10,13,18])]),["DISK_THM"]),
       [read"%136%126%64%156%239$0@%234@@%257@|@@%136%102%25%120%73%157%240%137@%206$1@$0@@@%279$1@@|@|@@%126%64%103%26%121%74%158%241%287$2@@%207$1@$0@@@%241$2@$0@@|@|@|@@@"])
  fun op llist_ue_Axiom x = x
    val op llist_ue_Axiom =
    DT(((("llist",24),
        [("arithmetic",[17,18,24,25,27,28,62,65,71,173,177,180]),
         ("bool",
         [2,14,15,25,26,27,36,51,52,53,54,55,56,58,60,63,75,86,94,101,104,
          105,106,122,124,129,132,133,138,145,147]),("combin",[8]),
         ("llist",[0,5,6,8,9,10,19,21]),("num",[7,9]),
         ("numeral",[0,3,5,8]),("option",[6,7,10,13,18]),("pair",[6,8,9]),
         ("prim_rec",[38]),
         ("sat",[1,3,5,6,7,11,12,13,14,15,17,18,19,20,23])]),["DISK_THM"]),
       [read"%109%19%181%21%136%101%90%157%227$1$0@@@%274%277@$2$0@@@|@@%101%90%163%248$1$0@@@%275%317$1@%199@@$2$0@@@|@@|@|@"])
  fun op llist_Axiom x = x
    val op llist_Axiom =
    DT(((("llist",25),[("bool",[73,122]),("llist",[24])]),["DISK_THM"]),
       [read"%109%19%172%21%136%101%90%157%227$1$0@@@%274%277@$2$0@@@|@@%101%90%163%248$1$0@@@%275%317$1@%199@@$2$0@@@|@@|@|@"])
  fun op llist_Axiom_1 x = x
    val op llist_Axiom_1 =
    DT(((("llist",26),
        [("bool",[25,51,53,54,55,56,58,63,73,74]),("combin",[8]),
         ("llist",[19,21,25]),("option",[6,7,10,13]),("pair",[5,8,9,49]),
         ("sat",[1,3,5,6,7,11,12,13,14,15,17,18,19,20,23])]),["DISK_THM"]),
       [read"%109%19%172%21%101%90%151$1$0@@%325$2$0@@%235@%86%327$0@%9%14%206$0@$4$1@@||@|@@|@|@|@"])
  fun op llist_Axiom_1ue x = x
    val op llist_Axiom_1ue =
    DT(((("llist",27),
        [("bool",[2,15,25,26,51,53,54,55,56,58,63,73,74,75,94,122]),
         ("combin",[8]),("llist",[15,16,19,21,24]),("option",[6,7,10,13]),
         ("pair",[5,6,8,9,49]),
         ("sat",[1,3,5,6,7,11,12,13,14,15,17,18,19,20,23])]),["DISK_THM"]),
       [read"%109%19%181%21%101%90%151$1$0@@%325$2$0@@%235@%86%327$0@%9%14%206$0@$4$1@@||@|@@|@|@|@"])
  fun op LLIST_BISIMULATION0 x = x
    val op LLIST_BISIMULATION0 =
    DT(((("llist",29),
        [("bool",
         [25,26,27,30,37,51,52,53,54,56,58,60,63,64,99,105,108,109,122,124,
          140,143,147]),("llist",[14,15,16,17,18,19,27]),
         ("option",[6,7,10,11,16]),("pair",[16,20,25,49]),
         ("sat",[1,3,5,6,7,11,12,13,14,15,16,17,18])]),["DISK_THM"]),
       [read"%119%53%119%54%141%150$1@$0@@%174%7%136$0$2@$1@@%119%56%119%57%169$2$1@$0@@%301%136%150$1@%234@@%150$0@%234@@@%170%24%178%79%178%80%136%150$4@%205$2@$1@@@%136%150$3@%205$2@$0@@@$5$1@$0@@@|@|@|@@@|@|@@|@@|@|@"])
  fun op LLIST_BISIMULATION x = x
    val op LLIST_BISIMULATION =
    DT(((("llist",30),
        [("bool",
         [25,26,27,30,37,51,52,53,54,55,56,58,63,99,100,105,124,143]),
         ("llist",[14,15,16,17,18,19,29]),("option",[10,11,16]),
         ("sat",[1,3,5,6,7,11,12,13,14,15,17,18,19,20,23])]),["DISK_THM"]),
       [read"%119%53%119%54%141%150$1@$0@@%174%7%136$0$2@$1@@%119%56%119%57%169$2$1@$0@@%301%136%150$1@%234@@%150$0@%234@@@%136%156%226$1@@%226$0@@@$2%292%247$1@@@%292%247$0@@@@@@|@|@@|@@|@|@"])
  fun op LLIST_STRONG_BISIMULATION x = x
    val op LLIST_STRONG_BISIMULATION =
    DT(((("llist",31),
        [("bool",
         [2,15,25,26,27,37,51,52,53,54,55,56,58,63,75,99,100,105,124,140,
          143]),("llist",[14,17,18,29]),
         ("sat",[1,3,5,6,7,11,12,13,14,15,17,18,19,20,23])]),["DISK_THM"]),
       [read"%119%53%119%54%141%150$1@$0@@%174%7%136$0$2@$1@@%119%56%119%57%169$2$1@$0@@%301%150$1@$0@@%170%24%178%79%178%80%136%150$4@%205$2@$1@@@%136%150$3@%205$2@$0@@@$5$1@$0@@@|@|@|@@@|@|@@|@@|@|@"])
  fun op LNTH_EQ x = x
    val op LNTH_EQ =
    DT(((("llist",32),
        [("arithmetic",[62,65,79,128]),
         ("bool",
         [14,25,26,27,36,51,53,54,55,56,58,60,63,105,106,124,129,132,133,
          138,147]),("llist",[0,5,9,10,22]),("num",[7,9]),
         ("numeral",[3,6]),("option",[7,13,18]),
         ("sat",[1,3,5,6,7,11,14,17,18,19,20,23])]),["DISK_THM"]),
       [read"%119%53%119%54%141%150$1@$0@@%126%64%156%239$0@$2@@%239$0@$1@@|@@|@|@"])
  fun op LTAKE_THM x = x
    val op LTAKE_THM =
    DT(((("llist",34),
        [("bool",[25,51,56,63]),("list",[48]),("llist",[15,16,33]),
         ("option",[6,7,10,13,16])]),["DISK_THM"]),
       [read"%136%119%38%159%244%137@$0@@%280%256@@|@@%136%126%64%160%245%287$0@@%235@@%259@|@@%126%64%103%26%121%74%161%246%287$2@@%207$1@$0@@@%270%194$1@@%246$2@$0@@@|@|@|@@@"])
  fun op LTAKE_SNOC_LNTH x = x
    val op LTAKE_SNOC_LNTH =
    DT(((("llist",35),
        [("bool",[14,25,51,56,63]),("list",[20,48,104]),
         ("llist",[14,15,16,22,23,33,34]),("num",[9]),
         ("option",[6,7,10,13,16])]),["DISK_THM"]),
       [read"%126%64%119%47%159%244%287$1@@$0@@%322%244$1@$0@@%258@%37%319%239$2@$1@@%258@%15%280%183$1@%192$0@%256@@@|@|@@|@|@"])
  fun op LTAKE_EQ_NONE_LNTH x = x
    val op LTAKE_EQ_NONE_LNTH =
    DT(((("llist",36),
        [("bool",[14,25,26,27,36,53,56,58,105,124]),
         ("llist",[14,15,16,22,33]),("num",[9]),
         ("option",[6,7,11,13,16,18])]),["DISK_THM"]),
       [read"%126%64%119%47%169%159%244$1@$0@@%258@@%156%239$1@$0@@%257@@|@|@"])
  fun op LTAKE_NIL_EQ_SOME x = x
    val op LTAKE_NIL_EQ_SOME =
    DT(((("llist",37),
        [("arithmetic",[28]),
         ("bool",[13,25,26,27,30,47,48,51,52,53,54,56,63,93,94,96]),
         ("llist",[33,34]),("num",[7]),("option",[10,11]),
         ("sat",[1,3,5,6,7,11,12,13,14,15])]),["DISK_THM"]),
       [read"%118%37%126%61%141%159%244$0@%234@@%280$1@@@%136%155$0@%137@@%149$1@%256@@@|@|@"])
  fun op LTAKE_NIL_EQ_NONE x = x
    val op LTAKE_NIL_EQ_NONE =
    DT(((("llist",38),
        [("arithmetic",[28]),("bool",[25,26,27,54,56,58,63]),
         ("llist",[33,34]),("option",[11]),
         ("prim_rec",[6,7])]),["DISK_THM"]),
       [read"%126%61%141%159%244$0@%234@@%258@@%138%137@$0@@|@"])
  fun op LTAKE_EQ x = x
    val op LTAKE_EQ =
    DT(((("llist",39),
        [("bool",[25,26,27,36,51,53,54,55,56,58,63,103,105,106,124]),
         ("list",[22,48,106]),("llist",[32,35,36]),("option",[6,7,10,11]),
         ("prim_rec",[1]),
         ("sat",[1,3,5,6,7,11,13,14,15,17,18,19,20,23])]),["DISK_THM"]),
       [read"%119%53%119%54%141%150$1@$0@@%126%64%159%244$0@$2@@%244$0@$1@@|@@|@|@"])
  fun op LTAKE_CONS_EQ_NONE x = x
    val op LTAKE_CONS_EQ_NONE =
    DT(((("llist",40),
        [("arithmetic",[28]),("bool",[25,26,27,36,37,51,54,56,58,63,143]),
         ("llist",[34]),("num",[7]),("option",[11,31]),
         ("prim_rec",[1])]),["DISK_THM"]),
       [read"%126%61%101%24%119%72%141%159%244$2@%205$1@$0@@@%258@@%180%64%136%155$3@%287$0@@@%159%244$0@$1@@%258@@|@@|@|@|@"])
  fun op LTAKE_CONS_EQ_SOME x = x
    val op LTAKE_CONS_EQ_SOME =
    DT(((("llist",41),
        [("arithmetic",[28]),
         ("bool",
         [13,25,26,27,30,36,37,47,48,51,52,53,54,56,58,63,71,93,94,96,
          143]),("llist",[34]),("num",[7]),("option",[10,29]),
         ("prim_rec",[1]),
         ("sat",[1,3,5,6,7,11,12,13,14,15])]),["DISK_THM"]),
       [read"%126%61%101%24%119%72%118%37%141%159%244$3@%205$2@$1@@@%280$0@@@%301%136%155$3@%137@@%149$0@%256@@@%180%64%177%40%136%155$5@%287$1@@@%136%159%244$1@$3@@%280$0@@@%149$2@%192$4@$0@@@@|@|@@@|@|@|@|@"])
  fun op LTAKE_EQ_SOME_CONS x = x
    val op LTAKE_EQ_SOME_CONS =
    DT(((("llist",42),
        [("bool",[14,25,26,27,36,53,58,63,105,124,140,143]),
         ("llist",[14,15,16,33,34]),("num",[9]),
         ("option",[6,7,10,11,16,29])]),["DISK_THM"]),
       [read"%126%64%119%38%118%93%169%159%244$2@$1@@%280$0@@@%101%24%177%98%159%244$4@%205$1@$3@@@%280$0@@|@|@@|@|@|@"])
  fun op LMAP_APPEND x = x
    val op LMAP_APPEND =
    DT(((("llist",45),
        [("bool",
         [13,25,26,27,30,36,37,47,48,51,52,53,54,56,58,63,72,93,94,96,105,
          124,143]),("combin",[19]),("llist",[14,17,18,29,43,44]),
         ("sat",[1,3,5,6,7,11,12,13,14,15])]),["DISK_THM"]),
       [read"%105%17%119%53%119%54%151%231$2@%203$1@$0@@@%204%231$2@$1@@%231$2@$0@@@|@|@|@"])
  fun op LAPPEND_EQ_LNIL x = x
    val op LAPPEND_EQ_LNIL =
    DT(((("llist",46),
        [("bool",[25,26,27,51,53,56,58,105,106,124]),
         ("llist",[14,17,44])]),["DISK_THM"]),
       [read"%141%150%203%42@%44@@%234@@%136%150%42@%234@@%150%44@%234@@@"])
  fun op LAPPEND_ASSOC x = x
    val op LAPPEND_ASSOC =
    DT(((("llist",47),
        [("bool",
         [13,25,26,27,30,47,48,51,52,53,54,56,58,63,72,94,96,105,124,143]),
         ("llist",[14,18,31,44]),
         ("sat",[1,3,5,6,7,11,12,13,14,15])]),["DISK_THM"]),
       [read"%119%53%119%54%119%56%150%203%203$2@$1@@$0@@%203$2@%203$1@$0@@@|@|@|@"])
  fun op LMAP_MAP x = x
    val op LMAP_MAP =
    DT(((("llist",48),
        [("bool",
         [13,25,26,27,30,36,47,48,51,52,53,54,56,58,63,72,94,96,105,124]),
         ("combin",[8,19]),("llist",[14,15,16,17,30,43]),
         ("option",[10,16]),
         ("sat",[1,3,5,6,7,11,12,13,14,15])]),["DISK_THM"]),
       [read"%105%17%111%22%121%49%151%231$2@%232$1@$0@@@%233%316$2@$1@@$0@@|@|@|@"])
  fun op LAPPEND_NIL_2ND x = x
    val op LAPPEND_NIL_2ND =
    DT(((("llist",49),
        [("bool",[25,26,27,51,52,56,58,63,101,105,124,145]),
         ("llist",[14,15,16,17,30,44,46]),
         ("option",[10,16])]),["DISK_THM"]),
       [read"%119%47%150%203$0@%234@@$0@|@"])
  fun op LHD_LAPPEND x = x
    val op LHD_LAPPEND =
    DT(((("llist",50),
        [("bool",[25,26,27,56,58,105,129,147]),("llist",[14,15,17,44]),
         ("option",[10])]),["DISK_THM"]),
       [read"%156%226%203%42@%44@@@%188%150%42@%234@@%226%44@@%226%42@@@"])
  fun op LTAKE_LAPPEND1 x = x
    val op LTAKE_LAPPEND1 =
    DT(((("llist",51),
        [("bool",[14,25,27,51,53,56,58,63,105,124]),("list",[48]),
         ("llist",[14,34,44]),("num",[9]),
         ("option",[6,10,13,14])]),["DISK_THM"]),
       [read"%126%64%119%42%119%44%169%202%244$2@$1@@@%159%244$2@%203$1@$0@@@%244$2@$1@@@|@|@|@"])
  fun op LFINITE_rules x = x
    val op LFINITE_rules =
    DT(((("llist",53),
        [("bool",[14,25,26,53,132,133,138]),("llist",[52])]),["DISK_THM"]),
       [read"%136%221%234@@%101%24%119%72%169%221$0@@%221%205$1@$0@@@|@|@@"])
  fun op LFINITE_ind x = x
    val op LFINITE_ind =
    DT(((("llist",54),
        [("bool",[14,25,26,53,132,133,138]),("llist",[52])]),["DISK_THM"]),
       [read"%114%0%169%136$0%234@@%101%24%119%72%169$2$0@@$2%205$1@$0@@@|@|@@@%119%12%169%221$0@@$1$0@@|@@|@"])
  fun op LFINITE_strongind x = x
    val op LFINITE_strongind =
    DT(((("llist",55),
        [("bool",[14,25,26,53,132,133,138]),("llist",[52])]),["DISK_THM"]),
       [read"%114%0%169%136$0%234@@%101%24%119%72%169%136%221$0@@$2$0@@@$2%205$1@$0@@@|@|@@@%119%12%169%221$0@@$1$0@@|@@|@"])
  fun op LFINITE_cases x = x
    val op LFINITE_cases =
    DT(((("llist",56),
        [("bool",[14,25,26,53,132,133,138]),("llist",[52])]),["DISK_THM"]),
       [read"%119%12%141%221$0@@%301%150$0@%234@@%170%24%178%72%136%150$2@%205$1@$0@@@%221$0@@|@|@@@|@"])
  fun op LFINITE_THM x = x
    val op LFINITE_THM =
    DT(((("llist",57),
        [("bool",[14,25,26,27,37,51,52,53,56,58,63,132,133,138,143]),
         ("llist",[17,18,52])]),["DISK_THM"]),
       [read"%136%141%221%234@@%288@@%102%25%120%73%141%222%206$1@$0@@@%222$0@@|@|@@"])
  fun op LFINITE x = x
    val op LFINITE =
    DT(((("llist",58),
        [("bool",[14,25,26,27,53,54,56,58,63,105,124,132,133,138]),
         ("llist",[14,34,38,52,57]),("num",[9]),("option",[11,13,31]),
         ("prim_rec",[7]),
         ("sat",[1,3,5,6,7,11,13,14,15,17,18])]),["DISK_THM"]),
       [read"%141%221%47@@%180%64%159%244$0@%47@@%258@|@@"])
  fun op llength_rel_rules x = x
    val op llength_rel_rules =
    DT(((("llist",60),
        [("bool",[14,25,26,53,132,133,138]),("llist",[59])]),["DISK_THM"]),
       [read"%136%311%234@%137@@%101%24%126%64%119%72%169%311$0@$1@@%311%205$2@$0@@%287$1@@@|@|@|@@"])
  fun op llength_rel_ind x = x
    val op llength_rel_ind =
    DT(((("llist",61),
        [("bool",[14,25,26,53,132,133,138]),("llist",[59])]),["DISK_THM"]),
       [read"%115%58%169%136$0%234@%137@@%101%24%126%64%119%72%169$3$0@$1@@$3%205$2@$0@@%287$1@@@|@|@|@@@%119%12%126%13%169%311$1@$0@@$2$1@$0@@|@|@@|@"])
  fun op llength_rel_strongind x = x
    val op llength_rel_strongind =
    DT(((("llist",62),
        [("bool",[14,25,26,53,132,133,138]),("llist",[59])]),["DISK_THM"]),
       [read"%115%58%169%136$0%234@%137@@%101%24%126%64%119%72%169%136%311$0@$1@@$3$0@$1@@@$3%205$2@$0@@%287$1@@@|@|@|@@@%119%12%126%13%169%311$1@$0@@$2$1@$0@@|@|@@|@"])
  fun op llength_rel_cases x = x
    val op llength_rel_cases =
    DT(((("llist",63),
        [("bool",[14,25,26,53,132,133,138]),("llist",[59])]),["DISK_THM"]),
       [read"%119%12%126%13%141%311$1@$0@@%301%136%150$1@%234@@%155$0@%137@@@%170%24%180%64%178%72%136%150$4@%205$2@$0@@@%136%155$3@%287$1@@@%311$0@$1@@@|@|@|@@@|@|@"])
  fun op LLENGTH_THM x = x
    val op LLENGTH_THM =
    DT(((("llist",65),
        [("bool",
         [2,14,15,25,26,27,30,37,51,52,53,54,56,58,63,64,67,75,83,105,129,
          132,133,138,143,147]),("llist",[17,18,52,57,59,64]),
         ("option",[10,27,29,31]),("prim_rec",[1]),
         ("sat",[1,3,5,6,7,11,12,13,14,15,17,18,19,20,23])]),["DISK_THM"]),
       [read"%136%165%229%234@@%283%137@@@%102%25%120%73%165%230%206$1@$0@@@%273%287@%230$0@@@|@|@@"])
  fun op LFINITE_HAS_LENGTH x = x
    val op LFINITE_HAS_LENGTH =
    DT(((("llist",66),
        [("bool",[25,53,58,63,105,124,129,140,147]),("llist",[64]),
         ("option",[10])]),["DISK_THM"]),
       [read"%119%47%169%221$0@@%180%64%165%229$1@@%283$0@@|@@|@"])
  fun op NOT_LFINITE_NO_LENGTH x = x
    val op NOT_LFINITE_NO_LENGTH =
    DT(((("llist",67),
        [("bool",[25,26,27,36,53,56,58,105,124,129,147]),
         ("llist",[64])]),["DISK_THM"]),
       [read"%119%47%169%333%221$0@@@%165%229$0@@%262@@|@"])
  fun op LFINITE_LLENGTH x = x
    val op LFINITE_LLENGTH =
    DT(((("llist",68),
        [("bool",[25,26,27,51,53,58,63,105,106,124]),("llist",[66,67]),
         ("option",[11])]),["DISK_THM"]),
       [read"%141%221%47@@%180%64%165%229%47@@%283$0@@|@@"])
  fun op LFINITE_INDUCTION x = x
    val op LFINITE_INDUCTION =
    DT(((("llist",69),
        [("bool",[14,25,26,53,132,133,138]),("llist",[52])]),["DISK_THM"]),
       [read"%114%3%169%136$0%234@@%101%24%119%72%169$2$0@@$2%205$1@$0@@@|@|@@@%119%12%169%221$0@@$1$0@@|@@|@"])
  fun op LFINITE_STRONG_INDUCTION x = x
    val op LFINITE_STRONG_INDUCTION =
    DT(((("llist",70),
        [("bool",[51,58,63,105,124]),("llist",[57,69])]),["DISK_THM"]),
       [read"%169%136%3%234@@%101%24%119%72%169%136%221$0@@%3$0@@@%3%205$1@$0@@@|@|@@@%119%12%169%221$0@@%3$0@@|@@"])
  fun op LFINITE_MAP x = x
    val op LFINITE_MAP =
    DT(((("llist",71),
        [("bool",[25,26,27,36,51,53,56,58,63,86,105,124,143]),
         ("llist",[14,17,18,43,57,69])]),["DISK_THM"]),
       [read"%105%17%119%47%141%222%231$1@$0@@@%221$0@@|@|@"])
  fun op LFINITE_APPEND x = x
    val op LFINITE_APPEND =
    DT(((("llist",72),
        [("bool",
         [13,25,26,27,30,36,47,48,51,52,53,54,56,58,63,84,93,94,96,105,
          124]),("llist",[14,17,18,44,46,57,70]),
         ("sat",[1,3,5,6,7,11,12,13,14,15])]),["DISK_THM"]),
       [read"%119%53%119%54%141%221%203$1@$0@@@%136%221$1@@%221$0@@@|@|@"])
  fun op LTAKE_LNTH_EL x = x
    val op LTAKE_LNTH_EL =
    DT(((("llist",73),
        [("arithmetic",[28,37]),
         ("bool",
         [14,25,26,27,36,51,53,56,58,63,93,95,101,105,124,145,178]),
         ("list",[17,128]),("llist",[14,23,34,37]),("num",[7,9]),
         ("option",[10,29]),("prim_rec",[6,7])]),["DISK_THM"]),
       [read"%126%64%119%47%126%61%118%37%169%136%159%244$3@$2@@%280$0@@@%138$1@$3@@@%156%239$1@$2@@%278%196$1@$0@@@@|@|@|@|@"])
  fun op NOT_LFINITE_APPEND x = x
    val op NOT_LFINITE_APPEND =
    DT(((("llist",74),
        [("bool",
         [13,25,26,27,30,47,48,51,52,53,54,56,58,63,72,94,105,124]),
         ("llist",[14,15,16,17,30,44,57]),("option",[10,16]),
         ("sat",[1,3,5,6,7,11,14,15])]),["DISK_THM"]),
       [read"%119%53%119%54%169%333%221$1@@@%150%203$1@$0@@$1@@|@|@"])
  fun op LLENGTH_MAP x = x
    val op LLENGTH_MAP =
    DT(((("llist",75),
        [("bool",
         [13,25,26,27,30,36,47,48,51,52,53,54,56,58,63,93,94,96,105,124]),
         ("llist",[43,65,67,70,71]),("option",[10]),
         ("sat",[1,3,5,6,7,11,12,13,14,15])]),["DISK_THM"]),
       [read"%119%47%105%17%165%230%231$0@$1@@@%229$1@@|@|@"])
  fun op LLENGTH_APPEND x = x
    val op LLENGTH_APPEND =
    DT(((("llist",76),
        [("arithmetic",[22,24,25,91]),
         ("bool",
         [25,26,27,30,36,47,48,51,53,54,56,58,63,94,96,105,124,129,147]),
         ("llist",[44,65,66,67,70,72]),("option",[10,13,16]),
         ("prim_rec",[1]),
         ("sat",[1,3,5,6,7,11,12,13,14,15])]),["DISK_THM"]),
       [read"%119%53%119%54%165%229%203$1@$0@@@%190%136%221$1@@%221$0@@@%283%127%294%229$1@@@%294%229$0@@@@@%262@@|@|@"])
  fun op toList_THM x = x
    val op toList_THM =
    DT(((("llist",78),
        [("bool",[25,26,27,30,51,53,56,58,63,64,105,129,147]),
         ("llist",[34,57,65,66,77]),
         ("option",[10,13,16,28,31])]),["DISK_THM"]),
       [read"%136%159%331%234@@%280%256@@@%102%25%120%73%160%332%206$1@$0@@@%269%193$1@@%332$0@@@|@|@@"])
  fun op LFINITE_fromList x = x
    val op LFINITE_fromList =
    DT(((("llist",80),
        [("bool",[14,25,36,63]),("list",[43]),
         ("llist",[57,79])]),["DISK_THM"]), [read"%118%37%221%307$0@@|@"])
  fun op LLENGTH_fromList x = x
    val op LLENGTH_fromList =
    DT(((("llist",81),
        [("bool",[14,25,36,56]),("list",[22,43]),("llist",[65,79]),
         ("option",[10,13]),("prim_rec",[1])]),["DISK_THM"]),
       [read"%118%37%165%229%307$0@@@%283%216$0@@@|@"])
  fun op LTAKE_fromList x = x
    val op LTAKE_fromList =
    DT(((("llist",82),
        [("bool",[14,25,36,51,56,63]),("list",[22,43,48]),
         ("llist",[34,79]),("option",[10,13])]),["DISK_THM"]),
       [read"%118%37%159%244%216$0@@%307$0@@@%280$0@@|@"])
  fun op from_toList x = x
    val op from_toList =
    DT(((("llist",83),
        [("bool",[14,25,36,51,56,63]),("list",[43,48]),("llist",[78,79]),
         ("option",[10,13])]),["DISK_THM"]),
       [read"%118%37%159%331%307$0@@@%280$0@@|@"])
  fun op LFINITE_toList x = x
    val op LFINITE_toList =
    DT(((("llist",84),
        [("bool",[25,58,63,140]),("llist",[70,78]),
         ("option",[10,13])]),["DISK_THM"]),
       [read"%119%47%169%221$0@@%177%37%159%331$1@@%280$0@@|@@|@"])
  fun op LFINITE_toList_SOME x = x
    val op LFINITE_toList_SOME =
    DT(((("llist",85),
        [("bool",[25,26,53,58,63,105,124]),("llist",[77,84]),
         ("option",[20,28])]),["DISK_THM"]),
       [read"%141%221%47@@%202%331%47@@@"])
  fun op to_fromList x = x
    val op to_fromList =
    DT(((("llist",86),
        [("bool",[25,51,56,58,105,124]),("llist",[18,70,78,79,84]),
         ("option",[13,16])]),["DISK_THM"]),
       [read"%119%47%169%221$0@@%150%307%291%331$0@@@@$0@@|@"])
  fun op LTAKE_LAPPEND2 x = x
    val op LTAKE_LAPPEND2 =
    DT(((("llist",87),
        [("arithmetic",[28,62,112]),
         ("bool",
         [2,15,25,26,27,36,51,53,54,56,58,60,63,74,84,105,124,140]),
         ("combin",[8]),("list",[20,48,56,104]),
         ("llist",[34,38,44,58,65,66,69,78,84]),
         ("option",[6,10,11,13,16,29,31,32]),
         ("sat",[1,3,5,6,7,11,12,13,15,17,18])]),["DISK_THM"]),
       [read"%126%64%119%42%119%44%169%159%244$2@$1@@%258@@%159%244$2@%203$1@$0@@@%268%183%291%331$1@@@@%244%135$2@%294%229$1@@@@$0@@@@|@|@|@"])
  fun op LDROP_THM x = x
    val op LDROP_THM =
    DT(((("llist",89),
        [("bool",[25,36,51,56]),("llist",[16,88]),
         ("option",[10,13,18])]),["DISK_THM"]),
       [read"%136%119%47%162%213%137@$0@@%281$0@@|@@%136%126%64%163%214%287$0@@%235@@%261@|@@%126%64%103%26%121%74%164%215%287$2@@%207$1@$0@@@%215$2@$0@@|@|@|@@@"])
  fun op LDROP1_THM x = x
    val op LDROP1_THM =
    DT(((("llist",90),
        [("arithmetic",[17,173,177,180]),
         ("bool",[14,25,26,52,54,56,63,104]),("llist",[88]),
         ("numeral",[3,5,8]),("option",[6,10,13,18])]),["DISK_THM"]),
       [read"%147%213%265%184%300@@@@%247@"])
  fun op NOT_LFINITE_TAKE x = x
    val op NOT_LFINITE_TAKE =
    DT(((("llist",91),
        [("bool",[25,26,27,54,56,58,63,72,105,124,140]),("llist",[58]),
         ("option",[6,10,11])]),["DISK_THM"]),
       [read"%119%47%169%333%221$0@@@%126%64%177%98%159%244$1@$2@@%280$0@@|@|@@|@"])
  fun op LFINITE_TAKE x = x
    val op LFINITE_TAKE =
    DT(((("llist",92),
        [("arithmetic",[38,46,58,71,93,173,176,180]),
         ("bool",[14,25,26,27,36,51,53,54,58,63,104,105,124,140,143]),
         ("llist",[14,34,57,65,66]),("num",[9]),("numeral",[3,8]),
         ("option",[10,13,16,29])]),["DISK_THM"]),
       [read"%126%64%119%47%169%136%221$0@@%139$1@%294%229$0@@@@@%177%98%159%244$2@$1@@%280$0@@|@@|@|@"])
  fun op NOT_LFINITE_DROP x = x
    val op NOT_LFINITE_DROP =
    DT(((("llist",93),
        [("bool",[14,25,26,27,36,53,54,58,63,105,124,140]),
         ("llist",[14,16,57,88]),("num",[9]),
         ("option",[10,13,18])]),["DISK_THM"]),
       [read"%119%47%169%333%221$0@@@%126%64%178%99%162%213$1@$2@@%281$0@@|@|@@|@"])
  fun op LFINITE_DROP x = x
    val op LFINITE_DROP =
    DT(((("llist",94),
        [("arithmetic",[38,46,58,71,93,173,176,180]),
         ("bool",[14,25,26,27,36,51,53,54,58,63,104,105,124,140]),
         ("llist",[14,57,65,66,89]),("num",[9]),("numeral",[3,8]),
         ("option",[10,13,16])]),["DISK_THM"]),
       [read"%126%64%119%47%169%136%221$0@@%139$1@%294%229$0@@@@@%178%99%162%213$2@$1@@%281$0@@|@@|@|@"])
  fun op LTAKE_DROP x = x
    val op LTAKE_DROP =
    DT(((("llist",95),
        [("arithmetic",[38,46,58,71,93,173,176,180]),
         ("bool",[14,25,26,27,36,51,53,54,56,58,63,104,105,124]),
         ("llist",[14,18,34,44,57,65,66,79,89,91,92]),("num",[9]),
         ("numeral",[3,8]),("option",[13,16]),
         ("sat",[1,3,5,6,7,11,13,14,15,17,18,19,20,23])]),["DISK_THM"]),
       [read"%136%126%64%119%47%169%333%221$0@@@%150%203%307%291%244$1@$0@@@@%292%213$1@$0@@@@$0@@|@|@@%126%64%119%47%169%136%221$0@@%139$1@%294%229$0@@@@@%150%203%307%291%244$1@$0@@@@%292%213$1@$0@@@@$0@@|@|@@"])
  fun op LDROP_ADD x = x
    val op LDROP_ADD =
    DT(((("llist",96),
        [("arithmetic",[24]),("bool",[14,25,36,56]),("llist",[20,88,89]),
         ("num",[9]),("option",[6,7,13,18])]),["DISK_THM"]),
       [read"%126%35%126%36%119%94%162%213%127$2@$1@@$0@@%323%213$2@$0@@%260@%47%213$2@$0@|@@|@|@|@"])
  fun op LFINITE_LNTH_NONE x = x
    val op LFINITE_LNTH_NONE =
    DT(((("llist",97),
        [("bool",[2,15,25,26,37,53,54,55,56,58,63,83]),
         ("llist",[23,69,73,91]),("option",[12]),("prim_rec",[15]),
         ("sat",[1,3,5,6,7,11,12,13,14,15,17,18,19,20,23])]),["DISK_THM"]),
       [read"%141%221%47@@%180%64%156%239$0@%47@@%257@|@@"])
  fun op LNTH_LAPPEND x = x
    val op LNTH_LAPPEND =
    DT(((("llist",98),
        [("arithmetic",[24,25,28,37,59,62,71,112,173,180]),
         ("bool",
         [2,15,25,26,27,30,36,37,53,54,55,56,58,63,74,84,94,104,105,124,
          129,140,147]),("llist",[23,36,44,51,65,66,68,70,73,97]),
         ("numeral",[3,8]),("option",[6,7,10,11,12,13,14]),
         ("prim_rec",[6,7]),
         ("sat",[1,3,5,6,7,11,12,13,14,15,17,18,19,20,23])]),["DISK_THM"]),
       [read"%156%239%64@%203%42@%44@@@%324%229%42@@%239%64@%42@@%61%188%138%64@$0@@%239%64@%42@@%239%135%64@$0@@%44@@|@@"])
  fun op exists_rules x = x
    val op exists_rules =
    DT(((("llist",100),
        [("bool",[14,25,26,53,132,133,138]),("llist",[99])]),["DISK_THM"]),
       [read"%106%1%136%101%24%119%72%169$2$1@@%305$2@%205$1@$0@@@|@|@@%101%24%119%72%169%305$2@$0@@%305$2@%205$1@$0@@@|@|@@|@"])
  fun op exists_ind x = x
    val op exists_ind =
    DT(((("llist",101),
        [("bool",[14,25,26,53,132,133,138]),("llist",[99])]),["DISK_THM"]),
       [read"%106%1%114%16%169%136%101%24%119%72%169$3$1@@$2%205$1@$0@@@|@|@@%101%24%119%72%169$2$0@@$2%205$1@$0@@@|@|@@@%119%12%169%305$2@$0@@$1$0@@|@@|@|@"])
  fun op exists_strongind x = x
    val op exists_strongind =
    DT(((("llist",102),
        [("bool",[14,25,26,53,132,133,138]),("llist",[99])]),["DISK_THM"]),
       [read"%106%1%114%16%169%136%101%24%119%72%169$3$1@@$2%205$1@$0@@@|@|@@%101%24%119%72%169%136%305$3@$0@@$2$0@@@$2%205$1@$0@@@|@|@@@%119%12%169%305$2@$0@@$1$0@@|@@|@|@"])
  fun op exists_cases x = x
    val op exists_cases =
    DT(((("llist",103),
        [("bool",[14,25,26,53,132,133,138]),("llist",[99])]),["DISK_THM"]),
       [read"%106%1%119%12%141%305$1@$0@@%301%170%24%178%72%136%150$2@%205$1@$0@@@$3$1@@|@|@@%170%24%178%72%136%150$2@%205$1@$0@@@%305$3@$0@@|@|@@@|@|@"])
  fun op exists_thm x = x
    val op exists_thm =
    DT(((("llist",104),
        [("bool",
         [14,25,26,27,36,51,52,53,54,56,58,63,72,96,132,133,138,143]),
         ("llist",[17,18,99])]),["DISK_THM"]),
       [read"%136%141%305%1@%234@@%198@@%141%305%1@%205%24@%72@@@%301%1%24@@%305%1@%72@@@@"])
  fun op exists_LNTH x = x
    val op exists_LNTH =
    DT(((("llist",105),
        [("bool",
         [14,25,26,27,51,53,54,55,56,58,63,73,86,105,106,124,132,133,138]),
         ("llist",[14,23,99,104]),("num",[9]),("option",[10,11]),
         ("sat",[1,3,5,6,7,11,12,13,14,15,17,18,19,20,23])]),["DISK_THM"]),
       [read"%119%38%141%305%1@$0@@%180%64%170%15%136%156%278$0@@%239$1@$2@@@%1$0@@|@|@@|@"])
  fun op MONO_exists x = x
    val op MONO_exists =
    DT(((("llist",106),
        [("bool",[14,25,26,52,53,58,63,105,124,132,133,138]),
         ("llist",[99,104])]),["DISK_THM"]),
       [read"%169%101%90%169%1$0@@%4$0@@|@@%169%305%1@%38@@%305%4@%38@@@"])
  fun op exists_strong_ind x = x
    val op exists_strong_ind =
    DT(((("llist",107),
        [("bool",[14,25,26,51,52,53,58,63,105,124,132,133,138]),
         ("llist",[99,104])]),["DISK_THM"]),
       [read"%106%1%114%5%169%136%101%24%119%72%169$3$1@@$2%205$1@$0@@@|@|@@%101%24%119%72%169%136$2$0@@%305$3@$0@@@$2%205$1@$0@@@|@|@@@%119%12%169%305$2@$0@@$1$0@@|@@|@|@"])
  fun op exists_LDROP x = x
    val op exists_LDROP =
    DT(((("llist",108),
        [("bool",
         [2,14,15,25,26,27,51,52,53,54,58,63,86,100,105,124,140,143]),
         ("llist",[14,18,89,104,107]),("num",[9]),("option",[10,11]),
         ("sat",[1,3,5,6,7,11,12,13,14,15,17,18])]),["DISK_THM"]),
       [read"%141%305%1@%47@@%180%64%170%9%178%72%136%162%213$2@%47@@%281%205$1@$0@@@@%1$1@@|@|@|@@"])
  fun op every_coind x = x
    val op every_coind =
    DT(((("llist",110),
        [("bool",[14,25,26,53,54,58,63,100,105,124,132,133,138]),
         ("combin",[8]),("llist",[99,109]),
         ("sat",[1,3,5,6,7,11,13,14,15,17,18])]),["DISK_THM"]),
       [read"%106%1%114%5%169%101%24%119%72%169$2%205$1@$0@@@%136$3$1@@$2$0@@@|@|@@%119%47%169$1$0@@%303$2@$0@@|@@|@|@"])
  fun op every_thm x = x
    val op every_thm =
    DT(((("llist",111),
        [("bool",[25,54,56,58,63,96]),("combin",[8]),
         ("llist",[104,109])]),["DISK_THM"]),
       [read"%136%141%303%1@%234@@%288@@%141%303%1@%205%24@%72@@@%136%1%24@@%303%1@%72@@@@"])
  fun op LL_ALL_THM x = x
    val op LL_ALL_THM =
    DT(((("llist",112),[("llist",[111])]),["DISK_THM"]),
       [read"%136%141%303%1@%234@@%288@@%141%303%1@%205%24@%72@@@%136%1%24@@%303%1@%72@@@@"])
  fun op MONO_every x = x
    val op MONO_every =
    DT(((("llist",113),
        [("bool",[25,51,53,58,63,105,124]),
         ("llist",[110,111])]),["DISK_THM"]),
       [read"%169%101%90%169%1$0@@%4$0@@|@@%169%303%1@%38@@%303%4@%38@@@"])
  fun op every_strong_coind x = x
    val op every_strong_coind =
    DT(((("llist",114),
        [("bool",[51,52,53,58,63,73,102,103,105,124]),
         ("llist",[110,111])]),["DISK_THM"]),
       [read"%106%1%114%5%169%136%101%24%119%72%169$2%205$1@$0@@@$3$1@@|@|@@%101%24%119%72%169$2%205$1@$0@@@%301$2$0@@%303$3@$0@@@|@|@@@%119%47%169$1$0@@%303$2@$0@@|@@|@|@"])
  fun op LFILTER_THM x = x
    val op LFILTER_THM =
    DT(((("llist",116),
        [("bool",[25,26,27,30,51,54,56,58,63,96,105,129,147]),
         ("llist",[15,16,18,104,115]),("option",[16])]),["DISK_THM"]),
       [read"%136%106%1%150%219$0@%234@@%234@|@@%110%2%102%25%120%73%151%220$2@%206$1@$0@@@%187$2$1@@%206$1@%220$2@$0@@@%220$2@$0@@@|@|@|@@"])
  fun op LFILTER_NIL x = x
    val op LFILTER_NIL =
    DT(((("llist",117),
        [("bool",[14,25,26,27,36,53,54,56,58,105,124,129,147]),
         ("combin",[8]),("llist",[109,115])]),["DISK_THM"]),
       [read"%106%1%119%47%169%303%318%333@$1@@$0@@%150%219$1@$0@@%234@@|@|@"])
  fun op LFILTER_EQ_NIL x = x
    val op LFILTER_EQ_NIL =
    DT(((("llist",118),
        [("bool",[25,26,27,30,51,53,54,56,58,63,64,105,106,124]),
         ("combin",[8]),("llist",[17,110,116,117])]),["DISK_THM"]),
       [read"%119%47%141%150%219%1@$0@@%234@@%303%318%333@%1@@$0@@|@"])
  fun op LFILTER_APPEND x = x
    val op LFILTER_APPEND =
    DT(((("llist",119),
        [("bool",[25,26,27,30,51,56,58,63,64,105,124,129,147]),
         ("llist",[18,44,70,116])]),["DISK_THM"]),
       [read"%106%1%119%53%119%54%169%221$1@@%150%219$2@%203$1@$0@@@%203%219$2@$1@@%219$2@$0@@@@|@|@|@"])
  fun op LFLATTEN_THM x = x
    val op LFLATTEN_THM =
    DT(((("llist",121),
        [("bool",[25,26,27,30,51,54,56,58,63,64,105,129,147]),
         ("llist",[15,16,17,18,112,120]),("option",[16])]),["DISK_THM"]),
       [read"%136%150%223%237@@%234@@%136%102%82%152%224%210%236@%77@@@%224%77@@|@@%104%27%122%75%124%84%153%225%211%208$2@$1@@$0@@@%208$2@%225%211$1@$0@@@@|@|@|@@@"])
  fun op LFLATTEN_APPEND x = x
    val op LFLATTEN_APPEND =
    DT(((("llist",122),
        [("bool",
         [13,25,26,27,30,47,48,51,52,53,54,56,58,63,72,78,94,96,105,124,
          143,146]),("llist",[14,18,31,44,121]),
         ("sat",[1,3,5,6,7,11,12,13,14,15])]),["DISK_THM"]),
       [read"%119%28%123%76%150%223%209$1@$0@@@%203$1@%223$0@@@|@|@"])
  fun op LFLATTEN_EQ_NIL x = x
    val op LFLATTEN_EQ_NIL =
    DT(((("llist",123),
        [("bool",[25,26,27,51,53,54,56,58,63,105,124,129,147]),
         ("llist",[46,110,120,122])]),["DISK_THM"]),
       [read"%123%50%141%150%223$0@@%234@@%304%150%234@@$0@@|@"])
  fun op LFLATTEN_SINGLETON x = x
    val op LFLATTEN_SINGLETON =
    DT(((("llist",124),
        [("bool",[25,26,27,51,52,56,58,63,101,105,124,145]),
         ("llist",[14,15,16,17,30,44,46,121,122]),
         ("option",[10,16])]),["DISK_THM"]),
       [read"%119%28%150%223%209$0@%237@@@$0@|@"])
  fun op LZIP_LUNZIP x = x
    val op LZIP_LUNZIP =
    DT(((("llist",127),
        [("bool",[25,26,27,37,51,52,56,58,105,124,143,169]),
         ("combin",[8,11,15,16,17,33,34,35]),
         ("llist",[14,17,18,31,125,126]),("marker",[6,9]),
         ("pair",[4,5,43,44,45,46])]),["DISK_THM"]),
       [read"%125%51%154%255%254$0@@@$0@|@"])
  fun op LUNFOLD_THM x = x
    val op LUNFOLD_THM =
    DT(((("llist",128),
        [("bool",[25,51,56,169]),("llist",[18,28]),("option",[7]),
         ("pair",[49])]),["DISK_THM"]),
       [read"%109%19%101%90%101%88%102%89%136%169%166$3$2@@%263@@%151%250$3@$2@@%235@@@%169%166$3$2@@%284%129$1@$0@@@@%151%250$3@$2@@%206$0@%250$3@$1@@@@@|@|@|@|@"])
  fun op LLIST_EQ x = x
    val op LLIST_EQ =
    DT(((("llist",129),
        [("bool",[2,15,25,26,30,53,54,55,58,63,75,84,99,100,105,124,169]),
         ("llist",[29]),
         ("sat",[1,3,5,6,7,11,12,13,14,15,17,18,19,20,23])]),["DISK_THM"]),
       [read"%108%18%108%21%169%101%90%301%136%151$2$0@@%235@@%151$1$0@@%235@@@%171%25%170%96%136%151$4$2@@%206$1@$4$0@@@@%151$3$2@@%206$1@$3$0@@@@|@|@@|@@%101%90%151$2$0@@$1$0@@|@@|@|@"])
  fun op LUNFOLD_EQ x = x
    val op LUNFOLD_EQ =
    DT(((("llist",130),
        [("bool",[25,26,27,51,52,53,54,55,56,58,63,105,124,169]),
         ("llist",[15,16,17,30,128]),("option",[10,16]),
         ("sat",[1,3,5,6,7,11,12,13,15,17,18])]),["DISK_THM"]),
       [read"%107%6%109%19%101%67%120%48%169%136$3$1@$0@@%101%67%120%48%169$5$1@$0@@%301%136%166$4$1@@%263@@%151$0@%235@@@%170%69%171%91%179%52%136%166$7$4@@%284%129$2@$1@@@@%136%157%227$3@@%279$1@@@%136%163%248$3@@%282$0@@@$8$2@$0@@@@|@|@|@@@|@|@@@%151%250$2@$1@@$0@@|@|@|@|@"])
  fun op LMAP_LUNFOLD x = x
    val op LMAP_LUNFOLD =
    DT(((("llist",131),
        [("bool",[25,26,27,37,51,52,56,58,105,124,143]),
         ("llist",[15,16,43,128,130]),("option",[6,10,11,29,31]),
         ("pair",[4,5,16])]),["DISK_THM"]),
       [read"%105%17%112%23%103%68%151%231$2@%252$1@$0@@@%253%68%276%297%92%96%131$1@$5$0@@||@@$2$0@@|@$0@@|@|@|@"])
  fun op LNTH_LDROP x = x
    val op LNTH_LDROP =
    DT(((("llist",132),
        [("bool",[14,25,26,27,53,56,58,63,105,124]),("llist",[22,88]),
         ("num",[9]),("option",[6,10,11,13,16,18])]),["DISK_THM"]),
       [read"%126%64%119%38%101%90%169%156%239$2@$1@@%278$0@@@%156%226%292%213$2@$1@@@@%278$0@@@|@|@|@"])
  fun op LAPPEND_fromList x = x
    val op LAPPEND_fromList =
    DT(((("llist",133),
        [("bool",[14,25,51,56]),("list",[20,43]),
         ("llist",[18,44,79])]),["DISK_THM"]),
       [read"%118%41%118%43%150%203%307$1@@%307$0@@@%307%183$1@$0@@@|@|@"])
  fun op LTAKE_LENGTH x = x
    val op LTAKE_LENGTH =
    DT(((("llist",134),
        [("bool",[2,14,15,25,26,27,51,53,54,55,56,58,63,75,105,124]),
         ("list",[22]),("llist",[14,34,37]),("num",[7,9]),
         ("option",[10,29]),("prim_rec",[1]),
         ("sat",[1,3,5,6,7,11,12,13,14,15,17,18,19,20,23])]),["DISK_THM"]),
       [read"%126%64%119%47%118%37%169%159%244$2@$1@@%280$0@@@%155$2@%216$0@@@|@|@|@"])
  fun op LTAKE_TAKE_LESS x = x
    val op LTAKE_TAKE_LESS =
    DT(((("llist",135),
        [("arithmetic",[24,25,27,41,46,59,71,93,95,172,173,176,177,180]),
         ("bool",
         [25,26,27,30,36,43,51,52,53,54,56,58,63,96,101,104,105,124]),
         ("list",[109,195,196]),("llist",[36,73,134]),("numeral",[3,5,8]),
         ("option",[6,10,11]),("rich_list",[290]),
         ("sat",[1,3,5,6,7,11,12,13,15])]),["DISK_THM"]),
       [read"%169%136%159%244%64@%47@@%280%37@@@%139%61@%64@@@%159%244%61@%47@@%280%289%61@%37@@@@"])
  fun op LTAKE_LLENGTH_NONE x = x
    val op LTAKE_LLENGTH_NONE =
    DT(((("llist",136),
        [("arithmetic",[28,37]),
         ("bool",
         [2,15,25,26,27,53,54,55,56,58,63,74,83,84,101,105,124,143,145]),
         ("llist",[38,40,65,68,69]),("option",[10,29]),("prim_rec",[1,6]),
         ("sat",[1,3,5,6,7,11,12,13,14,15,17,18,19,20,23])]),["DISK_THM"]),
       [read"%169%136%165%229%47@@%283%64@@@%138%64@%61@@@%159%244%61@%47@@%258@@"])
  fun op toList_LAPPEND_APPEND x = x
    val op toList_LAPPEND_APPEND =
    DT(((("llist",137),
        [("arithmetic",[24,25,26,46,59,71,93,128,172,173,180]),
         ("bool",
         [25,26,27,30,36,43,51,53,54,56,58,63,96,101,104,105,124,129,143,
          147]),("list",[55,104]),
         ("llist",[14,17,49,57,65,66,72,76,77,78,87,134,136]),
         ("marker",[6]),("numeral",[3,8]),
         ("option",[10,16,28,29])]),["DISK_THM"]),
       [read"%169%159%331%203%42@%44@@@%280%93@@@%149%93@%183%291%331%42@@@%291%331%44@@@@@"])
  fun op linear_order_to_llist x = x
    val op linear_order_to_llist =
    DT(((("llist",139),
        [("arithmetic",[28,38,46,71,93,173,176,180]),
         ("bool",
         [2,14,15,25,26,27,30,32,36,48,51,52,53,54,55,56,58,63,64,71,73,74,
          75,81,83,84,92,96,99,100,104,105,124,129,143,147,169]),
         ("combin",[1,3,5,8,11,15,16,17,19,20,33,34,35]),
         ("llist",[23,28,138]),("marker",[6]),("num",[7,9]),
         ("numeral",[3,8]),("option",[6,7,10,11,27]),
         ("pair",[3,4,5,7,16,49]),
         ("pred_set",
         [3,6,10,18,20,26,33,67,74,80,90,120,126,131,140,225,370]),
         ("prim_rec",[1]),
         ("sat",[1,3,5,6,7,11,12,13,14,15,17,18,19,20,23]),
         ("set_relation",[3,4,6,13,15,49,60,63,70,71,92])]),["DISK_THM"]),
       [read"%117%59%106%8%169%136%309$1@$0@@%306$1@$0@@@%178%47%136%142$1@%200%90%130$0@%180%33%156%239$0@$2@@%278$1@@|@@|@@@%136%286$2@%201%296%90%96%134%128$1@$0@@%180%33%180%34%136%139$1@$0@@%136%156%239$1@$4@@%278$3@@@%156%239$0@$4@@%278$2@@@@|@|@@||@@@@%126%33%126%34%101%90%169%136%156%239$2@$3@@%278$0@@@%156%239$1@$3@@%278$0@@@@%155$2@$1@@|@|@|@@@|@@|@|@"])
  fun op LPREFIX_LNIL x = x
    val op LPREFIX_LNIL =
    DT(((("llist",141),
        [("bool",[25,26,27,37,51,56,63,106]),("list",[22,49,255]),
         ("llist",[14,34,37,78,140]),("option",[6,7,10,29]),
         ("rich_list",[266])]),["DISK_THM"]),
       [read"%136%242%234@%47@@%141%242%47@%234@@%150%47@%234@@@"])
  fun op LPREFIX_LCONS x = x
    val op LPREFIX_LCONS =
    DT(((("llist",142),
        [("bool",[25,26,27,37,51,52,53,54,56,58,63,105,106,124,143]),
         ("list",[22,48,49,255]),("llist",[14,17,18,34,37,78,140]),
         ("option",[6,7,10,11,29,31]),("rich_list",[266])]),["DISK_THM"]),
       [read"%136%119%47%101%24%119%72%141%242$2@%205$1@$0@@@%301%150$2@%234@@%178%38%136%150$3@%205$2@$0@@@%242$0@$1@@|@@@|@|@|@@%102%25%120%73%120%48%141%243%206$2@$1@@$0@@%179%39%136%151$1@%206$3@$0@@@%243$2@$0@@|@@|@|@|@@"])
  fun op LPREFIX_LUNFOLD x = x
    val op LPREFIX_LUNFOLD =
    DT(((("llist",143),
        [("bool",
         [25,26,27,36,37,51,52,53,56,58,63,93,95,101,105,124,143,145]),
         ("llist",[14,17,18,128,141,142]),("option",[6,7]),
         ("pair",[5,49])]),["DISK_THM"]),
       [read"%141%242%47@%251%20@%63@@@%326%20%63@@%150%47@%234@@%87%328$0@%63%90%101%24%119%72%169%150%47@%205$1@$0@@@%136%140$1@$2@@%242$0@%251%20@$3@@@@|@|@||@|@@"])
  fun op LPREFIX_REFL x = x
    val op LPREFIX_REFL =
    DT(((("llist",144),
        [("bool",[25,56,63]),("llist",[140]),("option",[6,7]),
         ("rich_list",[267])]),["DISK_THM"]), [read"%242%47@%47@"])
  fun op LPREFIX_ANTISYM x = x
    val op LPREFIX_ANTISYM =
    DT(((("llist",145),
        [("bool",[25,26,27,53,54,56,58,63,105,109,124]),
         ("llist",[77,86,140]),("option",[6,7,11,12,16]),
         ("rich_list",[268]),
         ("sat",
         [1,3,5,6,7,11,12,13,14,15,16,17,18,19,20,23])]),["DISK_THM"]),
       [read"%169%136%242%42@%44@@%242%44@%42@@@%150%42@%44@@"])
  fun op LPREFIX_TRANS x = x
    val op LPREFIX_TRANS =
    DT(((("llist",146),
        [("arithmetic",[95]),("bool",[25,26,27,56,58,63,105,124]),
         ("list",[195,197]),("llist",[135,140]),("option",[6,7,10,11]),
         ("rich_list",[71,269,271])]),["DISK_THM"]),
       [read"%169%136%242%42@%44@@%242%44@%46@@@%242%42@%46@@"])
  fun op LPREFIX_fromList x = x
    val op LPREFIX_fromList =
    DT(((("llist",147),
        [("bool",[25,56]),("llist",[83,140]),
         ("option",[7])]),["DISK_THM"]),
       [read"%118%37%119%47%141%242%307$1@@$0@@%321%331$0@@%159%244%216$1@@$0@@%280$1@@@%100%308$2@$0@|@@|@|@"])
  fun op prefixes_lprefix_total x = x
    val op prefixes_lprefix_total =
    DT(((("llist",148),
        [("arithmetic",[144]),
         ("bool",[25,26,27,52,53,54,55,56,58,63,73,105,124]),
         ("list",[200]),("llist",[135,140]),("marker",[6]),
         ("option",[6,7,10,11]),("rich_list",[71,278]),
         ("sat",[1,3,5,6,7,11,12,13,14,15,17,18,19,20,23])]),["DISK_THM"]),
       [read"%119%47%119%42%119%44%169%136%242$1@$2@@%242$0@$2@@@%301%242$1@$0@@%242$0@$1@@@|@|@|@"])
  fun op LTAKE_IMP_LDROP x = x
    val op LTAKE_IMP_LDROP =
    DT(((("llist",149),
        [("bool",[14,25,26,27,36,51,53,56,58,63,101,105,124,143,145]),
         ("llist",[14,18,34,37,44,79,89]),("num",[7,9]),
         ("option",[10,29])]),["DISK_THM"]),
       [read"%126%64%119%47%118%41%169%159%244$2@$1@@%280$0@@@%178%44%136%162%213$3@$2@@%281$0@@@%150%203%307$1@@$0@@$2@@|@@|@|@|@"])
  fun op LPREFIX_APPEND x = x
    val op LPREFIX_APPEND =
    DT(((("llist",150),
        [("arithmetic",[24,25,26,27,41,46,59,71,93,95,172,173,176,180]),
         ("bool",
         [2,15,25,26,27,30,36,43,52,53,54,55,56,58,63,64,74,84,93,96,101,
          104,105,107,124,129,147]),("list",[57,195]),
         ("llist",
         [32,49,51,66,73,74,77,81,82,84,86,98,134,135,137,140,149]),
         ("numeral",[3,8]),("option",[6,7,10,12,16,20,21,28]),
         ("prim_rec",[4]),("rich_list",[71,204,236]),
         ("sat",[1,3,5,6,7,11,12,13,14,15,17,18,19,20,23])]),["DISK_THM"]),
       [read"%141%242%42@%44@@%178%47%150%44@%203%42@$0@@|@@"])
  end
  val _ = DB.bindl "llist"
  [("lrep_ok_def",lrep_ok_def,DB.Def),
   ("llist_TY_DEF",llist_TY_DEF,DB.Def),
   ("llist_absrep",llist_absrep,DB.Def), ("LNIL",LNIL,DB.Def),
   ("LCONS",LCONS,DB.Def), ("LHD",LHD,DB.Def), ("LTL",LTL,DB.Def),
   ("LNTH",LNTH,DB.Def), ("LUNFOLD",LUNFOLD,DB.Def),
   ("LTAKE",LTAKE,DB.Def), ("LMAP",LMAP,DB.Def),
   ("LAPPEND",LAPPEND,DB.Def), ("LFINITE_def",LFINITE_def,DB.Def),
   ("llength_rel_def",llength_rel_def,DB.Def), ("LLENGTH",LLENGTH,DB.Def),
   ("toList",toList,DB.Def), ("fromList",fromList,DB.Def),
   ("LDROP",LDROP,DB.Def), ("exists_def",exists_def,DB.Def),
   ("every_def",every_def,DB.Def), ("LFILTER",LFILTER,DB.Def),
   ("LFLATTEN",LFLATTEN,DB.Def), ("LZIP_THM",LZIP_THM,DB.Def),
   ("LUNZIP_THM",LUNZIP_THM,DB.Def),
   ("linear_order_to_list_f_def",linear_order_to_list_f_def,DB.Def),
   ("LPREFIX_def",LPREFIX_def,DB.Def),
   ("lrep_ok_rules",lrep_ok_rules,DB.Thm),
   ("lrep_ok_coind",lrep_ok_coind,DB.Thm),
   ("lrep_ok_cases",lrep_ok_cases,DB.Thm),
   ("llist_rep_LCONS",llist_rep_LCONS,DB.Thm),
   ("LHD_LCONS",LHD_LCONS,DB.Thm), ("LTL_LCONS",LTL_LCONS,DB.Thm),
   ("LHDTL_CONS_THM",LHDTL_CONS_THM,DB.Thm),
   ("llist_CASES",llist_CASES,DB.Thm), ("LHD_THM",LHD_THM,DB.Thm),
   ("LTL_THM",LTL_THM,DB.Thm), ("LCONS_NOT_NIL",LCONS_NOT_NIL,DB.Thm),
   ("LCONS_11",LCONS_11,DB.Thm), ("LHD_EQ_NONE",LHD_EQ_NONE,DB.Thm),
   ("LTL_EQ_NONE",LTL_EQ_NONE,DB.Thm),
   ("LHDTL_EQ_SOME",LHDTL_EQ_SOME,DB.Thm), ("LNTH_THM",LNTH_THM,DB.Thm),
   ("llist_ue_Axiom",llist_ue_Axiom,DB.Thm),
   ("llist_Axiom",llist_Axiom,DB.Thm),
   ("llist_Axiom_1",llist_Axiom_1,DB.Thm),
   ("llist_Axiom_1ue",llist_Axiom_1ue,DB.Thm),
   ("LLIST_BISIMULATION0",LLIST_BISIMULATION0,DB.Thm),
   ("LLIST_BISIMULATION",LLIST_BISIMULATION,DB.Thm),
   ("LLIST_STRONG_BISIMULATION",LLIST_STRONG_BISIMULATION,DB.Thm),
   ("LNTH_EQ",LNTH_EQ,DB.Thm), ("LTAKE_THM",LTAKE_THM,DB.Thm),
   ("LTAKE_SNOC_LNTH",LTAKE_SNOC_LNTH,DB.Thm),
   ("LTAKE_EQ_NONE_LNTH",LTAKE_EQ_NONE_LNTH,DB.Thm),
   ("LTAKE_NIL_EQ_SOME",LTAKE_NIL_EQ_SOME,DB.Thm),
   ("LTAKE_NIL_EQ_NONE",LTAKE_NIL_EQ_NONE,DB.Thm),
   ("LTAKE_EQ",LTAKE_EQ,DB.Thm),
   ("LTAKE_CONS_EQ_NONE",LTAKE_CONS_EQ_NONE,DB.Thm),
   ("LTAKE_CONS_EQ_SOME",LTAKE_CONS_EQ_SOME,DB.Thm),
   ("LTAKE_EQ_SOME_CONS",LTAKE_EQ_SOME_CONS,DB.Thm),
   ("LMAP_APPEND",LMAP_APPEND,DB.Thm),
   ("LAPPEND_EQ_LNIL",LAPPEND_EQ_LNIL,DB.Thm),
   ("LAPPEND_ASSOC",LAPPEND_ASSOC,DB.Thm), ("LMAP_MAP",LMAP_MAP,DB.Thm),
   ("LAPPEND_NIL_2ND",LAPPEND_NIL_2ND,DB.Thm),
   ("LHD_LAPPEND",LHD_LAPPEND,DB.Thm),
   ("LTAKE_LAPPEND1",LTAKE_LAPPEND1,DB.Thm),
   ("LFINITE_rules",LFINITE_rules,DB.Thm),
   ("LFINITE_ind",LFINITE_ind,DB.Thm),
   ("LFINITE_strongind",LFINITE_strongind,DB.Thm),
   ("LFINITE_cases",LFINITE_cases,DB.Thm),
   ("LFINITE_THM",LFINITE_THM,DB.Thm), ("LFINITE",LFINITE,DB.Thm),
   ("llength_rel_rules",llength_rel_rules,DB.Thm),
   ("llength_rel_ind",llength_rel_ind,DB.Thm),
   ("llength_rel_strongind",llength_rel_strongind,DB.Thm),
   ("llength_rel_cases",llength_rel_cases,DB.Thm),
   ("LLENGTH_THM",LLENGTH_THM,DB.Thm),
   ("LFINITE_HAS_LENGTH",LFINITE_HAS_LENGTH,DB.Thm),
   ("NOT_LFINITE_NO_LENGTH",NOT_LFINITE_NO_LENGTH,DB.Thm),
   ("LFINITE_LLENGTH",LFINITE_LLENGTH,DB.Thm),
   ("LFINITE_INDUCTION",LFINITE_INDUCTION,DB.Thm),
   ("LFINITE_STRONG_INDUCTION",LFINITE_STRONG_INDUCTION,DB.Thm),
   ("LFINITE_MAP",LFINITE_MAP,DB.Thm),
   ("LFINITE_APPEND",LFINITE_APPEND,DB.Thm),
   ("LTAKE_LNTH_EL",LTAKE_LNTH_EL,DB.Thm),
   ("NOT_LFINITE_APPEND",NOT_LFINITE_APPEND,DB.Thm),
   ("LLENGTH_MAP",LLENGTH_MAP,DB.Thm),
   ("LLENGTH_APPEND",LLENGTH_APPEND,DB.Thm),
   ("toList_THM",toList_THM,DB.Thm),
   ("LFINITE_fromList",LFINITE_fromList,DB.Thm),
   ("LLENGTH_fromList",LLENGTH_fromList,DB.Thm),
   ("LTAKE_fromList",LTAKE_fromList,DB.Thm),
   ("from_toList",from_toList,DB.Thm),
   ("LFINITE_toList",LFINITE_toList,DB.Thm),
   ("LFINITE_toList_SOME",LFINITE_toList_SOME,DB.Thm),
   ("to_fromList",to_fromList,DB.Thm),
   ("LTAKE_LAPPEND2",LTAKE_LAPPEND2,DB.Thm),
   ("LDROP_THM",LDROP_THM,DB.Thm), ("LDROP1_THM",LDROP1_THM,DB.Thm),
   ("NOT_LFINITE_TAKE",NOT_LFINITE_TAKE,DB.Thm),
   ("LFINITE_TAKE",LFINITE_TAKE,DB.Thm),
   ("NOT_LFINITE_DROP",NOT_LFINITE_DROP,DB.Thm),
   ("LFINITE_DROP",LFINITE_DROP,DB.Thm), ("LTAKE_DROP",LTAKE_DROP,DB.Thm),
   ("LDROP_ADD",LDROP_ADD,DB.Thm),
   ("LFINITE_LNTH_NONE",LFINITE_LNTH_NONE,DB.Thm),
   ("LNTH_LAPPEND",LNTH_LAPPEND,DB.Thm),
   ("exists_rules",exists_rules,DB.Thm), ("exists_ind",exists_ind,DB.Thm),
   ("exists_strongind",exists_strongind,DB.Thm),
   ("exists_cases",exists_cases,DB.Thm), ("exists_thm",exists_thm,DB.Thm),
   ("exists_LNTH",exists_LNTH,DB.Thm), ("MONO_exists",MONO_exists,DB.Thm),
   ("exists_strong_ind",exists_strong_ind,DB.Thm),
   ("exists_LDROP",exists_LDROP,DB.Thm),
   ("every_coind",every_coind,DB.Thm), ("every_thm",every_thm,DB.Thm),
   ("LL_ALL_THM",LL_ALL_THM,DB.Thm), ("MONO_every",MONO_every,DB.Thm),
   ("every_strong_coind",every_strong_coind,DB.Thm),
   ("LFILTER_THM",LFILTER_THM,DB.Thm), ("LFILTER_NIL",LFILTER_NIL,DB.Thm),
   ("LFILTER_EQ_NIL",LFILTER_EQ_NIL,DB.Thm),
   ("LFILTER_APPEND",LFILTER_APPEND,DB.Thm),
   ("LFLATTEN_THM",LFLATTEN_THM,DB.Thm),
   ("LFLATTEN_APPEND",LFLATTEN_APPEND,DB.Thm),
   ("LFLATTEN_EQ_NIL",LFLATTEN_EQ_NIL,DB.Thm),
   ("LFLATTEN_SINGLETON",LFLATTEN_SINGLETON,DB.Thm),
   ("LZIP_LUNZIP",LZIP_LUNZIP,DB.Thm), ("LUNFOLD_THM",LUNFOLD_THM,DB.Thm),
   ("LLIST_EQ",LLIST_EQ,DB.Thm), ("LUNFOLD_EQ",LUNFOLD_EQ,DB.Thm),
   ("LMAP_LUNFOLD",LMAP_LUNFOLD,DB.Thm), ("LNTH_LDROP",LNTH_LDROP,DB.Thm),
   ("LAPPEND_fromList",LAPPEND_fromList,DB.Thm),
   ("LTAKE_LENGTH",LTAKE_LENGTH,DB.Thm),
   ("LTAKE_TAKE_LESS",LTAKE_TAKE_LESS,DB.Thm),
   ("LTAKE_LLENGTH_NONE",LTAKE_LLENGTH_NONE,DB.Thm),
   ("toList_LAPPEND_APPEND",toList_LAPPEND_APPEND,DB.Thm),
   ("linear_order_to_llist",linear_order_to_llist,DB.Thm),
   ("LPREFIX_LNIL",LPREFIX_LNIL,DB.Thm),
   ("LPREFIX_LCONS",LPREFIX_LCONS,DB.Thm),
   ("LPREFIX_LUNFOLD",LPREFIX_LUNFOLD,DB.Thm),
   ("LPREFIX_REFL",LPREFIX_REFL,DB.Thm),
   ("LPREFIX_ANTISYM",LPREFIX_ANTISYM,DB.Thm),
   ("LPREFIX_TRANS",LPREFIX_TRANS,DB.Thm),
   ("LPREFIX_fromList",LPREFIX_fromList,DB.Thm),
   ("prefixes_lprefix_total",prefixes_lprefix_total,DB.Thm),
   ("LTAKE_IMP_LDROP",LTAKE_IMP_LDROP,DB.Thm),
   ("LPREFIX_APPEND",LPREFIX_APPEND,DB.Thm)]

  local open Portable GrammarSpecials Parse
    fun UTOFF f = Feedback.trace("Parse.unicode_trace_off_complaints",0)f
  in
  val _ = mk_local_grms [("set_relationTheory.set_relation_grammars",
                          set_relationTheory.set_relation_grammars),
                         ("quantHeuristicsTheory.quantHeuristics_grammars",
                          quantHeuristicsTheory.quantHeuristics_grammars),
                         ("rich_listTheory.rich_list_grammars",
                          rich_listTheory.rich_list_grammars)]
  val _ = List.app (update_grms reveal) []
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("lrep_ok", (Term.prim_mk_const { Name = "lrep_ok", Thy = "llist"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("lrep_ok", (Term.prim_mk_const { Name = "lrep_ok", Thy = "llist"}))
  val _ = update_grms temp_add_type "llist"
  val _ = update_grms temp_add_type "llist"
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("llist_rep", (Term.prim_mk_const { Name = "llist_rep", Thy = "llist"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("llist_abs", (Term.prim_mk_const { Name = "llist_abs", Thy = "llist"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("LNIL", (Term.prim_mk_const { Name = "LNIL", Thy = "llist"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("LNIL", (Term.prim_mk_const { Name = "LNIL", Thy = "llist"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("LCONS", (Term.prim_mk_const { Name = "LCONS", Thy = "llist"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("LCONS", (Term.prim_mk_const { Name = "LCONS", Thy = "llist"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("LHD", (Term.prim_mk_const { Name = "LHD", Thy = "llist"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("LHD", (Term.prim_mk_const { Name = "LHD", Thy = "llist"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("LTL", (Term.prim_mk_const { Name = "LTL", Thy = "llist"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("LTL", (Term.prim_mk_const { Name = "LTL", Thy = "llist"}))
  val _ = update_grms
       (UTOFF temp_add_listform)
       {separator = [TOK ";", BreakSpace(1, 0)]
, leftdelim = [TOK "[|"]
, rightdelim = [TOK "|]"]
, cons = "LCONS", nilstr = "LNIL", block_info = (INCONSISTENT, 0)}
  val _ = update_grms
       (UTOFF temp_add_rule)
       {term_name = "LCONS", fixity = Infix(HOLgrammars.RIGHT, 490),
pp_elements = [TOK ":::", BreakSpace(0, 2)],
paren_style = OnlyIfNecessary,
block_style = (AroundSameName, (INCONSISTENT, 2))}
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("LNTH", (Term.prim_mk_const { Name = "LNTH", Thy = "llist"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("LUNFOLD", (Term.prim_mk_const { Name = "LUNFOLD", Thy = "llist"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("LTAKE", (Term.prim_mk_const { Name = "LTAKE", Thy = "llist"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("LMAP", (Term.prim_mk_const { Name = "LMAP", Thy = "llist"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("LAPPEND", (Term.prim_mk_const { Name = "LAPPEND", Thy = "llist"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("LFINITE", (Term.prim_mk_const { Name = "LFINITE", Thy = "llist"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("LFINITE", (Term.prim_mk_const { Name = "LFINITE", Thy = "llist"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("llength_rel", (Term.prim_mk_const { Name = "llength_rel", Thy = "llist"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("llength_rel", (Term.prim_mk_const { Name = "llength_rel", Thy = "llist"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("LLENGTH", (Term.prim_mk_const { Name = "LLENGTH", Thy = "llist"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("LLENGTH", (Term.prim_mk_const { Name = "LLENGTH", Thy = "llist"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("toList", (Term.prim_mk_const { Name = "toList", Thy = "llist"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("toList", (Term.prim_mk_const { Name = "toList", Thy = "llist"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("fromList", (Term.prim_mk_const { Name = "fromList", Thy = "llist"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("LDROP", (Term.prim_mk_const { Name = "LDROP", Thy = "llist"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("exists", (Term.prim_mk_const { Name = "exists", Thy = "llist"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("exists", (Term.prim_mk_const { Name = "exists", Thy = "llist"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("every", (Term.prim_mk_const { Name = "every", Thy = "llist"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("every", (Term.prim_mk_const { Name = "every", Thy = "llist"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("LL_ALL", (Term.prim_mk_const { Name = "every", Thy = "llist"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("every", (Term.prim_mk_const { Name = "every", Thy = "llist"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("LFILTER", (Term.prim_mk_const { Name = "LFILTER", Thy = "llist"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("LFLATTEN", (Term.prim_mk_const { Name = "LFLATTEN", Thy = "llist"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("LZIP", (Term.prim_mk_const { Name = "LZIP", Thy = "llist"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("LUNZIP", (Term.prim_mk_const { Name = "LUNZIP", Thy = "llist"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("linear_order_to_list_f", (Term.prim_mk_const { Name = "linear_order_to_list_f", Thy = "llist"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("linear_order_to_list_f", (Term.prim_mk_const { Name = "linear_order_to_list_f", Thy = "llist"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("LPREFIX", (Term.prim_mk_const { Name = "LPREFIX", Thy = "llist"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("LPREFIX", (Term.prim_mk_const { Name = "LPREFIX", Thy = "llist"}))
  val llist_grammars = Parse.current_lgrms()
  end
  val _ = Theory.LoadableThyData.temp_encoded_update {
    thy = "llist",
    thydataty = "simp",
    data =
        "llist.LHD_THM llist.LLENGTH_THM llist.LPREFIX_REFL llist.LPREFIX_LNIL llist.LZIP_LUNZIP llist.LUNZIP_THM llist.LZIP_THM llist.LFLATTEN_APPEND llist.LFLATTEN_THM llist.LFILTER_THM llist.every_thm llist.exists_thm llist.LDROP_THM llist.fromList llist.LMAP llist.LFINITE_THM llist.LAPPEND_EQ_LNIL llist.LAPPEND llist.LNTH_THM llist.LTAKE_NIL_EQ_NONE llist.LTAKE_NIL_EQ_SOME llist.LTAKE_THM llist.LTL_EQ_NONE llist.LTL_THM llist.LHD_EQ_NONE llist.LCONS_11 llist.LCONS_NOT_NIL"
  }
  val _ = Theory.LoadableThyData.temp_encoded_update {
    thy = "llist",
    thydataty = "rule_induction",
    data =
        "llist.LFINITE_strongind llist.exists_strongind llist.llength_rel_strongind"
  }
  val _ = Theory.LoadableThyData.temp_encoded_update {
    thy = "llist",
    thydataty = "mono",
    data = "llist.MONO_exists llist.MONO_every"
  }
  val _ = Theory.LoadableThyData.temp_encoded_update {
    thy = "llist",
    thydataty = "compute",
    data =
        "llist.every_def llist.linear_order_to_list_f_def llist.LPREFIX_def"
  }
  val _ = Theory.LoadableThyData.temp_encoded_update {
    thy = "llist",
    thydataty = "TexTokenMap",
    data =
        "2.[|22.\\\\HOLTokenLeftDenote{}1.2.|]23.\\\\HOLTokenRightDenote{}1."
  }

val _ = if !Globals.print_thy_loads then print "done\n" else ()
val _ = Theory.load_complete "llist"
end
