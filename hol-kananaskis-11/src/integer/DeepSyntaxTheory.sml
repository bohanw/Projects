structure DeepSyntaxTheory :> DeepSyntaxTheory =
struct
  val _ = if !Globals.print_thy_loads then print "Loading DeepSyntaxTheory ... " else ()
  open Type Term Thm
  infixr -->

  fun C s t ty = mk_thy_const{Name=s,Thy=t,Ty=ty}
  fun T s t A = mk_thy_type{Tyop=s, Thy=t,Args=A}
  fun V s q = mk_var(s,q)
  val U     = mk_vartype
  (*  Parents *)
  local open int_arithTheory
  in end;
  val _ = Theory.link_parents
          ("DeepSyntax",
          Arbnum.fromString "1488587705",
          Arbnum.fromString "194306")
          [("int_arith",
           Arbnum.fromString "1488587685",
           Arbnum.fromString "137740")];
  val _ = Theory.incorporate_types "DeepSyntax" [("deep_form", 0)];

  val idvector = 
    let fun ID(thy,oth) = {Thy = thy, Other = oth}
    in Vector.fromList
  [ID("min", "fun"), ID("DeepSyntax", "deep_form"), ID("integer", "int"),
   ID("min", "bool"), ID("num", "num"), ID("ind_type", "recspace"),
   ID("pair", "prod"), ID("bool", "!"), ID("arithmetic", "+"),
   ID("pair", ","), ID("bool", "/\\"), ID("num", "0"), ID("min", "="),
   ID("min", "==>"), ID("bool", "?"), ID("bool", "ARB"),
   ID("DeepSyntax", "Aset"), ID("arithmetic", "BIT1"),
   ID("ind_type", "BOTTOM"), ID("DeepSyntax", "Bset"), ID("bool", "COND"),
   ID("ind_type", "CONSTR"), ID("DeepSyntax", "Conjn"),
   ID("bool", "DATATYPE"), ID("DeepSyntax", "Disjn"),
   ID("pred_set", "EMPTY"), ID("bool", "F"), ID("ind_type", "FCONS"),
   ID("bool", "IN"), ID("pred_set", "INSERT"), ID("combin", "K"),
   ID("DeepSyntax", "LTx"), ID("arithmetic", "NUMERAL"),
   ID("DeepSyntax", "Negn"), ID("num", "SUC"), ID("bool", "T"),
   ID("bool", "TYPE_DEFINITION"), ID("pred_set", "UNION"),
   ID("DeepSyntax", "UnrelatedBool"), ID("arithmetic", "ZERO"),
   ID("bool", "\\/"), ID("DeepSyntax", "alldivide"),
   ID("basicSize", "bool_size"), ID("DeepSyntax", "deep_form_CASE"),
   ID("DeepSyntax", "deep_form_size"), ID("DeepSyntax", "eval_form"),
   ID("integer", "int_add"), ID("integer", "int_divides"),
   ID("integer", "int_le"), ID("integer", "int_lt"),
   ID("integer", "int_mul"), ID("integer", "int_neg"),
   ID("integer", "int_of_num"), ID("DeepSyntax", "neginf"),
   ID("DeepSyntax", "posinf"), ID("DeepSyntax", "xDivided"),
   ID("DeepSyntax", "xEQ"), ID("DeepSyntax", "xLT"), ID("bool", "~")]
  end;
  local open SharingTables
  in
  val tyvector = build_type_vector idvector
  [TYOP [1], TYOP [2], TYOP [0, 1, 0], TYOP [0, 1, 2], TYOP [0, 0, 0],
   TYOP [3], TYOP [0, 1, 5], TYOP [0, 0, 6], TYOP [4], TYOP [0, 0, 8],
   TYV "'a", TYOP [0, 1, 10], TYOP [0, 1, 11], TYOP [0, 12, 10],
   TYOP [0, 11, 13], TYOP [0, 11, 14], TYOP [0, 11, 15], TYOP [0, 5, 10],
   TYOP [0, 17, 16], TYOP [0, 0, 10], TYOP [0, 19, 18], TYOP [0, 0, 19],
   TYOP [0, 21, 20], TYOP [0, 21, 22], TYOP [0, 0, 23], TYOP [0, 5, 0],
   TYOP [0, 0, 4], TYOP [0, 5, 7], TYOP [6, 1, 1], TYOP [6, 5, 28],
   TYOP [5, 29], TYOP [0, 30, 5], TYOP [0, 0, 5], TYOP [0, 3, 5],
   TYOP [0, 2, 33], TYOP [0, 2, 34], TYOP [0, 2, 35], TYOP [0, 25, 36],
   TYOP [0, 4, 37], TYOP [0, 26, 38], TYOP [0, 26, 39], TYOP [0, 10, 10],
   TYOP [0, 10, 41], TYOP [0, 0, 42], TYOP [0, 0, 43], TYOP [0, 0, 41],
   TYOP [0, 0, 30], TYOP [0, 5, 5], TYOP [0, 47, 5], TYOP [0, 32, 5],
   TYOP [0, 17, 5], TYOP [0, 50, 5], TYOP [0, 19, 5], TYOP [0, 52, 5],
   TYOP [0, 49, 5], TYOP [0, 45, 5], TYOP [0, 55, 5], TYOP [0, 21, 5],
   TYOP [0, 57, 5], TYOP [0, 44, 5], TYOP [0, 59, 5], TYOP [0, 11, 5],
   TYOP [0, 61, 5], TYOP [0, 12, 5], TYOP [0, 63, 5], TYOP [0, 31, 5],
   TYOP [0, 65, 5], TYOP [0, 6, 5], TYOP [0, 8, 8], TYOP [0, 8, 68],
   TYOP [0, 28, 29], TYOP [0, 5, 70], TYOP [0, 1, 28], TYOP [0, 1, 72],
   TYOP [0, 5, 47], TYOP [0, 10, 5], TYOP [0, 10, 75], TYOP [0, 0, 32],
   TYOP [0, 6, 67], TYOP [0, 1, 6], TYOP [0, 8, 5], TYOP [0, 8, 80],
   TYOP [0, 30, 31], TYOP [0, 46, 5], TYOP [0, 83, 5], TYOP [0, 6, 6],
   TYOP [0, 6, 85], TYOP [0, 5, 86], TYOP [0, 8, 30], TYOP [0, 88, 30],
   TYOP [0, 29, 89], TYOP [0, 8, 90], TYOP [0, 88, 88], TYOP [0, 30, 92],
   TYOP [0, 1, 67], TYOP [0, 1, 85], TYOP [0, 5, 6], TYOP [0, 31, 83],
   TYOP [0, 5, 8], TYOP [0, 1, 1], TYOP [0, 1, 99], TYOP [0, 8, 1]]
  end
  val _ = Theory.incorporate_consts "DeepSyntax" tyvector
     [("xLT", 2), ("xEQ", 2), ("xDivided", 3), ("posinf", 4),
      ("neginf", 4), ("eval_form", 7), ("deep_form_size", 9),
      ("deep_form_CASE", 24), ("alldivide", 7), ("UnrelatedBool", 25),
      ("Negn", 4), ("LTx", 2), ("Disjn", 26), ("Conjn", 26), ("Bset", 27),
      ("Aset", 27)];

  local open SharingTables
  in
  val tmvector = build_term_vector idvector tyvector
  [TMV("'deep_form'", 31), TMV("M", 0), TMV("M'", 0), TMV("P", 32),
   TMV("P", 6), TMV("a", 5), TMV("a", 0), TMV("a", 1), TMV("a", 30),
   TMV("a'", 5), TMV("a'", 0), TMV("a'", 1), TMV("a0", 5), TMV("a0", 0),
   TMV("a0", 1), TMV("a0", 30), TMV("a0'", 0), TMV("a0'", 1),
   TMV("a0'", 30), TMV("a1", 0), TMV("a1", 1), TMV("a1", 30),
   TMV("a1'", 0), TMV("a1'", 1), TMV("b", 5), TMV("b", 1), TMV("b0", 5),
   TMV("d", 0), TMV("d", 1), TMV("d0", 0), TMV("dd", 0),
   TMV("deep_form", 40), TMV("f", 0), TMV("f", 21), TMV("f'", 21),
   TMV("f0", 44), TMV("f1", 0), TMV("f1", 21), TMV("f1", 44),
   TMV("f1'", 21), TMV("f2", 0), TMV("f2", 19), TMV("f2", 45),
   TMV("f2'", 19), TMV("f3", 17), TMV("f3'", 17), TMV("f4", 11),
   TMV("f4'", 11), TMV("f5", 11), TMV("f5'", 11), TMV("f6", 11),
   TMV("f6'", 11), TMV("f7", 12), TMV("f7'", 12), TMV("fn", 19),
   TMV("i", 1), TMV("i0", 1), TMV("i1", 1), TMV("i2", 1), TMV("j", 1),
   TMV("n", 8), TMV("pos", 5), TMV("rep", 46), TMV("x", 1), TMV("y", 1),
   TMC(7, 48), TMC(7, 49), TMC(7, 51), TMC(7, 53), TMC(7, 54), TMC(7, 56),
   TMC(7, 58), TMC(7, 60), TMC(7, 62), TMC(7, 64), TMC(7, 66), TMC(7, 67),
   TMC(7, 65), TMC(8, 69), TMC(9, 71), TMC(9, 73), TMC(10, 74), TMC(11, 8),
   TMC(12, 76), TMC(12, 74), TMC(12, 77), TMC(12, 78), TMC(12, 79),
   TMC(12, 81), TMC(12, 82), TMC(13, 74), TMC(14, 48), TMC(14, 49),
   TMC(14, 53), TMC(14, 84), TMC(14, 67), TMC(14, 65), TMC(15, 5),
   TMC(15, 1), TMC(16, 27), TMC(17, 68), TMC(18, 30), TMC(19, 27),
   TMC(20, 87), TMC(21, 91), TMC(22, 26), TMC(23, 47), TMC(24, 26),
   TMC(25, 6), TMC(26, 5), TMC(27, 93), TMC(28, 94), TMC(29, 95),
   TMC(30, 96), TMC(31, 2), TMC(32, 68), TMC(33, 4), TMC(34, 68),
   TMC(35, 5), TMC(36, 97), TMC(37, 86), TMC(38, 25), TMC(39, 8),
   TMC(40, 74), TMC(41, 7), TMC(42, 98), TMC(43, 24), TMC(44, 9),
   TMC(45, 7), TMC(46, 100), TMC(47, 79), TMC(48, 79), TMC(49, 79),
   TMC(50, 100), TMC(51, 99), TMC(52, 101), TMC(53, 4), TMC(54, 4),
   TMC(55, 3), TMC(56, 2), TMC(57, 2), TMC(58, 47)]
  end
  local
  val DT = Thm.disk_thm val read = Term.read_raw tmvector
  in
  fun op deep_form_TY_DEF x = x
    val op deep_form_TY_DEF =
    DT(((("DeepSyntax",0),
        [("bool",[14,25,26,53,132,133,138])]),["DISK_THM"]),
       [read"%94%62%119%18%75%0%90%77%18%90%123%96%15%96%21%81%89$2@%15%21%104%82@%79%97@%80%98@%98@@@%110$1@%110$0@%60%101|@@@||$1@$0@@@%81$3$1@@$3$0@@@|@|@@%123%96%15%96%21%81%89$2@%15%21%104%117%82@@%79%97@%80%98@%98@@@%110$1@%110$0@%60%101|@@@||$1@$0@@@%81$3$1@@$3$0@@@|@|@@%123%96%8%81%89$1@%8%104%117%117%82@@@%79%97@%80%98@%98@@@%110$0@%60%101|@@|$0@@@$2$0@@|@@%123%91%5%89$1@%5%104%117%117%117%82@@@@%79$0@%80%98@%98@@@%60%101|@|$0@@|@@%123%95%7%89$1@%7%104%117%117%117%117%82@@@@@%79%97@%80$0@%98@@@%60%101|@|$0@@|@@%123%95%7%89$1@%7%104%117%117%117%117%117%82@@@@@@%79%97@%80$0@%98@@@%60%101|@|$0@@|@@%123%95%7%89$1@%7%104%117%117%117%117%117%117%82@@@@@@@%79%97@%80$0@%98@@@%60%101|@|$0@@|@@%95%14%95%20%89$2@%14%20%104%117%117%117%117%117%117%117%82@@@@@@@@%79%97@%80$1@$0@@@%60%101|@||$1@$0@@|@|@@@@@@@@@$1$0@@|@@$0$1@@|@|@$0@|@"])
  fun op deep_form_case_def x = x
    val op deep_form_case_def =
    DT(((("DeepSyntax",18),
        [("DeepSyntax",[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17]),
         ("bool",[14,25,26,31,53,63,132,133,138,181]),("ind_type",[33,34]),
         ("pair",[8,9])]),["DISK_THM"]),
       [read"%81%66%13%66%19%71%33%71%37%68%41%67%44%73%46%73%48%73%50%74%52%83%126%105$9@$8@@$7@$6@$5@$4@$3@$2@$1@$0@@$7$9@$8@@|@|@|@|@|@|@|@|@|@|@@%81%66%13%66%19%71%33%71%37%68%41%67%44%73%46%73%48%73%50%74%52%83%126%107$9@$8@@$7@$6@$5@$4@$3@$2@$1@$0@@$6$9@$8@@|@|@|@|@|@|@|@|@|@|@@%81%66%6%71%33%71%37%68%41%67%44%73%46%73%48%73%50%74%52%83%126%116$8@@$7@$6@$5@$4@$3@$2@$1@$0@@$5$8@@|@|@|@|@|@|@|@|@|@@%81%65%5%71%33%71%37%68%41%67%44%73%46%73%48%73%50%74%52%83%126%121$8@@$7@$6@$5@$4@$3@$2@$1@$0@@$4$8@@|@|@|@|@|@|@|@|@|@@%81%76%7%71%33%71%37%68%41%67%44%73%46%73%48%73%50%74%52%83%126%140$8@@$7@$6@$5@$4@$3@$2@$1@$0@@$3$8@@|@|@|@|@|@|@|@|@|@@%81%76%7%71%33%71%37%68%41%67%44%73%46%73%48%73%50%74%52%83%126%114$8@@$7@$6@$5@$4@$3@$2@$1@$0@@$2$8@@|@|@|@|@|@|@|@|@|@@%81%76%7%71%33%71%37%68%41%67%44%73%46%73%48%73%50%74%52%83%126%139$8@@$7@$6@$5@$4@$3@$2@$1@$0@@$1$8@@|@|@|@|@|@|@|@|@|@@%76%14%76%20%71%33%71%37%68%41%67%44%73%46%73%48%73%50%74%52%83%126%138$9@$8@@$7@$6@$5@$4@$3@$2@$1@$0@@$0$9@$8@@|@|@|@|@|@|@|@|@|@|@@@@@@@@"])
  fun op deep_form_size_def x = x
    val op deep_form_size_def =
    DT(((("DeepSyntax",19),
        [("DeepSyntax",[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17]),
         ("bool",[14,25,26,31,53,63,132,133,138,181]),("ind_type",[33,34]),
         ("pair",[8,9])]),["DISK_THM"]),
       [read"%81%66%13%66%19%88%127%105$1@$0@@@%78%115%100%122@@@%78%127$1@@%127$0@@@@|@|@@%81%66%13%66%19%88%127%107$1@$0@@@%78%115%100%122@@@%78%127$1@@%127$0@@@@|@|@@%81%66%6%88%127%116$0@@@%78%115%100%122@@@%127$0@@@|@@%81%65%5%88%127%121$0@@@%78%115%100%122@@@%125$0@@@|@@%81%76%7%88%127%140$0@@@%115%100%122@@@|@@%81%76%7%88%127%114$0@@@%115%100%122@@@|@@%81%76%7%88%127%139$0@@@%115%100%122@@@|@@%76%14%76%20%88%127%138$1@$0@@@%115%100%122@@@|@|@@@@@@@@"])
  fun op eval_form_def x = x
    val op eval_form_def =
    DT(((("DeepSyntax",27),
        [("DeepSyntax",[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17]),
         ("bool",[14,25,26,31,53,63,132,133,138,181]),("ind_type",[33,34]),
         ("pair",[8,9])]),["DISK_THM"]),
       [read"%81%66%36%66%40%76%63%84%128%105$2@$1@@$0@@%81%128$2@$0@@%128$1@$0@@@|@|@|@@%81%66%36%66%40%76%63%84%128%107$2@$1@@$0@@%123%128$2@$0@@%128$1@$0@@@|@|@|@@%81%66%32%76%63%84%128%116$1@@$0@@%141%128$1@$0@@@|@|@@%81%65%24%76%63%84%128%121$1@@$0@@$1@|@|@@%81%76%55%76%63%84%128%140$1@@$0@@%132$0@$1@@|@|@@%81%76%55%76%63%84%128%114$1@@$0@@%132$1@$0@@|@|@@%81%76%55%76%63%84%128%139$1@@$0@@%87$0@$1@@|@|@@%76%57%76%58%76%63%84%128%138$2@$1@@$0@@%130$2@%129$0@$1@@@|@|@|@@@@@@@@"])
  fun op neginf_def x = x
    val op neginf_def =
    DT(((("DeepSyntax",28),
        [("DeepSyntax",[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17]),
         ("bool",[14,25,26,31,53,63,132,133,138,181]),("ind_type",[33,34]),
         ("pair",[8,9])]),["DISK_THM"]),
       [read"%81%66%36%66%40%85%136%105$1@$0@@@%105%136$1@@%136$0@@@|@|@@%81%66%36%66%40%85%136%107$1@$0@@@%107%136$1@@%136$0@@@|@|@@%81%66%32%85%136%116$0@@@%116%136$0@@@|@@%81%65%24%85%136%121$0@@@%121$0@@|@@%81%76%55%85%136%140$0@@@%121%118@@|@@%81%76%55%85%136%114$0@@@%121%109@@|@@%81%76%55%85%136%139$0@@@%121%109@@|@@%76%57%76%58%85%136%138$1@$0@@@%138$1@$0@@|@|@@@@@@@@"])
  fun op posinf_def x = x
    val op posinf_def =
    DT(((("DeepSyntax",29),
        [("DeepSyntax",[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17]),
         ("bool",[14,25,26,31,53,63,132,133,138,181]),("ind_type",[33,34]),
         ("pair",[8,9])]),["DISK_THM"]),
       [read"%81%66%36%66%40%85%137%105$1@$0@@@%105%137$1@@%137$0@@@|@|@@%81%66%36%66%40%85%137%107$1@$0@@@%107%137$1@@%137$0@@@|@|@@%81%66%32%85%137%116$0@@@%116%137$0@@@|@@%81%65%24%85%137%121$0@@@%121$0@@|@@%81%76%55%85%137%140$0@@@%121%109@@|@@%81%76%55%85%137%114$0@@@%121%118@@|@@%81%76%55%85%137%139$0@@@%121%109@@|@@%76%57%76%58%85%137%138$1@$0@@@%138$1@$0@@|@|@@@@@@@@"])
  fun op alldivide_def x = x
    val op alldivide_def =
    DT(((("DeepSyntax",32),
        [("DeepSyntax",[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17]),
         ("bool",[14,25,26,31,53,63,132,133,138,181]),("ind_type",[33,34]),
         ("pair",[8,9])]),["DISK_THM"]),
       [read"%81%66%36%66%40%76%28%84%124%105$2@$1@@$0@@%81%124$2@$0@@%124$1@$0@@@|@|@|@@%81%66%36%66%40%76%28%84%124%107$2@$1@@$0@@%81%124$2@$0@@%124$1@$0@@@|@|@|@@%81%66%32%76%28%84%124%116$1@@$0@@%124$1@$0@@|@|@@%81%65%24%76%28%84%124%121$1@@$0@@%118@|@|@@%81%76%55%76%28%84%124%140$1@@$0@@%118@|@|@@%81%76%55%76%28%84%124%114$1@@$0@@%118@|@|@@%81%76%55%76%28%84%124%139$1@@$0@@%118@|@|@@%76%57%76%58%76%28%84%124%138$2@$1@@$0@@%130$2@$0@@|@|@|@@@@@@@@"])
  fun op Aset_def x = x
    val op Aset_def =
    DT(((("DeepSyntax",37),
        [("DeepSyntax",[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17]),
         ("bool",[14,25,26,31,53,63,132,133,138,181]),("ind_type",[33,34]),
         ("pair",[8,9])]),["DISK_THM"]),
       [read"%81%65%61%66%36%66%40%86%99$2@%105$1@$0@@@%120%99$2@$1@@%99$2@$0@@@|@|@|@@%81%65%61%66%36%66%40%86%99$2@%107$1@$0@@@%120%99$2@$1@@%99$2@$0@@@|@|@|@@%81%65%61%66%32%86%99$1@%116$0@@@%99%141$1@@$0@@|@|@@%81%65%61%65%24%86%99$1@%121$0@@@%108@|@|@@%81%65%61%76%55%86%99$1@%140$0@@@%103$1@%112$0@%108@@%108@@|@|@@%81%65%61%76%55%86%99$1@%114$0@@@%103$1@%108@%112%129$0@%135%115%100%122@@@@@%108@@@|@|@@%81%65%61%76%55%86%99$1@%139$0@@@%103$1@%112%129$0@%135%115%100%122@@@@@%108@@%112$0@%108@@@|@|@@%65%61%76%57%76%58%86%99$2@%138$1@$0@@@%108@|@|@|@@@@@@@@"])
  fun op Bset_def x = x
    val op Bset_def =
    DT(((("DeepSyntax",38),
        [("DeepSyntax",[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17]),
         ("bool",[14,25,26,31,53,63,132,133,138,181]),("ind_type",[33,34]),
         ("pair",[8,9])]),["DISK_THM"]),
       [read"%81%65%61%66%36%66%40%86%102$2@%105$1@$0@@@%120%102$2@$1@@%102$2@$0@@@|@|@|@@%81%65%61%66%36%66%40%86%102$2@%107$1@$0@@@%120%102$2@$1@@%102$2@$0@@@|@|@|@@%81%65%61%66%32%86%102$1@%116$0@@@%102%141$1@@$0@@|@|@@%81%65%61%65%24%86%102$1@%121$0@@@%108@|@|@@%81%65%61%76%55%86%102$1@%140$0@@@%103$1@%108@%112%129$0@%134%135%115%100%122@@@@@@%108@@@|@|@@%81%65%61%76%55%86%102$1@%114$0@@@%103$1@%112$0@%108@@%108@@|@|@@%81%65%61%76%55%86%102$1@%139$0@@@%103$1@%112%129$0@%134%135%115%100%122@@@@@@%108@@%112$0@%108@@@|@|@@%65%61%76%57%76%58%86%102$2@%138$1@$0@@@%108@|@|@|@@@@@@@@"])
  fun op datatype_deep_form x = x
    val op datatype_deep_form =
    DT(((("DeepSyntax",20),[("bool",[25,171])]),["DISK_THM"]),
       [read"%106%31%105@%107@%116@%121@%140@%114@%139@%138@@"])
  fun op deep_form_11 x = x
    val op deep_form_11 =
    DT(((("DeepSyntax",21),
        [("DeepSyntax",[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17]),
         ("bool",[14,25,26,31,51,53,56,63,132,133,138,181]),
         ("ind_type",[33,34]),("pair",[8,9])]),["DISK_THM"]),
       [read"%81%66%13%66%19%66%16%66%22%84%85%105$3@$2@@%105$1@$0@@@%81%85$3@$1@@%85$2@$0@@@|@|@|@|@@%81%66%13%66%19%66%16%66%22%84%85%107$3@$2@@%107$1@$0@@@%81%85$3@$1@@%85$2@$0@@@|@|@|@|@@%81%66%6%66%10%84%85%116$1@@%116$0@@@%85$1@$0@@|@|@@%81%65%5%65%9%84%85%121$1@@%121$0@@@%84$1@$0@@|@|@@%81%76%7%76%11%84%85%140$1@@%140$0@@@%87$1@$0@@|@|@@%81%76%7%76%11%84%85%114$1@@%114$0@@@%87$1@$0@@|@|@@%81%76%7%76%11%84%85%139$1@@%139$0@@@%87$1@$0@@|@|@@%76%14%76%20%76%17%76%23%84%85%138$3@$2@@%138$1@$0@@@%81%87$3@$1@@%87$2@$0@@@|@|@|@|@@@@@@@@"])
  fun op deep_form_distinct x = x
    val op deep_form_distinct =
    DT(((("DeepSyntax",22),
        [("DeepSyntax",[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17]),
         ("bool",[14,25,26,31,36,47,51,53,54,56,63,132,133,138,181]),
         ("ind_type",[33,34]),("pair",[8,9])]),["DISK_THM"]),
       [read"%81%66%22%66%19%66%16%66%13%141%85%105$0@$2@@%107$1@$3@@@|@|@|@|@@%81%66%19%66%13%66%6%141%85%105$1@$2@@%116$0@@@|@|@|@@%81%66%19%66%13%65%5%141%85%105$1@$2@@%121$0@@@|@|@|@@%81%66%19%66%13%76%7%141%85%105$1@$2@@%140$0@@@|@|@|@@%81%66%19%66%13%76%7%141%85%105$1@$2@@%114$0@@@|@|@|@@%81%66%19%66%13%76%7%141%85%105$1@$2@@%139$0@@@|@|@|@@%81%76%23%66%19%76%17%66%13%141%85%105$0@$2@@%138$1@$3@@@|@|@|@|@@%81%66%19%66%13%66%6%141%85%107$1@$2@@%116$0@@@|@|@|@@%81%66%19%66%13%65%5%141%85%107$1@$2@@%121$0@@@|@|@|@@%81%66%19%66%13%76%7%141%85%107$1@$2@@%140$0@@@|@|@|@@%81%66%19%66%13%76%7%141%85%107$1@$2@@%114$0@@@|@|@|@@%81%66%19%66%13%76%7%141%85%107$1@$2@@%139$0@@@|@|@|@@%81%76%23%66%19%76%17%66%13%141%85%107$0@$2@@%138$1@$3@@@|@|@|@|@@%81%65%9%66%6%141%85%116$0@@%121$1@@@|@|@@%81%76%11%66%6%141%85%116$0@@%140$1@@@|@|@@%81%76%11%66%6%141%85%116$0@@%114$1@@@|@|@@%81%76%11%66%6%141%85%116$0@@%139$1@@@|@|@@%81%76%20%76%14%66%6%141%85%116$0@@%138$1@$2@@@|@|@|@@%81%76%11%65%5%141%85%121$0@@%140$1@@@|@|@@%81%76%11%65%5%141%85%121$0@@%114$1@@@|@|@@%81%76%11%65%5%141%85%121$0@@%139$1@@@|@|@@%81%76%20%76%14%65%5%141%85%121$0@@%138$1@$2@@@|@|@|@@%81%76%11%76%7%141%85%140$0@@%114$1@@@|@|@@%81%76%11%76%7%141%85%140$0@@%139$1@@@|@|@@%81%76%20%76%14%76%7%141%85%140$0@@%138$1@$2@@@|@|@|@@%81%76%11%76%7%141%85%114$0@@%139$1@@@|@|@@%81%76%20%76%14%76%7%141%85%114$0@@%138$1@$2@@@|@|@|@@%76%20%76%14%76%7%141%85%139$0@@%138$1@$2@@@|@|@|@@@@@@@@@@@@@@@@@@@@@@@@@@@@"])
  fun op deep_form_case_cong x = x
    val op deep_form_case_cong =
    DT(((("DeepSyntax",23),
        [("DeepSyntax",[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18]),
         ("bool",[14,25,26,53,132,133,138,181])]),["DISK_THM"]),
       [read"%66%1%66%2%71%33%71%37%68%41%67%44%73%46%73%48%73%50%74%52%90%81%85$9@$8@@%81%66%13%66%19%90%85$10@%105$1@$0@@@%83$9$1@$0@@%34$1@$0@@@|@|@@%81%66%13%66%19%90%85$10@%107$1@$0@@@%83$8$1@$0@@%39$1@$0@@@|@|@@%81%66%6%90%85$9@%116$0@@@%83$6$0@@%43$0@@@|@@%81%65%5%90%85$9@%121$0@@@%83$5$0@@%45$0@@@|@@%81%76%7%90%85$9@%140$0@@@%83$4$0@@%47$0@@@|@@%81%76%7%90%85$9@%114$0@@@%83$3$0@@%49$0@@@|@@%81%76%7%90%85$9@%139$0@@@%83$2$0@@%51$0@@@|@@%76%14%76%20%90%85$10@%138$1@$0@@@%83$2$1@$0@@%53$1@$0@@@|@|@@@@@@@@@@%83%126$9@$7@$6@$5@$4@$3@$2@$1@$0@@%126$8@%34@%39@%43@%45@%47@%49@%51@%53@@@|@|@|@|@|@|@|@|@|@|@"])
  fun op deep_form_nchotomy x = x
    val op deep_form_nchotomy =
    DT(((("DeepSyntax",24),
        [("DeepSyntax",[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17]),
         ("bool",[14,25,26,53,132,133,138,181])]),["DISK_THM"]),
       [read"%66%30%123%92%27%92%29%85$2@%105$1@$0@@|@|@@%123%92%27%92%29%85$2@%107$1@$0@@|@|@@%123%92%27%85$1@%116$0@@|@@%123%91%24%85$1@%121$0@@|@@%123%95%55%85$1@%140$0@@|@@%123%95%55%85$1@%114$0@@|@@%123%95%55%85$1@%139$0@@|@@%95%55%95%56%85$2@%138$1@$0@@|@|@@@@@@@@|@"])
  fun op deep_form_Axiom x = x
    val op deep_form_Axiom =
    DT(((("DeepSyntax",25),
        [("DeepSyntax",[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17]),
         ("bool",[14,25,26,31,53,63,132,133,138,181]),("ind_type",[33,34]),
         ("pair",[8,9])]),["DISK_THM"]),
       [read"%72%35%72%38%70%42%67%44%73%46%73%48%73%50%74%52%93%54%81%66%13%66%19%83$2%105$1@$0@@@$10$1@$0@$2$1@@$2$0@@@|@|@@%81%66%13%66%19%83$2%107$1@$0@@@$9$1@$0@$2$1@@$2$0@@@|@|@@%81%66%6%83$1%116$0@@@$7$0@$1$0@@@|@@%81%65%5%83$1%121$0@@@$6$0@@|@@%81%76%7%83$1%140$0@@@$5$0@@|@@%81%76%7%83$1%114$0@@@$4$0@@|@@%81%76%7%83$1%139$0@@@$3$0@@|@@%76%14%76%20%83$2%138$1@$0@@@$3$1@$0@@|@|@@@@@@@@|@|@|@|@|@|@|@|@|@"])
  fun op deep_form_induction x = x
    val op deep_form_induction =
    DT(((("DeepSyntax",26),
        [("DeepSyntax",[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17]),
         ("bool",[14,25,26,53,132,133,138])]),["DISK_THM"]),
       [read"%69%3%90%81%66%27%66%29%90%81$2$1@@$2$0@@@$2%105$1@$0@@@|@|@@%81%66%27%66%29%90%81$2$1@@$2$0@@@$2%107$1@$0@@@|@|@@%81%66%27%90$1$0@@$1%116$0@@@|@@%81%65%24$1%121$0@@|@@%81%76%55$1%140$0@@|@@%81%76%55$1%114$0@@|@@%81%76%55$1%139$0@@|@@%76%55%76%56$2%138$1@$0@@|@|@@@@@@@@@%66%27$1$0@|@@|@"])
  fun op neginf_ok x = x
    val op neginf_ok =
    DT(((("DeepSyntax",30),
        [("DeepSyntax",[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,27,28]),
         ("bool",
         [14,25,26,36,37,47,48,53,54,56,58,63,71,72,93,94,95,96,101,105,
          124,132,133,138,145,146]),("integer",[66,103,312]),
         ("sat",[1,3,5,6,7,11,12,13,14,15])]),["DISK_THM"]),
       [read"%66%32%95%64%76%63%90%132$0@$1@@%84%128$2@$0@@%128%136$2@@$0@@@|@|@|@"])
  fun op posinf_ok x = x
    val op posinf_ok =
    DT(((("DeepSyntax",31),
        [("DeepSyntax",[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,27,29]),
         ("bool",
         [14,25,26,36,37,47,48,53,54,56,58,63,71,72,93,94,95,96,101,105,
          124,132,133,138,145,146]),("integer",[66,103,313]),
         ("sat",[1,3,5,6,7,11,12,13,14,15])]),["DISK_THM"]),
       [read"%66%32%95%64%76%63%90%132$1@$0@@%84%128$2@$0@@%128%137$2@@$0@@@|@|@|@"])
  fun op add_d_neginf x = x
    val op add_d_neginf =
    DT(((("DeepSyntax",33),
        [("DeepSyntax",
         [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,27,28,32]),
         ("bool",
         [13,14,25,26,27,30,47,48,51,52,53,54,56,58,63,93,94,96,105,124,
          132,133,138]),("integer",[59,62,294,296]),
         ("sat",[1,3,5,6,7,11,12,13,14,15,17,18,19,20,23])]),["DISK_THM"]),
       [read"%66%32%76%63%76%64%76%28%90%124$3@$0@@%84%128%136$3@@$2@@%128%136$3@@%129$2@%133$1@$0@@@@@|@|@|@|@"])
  fun op add_d_posinf x = x
    val op add_d_posinf =
    DT(((("DeepSyntax",34),
        [("DeepSyntax",
         [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,27,29,32]),
         ("bool",
         [13,14,25,26,27,30,47,48,51,52,53,54,56,58,63,93,94,96,105,124,
          132,133,138]),("integer",[59,62,294,296]),
         ("sat",[1,3,5,6,7,11,12,13,14,15,17,18,19,20,23])]),["DISK_THM"]),
       [read"%66%32%76%63%76%64%76%28%90%124$3@$0@@%84%128%137$3@@$2@@%128%137$3@@%129$2@%133$1@$0@@@@@|@|@|@|@"])
  fun op neginf_disj1_implies_exoriginal x = x
    val op neginf_disj1_implies_exoriginal =
    DT(((("DeepSyntax",35),
        [("DeepSyntax",[30,33]),
         ("bool",[25,26,47,48,53,54,58,63,72,78,93,94,96,146]),
         ("int_arith",[23]),("integer",[73,95,112]),
         ("sat",[1,3,5,6,7,11,12,13,14,15])]),["DISK_THM"]),
       [read"%66%32%76%28%76%55%90%124$2@$1@@%90%81%132%135%82@@$0@@%81%131$0@$1@@%128%136$2@@$0@@@@%95%63%128$3@$0@|@@@|@|@|@"])
  fun op posinf_disj1_implies_exoriginal x = x
    val op posinf_disj1_implies_exoriginal =
    DT(((("DeepSyntax",36),
        [("DeepSyntax",[31,34]),
         ("bool",[25,26,47,48,53,54,58,63,72,78,93,94,96,146]),
         ("int_arith",[24]),("integer",[112]),
         ("sat",[1,3,5,6,7,11,12,13,14,15])]),["DISK_THM"]),
       [read"%66%32%76%28%76%55%90%124$2@$1@@%90%81%132%135%82@@$0@@%81%131$0@$1@@%128%137$2@@$0@@@@%95%63%128$3@$0@|@@@|@|@|@"])
  fun op neginf_exoriginal_implies_rhs x = x
    val op neginf_exoriginal_implies_rhs =
    DT(((("DeepSyntax",39),
        [("DeepSyntax",
         [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,27,30,32,33,38]),
         ("bool",
         [5,13,14,25,26,27,30,36,43,47,48,51,52,53,54,56,58,63,64,71,72,73,
          74,77,78,81,84,93,94,95,96,101,105,111,124,129,132,133,138,145,
          146,147]),("combin",[19]),("int_arith",[0,2,23,27,29,31]),
         ("integer",
         [59,62,73,79,80,81,82,95,101,104,108,118,130,135,174,175,177,211,
          296,297,298,335]),("pred_set",[10,18,20,22,33,39,80,97,131]),
         ("sat",[1,3,5,6,7,11,12,13,14,15,17,18,19,20,23])]),["DISK_THM"]),
       [read"%66%32%76%28%76%63%90%81%124$2@$1@@%132%135%82@@$1@@@%90%128$2@$0@@%123%95%55%81%132%135%82@@$0@@%81%131$0@$2@@%128%136$3@@$0@@@|@@%95%59%95%25%81%132%135%82@@$1@@%81%131$1@$3@@%81%111$0@%102%118@$4@@@%128$4@%129$0@$1@@@@@|@|@@@@|@|@|@"])
  fun op posinf_exoriginal_implies_rhs x = x
    val op posinf_exoriginal_implies_rhs =
    DT(((("DeepSyntax",40),
        [("DeepSyntax",
         [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,27,31,32,34,37]),
         ("bool",
         [5,13,14,25,26,27,30,36,43,47,48,51,52,53,54,56,58,63,64,71,72,74,
          77,78,81,84,93,94,95,96,101,105,111,124,129,132,133,138,145,146,
          147]),("combin",[19]),("int_arith",[0,3,24,28,30,31]),
         ("integer",
         [59,62,73,79,80,82,89,95,101,104,108,118,130,177,211,296,297,
          335]),("pred_set",[10,18,20,22,33,39,97,131]),
         ("sat",[1,3,5,6,7,11,12,13,14,15,17,18,19,20,23])]),["DISK_THM"]),
       [read"%66%32%76%28%76%63%90%81%124$2@$1@@%132%135%82@@$1@@@%90%128$2@$0@@%123%95%55%81%132%135%82@@$0@@%81%131$0@$2@@%128%137$3@@$0@@@|@@%95%59%95%25%81%132%135%82@@$1@@%81%131$1@$3@@%81%111$0@%99%118@$4@@@%128$4@%129$0@%134$1@@@@@@|@|@@@@|@|@|@"])
  fun op neginf_exoriginal_eq_rhs x = x
    val op neginf_exoriginal_eq_rhs =
    DT(((("DeepSyntax",41),
        [("DeepSyntax",[35,39]),
         ("bool",[25,26,47,48,53,54,58,63,72,78,93,94,96,146]),
         ("combin",[12]),
         ("sat",[1,3,5,6,7,11,12,13,14,15])]),["DISK_THM"]),
       [read"%66%32%76%28%90%81%124$1@$0@@%132%135%82@@$0@@@%84%95%63%128$2@$0@|@@%123%95%55%81%113%81%132%135%82@@$0@@%131$0@$1@@@$0@@%128%136$2@@$0@@|@@%95%25%95%59%81%81%111$1@%102%118@$3@@@%113%81%132%135%82@@$0@@%131$0@$2@@@$0@@@%128$3@%129$1@$0@@@|@|@@@@|@|@"])
  fun op posinf_exoriginal_eq_rhs x = x
    val op posinf_exoriginal_eq_rhs =
    DT(((("DeepSyntax",42),
        [("DeepSyntax",[36,40]),
         ("bool",[25,26,47,48,53,54,58,63,72,78,93,94,96,146]),
         ("combin",[12]),("integer",[153]),
         ("sat",[1,3,5,6,7,11,12,13,14,15])]),["DISK_THM"]),
       [read"%66%32%76%28%90%81%124$1@$0@@%132%135%82@@$0@@@%84%95%63%128$2@$0@|@@%123%95%55%81%113%81%132%135%82@@$0@@%131$0@$1@@@$0@@%128%137$2@@$0@@|@@%95%25%95%59%81%81%111$1@%99%118@$3@@@%113%81%132%135%82@@$0@@%131$0@$2@@@$0@@@%128$3@%129$1@%133%134%135%115%100%122@@@@@$0@@@@|@|@@@@|@|@"])
  fun op in_bset x = x
    val op in_bset =
    DT(((("DeepSyntax",43),
        [("DeepSyntax",[38]),
         ("bool",
         [25,26,27,36,47,48,51,52,53,54,56,58,63,64,72,76,80,81,96,143]),
         ("pred_set",[10,33,131]),
         ("sat",[1,3,5,6,7,11,12,13,14,15])]),["DISK_THM"]),
       [read"%81%84%95%25%81%111$0@%102%61@%105%36@%40@@@@%4$0@@|@@%123%95%25%81%111$0@%102%61@%36@@@%4$0@@|@@%95%25%81%111$0@%102%61@%40@@@%4$0@@|@@@@%81%84%95%25%81%111$0@%102%61@%107%36@%40@@@@%4$0@@|@@%123%95%25%81%111$0@%102%61@%36@@@%4$0@@|@@%95%25%81%111$0@%102%61@%40@@@%4$0@@|@@@@%81%84%95%25%81%111$0@%102%118@%116%32@@@@%4$0@@|@@%95%25%81%111$0@%102%109@%32@@@%4$0@@|@@@%81%84%95%25%81%111$0@%102%109@%116%32@@@@%4$0@@|@@%95%25%81%111$0@%102%118@%32@@@%4$0@@|@@@%81%84%95%25%81%111$0@%102%61@%121%26@@@@%4$0@@|@@%109@@%81%84%95%25%81%111$0@%102%118@%140%55@@@@%4$0@@|@@%109@@%81%84%95%25%81%111$0@%102%109@%140%55@@@@%4$0@@|@@%4%129%55@%134%135%115%100%122@@@@@@@@%81%84%95%25%81%111$0@%102%118@%114%55@@@@%4$0@@|@@%4%55@@@%81%84%95%25%81%111$0@%102%109@%114%55@@@@%4$0@@|@@%109@@%81%84%95%25%81%111$0@%102%118@%139%55@@@@%4$0@@|@@%4%129%55@%134%135%115%100%122@@@@@@@@%81%84%95%25%81%111$0@%102%109@%139%55@@@@%4$0@@|@@%4%55@@@%84%95%25%81%111$0@%102%61@%138%57@%58@@@@%4$0@@|@@%109@@@@@@@@@@@@"])
  fun op in_aset x = x
    val op in_aset =
    DT(((("DeepSyntax",44),
        [("DeepSyntax",[37]),
         ("bool",
         [25,26,27,36,47,48,51,52,53,54,56,58,63,64,72,76,80,81,96,143]),
         ("pred_set",[10,33,131]),
         ("sat",[1,3,5,6,7,11,12,13,14,15])]),["DISK_THM"]),
       [read"%81%84%95%7%81%111$0@%99%61@%105%36@%40@@@@%4$0@@|@@%123%95%7%81%111$0@%99%61@%36@@@%4$0@@|@@%95%7%81%111$0@%99%61@%40@@@%4$0@@|@@@@%81%84%95%7%81%111$0@%99%61@%107%36@%40@@@@%4$0@@|@@%123%95%7%81%111$0@%99%61@%36@@@%4$0@@|@@%95%7%81%111$0@%99%61@%40@@@%4$0@@|@@@@%81%84%95%7%81%111$0@%99%118@%116%32@@@@%4$0@@|@@%95%7%81%111$0@%99%109@%32@@@%4$0@@|@@@%81%84%95%7%81%111$0@%99%109@%116%32@@@@%4$0@@|@@%95%7%81%111$0@%99%118@%32@@@%4$0@@|@@@%81%84%95%7%81%111$0@%99%61@%121%12@@@@%4$0@@|@@%109@@%81%84%95%7%81%111$0@%99%118@%140%55@@@@%4$0@@|@@%4%55@@@%81%84%95%7%81%111$0@%99%109@%140%55@@@@%4$0@@|@@%109@@%81%84%95%7%81%111$0@%99%118@%114%55@@@@%4$0@@|@@%109@@%81%84%95%7%81%111$0@%99%109@%114%55@@@@%4$0@@|@@%4%129%55@%135%115%100%122@@@@@@@%81%84%95%7%81%111$0@%99%118@%139%55@@@@%4$0@@|@@%4%129%55@%135%115%100%122@@@@@@@%81%84%95%7%81%111$0@%99%109@%139%55@@@@%4$0@@|@@%4%55@@@%84%95%7%81%111$0@%99%61@%138%57@%58@@@@%4$0@@|@@%109@@@@@@@@@@@@"])
  end
  val _ = DB.bindl "DeepSyntax"
  [("deep_form_TY_DEF",deep_form_TY_DEF,DB.Def),
   ("deep_form_case_def",deep_form_case_def,DB.Def),
   ("deep_form_size_def",deep_form_size_def,DB.Def),
   ("eval_form_def",eval_form_def,DB.Def),
   ("neginf_def",neginf_def,DB.Def), ("posinf_def",posinf_def,DB.Def),
   ("alldivide_def",alldivide_def,DB.Def), ("Aset_def",Aset_def,DB.Def),
   ("Bset_def",Bset_def,DB.Def),
   ("datatype_deep_form",datatype_deep_form,DB.Thm),
   ("deep_form_11",deep_form_11,DB.Thm),
   ("deep_form_distinct",deep_form_distinct,DB.Thm),
   ("deep_form_case_cong",deep_form_case_cong,DB.Thm),
   ("deep_form_nchotomy",deep_form_nchotomy,DB.Thm),
   ("deep_form_Axiom",deep_form_Axiom,DB.Thm),
   ("deep_form_induction",deep_form_induction,DB.Thm),
   ("neginf_ok",neginf_ok,DB.Thm), ("posinf_ok",posinf_ok,DB.Thm),
   ("add_d_neginf",add_d_neginf,DB.Thm),
   ("add_d_posinf",add_d_posinf,DB.Thm),
   ("neginf_disj1_implies_exoriginal",
    neginf_disj1_implies_exoriginal,
    DB.Thm),
   ("posinf_disj1_implies_exoriginal",
    posinf_disj1_implies_exoriginal,
    DB.Thm),
   ("neginf_exoriginal_implies_rhs",neginf_exoriginal_implies_rhs,DB.Thm),
   ("posinf_exoriginal_implies_rhs",posinf_exoriginal_implies_rhs,DB.Thm),
   ("neginf_exoriginal_eq_rhs",neginf_exoriginal_eq_rhs,DB.Thm),
   ("posinf_exoriginal_eq_rhs",posinf_exoriginal_eq_rhs,DB.Thm),
   ("in_bset",in_bset,DB.Thm), ("in_aset",in_aset,DB.Thm)]

  local open Portable GrammarSpecials Parse
    fun UTOFF f = Feedback.trace("Parse.unicode_trace_off_complaints",0)f
  in
  val _ = mk_local_grms [("int_arithTheory.int_arith_grammars",
                          int_arithTheory.int_arith_grammars)]
  val _ = List.app (update_grms reveal) []
  val _ = update_grms temp_add_type "deep_form"
  val _ = update_grms temp_add_type "deep_form"


















  val _ = update_grms
       (UTOFF temp_overload_on)
       ("Conjn", (Term.prim_mk_const { Name = "Conjn", Thy = "DeepSyntax"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("Conjn", (Term.prim_mk_const { Name = "Conjn", Thy = "DeepSyntax"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("Disjn", (Term.prim_mk_const { Name = "Disjn", Thy = "DeepSyntax"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("Disjn", (Term.prim_mk_const { Name = "Disjn", Thy = "DeepSyntax"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("Negn", (Term.prim_mk_const { Name = "Negn", Thy = "DeepSyntax"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("Negn", (Term.prim_mk_const { Name = "Negn", Thy = "DeepSyntax"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("UnrelatedBool", (Term.prim_mk_const { Name = "UnrelatedBool", Thy = "DeepSyntax"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("UnrelatedBool", (Term.prim_mk_const { Name = "UnrelatedBool", Thy = "DeepSyntax"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("xLT", (Term.prim_mk_const { Name = "xLT", Thy = "DeepSyntax"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("xLT", (Term.prim_mk_const { Name = "xLT", Thy = "DeepSyntax"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("LTx", (Term.prim_mk_const { Name = "LTx", Thy = "DeepSyntax"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("LTx", (Term.prim_mk_const { Name = "LTx", Thy = "DeepSyntax"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("xEQ", (Term.prim_mk_const { Name = "xEQ", Thy = "DeepSyntax"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("xEQ", (Term.prim_mk_const { Name = "xEQ", Thy = "DeepSyntax"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("xDivided", (Term.prim_mk_const { Name = "xDivided", Thy = "DeepSyntax"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("xDivided", (Term.prim_mk_const { Name = "xDivided", Thy = "DeepSyntax"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("deep_form_CASE", (Term.prim_mk_const { Name = "deep_form_CASE", Thy = "DeepSyntax"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("deep_form_size", (Term.prim_mk_const { Name = "deep_form_size", Thy = "DeepSyntax"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("eval_form", (Term.prim_mk_const { Name = "eval_form", Thy = "DeepSyntax"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("neginf", (Term.prim_mk_const { Name = "neginf", Thy = "DeepSyntax"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("posinf", (Term.prim_mk_const { Name = "posinf", Thy = "DeepSyntax"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("alldivide", (Term.prim_mk_const { Name = "alldivide", Thy = "DeepSyntax"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("Aset", (Term.prim_mk_const { Name = "Aset", Thy = "DeepSyntax"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("Bset", (Term.prim_mk_const { Name = "Bset", Thy = "DeepSyntax"}))
  val DeepSyntax_grammars = Parse.current_lgrms()
  end


  val _ =
    TypeBase.write [
      let
        open TypeBasePure
        val tyinfo0 = mk_datatype_info
          {ax=ORIG deep_form_Axiom,
           case_def=deep_form_case_def,
           case_cong=deep_form_case_cong,
           induction=ORIG deep_form_induction,
           nchotomy=deep_form_nchotomy,
           size=SOME(Parse.Term`(DeepSyntax$deep_form_size) :(DeepSyntax$deep_form) -> (num$num)`,
                     ORIG deep_form_size_def),
           encode = NONE,
           lift=NONE,
           one_one=SOME deep_form_11,
           distinct=SOME deep_form_distinct,
           fields=let fun T t s A = mk_thy_type{Thy=t,Tyop=s,Args=A}
    val U = mk_vartype
in
[] end,
           accessors=[],
           updates=[],
           recognizers=[],
           destructors=[]}
        val tyinfo0 = tyinfo0
        val () = computeLib.write_datatype_info tyinfo0
      in
        tyinfo0
      end
    ];
  val _ = Theory.LoadableThyData.temp_encoded_update {
    thy = "DeepSyntax",
    thydataty = "compute",
    data =
        "DeepSyntax.eval_form_def DeepSyntax.neginf_def DeepSyntax.Bset_def DeepSyntax.Aset_def DeepSyntax.alldivide_def DeepSyntax.posinf_def"
  }

val _ = if !Globals.print_thy_loads then print "done\n" else ()
val _ = Theory.load_complete "DeepSyntax"
end
