structure OmegaTheory :> OmegaTheory =
struct
  val _ = if !Globals.print_thy_loads then print "Loading OmegaTheory ... " else ()
  open Type Term Thm
  infixr -->

  fun C s t ty = mk_thy_const{Name=s,Thy=t,Ty=ty}
  fun T s t A = mk_thy_type{Tyop=s, Thy=t,Args=A}
  fun V s q = mk_var(s,q)
  val U     = mk_vartype
  (*  Parents *)
  local open integerTheory
  in end;
  val _ = Theory.link_parents
          ("Omega",
          Arbnum.fromString "1488587731",
          Arbnum.fromString "896421")
          [("integer",
           Arbnum.fromString "1488587637",
           Arbnum.fromString "492174")];
  val _ = Theory.incorporate_types "Omega" [];

  val idvector = 
    let fun ID(thy,oth) = {Thy = thy, Other = oth}
    in Vector.fromList
  [ID("min", "fun"), ID("integer", "int"), ID("pair", "prod"),
   ID("list", "list"), ID("min", "bool"), ID("num", "num"),
   ID("bool", "!"), ID("pair", ","), ID("bool", "/\\"), ID("num", "0"),
   ID("prim_rec", "<"), ID("arithmetic", "<="), ID("min", "="),
   ID("min", "==>"), ID("bool", "?"), ID("min", "@"),
   ID("arithmetic", "BIT1"), ID("arithmetic", "BIT2"), ID("list", "CONS"),
   ID("list", "EVERY"), ID("bool", "F"), ID("pair", "FST"),
   ID("combin", "I"), ID("bool", "IN"), ID("list", "LIST_TO_SET"),
   ID("list", "MAP"), ID("Omega", "MAP2"), ID("Omega", "MAP2_tupled"),
   ID("list", "NIL"), ID("arithmetic", "NUMERAL"), ID("bool", "T"),
   ID("relation", "WF"), ID("relation", "WFREC"), ID("arithmetic", "ZERO"),
   ID("bool", "\\/"), ID("Omega", "calc_nightmare"),
   ID("Omega", "calc_nightmare_tupled"), ID("Omega", "dark_shadow"),
   ID("Omega", "dark_shadow_cond_row"),
   ID("Omega", "dark_shadow_cond_row_tupled"),
   ID("Omega", "dark_shadow_condition"),
   ID("Omega", "dark_shadow_condition_tupled"),
   ID("Omega", "dark_shadow_row"), ID("Omega", "dark_shadow_row_tupled"),
   ID("Omega", "dark_shadow_tupled"), ID("Omega", "evallower"),
   ID("Omega", "evallower_tupled"), ID("Omega", "evalupper"),
   ID("Omega", "evalupper_tupled"), ID("Omega", "fst1"),
   ID("Omega", "fst_nzero"), ID("integer", "int_add"),
   ID("integer", "int_div"), ID("integer", "int_ge"),
   ID("integer", "int_le"), ID("integer", "int_lt"),
   ID("integer", "int_mul"), ID("integer", "int_neg"),
   ID("integer", "int_of_num"), ID("integer", "int_sub"),
   ID("list", "list_CASE"), ID("Omega", "modhat"),
   ID("Omega", "nightmare"), ID("Omega", "nightmare_tupled"),
   ID("pair", "pair_CASE"), ID("Omega", "real_shadow"),
   ID("Omega", "rshadow_row"), ID("Omega", "rshadow_row_tupled"),
   ID("Omega", "sumc"), ID("Omega", "sumc_tupled"), ID("bool", "~")]
  end;
  local open SharingTables
  in
  val tyvector = build_type_vector idvector
  [TYOP [1], TYOP [3, 0], TYOP [2, 1, 1], TYOP [0, 2, 0], TYOP [0, 1, 0],
   TYOP [0, 1, 4], TYOP [4], TYOP [5], TYOP [2, 7, 0], TYOP [3, 8],
   TYOP [2, 8, 9], TYOP [0, 10, 6], TYOP [0, 9, 6], TYOP [0, 8, 12],
   TYOP [0, 9, 12], TYOP [2, 9, 9], TYOP [2, 9, 15], TYOP [2, 7, 16],
   TYOP [2, 0, 17], TYOP [0, 18, 6], TYOP [0, 9, 14], TYOP [0, 7, 20],
   TYOP [0, 0, 21], TYOP [0, 0, 0], TYOP [0, 0, 23], TYV "'a",
   TYOP [2, 7, 25], TYOP [0, 26, 6], TYOP [2, 0, 9], TYOP [0, 28, 6],
   TYOP [0, 0, 12], TYOP [0, 15, 6], TYOP [2, 7, 28], TYOP [0, 32, 6],
   TYOP [0, 7, 30], TYOP [2, 7, 9], TYOP [2, 0, 35], TYOP [0, 36, 6],
   TYOP [0, 7, 12], TYOP [0, 0, 38], TYOP [3, 25], TYV "'b", TYOP [3, 41],
   TYOP [2, 42, 42], TYOP [0, 41, 25], TYOP [0, 41, 44], TYOP [2, 45, 43],
   TYOP [2, 41, 46], TYOP [0, 47, 40], TYOP [0, 42, 40], TYOP [0, 42, 49],
   TYOP [0, 45, 50], TYOP [0, 41, 51], TYOP [0, 42, 6], TYOP [0, 42, 53],
   TYOP [0, 45, 54], TYOP [0, 41, 55], TYOP [0, 1, 6], TYOP [0, 1, 57],
   TYOP [0, 47, 6], TYOP [0, 47, 59], TYOP [0, 28, 29], TYOP [0, 2, 6],
   TYOP [0, 2, 62], TYOP [0, 15, 31], TYOP [0, 10, 11], TYOP [0, 36, 37],
   TYOP [0, 18, 19], TYOP [0, 32, 33], TYOP [0, 41, 6], TYOP [0, 69, 6],
   TYOP [0, 45, 6], TYOP [0, 71, 6], TYOP [0, 56, 6], TYOP [0, 73, 6],
   TYOP [0, 30, 6], TYOP [0, 75, 6], TYOP [0, 39, 6], TYOP [0, 77, 6],
   TYOP [0, 22, 6], TYOP [0, 79, 6], TYOP [0, 23, 6], TYOP [0, 81, 6],
   TYOP [0, 58, 6], TYOP [0, 83, 6], TYOP [0, 14, 6], TYOP [0, 85, 6],
   TYOP [0, 34, 6], TYOP [0, 87, 6], TYOP [0, 13, 6], TYOP [0, 89, 6],
   TYOP [0, 0, 6], TYOP [0, 91, 6], TYOP [0, 53, 6], TYOP [0, 57, 6],
   TYOP [0, 12, 6], TYOP [0, 7, 6], TYOP [0, 96, 6], TYOP [0, 27, 6],
   TYOP [0, 8, 6], TYOP [0, 99, 6], TYOP [0, 46, 47], TYOP [0, 41, 101],
   TYOP [0, 43, 46], TYOP [0, 45, 103], TYOP [0, 9, 28], TYOP [0, 0, 105],
   TYOP [0, 35, 36], TYOP [0, 0, 107], TYOP [0, 17, 18], TYOP [0, 0, 109],
   TYOP [0, 42, 43], TYOP [0, 42, 111], TYOP [0, 1, 2], TYOP [0, 1, 113],
   TYOP [0, 9, 15], TYOP [0, 9, 115], TYOP [0, 15, 16], TYOP [0, 9, 117],
   TYOP [0, 0, 8], TYOP [0, 7, 119], TYOP [0, 9, 35], TYOP [0, 7, 121],
   TYOP [0, 28, 32], TYOP [0, 7, 123], TYOP [0, 16, 17], TYOP [0, 7, 125],
   TYOP [0, 9, 10], TYOP [0, 8, 127], TYOP [0, 6, 6], TYOP [0, 6, 129],
   TYOP [0, 7, 96], TYOP [0, 48, 6], TYOP [0, 48, 132], TYOP [0, 29, 6],
   TYOP [0, 29, 134], TYOP [0, 37, 6], TYOP [0, 37, 136], TYOP [0, 19, 6],
   TYOP [0, 19, 138], TYOP [0, 3, 6], TYOP [0, 3, 140], TYOP [0, 31, 6],
   TYOP [0, 31, 142], TYOP [0, 33, 6], TYOP [0, 33, 144], TYOP [0, 11, 6],
   TYOP [0, 11, 146], TYOP [0, 0, 91], TYOP [0, 40, 6], TYOP [0, 40, 149],
   TYOP [0, 60, 6], TYOP [0, 151, 60], TYOP [0, 61, 6], TYOP [0, 153, 61],
   TYOP [0, 66, 6], TYOP [0, 155, 66], TYOP [0, 67, 6], TYOP [0, 157, 67],
   TYOP [0, 63, 6], TYOP [0, 159, 63], TYOP [0, 64, 6], TYOP [0, 161, 64],
   TYOP [0, 68, 6], TYOP [0, 163, 68], TYOP [0, 65, 6], TYOP [0, 165, 65],
   TYOP [0, 7, 7], TYOP [0, 40, 40], TYOP [0, 25, 168], TYOP [0, 42, 42],
   TYOP [0, 41, 170], TYOP [0, 1, 1], TYOP [0, 0, 172], TYOP [0, 9, 9],
   TYOP [0, 8, 174], TYOP [0, 99, 12], TYOP [0, 26, 7], TYOP [0, 8, 7],
   TYOP [0, 8, 100], TYOP [0, 9, 99], TYOP [0, 23, 172], TYOP [0, 1, 172],
   TYOP [0, 24, 182], TYOP [0, 0, 183], TYOP [0, 48, 48],
   TYOP [0, 185, 48], TYOP [0, 60, 186], TYOP [0, 29, 29],
   TYOP [0, 188, 29], TYOP [0, 61, 189], TYOP [0, 37, 37],
   TYOP [0, 191, 37], TYOP [0, 66, 192], TYOP [0, 19, 19],
   TYOP [0, 194, 19], TYOP [0, 67, 195], TYOP [0, 3, 3], TYOP [0, 197, 3],
   TYOP [0, 63, 198], TYOP [0, 31, 31], TYOP [0, 200, 31],
   TYOP [0, 64, 201], TYOP [0, 33, 33], TYOP [0, 203, 33],
   TYOP [0, 68, 204], TYOP [0, 11, 11], TYOP [0, 206, 11],
   TYOP [0, 65, 207], TYOP [0, 7, 0], TYOP [0, 41, 49], TYOP [0, 210, 40],
   TYOP [0, 40, 211], TYOP [0, 42, 212], TYOP [0, 0, 4], TYOP [0, 214, 0],
   TYOP [0, 0, 215], TYOP [0, 1, 216], TYOP [0, 6, 89], TYOP [0, 9, 218],
   TYOP [0, 46, 40], TYOP [0, 41, 220], TYOP [0, 221, 40],
   TYOP [0, 47, 222], TYOP [0, 43, 40], TYOP [0, 45, 224],
   TYOP [0, 225, 40], TYOP [0, 46, 226], TYOP [0, 28, 75], TYOP [0, 35, 6],
   TYOP [0, 0, 229], TYOP [0, 230, 6], TYOP [0, 36, 231], TYOP [0, 17, 6],
   TYOP [0, 0, 233], TYOP [0, 234, 6], TYOP [0, 18, 235], TYOP [0, 50, 40],
   TYOP [0, 43, 237], TYOP [0, 5, 0], TYOP [0, 2, 239], TYOP [0, 15, 85],
   TYOP [0, 9, 31], TYOP [0, 242, 6], TYOP [0, 16, 243], TYOP [0, 7, 91],
   TYOP [0, 245, 6], TYOP [0, 8, 246], TYOP [0, 38, 6], TYOP [0, 35, 248],
   TYOP [0, 7, 29], TYOP [0, 250, 6], TYOP [0, 32, 251], TYOP [0, 16, 6],
   TYOP [0, 7, 253], TYOP [0, 254, 6], TYOP [0, 17, 255], TYOP [0, 10, 89]]
  end
  val _ = Theory.incorporate_consts "Omega" tyvector
     [("sumc_tupled", 3), ("sumc", 5), ("rshadow_row_tupled", 11),
      ("rshadow_row", 13), ("real_shadow", 14), ("nightmare_tupled", 19),
      ("nightmare", 22), ("modhat", 24), ("fst_nzero", 27), ("fst1", 27),
      ("evalupper_tupled", 29), ("evalupper", 30),
      ("evallower_tupled", 29), ("evallower", 30),
      ("dark_shadow_tupled", 31), ("dark_shadow_row_tupled", 33),
      ("dark_shadow_row", 34), ("dark_shadow_condition_tupled", 31),
      ("dark_shadow_condition", 14), ("dark_shadow_cond_row_tupled", 11),
      ("dark_shadow_cond_row", 13), ("dark_shadow", 14),
      ("calc_nightmare_tupled", 37), ("calc_nightmare", 39),
      ("MAP2_tupled", 48), ("MAP2", 52)];

  local open SharingTables
  in
  val tmvector = build_term_vector idvector tyvector
  [TMV("L", 0), TMV("MAP2_tupled", 48), TMV("P", 56), TMV("P", 30),
   TMV("P", 39), TMV("P", 22), TMV("P", 58), TMV("P", 14), TMV("P", 34),
   TMV("P", 13), TMV("R", 60), TMV("R", 61), TMV("R", 63), TMV("R", 64),
   TMV("R", 65), TMV("R", 0), TMV("R'", 66), TMV("R'", 67), TMV("R'", 68),
   TMV("R'", 65), TMV("a", 47), TMV("a", 28), TMV("a", 36), TMV("a", 18),
   TMV("a", 2), TMV("a", 15), TMV("a", 32), TMV("a", 10), TMV("c", 0),
   TMV("c", 7), TMV("calc_nightmare_tupled", 37), TMV("cs", 1),
   TMV("cs", 9), TMV("d", 7), TMV("dark_shadow_cond_row_tupled", 11),
   TMV("dark_shadow_condition_tupled", 31),
   TMV("dark_shadow_row_tupled", 33), TMV("dark_shadow_tupled", 31),
   TMV("ds", 1), TMV("evallower_tupled", 29), TMV("evalupper_tupled", 29),
   TMV("ex", 6), TMV("ex'", 6), TMV("f", 45), TMV("f", 23), TMV("f", 0),
   TMV("i", 0), TMV("lowerc", 7), TMV("lowers", 9), TMV("lowery", 0),
   TMV("lows", 9), TMV("ls", 9), TMV("m", 7), TMV("nightmare_tupled", 19),
   TMV("p", 6), TMV("p", 8), TMV("pad", 41), TMV("r", 0), TMV("rs", 9),
   TMV("rshadow_row_tupled", 11), TMV("s", 0), TMV("sumc_tupled", 3),
   TMV("t", 9), TMV("upper", 8), TMV("upperc", 7), TMV("uppers", 9),
   TMV("uppery", 0), TMV("ups", 9), TMV("v", 41), TMV("v", 0), TMV("v", 1),
   TMV("v", 9), TMV("v", 7), TMV("v", 8), TMV("v0", 1), TMV("v1", 45),
   TMV("v1", 0), TMV("v1", 1), TMV("v1", 9), TMV("v1", 7), TMV("v1", 46),
   TMV("v1", 28), TMV("v1", 35), TMV("v1", 17), TMV("v2", 42),
   TMV("v2", 9), TMV("v2", 8), TMV("v3", 42), TMV("v3", 1), TMV("v3", 9),
   TMV("v3", 43), TMV("v3", 16), TMV("v4", 0), TMV("v4", 42), TMV("v4", 9),
   TMV("v4", 8), TMV("v5", 42), TMV("v5", 1), TMV("v5", 15), TMV("v7", 9),
   TMV("v8", 8), TMV("vs", 1), TMV("x", 41), TMV("x", 0), TMV("x", 1),
   TMV("x", 9), TMV("x", 7), TMV("x", 26), TMV("x", 8), TMV("x1", 45),
   TMV("x1", 0), TMV("x1", 1), TMV("x1", 9), TMV("x1", 7), TMV("x2", 42),
   TMV("x2", 9), TMV("x3", 42), TMV("x3", 9), TMV("x4", 9), TMV("xs", 42),
   TMV("xs", 1), TMV("y", 41), TMV("y", 0), TMV("y'", 41), TMV("ys", 42),
   TMV("ys'", 42), TMC(6, 70), TMC(6, 72), TMC(6, 74), TMC(6, 76),
   TMC(6, 78), TMC(6, 80), TMC(6, 82), TMC(6, 84), TMC(6, 86), TMC(6, 88),
   TMC(6, 90), TMC(6, 92), TMC(6, 93), TMC(6, 94), TMC(6, 95), TMC(6, 97),
   TMC(6, 98), TMC(6, 100), TMC(7, 102), TMC(7, 104), TMC(7, 106),
   TMC(7, 108), TMC(7, 110), TMC(7, 112), TMC(7, 114), TMC(7, 116),
   TMC(7, 118), TMC(7, 120), TMC(7, 122), TMC(7, 124), TMC(7, 126),
   TMC(7, 128), TMC(8, 130), TMC(9, 7), TMC(10, 131), TMC(11, 131),
   TMC(12, 130), TMC(12, 133), TMC(12, 135), TMC(12, 137), TMC(12, 139),
   TMC(12, 141), TMC(12, 143), TMC(12, 145), TMC(12, 147), TMC(12, 148),
   TMC(12, 150), TMC(12, 58), TMC(12, 131), TMC(13, 130), TMC(14, 92),
   TMC(14, 97), TMC(15, 152), TMC(15, 154), TMC(15, 156), TMC(15, 158),
   TMC(15, 160), TMC(15, 162), TMC(15, 164), TMC(15, 166), TMC(16, 167),
   TMC(17, 167), TMC(18, 169), TMC(18, 171), TMC(18, 173), TMC(18, 175),
   TMC(19, 176), TMC(20, 6), TMC(21, 177), TMC(21, 178), TMC(22, 129),
   TMC(22, 23), TMC(22, 168), TMC(23, 179), TMC(24, 180), TMC(25, 181),
   TMC(26, 52), TMC(26, 184), TMC(27, 48), TMC(28, 40), TMC(28, 42),
   TMC(28, 1), TMC(28, 9), TMC(29, 167), TMC(30, 6), TMC(31, 151),
   TMC(31, 153), TMC(31, 155), TMC(31, 157), TMC(31, 159), TMC(31, 161),
   TMC(31, 163), TMC(31, 165), TMC(32, 187), TMC(32, 190), TMC(32, 193),
   TMC(32, 196), TMC(32, 199), TMC(32, 202), TMC(32, 205), TMC(32, 208),
   TMC(33, 7), TMC(34, 130), TMC(35, 39), TMC(36, 37), TMC(37, 14),
   TMC(38, 13), TMC(39, 11), TMC(40, 14), TMC(41, 31), TMC(42, 34),
   TMC(43, 33), TMC(44, 31), TMC(45, 30), TMC(46, 29), TMC(47, 30),
   TMC(48, 29), TMC(49, 27), TMC(49, 99), TMC(50, 27), TMC(50, 99),
   TMC(51, 24), TMC(52, 24), TMC(53, 148), TMC(54, 148), TMC(55, 148),
   TMC(56, 24), TMC(57, 23), TMC(58, 209), TMC(59, 24), TMC(60, 213),
   TMC(60, 217), TMC(60, 219), TMC(61, 24), TMC(62, 22), TMC(63, 19),
   TMC(64, 223), TMC(64, 227), TMC(64, 228), TMC(64, 232), TMC(64, 236),
   TMC(64, 238), TMC(64, 240), TMC(64, 241), TMC(64, 244), TMC(64, 247),
   TMC(64, 249), TMC(64, 252), TMC(64, 256), TMC(64, 257), TMC(65, 14),
   TMC(66, 13), TMC(67, 11), TMC(68, 5), TMC(69, 3), TMC(70, 129)]
  end
  local
  val DT = Thm.disk_thm val read = Term.read_raw tmvector
  in
  fun op MAP2_tupled_primitive_def x = x
    val op MAP2_tupled_primitive_def =
    DT(((("Omega",0),[]),[]),
       [read"%163%204@%219%178%10%158%211$0@@%158%126%121%138%124%127%43%126%56$4%144$0@%145$1@%149%206@$2@@@@%144$0@%145$1@%149%206@%189$3@$2@@@@@|@|@|@|@@%158%126%102%138%119%127%43%126%56$4%144$0@%145$1@%149$2@%206@@@@%144$0@%145$1@%149%189$3@$2@@%206@@@@|@|@|@|@@%126%121%126%102%138%124%138%119%127%43%126%56$6%144$0@%145$1@%149$2@$3@@@@%144$0@%145$1@%149%189$4@$2@@%189$5@$3@@@@@|@|@|@|@|@|@@@@|@@%1%20%262$0@%56%80%263$0@%43%90%267$0@%93%96%256$1@%256$0@%198%205@@%121%124%198%188$5$7@$1@@$9%144$7@%145$5@%149%206@$0@@@@@@||@@%102%119%256$2@%198%188$5$1@$7@@$9%144$7@%145$5@%149$0@%206@@@@@@@%123%125%198%188$7$3@$1@@$11%144$9@%145$7@%149$2@$0@@@@@@||@||@||@||@||@||@@"])
  fun op MAP2_curried_def x = x
    val op MAP2_curried_def =
    DT(((("Omega",1),[]),[]),
       [read"%126%102%127%109%138%114%138%116%172%202$3@$2@$1@$0@@%204%144$3@%145$2@%149$1@$0@@@@@|@|@|@|@"])
  fun op sumc_tupled_primitive_def x = x
    val op sumc_tupled_primitive_def =
    DT(((("Omega",5),[]),[]),
       [read"%167%280@%223%182%12%158%215$0@@%137%69%137%28%139%101%139%31$4%150$0@$1@@%150%190$2@$0@@%190$3@$1@@@|@|@|@|@@|@@%61%24%268$0@%74%88%257$0@%197%254%159@@@%69%101%257$3@%197%254%159@@@%28%31%197%247%252$1@$3@@$7%150$0@$2@@@@||@||@||@||@@"])
  fun op sumc_curried_def x = x
    val op sumc_curried_def =
    DT(((("Omega",6),[]),[]),
       [read"%139%104%139%111%171%279$1@$0@@%280%150$1@$0@@@|@|@"])
  fun op modhat_def x = x
    val op modhat_def =
    DT(((("Omega",14),[]),[]),
       [read"%137%103%137%122%171%259$1@$0@@%255$1@%252$0@%248%247%252%254%209%187%227@@@@$1@@$0@@%252%254%209%187%227@@@@$0@@@@@|@|@"])
  fun op evalupper_tupled_primitive_def x = x
    val op evalupper_tupled_primitive_def =
    DT(((("Omega",16),[]),[]),
       [read"%164%242@%220%179%11%158%212$0@@%137%122%141%29%140%32%137%103$4%146$0@$1@@%146$0@%191%153$2@$3@@$1@@@|@|@|@|@@|@@%40%21%264$0@%103%78%258$0@%196%210@@%86%32%271$1@%29%122%196%158%250%252%254$1@@$5@@$0@@$7%146$5@$2@@@@||@||@||@||@@"])
  fun op evalupper_curried_def x = x
    val op evalupper_curried_def =
    DT(((("Omega",17),[]),[]),
       [read"%137%103%140%112%162%241$1@$0@@%242%146$1@$0@@@|@|@"])
  fun op evallower_tupled_primitive_def x = x
    val op evallower_tupled_primitive_def =
    DT(((("Omega",20),[]),[]),
       [read"%164%240@%220%179%11%158%212$0@@%137%122%141%29%140%32%137%103$4%146$0@$1@@%146$0@%191%153$2@$3@@$1@@@|@|@|@|@@|@@%39%21%264$0@%103%78%258$0@%196%210@@%86%32%271$1@%29%122%196%158%250$0@%252%254$1@@$5@@@$7%146$5@$2@@@@||@||@||@||@@"])
  fun op evallower_curried_def x = x
    val op evallower_curried_def =
    DT(((("Omega",21),[]),[]),
       [read"%137%103%140%112%162%239$1@$0@@%240%146$1@$0@@@|@|@"])
  fun op fst_nzero_def x = x
    val op fst_nzero_def =
    DT(((("Omega",26),[]),[]),
       [read"%142%107%162%245$0@@%160%159@%194$0@@@|@"])
  fun op fst1_def x = x
    val op fst1_def =
    DT(((("Omega",27),[]),[]),
       [read"%142%107%162%243$0@@%174%194$0@@%209%186%227@@@@|@"])
  fun op rshadow_row_tupled_primitive_def x = x
    val op rshadow_row_tupled_primitive_def =
    DT(((("Omega",30),[]),[]),
       [read"%170%278@%226%185%14%158%218$0@@%137%49%141%47%140%58%137%66%141%64$5%157%153$0@$1@@$2@@%157%153$0@$1@@%191%153$3@$4@@$2@@@|@|@|@|@|@@|@@%59%27%275$0@%73%78%258$0@%196%210@@%86%58%271$1@%47%49%271$5@%64%66%196%158%250%252%254$1@@$2@@%252%254$3@@$0@@@$9%157%153$1@$0@@$4@@@@||@||@||@||@||@@"])
  fun op rshadow_row_curried_def x = x
    val op rshadow_row_curried_def =
    DT(((("Omega",31),[]),[]),
       [read"%143%108%140%112%162%277$1@$0@@%278%157$1@$0@@@|@|@"])
  fun op real_shadow_def x = x
    val op real_shadow_def =
    DT(((("Omega",34),[("list",[13])]),["DISK_THM"]),
       [read"%158%140%48%162%276%208@$0@@%210@|@@%143%63%140%51%140%48%162%276%191$2@$1@@$0@@%158%277$2@$0@@%276$1@$0@@@|@|@|@@"])
  fun op dark_shadow_cond_row_tupled_primitive_def x = x
    val op dark_shadow_cond_row_tupled_primitive_def =
    DT(((("Omega",40),[]),[]),
       [read"%170%233@%226%185%19%158%218$0@@%137%15%141%33%140%62%137%0%141%29$5%157%153$0@$1@@$2@@%157%153$0@$1@@%191%153$3@$4@@$2@@@|@|@|@|@|@@|@@%34%27%275$0@%73%78%258$0@%196%210@@%86%62%271$1@%33%15%271$5@%29%0%196%158%281%176%46%158%251%252%252%254$2@@%254$4@@@$0@@%252%254$2@@$3@@@%158%250%252%254$2@@$3@@%252%254$4@@$1@@@%251%252%254$4@@$1@@%252%252%254$2@@%254$4@@@%247$0@%254%209%186%227@@@@@@@@|@@@$9%157%153$1@$0@@$4@@@@||@||@||@||@||@@"])
  fun op dark_shadow_cond_row_curried_def x = x
    val op dark_shadow_cond_row_curried_def =
    DT(((("Omega",41),[]),[]),
       [read"%143%108%140%112%162%232$1@$0@@%233%157$1@$0@@@|@|@"])
  fun op dark_shadow_condition_tupled_primitive_def x = x
    val op dark_shadow_condition_tupled_primitive_def =
    DT(((("Omega",44),[]),[]),
       [read"%168%235@%224%183%13%158%216$0@@%137%0%141%29%140%48%140%65$4%151$0@$1@@%151%191%153$2@$3@@$0@@$1@@|@|@|@|@@|@@%35%25%269$0@%71%48%258$1@%196%210@@%86%65%271$1@%29%0%196%158%232%153$1@$0@@$4@@$7%151$2@$4@@@@||@||@||@||@@"])
  fun op dark_shadow_condition_curried_def x = x
    val op dark_shadow_condition_curried_def =
    DT(((("Omega",45),[]),[]),
       [read"%140%105%140%112%162%234$1@$0@@%235%151$1@$0@@@|@|@"])
  fun op dark_shadow_row_tupled_primitive_def x = x
    val op dark_shadow_row_tupled_primitive_def =
    DT(((("Omega",49),[]),[]),
       [read"%169%237@%225%184%18%158%217$0@@%137%15%141%33%140%58%137%0%141%29$5%155$0@%146$1@$2@@@%155$0@%146$1@%191%153$3@$4@@$2@@@@|@|@|@|@|@@|@@%36%26%273$0@%29%81%264$0@%0%89%258$0@%196%210@@%95%58%271$1@%33%15%196%158%249%255%252%254$1@@$5@@%252%254$7@@$0@@@%252%255%254$7@@%254%209%186%227@@@@@%255%254$1@@%254%209%186%227@@@@@@@$9%155$7@%146$5@$2@@@@@||@||@||@||@||@@"])
  fun op dark_shadow_row_curried_def x = x
    val op dark_shadow_row_curried_def =
    DT(((("Omega",50),[]),[]),
       [read"%141%106%137%110%140%115%162%236$2@$1@$0@@%237%155$2@%146$1@$0@@@@|@|@|@"])
  fun op dark_shadow_tupled_primitive_def x = x
    val op dark_shadow_tupled_primitive_def =
    DT(((("Omega",53),[]),[]),
       [read"%168%238@%224%183%13%158%216$0@@%137%0%141%29%140%48%140%65$4%151$0@$1@@%151%191%153$2@$3@@$0@@$1@@|@|@|@|@@|@@%37%25%269$0@%71%48%258$1@%196%210@@%86%65%271$1@%29%0%196%158%236$1@$0@$4@@$7%151$2@$4@@@@||@||@||@||@@"])
  fun op dark_shadow_curried_def x = x
    val op dark_shadow_curried_def =
    DT(((("Omega",54),[]),[]),
       [read"%140%105%140%112%162%231$1@$0@@%238%151$1@$0@@@|@|@"])
  fun op nightmare_tupled_primitive_def x = x
    val op nightmare_tupled_primitive_def =
    DT(((("Omega",57),[]),[]),
       [read"%166%261@%222%181%17%158%214$0@@%137%15%141%33%140%58%140%48%140%65%141%29%137%103$7%148$0@%156$1@%152$2@%151$3@$4@@@@@%148$0@%156$1@%152$2@%151$3@%191%153$5@$6@@$4@@@@@@|@|@|@|@|@|@|@@|@@%53%23%266$0@%103%83%274$0@%29%91%270$0@%65%98%269$0@%48%99%258$0@%196%193@@%100%58%271$1@%33%15%196%228%176%46%158%158%250%254%159@@$0@@%250$0@%248%255%255%252%254$10@@%254$2@@@%254$10@@@%254$2@@@%254$10@@@@@%158%171%252%254$2@@$12@@%247$1@$0@@@%158%241$12@$8@@%239$12@$6@@@@|@@$13%148$11@%156$9@%152$7@%151$5@$2@@@@@@@||@||@||@||@||@||@||@@"])
  fun op nightmare_curried_def x = x
    val op nightmare_curried_def =
    DT(((("Omega",58),[]),[]),
       [read"%137%103%141%113%140%115%140%117%140%118%162%260$4@$3@$2@$1@$0@@%261%148$4@%156$3@%152$2@%151$1@$0@@@@@@|@|@|@|@|@"])
  fun op calc_nightmare_tupled_primitive_def x = x
    val op calc_nightmare_tupled_primitive_def =
    DT(((("Omega",80),[]),[]),
       [read"%165%230@%221%180%16%158%213$0@@%137%15%141%33%140%58%141%29%137%103$5%147$0@%154$1@$2@@@%147$0@%154$1@%191%153$3@$4@@$2@@@@|@|@|@|@|@@|@@%30%22%265$0@%103%82%272$0@%29%89%258$0@%196%193@@%95%58%271$1@%33%15%196%228%176%46%158%158%250%254%159@@$0@@%250$0@%248%255%255%252%254$6@@%254$2@@@%254$6@@@%254$2@@@%254$6@@@@@%171%252%254$2@@$8@@%247$1@$0@@@|@@$9%147$7@%154$5@$2@@@@@||@||@||@||@||@@"])
  fun op calc_nightmare_curried_def x = x
    val op calc_nightmare_curried_def =
    DT(((("Omega",81),[]),[]),
       [read"%137%103%141%113%140%115%162%229$2@$1@$0@@%230%147$2@%154$1@$0@@@@|@|@|@"])
  fun op MAP2_ind x = x
    val op MAP2_ind =
    DT(((("Omega",2),
        [("arithmetic",[22,24,25,26,27,41,46,59,71,88,93,173,180]),
         ("bool",
         [25,26,36,47,48,51,52,53,54,58,63,72,76,78,80,93,96,104,105,107]),
         ("list",[7,46]),("numeral",[3,5,7,8]),("pair",[5,7,8,9,16]),
         ("prim_rec",[42]),("relation",[101,113,115]),
         ("sat",[1,3,5,6,7,11,12,13,14,15])]),["DISK_THM"]),
       [read"%128%2%175%158%126%56%127%43$2$1@$0@%206@%206@|@|@@%158%126%56%127%43%126%121%138%124%175$4$3@$2@%206@$0@@$4$3@$2@%206@%189$1@$0@@@|@|@|@|@@%158%126%56%127%43%126%102%138%119%175$4$3@$2@$0@%206@@$4$3@$2@%189$1@$0@@%206@@|@|@|@|@@%126%56%127%43%126%102%138%119%126%121%138%124%175$6$5@$4@$2@$0@@$6$5@$4@%189$3@$2@@%189$1@$0@@@|@|@|@|@|@|@@@@@%126%68%127%75%138%84%138%87$4$3@$2@$1@$0@|@|@|@|@@|@"])
  fun op MAP2_def x = x
    val op MAP2_def =
    DT(((("Omega",3),
        [("Omega",[0,1]),
         ("arithmetic",[22,24,25,26,27,41,46,59,71,88,93,173,180]),
         ("bool",[15,25,36,51,52,54,58,63,93,96,104,105,107]),
         ("combin",[19]),("list",[6,7]),("numeral",[3,5,7,8]),
         ("pair",[7,8,9,16,49]),("prim_rec",[42]),
         ("relation",[113,115,121,126]),
         ("sat",[1,3,5,6,7,11,12,13,15])]),["DISK_THM"]),
       [read"%158%126%56%127%43%172%202$1@$0@%206@%206@@%205@|@|@@%158%138%124%126%121%126%56%127%43%172%202$1@$0@%206@%189$2@$3@@@%188$0$1@$2@@%202$1@$0@%206@$3@@@|@|@|@|@@%158%138%119%126%102%126%56%127%43%172%202$1@$0@%189$2@$3@@%206@@%188$0$2@$1@@%202$1@$0@$3@%206@@@|@|@|@|@@%138%124%126%121%138%119%126%102%126%56%127%43%172%202$1@$0@%189$2@$3@@%189$4@$5@@@%188$0$2@$4@@%202$1@$0@$3@$5@@@|@|@|@|@|@|@@@@"])
  fun op MAP2_zero_ADD x = x
    val op MAP2_zero_ADD =
    DT(((("Omega",4),
        [("Omega",[0,1]),
         ("arithmetic",[22,24,25,26,27,41,46,59,71,88,93,173,180]),
         ("bool",[14,15,25,36,51,52,54,56,58,63,93,96,104,105,107]),
         ("combin",[19]),("integer",[79,80]),("list",[6,7,43]),
         ("numeral",[3,5,7,8]),("pair",[7,8,9,16,49]),("prim_rec",[42]),
         ("relation",[113,115,121,126]),
         ("sat",[1,3,5,6,7,11,12,13,15])]),["DISK_THM"]),
       [read"%139%120%158%173%203%254%159@@%247@%207@$0@@$0@@%173%203%254%159@@%247@$0@%207@@$0@@|@"])
  fun op sumc_ind x = x
    val op sumc_ind =
    DT(((("Omega",7),
        [("arithmetic",[22,24,25,41,46,59,71,93,173,180]),
         ("bool",
         [25,26,36,47,48,52,53,54,58,63,72,76,77,78,80,93,96,104,105,107]),
         ("list",[7,46]),("numeral",[3,7,8]),("pair",[5,7,8,16]),
         ("prim_rec",[42]),("relation",[101,113,115]),
         ("sat",[1,3,5,6,7,11,12,13,14,15])]),["DISK_THM"]),
       [read"%133%6%175%158%139%74$1$0@%207@|@@%158%137%92%139%97$2%207@%190$1@$0@@|@|@@%137%28%139%31%137%69%139%101%175$4$2@$0@@$4%190$3@$2@@%190$1@$0@@@|@|@|@|@@@@%139%70%139%77$2$1@$0@|@|@@|@"])
  fun op sumc_def x = x
    val op sumc_def =
    DT(((("Omega",8),
        [("Omega",[5,6]),("arithmetic",[22,24,25,41,46,59,71,93,173,180]),
         ("bool",[15,25,36,52,54,58,63,93,96,104,105,107]),("combin",[19]),
         ("list",[6,7]),("numeral",[3,7,8]),("pair",[7,8,16,49]),
         ("prim_rec",[42]),("relation",[113,115,121,126]),
         ("sat",[1,3,5,6,7,11,12,13,15])]),["DISK_THM"]),
       [read"%158%139%74%171%279$0@%207@@%254%159@@|@@%158%139%97%137%92%171%279%207@%190$0@$1@@@%254%159@@|@|@@%139%101%137%69%139%31%137%28%171%279%190$0@$1@@%190$2@$3@@@%247%252$0@$2@@%279$1@$3@@@|@|@|@|@@@"])
  fun op sumc_thm x = x
    val op sumc_thm =
    DT(((("Omega",9),
        [("Omega",[5,6,7]),
         ("arithmetic",[22,24,25,41,46,59,71,93,173,180]),
         ("bool",[15,25,36,51,52,53,54,56,58,63,93,96,104,105,107,124]),
         ("combin",[19]),("list",[6,7]),("numeral",[3,7,8]),
         ("pair",[7,8,16,49]),("prim_rec",[42]),
         ("relation",[113,115,121,126]),
         ("sat",[1,3,5,6,7,11,12,13,15])]),["DISK_THM"]),
       [read"%139%31%139%101%137%28%137%69%158%171%279%207@$2@@%254%159@@@%158%171%279$3@%207@@%254%159@@@%171%279%190$1@$3@@%190$0@$2@@@%247%252$1@$0@@%279$3@$2@@@@@|@|@|@|@"])
  fun op sumc_ADD x = x
    val op sumc_ADD =
    DT(((("Omega",10),
        [("Omega",[0,1,4,7,9]),
         ("arithmetic",[22,24,25,26,27,41,46,59,71,88,93,173,180]),
         ("bool",[15,25,36,51,52,54,56,58,63,93,96,104,105,107]),
         ("combin",[19]),("integer",[59,62,79,80,85]),("list",[6,7,46]),
         ("numeral",[3,5,7,8]),("pair",[7,8,9,16,49]),("prim_rec",[42]),
         ("relation",[113,115,121,126]),
         ("sat",[1,3,5,6,7,11,12,13,15])]),["DISK_THM"]),
       [read"%139%31%139%101%139%38%171%247%279$2@$1@@%279$0@$1@@@%279%203%254%159@@%247@$2@$0@@$1@@|@|@|@"])
  fun op sumc_MULT x = x
    val op sumc_MULT =
    DT(((("Omega",11),
        [("Omega",[9]),("bool",[14,25,52,56]),
         ("integer",[61,63,64,87,94,160,166]),("list",[23,43,46]),
         ("marker",[8])]),["DISK_THM"]),
       [read"%139%31%139%101%137%45%171%252$0@%279$2@$1@@@%279%201%103%252$1@$0@|@$2@@$1@@|@|@|@"])
  fun op sumc_singleton x = x
    val op sumc_singleton =
    DT(((("Omega",12),
        [("Omega",[5,6]),("arithmetic",[22,24,25,41,46,59,71,93,173,180]),
         ("bool",[15,25,36,52,54,56,58,63,93,96,104,105,107]),
         ("combin",[19]),("integer",[80,84]),("list",[6,7,23]),
         ("numeral",[3,7,8]),("pair",[7,8,16,49]),("prim_rec",[42]),
         ("relation",[113,115,121,126]),
         ("sat",[1,3,5,6,7,11,12,13,15])]),["DISK_THM"]),
       [read"%132%44%137%28%171%279%201$1@%190$0@%207@@@%190%254%209%186%227@@@@%207@@@$1$0@@|@|@"])
  fun op sumc_nonsingle x = x
    val op sumc_nonsingle =
    DT(((("Omega",13),
        [("Omega",[5,6]),("arithmetic",[22,24,25,41,46,59,71,93,173,180]),
         ("bool",[15,25,36,52,54,56,58,63,93,96,104,105,107]),
         ("combin",[19]),("list",[6,7,23]),("numeral",[3,7,8]),
         ("pair",[7,8,16,49]),("prim_rec",[42]),
         ("relation",[113,115,121,126]),
         ("sat",[1,3,5,6,7,11,12,13,15])]),["DISK_THM"]),
       [read"%132%44%139%31%137%28%137%69%139%101%171%279%201$4@%190$2@$3@@@%190$1@$0@@@%247%252$4$2@@$1@@%279%201$4@$3@@$0@@@|@|@|@|@|@"])
  fun op equality_removal x = x
    val op equality_removal =
    DT(((("Omega",15),
        [("Omega",[0,1,10,11,14]),
         ("arithmetic",[22,24,25,26,27,41,46,59,70,71,88,93,173,180]),
         ("bool",
         [13,14,15,25,26,27,30,36,47,48,51,52,53,54,56,58,63,72,73,74,78,
          81,84,93,94,96,104,105,107,146,170]),("combin",[5,8,19]),
         ("integer",
         [59,61,62,63,64,66,73,83,85,87,92,95,96,97,119,160,168,181,192,
          206,286,292,295,296,298]),("list",[6,7,23,43,48,59,61]),
         ("marker",[8]),("numeral",[3,5,7,8]),("pair",[7,8,9,16,49]),
         ("prim_rec",[6,42]),("relation",[113,115,121,126]),
         ("sat",[1,3,5,6,7,11,12,13,14,15,17,18,19,20,23])]),["DISK_THM"]),
       [read"%137%28%137%103%139%31%139%101%175%251%254%159@@$3@@%162%171%254%159@@%247%252$3@$2@@%279$1@$0@@@@%176%60%158%171$3@%247%252%253%247$4@%254%209%186%227@@@@@@$0@@%279%201%103%259$0@%247$5@%254%209%186%227@@@@@|@$2@@$1@@@@%171%254%159@@%247%252$4@$3@@%279$2@$1@@@@|@@@|@|@|@|@"])
  fun op evalupper_ind x = x
    val op evalupper_ind =
    DT(((("Omega",18),
        [("arithmetic",[24,25,26,27,46,59,71,93,173]),
         ("bool",[25,27,36,53,54,58,63,104]),("list",[7,46]),
         ("numeral",[3,8]),("pair",[5,7,9,16]),("prim_rec",[42]),
         ("relation",[101,113,115]),
         ("sat",[1,3,5,6,7,11,15])]),["DISK_THM"]),
       [read"%129%3%175%158%137%103$1$0@%208@|@@%137%103%141%29%137%122%140%32%175$4$3@$0@@$4$3@%191%153$2@$1@@$0@@@|@|@|@|@@@%137%69%140%78$2$1@$0@|@|@@|@"])
  fun op evalupper_def x = x
    val op evalupper_def =
    DT(((("Omega",19),
        [("Omega",[16,17]),("arithmetic",[24,25,26,27,46,59,71,93,173]),
         ("bool",[15,25,36,54,58,63,104]),("combin",[19]),("list",[6,7]),
         ("numeral",[3,8]),("pair",[7,9,16,49]),("prim_rec",[42]),
         ("relation",[113,115,121,126])]),["DISK_THM"]),
       [read"%158%137%103%162%241$0@%208@@%210@|@@%137%122%137%103%140%32%141%29%162%241$2@%191%153$0@$3@@$1@@@%158%250%252%254$0@@$2@@$3@@%241$2@$1@@@|@|@|@|@@"])
  fun op evallower_ind x = x
    val op evallower_ind =
    DT(((("Omega",22),
        [("arithmetic",[24,25,26,27,46,59,71,93,173]),
         ("bool",[25,27,36,53,54,58,63,104]),("list",[7,46]),
         ("numeral",[3,8]),("pair",[5,7,9,16]),("prim_rec",[42]),
         ("relation",[101,113,115]),
         ("sat",[1,3,5,6,7,11,15])]),["DISK_THM"]),
       [read"%129%3%175%158%137%103$1$0@%208@|@@%137%103%141%29%137%122%140%32%175$4$3@$0@@$4$3@%191%153$2@$1@@$0@@@|@|@|@|@@@%137%69%140%78$2$1@$0@|@|@@|@"])
  fun op evallower_def x = x
    val op evallower_def =
    DT(((("Omega",23),
        [("Omega",[20,21]),("arithmetic",[24,25,26,27,46,59,71,93,173]),
         ("bool",[15,25,36,54,58,63,104]),("combin",[19]),("list",[6,7]),
         ("numeral",[3,8]),("pair",[7,9,16,49]),("prim_rec",[42]),
         ("relation",[113,115,121,126])]),["DISK_THM"]),
       [read"%158%137%103%162%239$0@%208@@%210@|@@%137%122%137%103%140%32%141%29%162%239$2@%191%153$0@$3@@$1@@@%158%250$3@%252%254$0@@$2@@@%239$2@$1@@@|@|@|@|@@"])
  fun op smaller_satisfies_uppers x = x
    val op smaller_satisfies_uppers =
    DT(((("Omega",24),
        [("Omega",[16,17]),
         ("arithmetic",[24,25,26,27,46,59,71,93,173,177,180]),
         ("bool",
         [13,14,15,25,26,27,30,36,43,47,48,51,52,53,54,56,58,63,93,94,96,
          104,105,124]),("combin",[19]),
         ("integer",[79,93,109,113,150,175,206,304]),("list",[6,7,43]),
         ("numeral",[3,8]),("pair",[7,9,16,25,49]),("prim_rec",[6,42]),
         ("relation",[113,115,121,126]),
         ("sat",[1,3,5,6,7,11,12,13,14,15,17,18,19,20,23])]),["DISK_THM"]),
       [read"%140%65%137%103%137%122%175%158%241$1@$2@@%251$0@$1@@@%241$0@$2@@|@|@|@"])
  fun op bigger_satisfies_lowers x = x
    val op bigger_satisfies_lowers =
    DT(((("Omega",25),
        [("Omega",[20,21]),
         ("arithmetic",[24,25,26,27,46,59,71,93,173,177,180]),
         ("bool",
         [14,15,25,26,27,36,43,47,48,51,52,53,54,56,58,63,93,94,96,104,105,
          124]),("combin",[19]),
         ("integer",[79,93,109,113,150,175,206,304]),("list",[6,7,43]),
         ("numeral",[3,8]),("pair",[5,7,9,16,49]),("prim_rec",[6,42]),
         ("relation",[113,115,121,126]),
         ("sat",[1,3,5,6,7,11,12,13,14,15])]),["DISK_THM"]),
       [read"%140%48%137%103%137%122%175%158%239$1@$2@@%251$1@$0@@@%239$0@$2@@|@|@|@"])
  fun op onlylowers_satisfiable x = x
    val op onlylowers_satisfiable =
    DT(((("Omega",28),
        [("Omega",[20,21,25,26]),
         ("arithmetic",[24,25,26,27,41,46,59,70,71,93,172,173,180]),
         ("bool",
         [14,15,25,26,27,30,36,37,47,48,51,52,53,54,56,58,63,64,93,94,96,
          101,104,105,124,129,147]),("combin",[19]),
         ("integer",
         [61,64,79,99,101,109,111,114,128,150,160,166,168,175,206,227,
          304]),("list",[6,7,30,43]),("marker",[6]),("numeral",[3,8]),
         ("pair",[5,7,8,9,16,49]),("prim_rec",[6,42]),
         ("relation",[113,115,121,126]),
         ("sat",[1,3,5,6,7,11,12,13,14,15])]),["DISK_THM"]),
       [read"%140%48%175%192%246@$0@@%176%103%239$0@$1@|@@|@"])
  fun op onlyuppers_satisfiable x = x
    val op onlyuppers_satisfiable =
    DT(((("Omega",29),
        [("Omega",[16,17,24,26]),
         ("arithmetic",[24,25,26,27,41,46,59,71,93,172,173,180]),
         ("bool",
         [13,14,15,25,26,27,30,36,37,43,47,48,51,52,53,54,56,58,63,64,72,
          74,78,81,84,93,94,96,101,104,105,124,129,146,147]),
         ("combin",[19]),
         ("integer",
         [61,63,64,66,79,84,101,102,104,109,113,114,128,138,150,155,157,
          160,165,166,175,206,208,211,227,304]),("list",[6,7,30,43]),
         ("marker",[6,8]),("numeral",[3,8]),("pair",[7,8,9,16,25,49]),
         ("prim_rec",[6,42]),("relation",[113,115,121,126]),
         ("sat",[1,3,5,6,7,11,12,13,14,15,17,18,19,20,23])]),["DISK_THM"]),
       [read"%140%65%175%192%246@$0@@%176%103%241$0@$1@|@@|@"])
  fun op rshadow_row_ind x = x
    val op rshadow_row_ind =
    DT(((("Omega",32),
        [("arithmetic",[24,25,26,27,46,59,71,93,173]),
         ("bool",[25,27,36,53,54,58,63,104]),("list",[7,46]),
         ("numeral",[3,8]),("pair",[5,7,9,16]),("prim_rec",[42]),
         ("relation",[101,113,115]),
         ("sat",[1,3,5,6,7,11,15])]),["DISK_THM"]),
       [read"%136%9%175%158%141%64%137%66$2%153$1@$0@@%208@|@|@@%141%64%137%66%141%47%137%49%140%58%175$5%153$4@$3@@$0@@$5%153$4@$3@@%191%153$2@$1@@$0@@@|@|@|@|@|@@@%141%72%137%76%140%85$3%153$2@$1@@$0@|@|@|@@|@"])
  fun op rshadow_row_def x = x
    val op rshadow_row_def =
    DT(((("Omega",33),
        [("Omega",[30,31]),("arithmetic",[24,25,26,27,46,59,71,93,173]),
         ("bool",[15,25,36,54,58,63,104]),("combin",[19]),("list",[6,7]),
         ("numeral",[3,8]),("pair",[7,9,16,49]),("prim_rec",[42]),
         ("relation",[113,115,121,126])]),["DISK_THM"]),
       [read"%158%137%66%141%64%162%277%153$0@$1@@%208@@%210@|@|@@%137%66%141%64%140%58%137%49%141%47%162%277%153$3@$4@@%191%153$0@$1@@$2@@@%158%250%252%254$3@@$1@@%252%254$0@@$4@@@%277%153$3@$4@@$2@@@|@|@|@|@|@@"])
  fun op singleton_real_shadow x = x
    val op singleton_real_shadow =
    DT(((("Omega",35),
        [("Omega",[20,21,26,30,31]),
         ("arithmetic",[24,25,26,27,41,46,59,71,93,172,173,180]),
         ("bool",
         [13,14,15,25,26,27,30,36,47,48,51,52,53,54,56,58,63,93,94,96,101,
          104,105,124]),("combin",[19]),
         ("integer",[61,63,79,109,114,150,160,166,175,206,304]),
         ("list",[6,7,30,43]),("numeral",[3,8]),("pair",[7,8,9,16,25,49]),
         ("prim_rec",[6,42]),("relation",[113,115,121,126]),
         ("sat",[1,3,5,6,7,11,12,13,14,15,17,18,19,20,23])]),["DISK_THM"]),
       [read"%141%29%137%0%137%103%175%158%250%252%254$2@@$0@@$1@@%160%159@$2@@@%140%48%175%158%192%246@$0@@%239$1@$0@@@%277%153$3@$2@@$0@@|@@|@|@|@"])
  fun op real_shadow_revimp_uppers1 x = x
    val op real_shadow_revimp_uppers1 =
    DT(((("Omega",36),
        [("Omega",[16,17,20,21,25,26,27,30,31]),
         ("arithmetic",[24,25,26,27,46,59,71,93,173]),
         ("bool",
         [13,14,15,25,26,27,30,36,43,47,48,51,52,53,54,56,58,63,64,71,72,
          78,93,94,95,96,101,104,105,124,145,146]),("combin",[19]),
         ("integer",[83,101,108,109,112,114]),("list",[6,7,30,43]),
         ("numeral",[3,8]),("pair",[7,8,9,16,25,49]),("prim_rec",[42]),
         ("relation",[113,115,121,126]),
         ("sat",[1,3,5,6,7,11,12,13,14,15,17,18,19,20,23])]),["DISK_THM"]),
       [read"%140%65%140%48%137%0%137%103%175%158%277%153%209%186%227@@@$1@@$2@@%158%239$0@$2@@%158%241$0@$3@@%158%192%246@$2@@%192%244@$3@@@@@@%176%103%158%250$0@$2@@%158%241$0@$4@@%239$0@$3@@@|@@|@|@|@|@"])
  fun op real_shadow_revimp_lowers1 x = x
    val op real_shadow_revimp_lowers1 =
    DT(((("Omega",37),
        [("Omega",[16,17,20,21,25,26,27,30,31]),
         ("arithmetic",[24,25,26,27,41,46,59,71,93,172,173,180]),
         ("bool",
         [14,15,25,26,27,30,36,43,47,48,51,52,53,54,56,58,63,64,72,78,93,
          94,95,96,101,104,105,124,129,145,146,147]),("combin",[19]),
         ("integer",
         [61,79,83,101,108,109,112,114,150,155,160,166,175,206,227,304]),
         ("list",[6,7,30,43]),("marker",[6]),("numeral",[3,8]),
         ("pair",[7,8,9,16,25,49]),("prim_rec",[6,42]),
         ("relation",[113,115,121,126]),
         ("sat",[1,3,5,6,7,11,12,13,14,15])]),["DISK_THM"]),
       [read"%140%65%140%48%141%29%137%0%137%103%175%158%160%159@$2@@%158%277%153$2@$1@@$3@@%158%241$0@$4@@%158%239$0@$3@@%158%192%246@$4@@%192%244@$3@@@@@@@%176%103%158%250%252%254$3@@$0@@$2@@%158%241$0@$5@@%239$0@$4@@@|@@|@|@|@|@|@"])
  fun op real_shadow_always_implied x = x
    val op real_shadow_always_implied =
    DT(((("Omega",38),
        [("Omega",[16,17,26,34,35]),
         ("arithmetic",[24,25,26,27,46,59,71,93,173]),
         ("bool",
         [14,15,25,26,36,47,48,51,53,54,58,63,71,87,93,94,96,104,105,124]),
         ("combin",[19]),("list",[6,7,30,43]),("numeral",[3,8]),
         ("pair",[7,8,9,16,25,49]),("prim_rec",[42]),
         ("relation",[113,115,121,126]),
         ("sat",[1,3,5,6,7,11,12,13,14,15])]),["DISK_THM"]),
       [read"%140%65%140%48%137%103%175%158%241$0@$2@@%158%239$0@$1@@%158%192%246@$2@@%192%246@$1@@@@@%276$2@$1@@|@|@|@"])
  fun op exact_shadow_case x = x
    val op exact_shadow_case =
    DT(((("Omega",39),
        [("Omega",[16,17,26,27,28,34,36,37,38]),
         ("arithmetic",[24,25,26,27,46,59,71,93,173]),
         ("bool",
         [14,15,25,26,36,47,48,51,53,54,58,63,71,72,73,78,80,81,93,94,95,
          96,101,102,104,105,106,124,145,146]),("combin",[19]),
         ("integer",[83]),("list",[6,7,30,43]),("numeral",[3,7,8]),
         ("pair",[7,8,9,16,25,49]),("prim_rec",[42]),
         ("relation",[113,115,121,126]),
         ("sat",[1,3,5,6,7,11,12,13,14,15])]),["DISK_THM"]),
       [read"%140%65%140%48%175%158%192%246@$1@@%192%246@$0@@@%175%228%192%244@$1@@%192%244@$0@@@%162%176%103%158%241$0@$2@@%239$0@$1@@|@@%276$1@$0@@@@|@|@"])
  fun op dark_shadow_cond_row_ind x = x
    val op dark_shadow_cond_row_ind =
    DT(((("Omega",42),
        [("arithmetic",[24,25,26,27,46,59,71,93,173]),
         ("bool",[25,27,36,53,54,58,63,104]),("list",[7,46]),
         ("numeral",[3,8]),("pair",[5,7,9,16]),("prim_rec",[42]),
         ("relation",[101,113,115]),
         ("sat",[1,3,5,6,7,11,15])]),["DISK_THM"]),
       [read"%136%9%175%158%141%29%137%0$2%153$1@$0@@%208@|@|@@%141%29%137%0%141%33%137%15%140%62%175$5%153$4@$3@@$0@@$5%153$4@$3@@%191%153$2@$1@@$0@@@|@|@|@|@|@@@%141%72%137%76%140%85$3%153$2@$1@@$0@|@|@|@@|@"])
  fun op dark_shadow_cond_row_def x = x
    val op dark_shadow_cond_row_def =
    DT(((("Omega",43),
        [("Omega",[40,41]),("arithmetic",[24,25,26,27,46,59,71,93,173]),
         ("bool",[15,25,36,54,58,63,104]),("combin",[19]),("list",[6,7]),
         ("numeral",[3,8]),("pair",[7,9,16,49]),("prim_rec",[42]),
         ("relation",[113,115,121,126])]),["DISK_THM"]),
       [read"%158%141%29%137%0%162%232%153$1@$0@@%208@@%210@|@|@@%140%62%141%33%141%29%137%15%137%0%162%232%153$2@$0@@%191%153$3@$1@@$4@@@%158%281%176%46%158%251%252%252%254$3@@%254$4@@@$0@@%252%254$3@@$2@@@%158%250%252%254$3@@$2@@%252%254$4@@$1@@@%251%252%254$4@@$1@@%252%252%254$3@@%254$4@@@%247$0@%254%209%186%227@@@@@@@@|@@@%232%153$2@$0@@$4@@@|@|@|@|@|@@"])
  fun op dark_shadow_condition_ind x = x
    val op dark_shadow_condition_ind =
    DT(((("Omega",46),
        [("arithmetic",[24,25,26,27,46,59,71,93,173]),
         ("bool",[25,27,36,53,54,58,63,104]),("list",[7,46]),
         ("numeral",[3,8]),("pair",[5,7,8,16]),("prim_rec",[42]),
         ("relation",[101,113,115]),
         ("sat",[1,3,5,6,7,11,15])]),["DISK_THM"]),
       [read"%134%7%175%158%140%48$1%208@$0@|@@%141%29%137%0%140%65%140%48%175$4$1@$0@@$4%191%153$3@$2@@$1@@$0@@|@|@|@|@@@%140%71%140%78$2$1@$0@|@|@@|@"])
  fun op dark_shadow_condition_def x = x
    val op dark_shadow_condition_def =
    DT(((("Omega",47),
        [("Omega",[44,45]),("arithmetic",[24,25,26,27,46,59,71,93,173]),
         ("bool",[15,25,36,54,58,63,104]),("combin",[19]),("list",[6,7]),
         ("numeral",[3,8]),("pair",[7,8,16,49]),("prim_rec",[42]),
         ("relation",[113,115,121,126])]),["DISK_THM"]),
       [read"%158%140%48%162%234%208@$0@@%210@|@@%140%65%140%48%141%29%137%0%162%234%191%153$1@$0@@$3@@$2@@%158%232%153$1@$0@@$2@@%234$3@$2@@@|@|@|@|@@"])
  fun op basic_shadow_equivalence x = x
    val op basic_shadow_equivalence =
    DT(((("Omega",48),
        [("Omega",[16,17,20,21,25,26,28,30,31,34,38,40,41,44,45]),
         ("arithmetic",[24,25,26,27,41,46,59,71,93,151,172,173,180]),
         ("bool",
         [13,14,15,25,26,27,30,36,43,47,48,51,52,53,54,56,58,63,64,71,72,
          74,76,78,81,83,84,92,93,94,96,101,104,105,124,129,146,147]),
         ("combin",[19]),
         ("integer",
         [59,61,63,64,66,79,84,101,102,104,109,112,113,114,129,150,155,160,
          166,168,175,206,208,211,227,304]),("list",[6,7,30,43]),
         ("marker",[6]),("numeral",[3,8]),("pair",[7,8,9,16,25,49]),
         ("prim_rec",[6,42]),("relation",[113,115,121,126]),
         ("sat",[1,3,5,6,7,11,12,13,14,15,17,18,19,20,23])]),["DISK_THM"]),
       [read"%140%65%140%48%175%158%192%246@$1@@%192%246@$0@@@%162%176%103%158%241$0@$2@@%239$0@$1@@|@@%158%276$1@$0@@%234$1@$0@@@@|@|@"])
  fun op dark_shadow_row_ind x = x
    val op dark_shadow_row_ind =
    DT(((("Omega",51),
        [("arithmetic",[24,25,26,27,46,59,71,93,173]),
         ("bool",[25,27,36,53,54,58,63,104]),("list",[7,46]),
         ("numeral",[3,8]),("pair",[5,7,9,16]),("prim_rec",[42]),
         ("relation",[101,113,115]),
         ("sat",[1,3,5,6,7,11,15])]),["DISK_THM"]),
       [read"%135%8%175%158%141%29%137%0$2$1@$0@%208@|@|@@%141%29%137%0%141%33%137%15%140%58%175$5$4@$3@$0@@$5$4@$3@%191%153$2@$1@@$0@@@|@|@|@|@|@@@%141%72%137%76%140%85$3$2@$1@$0@|@|@|@@|@"])
  fun op dark_shadow_row_def x = x
    val op dark_shadow_row_def =
    DT(((("Omega",52),
        [("Omega",[49,50]),("arithmetic",[24,25,26,27,46,59,71,93,173]),
         ("bool",[15,25,36,54,58,63,104]),("combin",[19]),("list",[6,7]),
         ("numeral",[3,8]),("pair",[7,9,16,49]),("prim_rec",[42]),
         ("relation",[113,115,121,126])]),["DISK_THM"]),
       [read"%158%141%29%137%0%162%236$1@$0@%208@@%210@|@|@@%140%58%141%33%141%29%137%15%137%0%162%236$2@$0@%191%153$3@$1@@$4@@@%158%249%255%252%254$3@@$0@@%252%254$2@@$1@@@%252%255%254$2@@%254%209%186%227@@@@@%255%254$3@@%254%209%186%227@@@@@@@%236$2@$0@$4@@@|@|@|@|@|@@"])
  fun op dark_shadow_ind x = x
    val op dark_shadow_ind =
    DT(((("Omega",55),
        [("arithmetic",[24,25,26,27,46,59,71,93,173]),
         ("bool",[25,27,36,53,54,58,63,104]),("list",[7,46]),
         ("numeral",[3,8]),("pair",[5,7,8,16]),("prim_rec",[42]),
         ("relation",[101,113,115]),
         ("sat",[1,3,5,6,7,11,15])]),["DISK_THM"]),
       [read"%134%7%175%158%140%48$1%208@$0@|@@%141%29%137%0%140%65%140%48%175$4$1@$0@@$4%191%153$3@$2@@$1@@$0@@|@|@|@|@@@%140%71%140%78$2$1@$0@|@|@@|@"])
  fun op dark_shadow_def x = x
    val op dark_shadow_def =
    DT(((("Omega",56),
        [("Omega",[53,54]),("arithmetic",[24,25,26,27,46,59,71,93,173]),
         ("bool",[15,25,36,54,58,63,104]),("combin",[19]),("list",[6,7]),
         ("numeral",[3,8]),("pair",[7,8,16,49]),("prim_rec",[42]),
         ("relation",[113,115,121,126])]),["DISK_THM"]),
       [read"%158%140%48%162%231%208@$0@@%210@|@@%140%65%140%48%141%29%137%0%162%231%191%153$1@$0@@$3@@$2@@%158%236$1@$0@$2@@%231$3@$2@@@|@|@|@|@@"])
  fun op nightmare_ind x = x
    val op nightmare_ind =
    DT(((("Omega",59),
        [("arithmetic",[24,25,26,27,46,59,71,93,173]),
         ("bool",[25,27,36,53,54,58,63,104]),("list",[7,46]),
         ("numeral",[3,8]),("pair",[5,7,9,16]),("prim_rec",[42]),
         ("relation",[101,113,115]),
         ("sat",[1,3,5,6,7,11,15])]),["DISK_THM"]),
       [read"%131%5%175%158%137%103%141%29%140%65%140%48$4$3@$2@$1@$0@%208@|@|@|@|@@%137%103%141%29%140%65%140%48%141%33%137%15%140%58%175$7$6@$5@$4@$3@$0@@$7$6@$5@$4@$3@%191%153$2@$1@@$0@@@|@|@|@|@|@|@|@@@%137%69%141%79%140%85%140%89%140%94$5$4@$3@$2@$1@$0@|@|@|@|@|@@|@"])
  fun op nightmare_def x = x
    val op nightmare_def =
    DT(((("Omega",60),
        [("Omega",[57,58]),("arithmetic",[24,25,26,27,46,59,71,93,173]),
         ("bool",[15,25,36,54,58,63,104]),("combin",[19]),("list",[6,7]),
         ("numeral",[3,8]),("pair",[7,9,16,49]),("prim_rec",[42]),
         ("relation",[113,115,121,126])]),["DISK_THM"]),
       [read"%158%137%103%140%65%140%48%141%29%162%260$3@$0@$2@$1@%208@@%193@|@|@|@|@@%137%103%140%65%140%58%140%48%141%33%141%29%137%15%162%260$6@$1@$5@$3@%191%153$2@$0@@$4@@@%228%176%46%158%158%250%254%159@@$0@@%250$0@%248%255%255%252%254$2@@%254$3@@@%254$2@@@%254$3@@@%254$2@@@@@%158%171%252%254$3@@$7@@%247$1@$0@@@%158%241$7@$6@@%239$7@$4@@@@|@@%260$6@$1@$5@$3@$4@@@|@|@|@|@|@|@|@@"])
  fun op nightmare_implies_LHS x = x
    val op nightmare_implies_LHS =
    DT(((("Omega",61),
        [("Omega",[57,58]),("arithmetic",[24,25,26,27,46,59,71,93,173]),
         ("bool",
         [14,15,25,26,27,36,47,48,53,54,58,63,71,77,80,94,104,105,124]),
         ("combin",[19]),("integer",[168]),("list",[6,7,43]),
         ("numeral",[3,8]),("pair",[7,9,16,25,49]),("prim_rec",[42]),
         ("relation",[113,115,121,126]),
         ("sat",[1,3,5,6,7,11,12,13,14,15])]),["DISK_THM"]),
       [read"%140%58%137%103%140%65%140%48%141%29%175%260$3@$0@$2@$1@$4@@%158%241$3@$2@@%239$3@$1@@@|@|@|@|@|@"])
  fun op dark_shadow_FORALL x = x
    val op dark_shadow_FORALL =
    DT(((("Omega",62),
        [("Omega",[49,50,53,54]),
         ("arithmetic",[24,25,26,27,46,59,71,93,173]),
         ("bool",
         [14,15,25,26,27,36,47,48,51,53,54,56,58,63,73,93,94,95,96,98,101,
          102,104,105,124,145]),("combin",[19]),("list",[6,7,43,120]),
         ("numeral",[3,8]),("pair",[4,7,8,9,16,25,49]),("prim_rec",[42]),
         ("relation",[113,115,121,126]),
         ("sat",[1,3,5,6,7,11,12,13,14,15])]),["DISK_THM"]),
       [read"%140%65%140%48%162%231$1@$0@@%141%29%141%33%137%0%137%15%175%158%199%153$3@$1@@%200$5@@@%199%153$2@$0@@%200$4@@@@%249%255%252%254$2@@$1@@%252%254$3@@$0@@@%252%255%254$3@@%254%209%186%227@@@@@%255%254$2@@%254%209%186%227@@@@@@@|@|@|@|@@|@|@"])
  fun op real_shadow_FORALL x = x
    val op real_shadow_FORALL =
    DT(((("Omega",63),
        [("Omega",[30,31,34]),("arithmetic",[24,25,26,27,46,59,71,93,173]),
         ("bool",
         [14,15,25,26,27,36,51,53,54,58,63,73,93,95,98,101,102,104,105,124,
          145]),("combin",[19]),("list",[6,7,43,120]),("numeral",[3,8]),
         ("pair",[4,7,9,16,25,49]),("prim_rec",[42]),
         ("relation",[113,115,121,126])]),["DISK_THM"]),
       [read"%140%65%140%48%162%276$1@$0@@%141%29%141%33%137%0%137%15%175%158%199%153$3@$1@@%200$5@@@%199%153$2@$0@@%200$4@@@@%250%252%254$3@@$0@@%252%254$2@@$1@@@|@|@|@|@@|@|@"])
  fun op evalupper_FORALL x = x
    val op evalupper_FORALL =
    DT(((("Omega",64),
        [("Omega",[16,17]),("arithmetic",[24,25,26,27,46,59,71,93,173]),
         ("bool",
         [14,15,25,27,36,53,54,56,58,63,73,93,95,101,102,104,105,124,145]),
         ("combin",[19]),("list",[6,7,43,120]),("numeral",[3,8]),
         ("pair",[4,7,9,16,25,49]),("prim_rec",[42]),
         ("relation",[113,115,121,126])]),["DISK_THM"]),
       [read"%140%65%137%103%162%241$0@$1@@%141%29%137%0%175%199%153$1@$0@@%200$3@@@%250%252%254$1@@$2@@$0@@|@|@@|@|@"])
  fun op evallower_FORALL x = x
    val op evallower_FORALL =
    DT(((("Omega",65),
        [("Omega",[20,21]),("arithmetic",[24,25,26,27,46,59,71,93,173]),
         ("bool",
         [14,15,25,27,36,53,54,56,58,63,73,93,95,101,102,104,105,124,145]),
         ("combin",[19]),("list",[6,7,43,120]),("numeral",[3,8]),
         ("pair",[4,7,9,16,25,49]),("prim_rec",[42]),
         ("relation",[113,115,121,126])]),["DISK_THM"]),
       [read"%140%48%137%103%162%239$0@$1@@%141%33%137%15%175%199%153$1@$0@@%200$3@@@%250$0@%252%254$1@@$2@@@|@|@@|@|@"])
  fun op nightmare_EXISTS x = x
    val op nightmare_EXISTS =
    DT(((("Omega",66),
        [("Omega",[57,58]),("arithmetic",[24,25,26,27,46,59,71,73,93,173]),
         ("bool",
         [13,14,15,25,26,27,30,36,37,47,48,51,52,53,54,56,58,63,72,81,84,
          93,94,96,104]),("combin",[19]),("integer",[168]),
         ("list",[6,7,43,120]),("numeral",[3,8]),("pair",[4,7,9,16,25,49]),
         ("prim_rec",[42]),("relation",[113,115,121,126]),
         ("sat",[1,3,5,6,7,11,12,13,14,15,17,18,19,20,23])]),["DISK_THM"]),
       [read"%140%58%137%103%141%29%140%65%140%48%162%260$3@$2@$1@$0@$4@@%176%46%177%33%176%15%158%250%254%159@@$2@@%158%250$2@%248%255%255%252%254$1@@%254$5@@@%254$5@@@%254$1@@@%254$5@@@@%158%199%153$1@$0@@%200$7@@@%158%241$6@$4@@%158%239$6@$3@@%171%252%254$1@@$6@@%247$0@$2@@@@@@@|@|@|@@|@|@|@|@|@"])
  fun op final_equivalence x = x
    val op final_equivalence =
    DT(((("Omega",67),
        [("Omega",[26,40,41,44,45,48,49,50,53,54,61,62,64,65,66]),
         ("arithmetic",
         [24,25,26,27,41,46,59,70,71,73,93,148,155,172,173,180]),
         ("bool",
         [13,14,15,25,26,27,30,36,43,47,48,51,52,53,54,56,58,63,71,72,73,
          74,75,76,77,78,80,81,83,84,92,93,94,96,101,104,105,124,129,146,
          147,170]),("combin",[19]),
         ("integer",
         [59,61,62,63,64,66,67,73,76,79,80,83,84,87,95,96,97,99,100,101,
          102,104,108,109,111,112,113,114,118,128,131,136,138,149,150,151,
          155,157,158,160,164,165,166,168,174,175,176,177,179,180,181,182,
          206,208,211,224,227,234,235,239,240,304,336,342]),
         ("list",[6,7,30,43,71]),("marker",[6,8]),("numeral",[3,8]),
         ("pair",[7,8,9,16,25,49]),("prim_rec",[6,42]),
         ("relation",[113,115,121,126]),
         ("sat",[1,3,5,6,7,11,12,13,14,15,17,18,19,20,23])]),["DISK_THM"]),
       [read"%140%65%140%48%141%52%175%158%192%246@$2@@%158%192%246@$1@@%192%55%161%195$0@@$1@|@$2@@@@%162%176%103%158%241$0@$3@@%239$0@$2@@|@@%158%276$2@$1@@%228%231$2@$1@@%176%103%260$0@$1@$3@$2@$2@|@@@@@|@|@|@"])
  fun op darkrow_implies_realrow x = x
    val op darkrow_implies_realrow =
    DT(((("Omega",68),
        [("Omega",[26,30,31,49,50]),
         ("arithmetic",[24,25,26,27,41,46,59,71,93,173,176,180]),
         ("bool",
         [14,15,25,26,36,47,48,51,53,54,58,63,93,94,96,101,104,105,124]),
         ("combin",[19]),("integer",[76,79,114,124,156,164,176]),
         ("list",[6,7,30,43]),("numeral",[3,8]),("pair",[7,8,9,16,25,49]),
         ("prim_rec",[42]),("relation",[113,115,121,126]),
         ("sat",[1,3,5,6,7,11,12,13,14,15])]),["DISK_THM"]),
       [read"%140%48%141%29%137%0%175%158%160%159@$1@@%158%192%246@$2@@%236$1@$0@$2@@@@%277%153$1@$0@@$2@@|@|@|@"])
  fun op dark_implies_real x = x
    val op dark_implies_real =
    DT(((("Omega",69),
        [("Omega",[26,34,53,54,68]),
         ("arithmetic",[24,25,26,27,46,59,71,93,173]),
         ("bool",[14,15,25,36,51,53,54,58,63,104,105,124]),("combin",[19]),
         ("list",[6,7,30,43]),("numeral",[3,8]),("pair",[7,8,16,25,49]),
         ("prim_rec",[42]),("relation",[113,115,121,126])]),["DISK_THM"]),
       [read"%140%65%140%48%175%158%192%246@$1@@%158%192%246@$0@@%231$1@$0@@@@%276$1@$0@@|@|@"])
  fun op alternative_equivalence x = x
    val op alternative_equivalence =
    DT(((("Omega",70),
        [("Omega",[61,67,69]),
         ("bool",[25,26,47,48,51,52,53,54,58,63,72,77,78,80,81,93,94,96]),
         ("sat",[1,3,5,6,7,11,12,13,14,15])]),["DISK_THM"]),
       [read"%140%65%140%48%141%52%175%158%192%246@$2@@%158%192%246@$1@@%192%55%161%195$0@@$1@|@$2@@@@%162%176%103%158%241$0@$3@@%239$0@$2@@|@@%228%231$2@$1@@%176%103%260$0@$1@$3@$2@$2@|@@@@|@|@|@"])
  fun op eval_base x = x
    val op eval_base =
    DT(((("Omega",71),
        [("Omega",[16,17,20,21]),
         ("arithmetic",[24,25,26,27,46,59,71,93,173]),
         ("bool",[15,25,36,51,54,56,58,63,104]),("combin",[19]),
         ("list",[6,7]),("numeral",[3,8]),("pair",[7,9,16,49]),
         ("prim_rec",[42]),("relation",[113,115,121,126])]),["DISK_THM"]),
       [read"%162%54@%158%158%158%241%103@%208@@%239%103@%208@@@%210@@%54@@"])
  fun op eval_step_upper1 x = x
    val op eval_step_upper1 =
    DT(((("Omega",72),
        [("Omega",[16,17]),("arithmetic",[24,25,26,27,46,59,71,93,173]),
         ("bool",[15,25,36,42,43,54,58,63,104]),("combin",[19]),
         ("list",[6,7]),("numeral",[3,8]),("pair",[7,9,16,49]),
         ("prim_rec",[42]),("relation",[113,115,121,126])]),["DISK_THM"]),
       [read"%162%158%158%158%241%103@%67@@%239%103@%50@@@%41@@%250%252%254%29@@%103@@%57@@@%158%158%241%103@%191%153%29@%57@@%67@@@%239%103@%50@@@%41@@"])
  fun op eval_step_upper2 x = x
    val op eval_step_upper2 =
    DT(((("Omega",73),
        [("Omega",[16,17]),("arithmetic",[24,25,26,27,46,59,71,93,173]),
         ("bool",[15,25,36,42,43,54,58,63,104]),("combin",[19]),
         ("list",[6,7]),("numeral",[3,8]),("pair",[7,9,16,49]),
         ("prim_rec",[42]),("relation",[113,115,121,126])]),["DISK_THM"]),
       [read"%162%158%158%158%241%103@%67@@%239%103@%50@@@%41@@%158%250%252%254%29@@%103@@%57@@%54@@@%158%158%158%241%103@%191%153%29@%57@@%67@@@%239%103@%50@@@%41@@%54@@"])
  fun op eval_step_lower1 x = x
    val op eval_step_lower1 =
    DT(((("Omega",74),
        [("Omega",[20,21]),("arithmetic",[24,25,26,27,46,59,71,93,173]),
         ("bool",[15,25,36,42,43,54,58,63,104]),("combin",[19]),
         ("list",[6,7]),("numeral",[3,8]),("pair",[7,9,16,49]),
         ("prim_rec",[42]),("relation",[113,115,121,126])]),["DISK_THM"]),
       [read"%162%158%158%158%241%103@%67@@%239%103@%50@@@%41@@%250%57@%252%254%29@@%103@@@@%158%158%241%103@%67@@%239%103@%191%153%29@%57@@%50@@@@%41@@"])
  fun op eval_step_lower2 x = x
    val op eval_step_lower2 =
    DT(((("Omega",75),
        [("Omega",[20,21]),("arithmetic",[24,25,26,27,46,59,71,93,173]),
         ("bool",[15,25,36,42,43,54,58,63,104]),("combin",[19]),
         ("list",[6,7]),("numeral",[3,8]),("pair",[7,9,16,49]),
         ("prim_rec",[42]),("relation",[113,115,121,126])]),["DISK_THM"]),
       [read"%162%158%158%158%241%103@%67@@%239%103@%50@@@%41@@%158%250%57@%252%254%29@@%103@@@%54@@@%158%158%158%241%103@%67@@%239%103@%191%153%29@%57@@%50@@@@%41@@%54@@"])
  fun op eval_step_extra1 x = x
    val op eval_step_extra1 =
    DT(((("Omega",76),[("bool",[25,51,56])]),["DISK_THM"]),
       [read"%162%158%158%158%241%103@%67@@%239%103@%50@@@%210@@%42@@%158%158%241%103@%67@@%239%103@%50@@@%42@@"])
  fun op eval_step_extra2 x = x
    val op eval_step_extra2 =
    DT(((("Omega",77),[("bool",[25,43,56])]),["DISK_THM"]),
       [read"%162%158%158%158%241%103@%67@@%239%103@%50@@@%41@@%42@@%158%158%241%103@%67@@%239%103@%50@@@%158%41@%42@@@"])
  fun op eval_step_extra3 x = x
    val op eval_step_extra3 =
    DT(((("Omega",78),[("bool",[25,43,51,56])]),["DISK_THM"]),
       [read"%162%158%158%158%241%103@%67@@%239%103@%50@@@%210@@%158%42@%54@@@%158%158%158%241%103@%67@@%239%103@%50@@@%42@@%54@@"])
  fun op eval_step_extra4 x = x
    val op eval_step_extra4 =
    DT(((("Omega",79),[("bool",[25,43,56])]),["DISK_THM"]),
       [read"%162%158%158%158%241%103@%67@@%239%103@%50@@@%41@@%158%42@%54@@@%158%158%158%241%103@%67@@%239%103@%50@@@%158%41@%42@@@%54@@"])
  fun op calc_nightmare_ind x = x
    val op calc_nightmare_ind =
    DT(((("Omega",82),
        [("arithmetic",[24,25,26,27,46,59,71,93,173]),
         ("bool",[25,27,36,53,54,58,63,104]),("list",[7,46]),
         ("numeral",[3,8]),("pair",[5,7,9,16]),("prim_rec",[42]),
         ("relation",[101,113,115]),
         ("sat",[1,3,5,6,7,11,15])]),["DISK_THM"]),
       [read"%130%4%175%158%137%103%141%29$2$1@$0@%208@|@|@@%137%103%141%29%141%33%137%15%140%58%175$5$4@$3@$0@@$5$4@$3@%191%153$2@$1@@$0@@@|@|@|@|@|@@@%137%69%141%79%140%85$3$2@$1@$0@|@|@|@@|@"])
  fun op calc_nightmare_def x = x
    val op calc_nightmare_def =
    DT(((("Omega",83),
        [("Omega",[80,81]),("arithmetic",[24,25,26,27,46,59,71,93,173]),
         ("bool",[15,25,36,54,58,63,104]),("combin",[19]),("list",[6,7]),
         ("numeral",[3,8]),("pair",[7,9,16,49]),("prim_rec",[42]),
         ("relation",[113,115,121,126])]),["DISK_THM"]),
       [read"%158%137%103%141%29%162%229$1@$0@%208@@%193@|@|@@%137%103%140%58%141%33%141%29%137%15%162%229$4@$1@%191%153$2@$0@@$3@@@%228%176%46%158%158%250%254%159@@$0@@%250$0@%248%255%255%252%254$2@@%254$3@@@%254$2@@@%254$3@@@%254$2@@@@@%171%252%254$3@@$5@@%247$1@$0@@@|@@%229$4@$1@$3@@@|@|@|@|@|@@"])
  fun op calculational_nightmare x = x
    val op calculational_nightmare =
    DT(((("Omega",84),
        [("Omega",[57,58,80,81]),
         ("arithmetic",[24,25,26,27,46,59,71,93,173]),
         ("bool",
         [14,15,25,26,36,47,48,51,53,54,58,63,72,76,77,80,81,93,96,104]),
         ("combin",[19]),("integer",[168]),("list",[6,7,43]),
         ("numeral",[3,8]),("pair",[5,7,9,16,49]),("prim_rec",[42]),
         ("relation",[113,115,121,126]),
         ("sat",[1,3,5,6,7,11,12,13,14,15])]),["DISK_THM"]),
       [read"%140%58%162%260%103@%29@%65@%48@$0@@%158%229%103@%29@$0@@%158%241%103@%65@@%239%103@%48@@@@|@"])
  end
  val _ = DB.bindl "Omega"
  [("MAP2_tupled_primitive_def",MAP2_tupled_primitive_def,DB.Def),
   ("MAP2_curried_def",MAP2_curried_def,DB.Def),
   ("sumc_tupled_primitive_def",sumc_tupled_primitive_def,DB.Def),
   ("sumc_curried_def",sumc_curried_def,DB.Def),
   ("modhat_def",modhat_def,DB.Def),
   ("evalupper_tupled_primitive_def",
    evalupper_tupled_primitive_def,
    DB.Def), ("evalupper_curried_def",evalupper_curried_def,DB.Def),
   ("evallower_tupled_primitive_def",
    evallower_tupled_primitive_def,
    DB.Def), ("evallower_curried_def",evallower_curried_def,DB.Def),
   ("fst_nzero_def",fst_nzero_def,DB.Def), ("fst1_def",fst1_def,DB.Def),
   ("rshadow_row_tupled_primitive_def",
    rshadow_row_tupled_primitive_def,
    DB.Def), ("rshadow_row_curried_def",rshadow_row_curried_def,DB.Def),
   ("real_shadow_def",real_shadow_def,DB.Def),
   ("dark_shadow_cond_row_tupled_primitive_def",
    dark_shadow_cond_row_tupled_primitive_def,
    DB.Def),
   ("dark_shadow_cond_row_curried_def",
    dark_shadow_cond_row_curried_def,
    DB.Def),
   ("dark_shadow_condition_tupled_primitive_def",
    dark_shadow_condition_tupled_primitive_def,
    DB.Def),
   ("dark_shadow_condition_curried_def",
    dark_shadow_condition_curried_def,
    DB.Def),
   ("dark_shadow_row_tupled_primitive_def",
    dark_shadow_row_tupled_primitive_def,
    DB.Def),
   ("dark_shadow_row_curried_def",dark_shadow_row_curried_def,DB.Def),
   ("dark_shadow_tupled_primitive_def",
    dark_shadow_tupled_primitive_def,
    DB.Def), ("dark_shadow_curried_def",dark_shadow_curried_def,DB.Def),
   ("nightmare_tupled_primitive_def",
    nightmare_tupled_primitive_def,
    DB.Def), ("nightmare_curried_def",nightmare_curried_def,DB.Def),
   ("calc_nightmare_tupled_primitive_def",
    calc_nightmare_tupled_primitive_def,
    DB.Def),
   ("calc_nightmare_curried_def",calc_nightmare_curried_def,DB.Def),
   ("MAP2_ind",MAP2_ind,DB.Thm), ("MAP2_def",MAP2_def,DB.Thm),
   ("MAP2_zero_ADD",MAP2_zero_ADD,DB.Thm), ("sumc_ind",sumc_ind,DB.Thm),
   ("sumc_def",sumc_def,DB.Thm), ("sumc_thm",sumc_thm,DB.Thm),
   ("sumc_ADD",sumc_ADD,DB.Thm), ("sumc_MULT",sumc_MULT,DB.Thm),
   ("sumc_singleton",sumc_singleton,DB.Thm),
   ("sumc_nonsingle",sumc_nonsingle,DB.Thm),
   ("equality_removal",equality_removal,DB.Thm),
   ("evalupper_ind",evalupper_ind,DB.Thm),
   ("evalupper_def",evalupper_def,DB.Thm),
   ("evallower_ind",evallower_ind,DB.Thm),
   ("evallower_def",evallower_def,DB.Thm),
   ("smaller_satisfies_uppers",smaller_satisfies_uppers,DB.Thm),
   ("bigger_satisfies_lowers",bigger_satisfies_lowers,DB.Thm),
   ("onlylowers_satisfiable",onlylowers_satisfiable,DB.Thm),
   ("onlyuppers_satisfiable",onlyuppers_satisfiable,DB.Thm),
   ("rshadow_row_ind",rshadow_row_ind,DB.Thm),
   ("rshadow_row_def",rshadow_row_def,DB.Thm),
   ("singleton_real_shadow",singleton_real_shadow,DB.Thm),
   ("real_shadow_revimp_uppers1",real_shadow_revimp_uppers1,DB.Thm),
   ("real_shadow_revimp_lowers1",real_shadow_revimp_lowers1,DB.Thm),
   ("real_shadow_always_implied",real_shadow_always_implied,DB.Thm),
   ("exact_shadow_case",exact_shadow_case,DB.Thm),
   ("dark_shadow_cond_row_ind",dark_shadow_cond_row_ind,DB.Thm),
   ("dark_shadow_cond_row_def",dark_shadow_cond_row_def,DB.Thm),
   ("dark_shadow_condition_ind",dark_shadow_condition_ind,DB.Thm),
   ("dark_shadow_condition_def",dark_shadow_condition_def,DB.Thm),
   ("basic_shadow_equivalence",basic_shadow_equivalence,DB.Thm),
   ("dark_shadow_row_ind",dark_shadow_row_ind,DB.Thm),
   ("dark_shadow_row_def",dark_shadow_row_def,DB.Thm),
   ("dark_shadow_ind",dark_shadow_ind,DB.Thm),
   ("dark_shadow_def",dark_shadow_def,DB.Thm),
   ("nightmare_ind",nightmare_ind,DB.Thm),
   ("nightmare_def",nightmare_def,DB.Thm),
   ("nightmare_implies_LHS",nightmare_implies_LHS,DB.Thm),
   ("dark_shadow_FORALL",dark_shadow_FORALL,DB.Thm),
   ("real_shadow_FORALL",real_shadow_FORALL,DB.Thm),
   ("evalupper_FORALL",evalupper_FORALL,DB.Thm),
   ("evallower_FORALL",evallower_FORALL,DB.Thm),
   ("nightmare_EXISTS",nightmare_EXISTS,DB.Thm),
   ("final_equivalence",final_equivalence,DB.Thm),
   ("darkrow_implies_realrow",darkrow_implies_realrow,DB.Thm),
   ("dark_implies_real",dark_implies_real,DB.Thm),
   ("alternative_equivalence",alternative_equivalence,DB.Thm),
   ("eval_base",eval_base,DB.Thm),
   ("eval_step_upper1",eval_step_upper1,DB.Thm),
   ("eval_step_upper2",eval_step_upper2,DB.Thm),
   ("eval_step_lower1",eval_step_lower1,DB.Thm),
   ("eval_step_lower2",eval_step_lower2,DB.Thm),
   ("eval_step_extra1",eval_step_extra1,DB.Thm),
   ("eval_step_extra2",eval_step_extra2,DB.Thm),
   ("eval_step_extra3",eval_step_extra3,DB.Thm),
   ("eval_step_extra4",eval_step_extra4,DB.Thm),
   ("calc_nightmare_ind",calc_nightmare_ind,DB.Thm),
   ("calc_nightmare_def",calc_nightmare_def,DB.Thm),
   ("calculational_nightmare",calculational_nightmare,DB.Thm)]

  local open Portable GrammarSpecials Parse
    fun UTOFF f = Feedback.trace("Parse.unicode_trace_off_complaints",0)f
  in
  val _ = mk_local_grms [("integerTheory.integer_grammars",
                          integerTheory.integer_grammars)]
  val _ = List.app (update_grms reveal) []
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("MAP2_tupled", (Term.prim_mk_const { Name = "MAP2_tupled", Thy = "Omega"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("MAP2_tupled", (Term.prim_mk_const { Name = "MAP2_tupled", Thy = "Omega"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("MAP2", (Term.prim_mk_const { Name = "MAP2", Thy = "Omega"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("MAP2", (Term.prim_mk_const { Name = "MAP2", Thy = "Omega"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("sumc_tupled", (Term.prim_mk_const { Name = "sumc_tupled", Thy = "Omega"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("sumc_tupled", (Term.prim_mk_const { Name = "sumc_tupled", Thy = "Omega"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("sumc", (Term.prim_mk_const { Name = "sumc", Thy = "Omega"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("sumc", (Term.prim_mk_const { Name = "sumc", Thy = "Omega"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("modhat", (Term.prim_mk_const { Name = "modhat", Thy = "Omega"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("modhat", (Term.prim_mk_const { Name = "modhat", Thy = "Omega"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("evalupper_tupled", (Term.prim_mk_const { Name = "evalupper_tupled", Thy = "Omega"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("evalupper_tupled", (Term.prim_mk_const { Name = "evalupper_tupled", Thy = "Omega"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("evalupper", (Term.prim_mk_const { Name = "evalupper", Thy = "Omega"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("evalupper", (Term.prim_mk_const { Name = "evalupper", Thy = "Omega"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("evallower_tupled", (Term.prim_mk_const { Name = "evallower_tupled", Thy = "Omega"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("evallower_tupled", (Term.prim_mk_const { Name = "evallower_tupled", Thy = "Omega"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("evallower", (Term.prim_mk_const { Name = "evallower", Thy = "Omega"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("evallower", (Term.prim_mk_const { Name = "evallower", Thy = "Omega"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("fst_nzero", (Term.prim_mk_const { Name = "fst_nzero", Thy = "Omega"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("fst_nzero", (Term.prim_mk_const { Name = "fst_nzero", Thy = "Omega"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("fst1", (Term.prim_mk_const { Name = "fst1", Thy = "Omega"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("fst1", (Term.prim_mk_const { Name = "fst1", Thy = "Omega"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("rshadow_row_tupled", (Term.prim_mk_const { Name = "rshadow_row_tupled", Thy = "Omega"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("rshadow_row_tupled", (Term.prim_mk_const { Name = "rshadow_row_tupled", Thy = "Omega"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("rshadow_row", (Term.prim_mk_const { Name = "rshadow_row", Thy = "Omega"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("rshadow_row", (Term.prim_mk_const { Name = "rshadow_row", Thy = "Omega"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("real_shadow", (Term.prim_mk_const { Name = "real_shadow", Thy = "Omega"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("dark_shadow_cond_row_tupled", (Term.prim_mk_const { Name = "dark_shadow_cond_row_tupled", Thy = "Omega"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("dark_shadow_cond_row_tupled", (Term.prim_mk_const { Name = "dark_shadow_cond_row_tupled", Thy = "Omega"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("dark_shadow_cond_row", (Term.prim_mk_const { Name = "dark_shadow_cond_row", Thy = "Omega"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("dark_shadow_cond_row", (Term.prim_mk_const { Name = "dark_shadow_cond_row", Thy = "Omega"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("dark_shadow_condition_tupled", (Term.prim_mk_const { Name = "dark_shadow_condition_tupled", Thy = "Omega"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("dark_shadow_condition_tupled", (Term.prim_mk_const { Name = "dark_shadow_condition_tupled", Thy = "Omega"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("dark_shadow_condition", (Term.prim_mk_const { Name = "dark_shadow_condition", Thy = "Omega"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("dark_shadow_condition", (Term.prim_mk_const { Name = "dark_shadow_condition", Thy = "Omega"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("dark_shadow_row_tupled", (Term.prim_mk_const { Name = "dark_shadow_row_tupled", Thy = "Omega"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("dark_shadow_row_tupled", (Term.prim_mk_const { Name = "dark_shadow_row_tupled", Thy = "Omega"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("dark_shadow_row", (Term.prim_mk_const { Name = "dark_shadow_row", Thy = "Omega"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("dark_shadow_row", (Term.prim_mk_const { Name = "dark_shadow_row", Thy = "Omega"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("dark_shadow_tupled", (Term.prim_mk_const { Name = "dark_shadow_tupled", Thy = "Omega"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("dark_shadow_tupled", (Term.prim_mk_const { Name = "dark_shadow_tupled", Thy = "Omega"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("dark_shadow", (Term.prim_mk_const { Name = "dark_shadow", Thy = "Omega"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("dark_shadow", (Term.prim_mk_const { Name = "dark_shadow", Thy = "Omega"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("nightmare_tupled", (Term.prim_mk_const { Name = "nightmare_tupled", Thy = "Omega"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("nightmare_tupled", (Term.prim_mk_const { Name = "nightmare_tupled", Thy = "Omega"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("nightmare", (Term.prim_mk_const { Name = "nightmare", Thy = "Omega"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("nightmare", (Term.prim_mk_const { Name = "nightmare", Thy = "Omega"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("calc_nightmare_tupled", (Term.prim_mk_const { Name = "calc_nightmare_tupled", Thy = "Omega"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("calc_nightmare_tupled", (Term.prim_mk_const { Name = "calc_nightmare_tupled", Thy = "Omega"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("calc_nightmare", (Term.prim_mk_const { Name = "calc_nightmare", Thy = "Omega"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("calc_nightmare", (Term.prim_mk_const { Name = "calc_nightmare", Thy = "Omega"}))
  val Omega_grammars = Parse.current_lgrms()
  end
  val _ = Theory.LoadableThyData.temp_encoded_update {
    thy = "Omega",
    thydataty = "compute",
    data =
        "Omega.MAP2_def Omega.calc_nightmare_def Omega.dark_shadow_cond_row_def Omega.nightmare_def Omega.dark_shadow_def Omega.dark_shadow_row_def Omega.dark_shadow_condition_def Omega.evallower_def Omega.real_shadow_def Omega.rshadow_row_def Omega.fst1_def Omega.fst_nzero_def Omega.evalupper_def Omega.modhat_def Omega.sumc_def"
  }

val _ = if !Globals.print_thy_loads then print "done\n" else ()
val _ = Theory.load_complete "Omega"
end
