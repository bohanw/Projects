structure integer_wordTheory :> integer_wordTheory =
struct
  val _ = if !Globals.print_thy_loads then print "Loading integer_wordTheory ... " else ()
  open Type Term Thm
  infixr -->

  fun C s t ty = mk_thy_const{Name=s,Thy=t,Ty=ty}
  fun T s t A = mk_thy_type{Tyop=s, Thy=t,Args=A}
  fun V s q = mk_var(s,q)
  val U     = mk_vartype
  (*  Parents *)
  local open OmegaTheory int_arithTheory wordsTheory
  in end;
  val _ = Theory.link_parents
          ("integer_word",
          Arbnum.fromString "1488587807",
          Arbnum.fromString "916419")
          [("Omega",
           Arbnum.fromString "1488587731",
           Arbnum.fromString "896421"),
           ("int_arith",
           Arbnum.fromString "1488587685",
           Arbnum.fromString "137740"),
           ("words",
           Arbnum.fromString "1488587186",
           Arbnum.fromString "513354")];
  val _ = Theory.incorporate_types "integer_word" [];

  val idvector = 
    let fun ID(thy,oth) = {Thy = thy, Other = oth}
    in Vector.fromList
  [ID("min", "fun"), ID("integer", "int"), ID("fcp", "cart"),
   ID("min", "bool"), ID("list", "list"), ID("string", "char"),
   ID("bool", "itself"), ID("num", "num"), ID("bool", "!"),
   ID("arithmetic", "-"), ID("bool", "/\\"), ID("num", "0"),
   ID("prim_rec", "<"), ID("arithmetic", "<="), ID("min", "="),
   ID("min", "==>"), ID("bool", "?"), ID("min", "@"), ID("integer", "ABS"),
   ID("list", "APPEND"), ID("arithmetic", "BIT1"),
   ID("arithmetic", "BIT2"), ID("string", "CHR"), ID("bool", "COND"),
   ID("list", "CONS"), ID("arithmetic", "EXP"), ID("combin", "I"),
   ID("integer_word", "INT_MAX"), ID("words", "INT_MAX"),
   ID("integer_word", "INT_MIN"), ID("words", "INT_MIN"),
   ID("bool", "LET"), ID("arithmetic", "MOD"), ID("list", "NIL"),
   ID("arithmetic", "NUMERAL"), ID("integer", "Num"),
   ID("integer_word", "UINT_MAX"), ID("words", "UINT_MAX"),
   ID("relation", "WF"), ID("relation", "WFREC"), ID("arithmetic", "ZERO"),
   ID("fcp", "dimindex"), ID("words", "dimword"),
   ID("integer_word", "fromString"), ID("integer_word", "i2w"),
   ID("integer", "int_add"), ID("integer", "int_div"),
   ID("integer", "int_exp"), ID("integer", "int_ge"),
   ID("integer", "int_gt"), ID("integer", "int_le"),
   ID("integer", "int_lt"), ID("integer", "int_mod"),
   ID("integer", "int_mul"), ID("integer", "int_neg"),
   ID("integer", "int_of_num"), ID("integer", "int_sub"),
   ID("list", "list_CASE"), ID("bool", "literal_case"), ID("words", "n2w"),
   ID("ASCIInumbers", "num_from_dec_string"),
   ID("ASCIInumbers", "num_to_dec_string"),
   ID("integer_word", "saturate_i2sw"), ID("integer_word", "saturate_i2w"),
   ID("words", "saturate_n2w"), ID("integer_word", "saturate_sw2sw"),
   ID("integer_word", "saturate_sw2w"),
   ID("integer_word", "saturate_w2sw"), ID("words", "saturate_w2w"),
   ID("integer_word", "signed_saturate_add"),
   ID("integer_word", "signed_saturate_sub"), ID("words", "sw2sw"),
   ID("bool", "the_value"), ID("integer_word", "toString"),
   ID("integer_word", "w2i"), ID("words", "w2n"), ID("words", "w2w"),
   ID("words", "word_1comp"), ID("words", "word_2comp"),
   ID("words", "word_H"), ID("words", "word_L"), ID("words", "word_T"),
   ID("words", "word_abs"), ID("words", "word_add"),
   ID("words", "word_and"), ID("words", "word_asr"),
   ID("words", "word_ge"), ID("words", "word_gt"), ID("words", "word_le"),
   ID("words", "word_ls"), ID("words", "word_lt"), ID("words", "word_msb"),
   ID("words", "word_mul"), ID("words", "word_sub"), ID("bool", "~")]
  end;
  local open SharingTables
  in
  val tyvector = build_type_vector idvector
  [TYOP [1], TYV "'a", TYOP [3], TYOP [2, 2, 1], TYOP [0, 3, 0], TYOP [5],
   TYOP [4, 5], TYOP [0, 0, 6], TYOP [0, 3, 3], TYOP [0, 3, 8], TYV "'b",
   TYOP [2, 2, 10], TYOP [0, 3, 11], TYOP [0, 0, 3], TYOP [0, 6, 0],
   TYOP [6, 1], TYOP [0, 15, 0], TYOP [0, 6, 2], TYOP [0, 6, 17], TYOP [7],
   TYOP [0, 3, 2], TYOP [0, 20, 2], TYOP [0, 11, 2], TYOP [0, 22, 2],
   TYOP [0, 5, 2], TYOP [0, 24, 2], TYOP [0, 17, 2], TYOP [0, 26, 2],
   TYOP [0, 0, 2], TYOP [0, 28, 2], TYOP [0, 19, 2], TYOP [0, 30, 2],
   TYOP [0, 19, 19], TYOP [0, 19, 32], TYOP [0, 2, 2], TYOP [0, 2, 34],
   TYOP [0, 19, 30], TYOP [0, 3, 20], TYOP [0, 11, 22], TYV "'c",
   TYOP [2, 2, 39], TYOP [0, 40, 2], TYOP [0, 40, 41], TYOP [0, 5, 24],
   TYOP [0, 14, 2], TYOP [0, 14, 44], TYOP [0, 0, 28], TYOP [0, 18, 2],
   TYOP [0, 47, 18], TYOP [0, 0, 0], TYOP [0, 6, 6], TYOP [0, 6, 50],
   TYOP [0, 19, 5], TYOP [0, 2, 9], TYOP [0, 11, 11], TYOP [0, 11, 54],
   TYOP [0, 2, 55], TYOP [0, 0, 49], TYOP [0, 2, 57], TYOP [0, 2, 51],
   TYOP [0, 5, 50], TYOP [6, 10], TYOP [0, 61, 0], TYOP [0, 15, 19],
   TYOP [0, 2, 3], TYOP [0, 64, 64], TYOP [0, 3, 64], TYOP [0, 66, 66],
   TYOP [0, 0, 19], TYOP [0, 14, 14], TYOP [0, 69, 14], TYOP [0, 18, 70],
   TYOP [0, 61, 19], TYOP [6, 39], TYOP [0, 73, 19], TYOP [0, 0, 11],
   TYOP [0, 19, 0], TYOP [0, 0, 76], TYOP [0, 5, 14], TYOP [0, 78, 0],
   TYOP [0, 0, 79], TYOP [0, 6, 80], TYOP [0, 5, 0], TYOP [0, 82, 82],
   TYOP [0, 19, 3], TYOP [0, 19, 11], TYOP [0, 6, 19], TYOP [0, 19, 6],
   TYOP [0, 3, 40], TYOP [0, 11, 3], TYOP [0, 11, 40], TYOP [0, 11, 0],
   TYOP [0, 3, 19], TYOP [0, 3, 84]]
  end
  val _ = Theory.incorporate_consts "integer_word" tyvector
     [("w2i", 4), ("toString", 7), ("signed_saturate_sub", 9),
      ("signed_saturate_add", 9), ("saturate_w2sw", 12),
      ("saturate_sw2w", 12), ("saturate_sw2sw", 12), ("saturate_i2w", 13),
      ("saturate_i2sw", 13), ("i2w", 13), ("fromString", 14),
      ("UINT_MAX", 16), ("INT_MIN", 16), ("INT_MAX", 16)];

  local open SharingTables
  in
  val tmvector = build_term_vector idvector tyvector
  [TMV("P", 17), TMV("R", 18), TMV("a", 3), TMV("a", 0), TMV("a", 6),
   TMV("b", 3), TMV("b", 11), TMV("b", 0), TMV("fromString", 14),
   TMV("i", 0), TMV("j", 0), TMV("m", 19), TMV("msba", 2), TMV("n", 19),
   TMV("sum", 3), TMV("t", 6), TMV("v", 3), TMV("v", 6), TMV("v1", 6),
   TMV("v2", 5), TMV("v4", 5), TMV("w", 3), TMV("x", 3), TMV("y", 3),
   TMC(8, 21), TMC(8, 23), TMC(8, 25), TMC(8, 27), TMC(8, 29), TMC(8, 26),
   TMC(8, 31), TMC(9, 33), TMC(10, 35), TMC(11, 19), TMC(12, 36),
   TMC(13, 36), TMC(14, 35), TMC(14, 37), TMC(14, 38), TMC(14, 42),
   TMC(14, 43), TMC(14, 45), TMC(14, 46), TMC(14, 18), TMC(14, 36),
   TMC(15, 35), TMC(16, 29), TMC(17, 48), TMC(18, 49), TMC(19, 51),
   TMC(20, 32), TMC(21, 32), TMC(22, 52), TMC(23, 53), TMC(23, 56),
   TMC(23, 58), TMC(23, 59), TMC(24, 60), TMC(25, 33), TMC(26, 49),
   TMC(27, 16), TMC(27, 62), TMC(28, 63), TMC(29, 16), TMC(29, 62),
   TMC(30, 63), TMC(31, 65), TMC(31, 67), TMC(32, 33), TMC(33, 6),
   TMC(34, 32), TMC(35, 68), TMC(36, 16), TMC(37, 63), TMC(38, 47),
   TMC(39, 71), TMC(40, 19), TMC(41, 63), TMC(41, 72), TMC(41, 74),
   TMC(42, 63), TMC(43, 14), TMC(44, 13), TMC(44, 75), TMC(45, 57),
   TMC(46, 57), TMC(47, 77), TMC(48, 46), TMC(49, 46), TMC(50, 46),
   TMC(51, 46), TMC(52, 57), TMC(53, 57), TMC(54, 49), TMC(55, 76),
   TMC(56, 57), TMC(57, 81), TMC(58, 83), TMC(59, 84), TMC(59, 85),
   TMC(60, 86), TMC(61, 87), TMC(62, 13), TMC(62, 75), TMC(63, 13),
   TMC(63, 75), TMC(64, 84), TMC(65, 12), TMC(66, 12), TMC(67, 12),
   TMC(68, 12), TMC(69, 9), TMC(70, 9), TMC(71, 12), TMC(71, 88),
   TMC(71, 89), TMC(71, 90), TMC(72, 15), TMC(72, 61), TMC(72, 73),
   TMC(73, 7), TMC(74, 4), TMC(74, 91), TMC(75, 92), TMC(76, 12),
   TMC(76, 89), TMC(77, 8), TMC(78, 8), TMC(79, 3), TMC(79, 11),
   TMC(80, 3), TMC(80, 11), TMC(81, 3), TMC(82, 8), TMC(83, 9), TMC(84, 9),
   TMC(85, 93), TMC(86, 37), TMC(87, 37), TMC(88, 37), TMC(89, 37),
   TMC(90, 37), TMC(91, 20), TMC(92, 9), TMC(93, 9), TMC(94, 34)]
  end
  local
  val DT = Thm.disk_thm val read = Term.read_raw tmvector
  in
  fun op toString_def x = x
    val op toString_def =
    DT(((("integer_word",0),[]),[]),
       [read"%28%9%43%120$0@@%56%90$0@%94%33@@@%49%57%52%70%51%51%51%51%51%51%76@@@@@@@@@%69@@%101%71%93$0@@@@@%101%71$0@@@@|@"])
  fun op fromString_primitive_def x = x
    val op fromString_primitive_def =
    DT(((("integer_word",1),[]),[]),
       [read"%41%81@%75%47%1%74$0@|@@%8%4%96$0@%59%94%100%69@@@@%19%15%97%20%55%40$0@%52%70%51%51%51%51%51%51%76@@@@@@@@@@%59%93%94%100$1@@@@@%55%40$0@%52%70%50%51%51%51%50%76@@@@@@@@@%59%93%94%100$1@@@@@%59%94%100%57$0@$1@@@@@@|@$1@||@||@@"])
  fun op i2w_def x = x
    val op i2w_def =
    DT(((("integer_word",4),[]),[]),
       [read"%28%9%37%82$0@@%53%90$0@%94%33@@@%127%98%71%93$0@@@@@%98%71$0@@@@|@"])
  fun op w2i_def x = x
    val op w2i_def =
    DT(((("integer_word",5),[]),[]),
       [read"%24%21%42%121$0@@%55%142$0@@%93%94%123%127$0@@@@@%94%123$0@@@@|@"])
  fun op UINT_MAX_def x = x
    val op UINT_MAX_def =
    DT(((("integer_word",6),[("bool",[175])]),["DISK_THM"]),
       [read"%42%72%117@@%95%94%80%117@@@%94%70%50%76@@@@@"])
  fun op INT_MAX_def x = x
    val op INT_MAX_def =
    DT(((("integer_word",7),[("bool",[175])]),["DISK_THM"]),
       [read"%42%60%117@@%95%94%65%117@@@%94%70%50%76@@@@@"])
  fun op INT_MIN_def x = x
    val op INT_MIN_def =
    DT(((("integer_word",8),[("bool",[175])]),["DISK_THM"]),
       [read"%42%63%117@@%95%93%60%117@@@%94%70%50%76@@@@@"])
  fun op saturate_i2w_def x = x
    val op saturate_i2w_def =
    DT(((("integer_word",9),[]),[]),
       [read"%28%9%37%104$0@@%53%89%72%117@@$0@@%132@%53%90$0@%94%33@@@%98%33@@%98%71$0@@@@@|@"])
  fun op saturate_i2sw_def x = x
    val op saturate_i2sw_def =
    DT(((("integer_word",10),[]),[]),
       [read"%28%9%37%102$0@@%53%89%60%117@@$0@@%128@%53%89$0@%63%117@@@%130@%82$0@@@@|@"])
  fun op saturate_sw2sw_def x = x
    val op saturate_sw2sw_def =
    DT(((("integer_word",11),[]),[]),
       [read"%24%21%38%107$0@@%103%121$0@@@|@"])
  fun op saturate_w2sw_def x = x
    val op saturate_w2sw_def =
    DT(((("integer_word",12),[]),[]),
       [read"%24%21%38%109$0@@%103%94%123$0@@@@|@"])
  fun op saturate_sw2w_def x = x
    val op saturate_sw2w_def =
    DT(((("integer_word",13),[]),[]),
       [read"%24%21%38%108$0@@%105%121$0@@@|@"])
  fun op signed_saturate_add_def x = x
    val op signed_saturate_add_def =
    DT(((("integer_word",14),[]),[]),
       [read"%24%2%24%5%37%111$1@$0@@%102%84%121$1@@%121$0@@@@|@|@"])
  fun op signed_saturate_sub_def x = x
    val op signed_saturate_sub_def =
    DT(((("integer_word",15),[]),[]),
       [read"%24%2%24%5%37%112$1@$0@@%102%95%121$1@@%121$0@@@@|@|@"])
  fun op fromString_ind x = x
    val op fromString_ind =
    DT(((("integer_word",2),
        [("bool",[25,26,47,48,53,54,55,58,63,72,75,76,77,78,80]),
         ("list",[46]),("relation",[101,107]),
         ("sat",[1,3,5,6,7,11,12,13,14,15,17,18])]),["DISK_THM"]),
       [read"%27%0%45%32%29%15$1%57%52%70%51%51%51%51%51%51%76@@@@@@@@@$0@@|@@%32%29%15$1%57%52%70%50%51%51%51%50%76@@@@@@@@$0@@|@@%32$0%69@@%26%20%29%18$2%57$1@$0@@|@|@@@@@%29%17$1$0@|@@|@"])
  fun op fromString_def x = x
    val op fromString_def =
    DT(((("integer_word",3),
        [("bool",[15,25,54,56,64,164]),("combin",[19]),
         ("integer_word",[1]),("list",[6]),("numeral",[3,6,7]),
         ("relation",[107,126]),("string",[7,31])]),["DISK_THM"]),
       [read"%32%42%81%57%52%70%51%51%51%51%51%51%76@@@@@@@@@%15@@@%93%94%100%15@@@@@%32%42%81%57%52%70%50%51%51%51%50%76@@@@@@@@%15@@@%93%94%100%15@@@@@%32%42%81%69@@%94%100%69@@@@%42%81%57%20@%18@@@%55%40%20@%52%70%51%51%51%51%51%51%76@@@@@@@@@@%93%94%100%18@@@@%55%40%20@%52%70%50%51%51%51%50%76@@@@@@@@@%93%94%100%18@@@@%94%100%57%20@%18@@@@@@@@@"])
  fun op ONE_LE_TWOEXP x = x
    val op ONE_LE_TWOEXP =
    DT(((("integer_word",16),[("bit",[25])]),["DISK_THM"]),
       [read"%30%13%35%70%50%76@@@%58%70%51%76@@@$0@@|@"])
  fun op w2i_w2n_pos x = x
    val op w2i_w2n_pos =
    DT(((("integer_word",17),
        [("bool",[14,25,26,27,30,36,51,53,54,55,56,58,63,64,105,124,129]),
         ("integer",[206]),("integer_word",[5]),
         ("sat",[1,3,5,6,7,11,12,13,14,15,17,18,19,20,23]),
         ("words",[153,366,377])]),["DISK_THM"]),
       [read"%24%21%30%13%45%32%145%142$1@@@%90%121$1@@%94$0@@@@%34%123$1@@$0@@|@|@"])
  fun op w2i_n2w_pos x = x
    val op w2i_n2w_pos =
    DT(((("integer_word",18),
        [("arithmetic",
         [24,25,27,34,41,46,59,71,93,173,177,180,200,206,217,219,226,247,
          275]),("bit",[0,1,5,7,24,29]),
         ("bool",
         [25,26,27,30,36,51,52,54,58,63,64,93,96,104,105,107,124,129]),
         ("integer",[166,342]),("integer_word",[5]),
         ("numeral",[3,5,6,7,8]),("sat",[1,3,5,6,7,11,12,13,15]),
         ("words",[0,1,110,113,140,144,153,164,366])]),["DISK_THM"]),
       [read"%30%13%45%34$0@%65%117@@@%42%121%98$0@@@%94$0@@@|@"])
  fun op w2i_n2w_neg x = x
    val op w2i_n2w_neg =
    DT(((("integer_word",19),
        [("arithmetic",
         [8,17,24,25,27,41,46,59,63,69,71,74,93,172,173,177,180,200,206,
          214,217,247,269,275]),("bit",[0,1,5,7,24]),
         ("bool",
         [25,26,27,30,36,43,51,52,53,54,56,58,63,64,93,96,101,104,105,107,
          124,129]),("integer",[166,342]),("integer_word",[5]),
         ("numeral",[3,5,7,8]),("sat",[1,3,5,6,7,11,12,13,15,17,18]),
         ("words",[0,1,113,140,160,164])]),["DISK_THM"]),
       [read"%30%13%45%32%35%65%117@@$0@@%34$0@%80%117@@@@%42%121%98$0@@@%93%94%31%80%117@@$0@@@@@|@"])
  fun op i2w_w2i x = x
    val op i2w_w2i =
    DT(((("integer_word",20),
        [("bool",[14,25,26,27,30,36,52,53,54,55,56,58,63,64,105,129,147]),
         ("integer",[97,145,206,216]),("integer_word",[4,5]),
         ("numeral",[3,5,17,40,41]),("prim_rec",[6]),
         ("sat",[1,3,5,6,7,11,12,13,14,15,17,18,19,20,23]),
         ("words",
         [141,144,151,153,323,325,326,366,377,383])]),["DISK_THM"]),
       [read"%24%21%37%82%121$0@@@$0@|@"])
  fun op w2i_i2w x = x
    val op w2i_i2w =
    DT(((("integer_word",21),
        [("arithmetic",
         [18,24,25,27,41,46,59,62,63,71,74,75,76,93,147,172,173,176,177,
          180,183,197,199,200,215,217,269]),
         ("bool",
         [25,26,27,30,36,43,51,52,54,56,58,63,64,93,96,101,104,105,107,124,
          129,140,143,147]),
         ("integer",[97,111,146,164,166,172,179,194,206,210,216,342]),
         ("integer_word",[4,5,7,8]),("numeral",[0,3,5,8]),("prim_rec",[6]),
         ("sat",[1,3,5,6,7,11,12,13,15]),
         ("words",[110,111,114,140,160,165,325,377])]),["DISK_THM"]),
       [read"%28%9%45%32%89%63%117@@$0@@%89$0@%60%117@@@@%42%121%82$0@@@$0@@|@"])
  fun op word_msb_i2w x = x
    val op word_msb_i2w =
    DT(((("integer_word",22),
        [("arithmetic",
         [18,24,25,27,41,46,59,71,76,93,148,172,173,176,180,183,209]),
         ("bool",
         [25,26,27,30,36,43,52,53,54,55,56,58,63,96,101,104,105,129,140,
          143,147]),
         ("integer",[97,164,166,194,206,210,216,228,242,244,245,342]),
         ("integer_word",[4]),("numeral",[3,5,6,8]),("prim_rec",[6]),
         ("sat",[1,3,5,6,7,11,12,13,14,15,17,18,19,20,23]),
         ("words",[110,111,160,165])]),["DISK_THM"]),
       [read"%28%9%36%142%82$0@@@%89%94%65%117@@@%91$0@%94%80%117@@@@@|@"])
  fun op w2i_11 x = x
    val op w2i_11 =
    DT(((("integer_word",23),
        [("bool",[14,25,26,27,30,36,53,54,55,56,58,63,64,105,124,129]),
         ("integer",[166,342]),("integer_word",[5]),
         ("sat",[1,3,5,6,7,11,12,13,14,15,17,18,19,20,23]),
         ("words",[144,149,153,364,366,377])]),["DISK_THM"]),
       [read"%24%16%24%21%36%42%121$1@@%121$0@@@%37$1@$0@@|@|@"])
  fun op int_word_nchotomy x = x
    val op int_word_nchotomy =
    DT(((("integer_word",24),
        [("bool",[13,25,26,27,30,47,48,51,52,53,54,56,63,71,72,93,94,96]),
         ("integer_word",[20]),
         ("sat",[1,3,5,6,7,11,13,14,15])]),["DISK_THM"]),
       [read"%24%21%46%9%37$1@%82$0@@|@|@"])
  fun op w2i_le x = x
    val op w2i_le =
    DT(((("integer_word",25),
        [("arithmetic",[24,25,41,46,59,71,93,173,180,200,217,278]),
         ("bool",
         [14,25,26,27,30,36,37,51,52,53,54,56,58,63,64,72,93,96,101,104,
          105,107,129]),("int_arith",[3,8,9,34,62,63,65]),
         ("integer",
         [59,62,73,79,80,83,85,92,93,95,96,97,104,114,145,156,165,179,320,
          335,337]),("integer_word",[5,7]),("numeral",[3,7,8,16]),
         ("sat",[1,3,5,6,7,11,12,13,15]),
         ("words",[0,1,29,113,120,140,377,455,482,514])]),["DISK_THM"]),
       [read"%24%21%89%121$0@@%60%117@@|@"])
  fun op w2i_ge x = x
    val op w2i_ge =
    DT(((("integer_word",26),
        [("arithmetic",
         [24,25,27,41,46,59,63,71,93,95,130,172,173,176,177,180,200,217,
          269,275,278]),
         ("bool",
         [14,25,26,27,30,36,43,51,52,54,56,58,63,64,72,93,96,101,104,105,
          107,124,129]),("int_arith",[3,8,9,34]),
         ("integer",
         [59,62,79,80,83,85,92,93,95,96,97,104,114,137,156,164,179,188,320,
          337]),("integer_word",[5,7,8]),("marker",[6]),
         ("numeral",[0,3,5,7,8,15,16,33]),("sat",[1,3,5,6,7,11,12,13,15]),
         ("words",
         [0,1,29,64,113,124,140,145,151,152,326,377,439,442,455,482,
          514])]),["DISK_THM"]), [read"%24%21%89%63%117@@%121$0@@|@"])
  fun op ranged_int_word_nchotomy x = x
    val op ranged_int_word_nchotomy =
    DT(((("integer_word",27),
        [("bool",[25,56,63]),("integer_word",[20,25,26])]),["DISK_THM"]),
       [read"%24%21%46%9%32%37$1@%82$0@@@%32%89%63%117@@$0@@%89$0@%60%117@@@@|@|@"])
  fun op sw2sw_i2w x = x
    val op sw2sw_i2w =
    DT(((("integer_word",28),
        [("arithmetic",
         [8,24,25,26,27,28,32,34,41,46,59,62,63,64,65,69,71,73,74,88,91,93,
          95,99,101,102,122,130,145,147,154,155,172,173,176,177,180,197,
          199,200,217,218,269,278,289,290]),
         ("bit",[7,24,29,30,44,49,55,68,69,98,113]),
         ("bool",
         [2,5,13,14,15,25,26,27,30,36,37,43,51,52,53,54,55,56,58,63,64,72,
          86,93,96,100,101,104,105,107,109,124,129,143,147]),
         ("combin",[8,19]),("fcp",[13]),("int_arith",[3,9,10,34,61,62,65]),
         ("integer",
         [59,62,73,74,80,83,92,95,96,97,101,104,145,146,162,164,165,166,
          172,205,217,320,335,337]),("integer_word",[4,7,8]),
         ("numeral",[3,5,6,7,8,16]),("prim_rec",[7]),
         ("sat",[1,3,5,6,7,11,12,13,14,15,17,18,19,20,23]),
         ("words",
         [0,1,47,64,110,111,113,120,124,140,144,229,242,
          405])]),["DISK_THM"]),
       [read"%28%10%45%32%89%64%118@@$0@@%32%89$0@%61%118@@@%35%78%118@@%77%117@@@@@%37%115%83$0@@@%82$0@@@|@"])
  fun op w2w_i2w x = x
    val op w2w_i2w =
    DT(((("integer_word",29),
        [("arithmetic",
         [24,25,26,27,41,46,71,73,79,93,102,145,172,173,176,180,230,237,
          289]),("bit",[24]),
         ("bool",
         [25,26,27,30,36,51,52,53,54,56,58,63,64,93,96,101,104,105,107,124,
          129,147]),("integer_word",[4]),("numeral",[3,8]),
         ("sat",[1,3,5,6,7,11,12,13,15]),
         ("words",[0,64,110,113,140,144,250,405])]),["DISK_THM"]),
       [read"%28%9%45%35%77%117@@%78%118@@@%37%125%83$0@@@%82$0@@@|@"])
  fun op WORD_LTi x = x
    val op WORD_LTi =
    DT(((("integer_word",30),
        [("arithmetic",[24,25,27,41,46,59,71,93,172,173,177,180,219,269]),
         ("bool",
         [25,26,27,30,32,36,43,48,51,52,53,54,56,58,62,63,64,71,92,96,101,
          104,105,124,169]),("combin",[19]),("fcp",[13]),("integer",[206]),
         ("integer_word",[5]),("numeral",[3,8]),("pair",[16]),
         ("sat",[1,3,5,6,7,11,12,13,14,15,17,18]),
         ("words",
         [47,76,83,110,113,144,153,185,345,366,377,451,
          455])]),["DISK_THM"]),
       [read"%24%2%24%5%36%141$1@$0@@%90%121$1@@%121$0@@@|@|@"])
  fun op WORD_GTi x = x
    val op WORD_GTi =
    DT(((("integer_word",31),
        [("bool",[25,36,56]),("integer",[75]),("integer_word",[30]),
         ("words",[448])]),["DISK_THM"]),
       [read"%24%2%24%5%36%138$1@$0@@%88%121$1@@%121$0@@@|@|@"])
  fun op WORD_LEi x = x
    val op WORD_LEi =
    DT(((("integer_word",32),
        [("bool",[25,36,56]),("integer",[109]),("integer_word",[23,30]),
         ("words",[460])]),["DISK_THM"]),
       [read"%24%2%24%5%36%139$1@$0@@%89%121$1@@%121$0@@@|@|@"])
  fun op WORD_GEi x = x
    val op WORD_GEi =
    DT(((("integer_word",33),
        [("bool",[25,36,56]),("integer",[76]),("integer_word",[32]),
         ("words",[449])]),["DISK_THM"]),
       [read"%24%2%24%5%36%137$1@$0@@%87%121$1@@%121$0@@@|@|@"])
  fun op word_add_i2w_w2n x = x
    val op word_add_i2w_w2n =
    DT(((("integer_word",34),
        [("arithmetic",[214,215]),
         ("bool",
         [8,14,25,26,27,30,36,43,51,52,53,54,56,58,63,64,72,76,93,96,98,
          101,105,106,108,109,111,129,143,147]),("combin",[8,12,19]),
         ("int_arith",
         [0,2,3,4,5,6,7,12,13,15,23,24,26,27,28,29,30,31,32,34,43,44,52,
          53]),
         ("integer",
         [59,62,63,73,79,80,82,83,85,92,93,95,96,97,101,103,108,118,130,
          135,153,154,164,165,166,167,174,175,177,178,192,193,217,289,312,
          313,320,321,322,324,326,335,337,343,344]),("integer_word",[4]),
         ("list",[120]),("numeral",[3,5,6,7,8,16,17,21,34,35,40,41]),
         ("sat",[1,3,5,6,7,11,12,13,14,15,17,18]),
         ("words",[65,144])]),["DISK_THM"]),
       [read"%24%2%24%5%37%82%84%94%123$1@@@%94%123$0@@@@@%134$1@$0@@|@|@"])
  fun op word_add_i2w x = x
    val op word_add_i2w =
    DT(((("integer_word",35),
        [("arithmetic",
         [22,24,25,27,41,46,59,60,71,79,93,173,176,180,205,214,215]),
         ("bool",
         [8,14,25,26,27,30,36,37,43,51,52,53,54,55,56,58,63,64,72,73,76,93,
          96,98,101,104,105,106,108,109,111,129,143,147]),
         ("combin",[8,12,19]),
         ("int_arith",
         [0,2,3,4,5,6,7,11,12,13,15,23,24,26,27,28,29,30,31,32,34,43,44,52,
          53]),
         ("integer",
         [59,62,63,73,79,80,82,83,85,92,93,95,96,97,101,103,108,118,130,
          135,145,153,154,164,165,166,167,174,175,177,178,192,193,206,216,
          217,289,312,313,320,321,322,324,326,335,337,343,344]),
         ("integer_word",[4,5]),("list",[120]),
         ("numeral",[3,5,6,7,8,16,17,21,34,35,40,41]),
         ("sat",[1,3,5,6,7,11,12,13,14,15,16,17,18,19,20,23]),
         ("words",
         [65,141,144,151,153,156,323,324,325,326,327,340,366,377,383,
          384])]),["DISK_THM"]),
       [read"%24%2%24%5%37%82%84%121$1@@%121$0@@@@%134$1@$0@@|@|@"])
  fun op word_sub_i2w_w2n x = x
    val op word_sub_i2w_w2n =
    DT(((("integer_word",36),
        [("arithmetic",[60,205,214,215]),
         ("bool",
         [8,14,25,26,27,30,36,37,43,51,52,53,54,56,58,63,64,72,73,76,93,96,
          98,101,105,106,108,109,111,129,143]),("combin",[8,12,19]),
         ("int_arith",
         [0,2,3,4,5,6,7,11,12,13,15,23,24,26,27,28,29,30,31,32,34,43,44,52,
          53]),
         ("integer",
         [59,62,63,73,79,80,82,83,85,92,93,95,96,97,101,103,108,118,130,
          135,146,153,154,164,165,166,167,174,175,177,178,192,193,217,289,
          312,313,320,321,322,324,326,335,337,343,344]),
         ("integer_word",[4]),("list",[120]),
         ("numeral",[3,5,6,7,8,16,17,21,34,35,40,41]),
         ("sat",[1,3,5,6,7,11,12,13,14,15,16,17,18,19,20,23]),
         ("words",[69,141,340,377,384])]),["DISK_THM"]),
       [read"%24%2%24%5%37%82%95%94%123$1@@@%94%123$0@@@@@%144$1@$0@@|@|@"])
  fun op word_sub_i2w x = x
    val op word_sub_i2w =
    DT(((("integer_word",37),
        [("arithmetic",
         [24,25,27,41,46,59,60,71,93,173,176,180,205,214,215]),
         ("bool",
         [8,14,25,26,27,30,36,37,43,51,52,53,54,55,56,58,63,64,72,73,76,93,
          96,98,101,104,105,106,108,109,111,129,143,147]),
         ("combin",[8,12,19]),
         ("int_arith",
         [0,2,3,4,5,6,7,11,12,13,15,23,24,26,27,28,29,30,31,32,34,43,44,52,
          53]),
         ("integer",
         [59,62,63,73,79,80,82,83,85,92,93,95,96,97,101,103,108,118,130,
          135,145,146,153,154,164,165,166,167,174,175,177,178,181,189,190,
          192,193,206,216,217,289,312,313,320,321,322,324,326,335,337,343,
          344]),("integer_word",[4,5]),("list",[120]),
         ("numeral",[3,5,6,7,8,16,17,21,34,35,40,41]),
         ("sat",[1,3,5,6,7,11,12,13,14,15,16,17,18,19,20,23]),
         ("words",
         [65,69,141,144,151,153,156,323,324,325,326,327,340,366,377,383,
          384])]),["DISK_THM"]),
       [read"%24%2%24%5%37%82%95%121$1@@%121$0@@@@%144$1@$0@@|@|@"])
  fun op word_mul_i2w_w2n x = x
    val op word_mul_i2w_w2n =
    DT(((("integer_word",38),
        [("bool",[25,26,27,56,58,105,129,147]),("integer",[168,206,216]),
         ("integer_word",[4]),("prim_rec",[6]),
         ("words",[66])]),["DISK_THM"]),
       [read"%24%2%24%5%37%82%92%94%123$1@@@%94%123$0@@@@@%143$1@$0@@|@|@"])
  fun op word_mul_i2w x = x
    val op word_mul_i2w =
    DT(((("integer_word",39),
        [("arithmetic",[67,73,148]),
         ("bool",
         [14,25,26,27,30,36,52,53,54,55,56,58,63,64,96,105,129,147]),
         ("integer",[98,145,168,206,216,323]),("integer_word",[4,5]),
         ("numeral",[3,5,17,40,41]),("prim_rec",[6]),
         ("sat",[1,3,5,6,7,11,12,13,14,15,17,18,19,20,23]),
         ("words",
         [66,144,151,153,323,325,326,366,377,383])]),["DISK_THM"]),
       [read"%24%2%24%5%37%82%92%121$1@@%121$0@@@@%143$1@$0@@|@|@"])
  fun op word_i2w_add x = x
    val op word_i2w_add =
    DT(((("integer_word",40),
        [("arithmetic",[60,206]),
         ("bool",
         [13,14,25,26,27,30,37,42,43,51,52,53,54,56,58,63,64,72,73,76,93,
          96,101,105,109,143]),("combin",[8,19]),
         ("int_arith",[3,8,9,12,34,61,62,64,65,67]),
         ("integer",
         [59,62,63,74,79,80,83,85,86,92,93,95,96,97,101,104,111,114,115,
          145,156,164,165,166,167,179,205,217,320,324,335,337]),
         ("integer_word",[4]),("numeral",[3,5,7,8,16,17,40,41]),
         ("sat",[1,3,5,6,7,11,12,13,15,16,17,18]),
         ("words",
         [69,144,156,322,323,324,325,326,327,352,366,377,383,
          384])]),["DISK_THM"]),
       [read"%28%3%28%7%37%134%82$1@@%82$0@@@%82%84$1@$0@@@|@|@"])
  fun op word_i2w_mul x = x
    val op word_i2w_mul =
    DT(((("integer_word",41),
        [("arithmetic",[46,67,71,73,93,147,148,173,176,180]),
         ("bool",
         [25,26,27,30,36,37,42,43,51,52,53,54,56,58,63,64,72,96,101,104,
          105,124]),("int_arith",[3,9,61,62,65,66]),
         ("integer",
         [59,61,62,63,74,80,83,86,92,93,95,96,97,101,104,111,115,121,145,
          164,168,206,210,216,304,320,323,335,337]),("integer_word",[4]),
         ("marker",[8]),("numeral",[3,8]),("prim_rec",[6]),
         ("sat",[1,3,5,6,7,11,12,13,15]),
         ("words",[144,157,325,343,383])]),["DISK_THM"]),
       [read"%28%3%28%7%37%143%82$1@@%82$0@@@%82%92$1@$0@@@|@|@"])
  fun op MULT_MINUS_ONE x = x
    val op MULT_MINUS_ONE =
    DT(((("integer_word",42),
        [("bool",[25,36,52,54,56,58,105,129,147]),
         ("integer",[97,153,206,216]),("integer_word",[4,41]),
         ("numeral",[3,6])]),["DISK_THM"]),
       [read"%28%9%37%143%127%98%70%50%76@@@@@%82$0@@@%82%93$0@@@|@"])
  fun op word_0_w2i x = x
    val op word_0_w2i =
    DT(((("integer_word",43),
        [("bool",[25,26,27,56,58,105,129,147]),("integer",[145,166]),
         ("integer_word",[5]),("words",[151,343,444])]),["DISK_THM"]),
       [read"%42%121%98%33@@@%94%33@@"])
  fun op i2w_DIV x = x
    val op i2w_DIV =
    DT(((("integer_word",44),
        [("arithmetic",
         [8,22,24,25,26,27,28,34,41,46,59,60,62,65,69,71,74,79,93,128,145,
          147,154,155,172,173,176,177,180,200,217,229,233,236,269,360]),
         ("bit",[7,24,29,30,49,68,98,101,108,109,110,111,112,114]),
         ("bool",
         [5,13,14,25,26,27,30,36,37,42,43,51,52,53,54,55,56,58,63,64,72,93,
          96,101,104,105,107,109,124,129,143,147]),("combin",[8,19]),
         ("fcp",[13,15]),("int_arith",[3,8,9,10,12,34,61,62,63,64]),
         ("integer",
         [59,62,63,64,73,74,79,80,83,85,92,93,95,96,97,101,104,114,115,121,
          145,146,162,164,165,166,167,172,205,206,210,216,217,219,302,320,
          324,325,335,337]),("integer_word",[4,7,8]),
         ("numeral",[3,5,6,7,8,16,17,40,41]),("prim_rec",[6]),
         ("sat",[1,3,5,6,7,11,12,13,14,15,17,18,19,20,23]),
         ("words",[0,1,47,92,113,124,160,242])]),["DISK_THM"]),
       [read"%30%13%28%9%45%32%34$1@%77%117@@@%32%89%63%117@@$0@@%89$0@%60%117@@@@@%37%82%85$0@%86%94%70%51%76@@@@$1@@@@%136%82$0@@$1@@@|@|@"])
  fun op INT_MIN_MONOTONIC x = x
    val op INT_MIN_MONOTONIC =
    DT(((("integer_word",45),
        [("arithmetic",[192,197,198,277]),
         ("bool",
         [14,25,26,27,30,51,52,53,54,56,58,63,64,72,101,105,109,124]),
         ("int_arith",[3,8,9,34,62]),
         ("integer",
         [59,62,79,80,83,85,92,93,95,96,97,104,114,145,146,156,164,167,172,
          179,320,335,337]),("integer_word",[7,8]),
         ("numeral",[3,5,7,8,16]),("sat",[1,3,5,6,7,11,12,13,15]),
         ("words",[1])]),["DISK_THM"]),
       [read"%45%35%77%117@@%78%118@@@%89%64%118@@%63%117@@@"])
  fun op INT_MAX_MONOTONIC x = x
    val op INT_MAX_MONOTONIC =
    DT(((("integer_word",46),
        [("arithmetic",[192,197,198,277]),
         ("bool",
         [14,25,26,27,30,37,51,52,53,54,56,58,63,64,72,101,105,109,124]),
         ("int_arith",[3,8,9,34,62]),
         ("integer",
         [59,62,73,79,80,83,85,92,93,95,96,97,104,114,145,156,164,167,179,
          320,335,337]),("integer_word",[7]),("numeral",[3,5,7,8,16]),
         ("sat",[1,3,5,6,7,11,12,13,15]),("words",[1])]),["DISK_THM"]),
       [read"%45%35%77%117@@%78%118@@@%89%60%117@@%61%118@@@"])
  fun op w2i_sw2sw_bounds x = x
    val op w2i_sw2sw_bounds =
    DT(((("integer_word",47),
        [("arithmetic",[24,25,27,41,46,60,71,93,173,176,180]),
         ("bool",
         [14,25,26,27,30,36,51,52,54,56,58,63,64,72,76,96,101,104,105]),
         ("int_arith",[3,8,9,34]),
         ("integer",
         [59,62,79,80,83,85,92,93,95,96,97,104,114,156,164,179,320,337]),
         ("integer_word",[21,25,26,27,28,45,46]),("numeral",[3,5,7,8,16]),
         ("sat",[1,3,5,6,7,11,12,13,15])]),["DISK_THM"]),
       [read"%24%21%32%89%63%117@@%122%113$0@@@@%89%122%113$0@@@%60%117@@@|@"])
  fun op w2i_i2w_id x = x
    val op w2i_i2w_id =
    DT(((("integer_word",48),
        [("bool",[25,26,30,51,53,54,56,58,63,105,124]),
         ("integer_word",[21,23,25,26,28,47]),
         ("sat",[1,3,5,6,7,11,12,13,14,15,17,18,19,20,23])]),["DISK_THM"]),
       [read"%28%9%45%32%89%63%117@@$0@@%32%89$0@%60%117@@@%35%78%118@@%77%117@@@@@%36%42$0@%122%83$0@@@@%37%82$0@@%115%83$0@@@@@|@"])
  fun op w2i_11_lift x = x
    val op w2i_11_lift =
    DT(((("integer_word",49),
        [("bool",[14,25,26,27,30,51,52,54,56,58,63,64,72,76,101,105]),
         ("int_arith",[3,8,9,34]),
         ("integer",
         [59,62,79,80,83,85,92,93,95,96,97,104,114,156,164,179,320,337]),
         ("integer_word",[21,23,27,28,45,46]),("numeral",[7,8,16]),
         ("sat",[1,3,5,6,7,11,12,13,15])]),["DISK_THM"]),
       [read"%24%2%25%6%45%32%35%77%117@@%79%119@@@%35%78%118@@%79%119@@@@%36%42%121$1@@%122$0@@@%39%114$1@@%116$0@@@@|@|@"])
  fun op w2i_n2w_mod x = x
    val op w2i_n2w_mod =
    DT(((("integer_word",50),
        [("arithmetic",
         [24,25,27,41,46,59,71,73,93,102,145,173,176,180,218,225,273,274,
          289]),
         ("bool",[25,26,27,30,36,51,52,54,56,58,63,96,101,104,105,169]),
         ("int_arith",[21]),
         ("integer",[83,166,182,194,216,241,242,244,302,329]),
         ("integer_word",[18,19]),("numeral",[3,5,6,7,8]),
         ("words",[0])]),["DISK_THM"]),
       [read"%30%13%30%11%45%32%34$1@%80%117@@@%35$0@%77%117@@@@%44%71%91%121%98$1@@@%86%94%70%51%76@@@@$0@@@@%68$1@%58%70%51%76@@@$0@@@@|@|@"])
  fun op word_abs_w2i x = x
    val op word_abs_w2i =
    DT(((("integer_word",51),
        [("arithmetic",[69,214,215]),
         ("bool",
         [8,14,25,26,27,30,37,51,52,53,54,56,58,63,64,72,96,101,105,129,
          147]),("int_arith",[3,9,54,61,62]),
         ("integer",
         [59,62,63,74,79,80,83,85,92,93,95,96,97,104,115,145,253,320,324,
          326,335,337]),("integer_word",[4,21,27,30,43]),
         ("numeral",[3,5,6,7,8,16,17,21,34,35,40,41]),
         ("sat",[1,3,5,6,7,11,12,13,15]),
         ("words",[89,144,377,383])]),["DISK_THM"]),
       [read"%24%21%37%133$0@@%98%71%48%121$0@@@@@|@"])
  fun op word_abs_i2w x = x
    val op word_abs_i2w =
    DT(((("integer_word",52),
        [("bool",[25,51,53,56,58,63,105,124]),("integer_word",[21,51]),
         ("words",[144])]),["DISK_THM"]),
       [read"%28%9%45%32%89%63%117@@$0@@%89$0@%60%117@@@@%37%133%82$0@@@%98%71%48$0@@@@@|@"])
  fun op INT_MIN x = x
    val op INT_MIN =
    DT(((("integer_word",53),
        [("arithmetic",[63,289]),("bool",[25,52,56]),
         ("integer",[146,166,172,342]),("integer_word",[7,8]),
         ("words",[1])]),["DISK_THM"]),
       [read"%42%63%117@@%93%94%65%117@@@@"])
  fun op INT_MAX x = x
    val op INT_MAX =
    DT(((("integer_word",54),
        [("arithmetic",[41,46,71,93,173,180]),
         ("bool",[25,26,27,30,36,54,56,58,63,64,96,101,104,105,129]),
         ("int_arith",[37]),("integer",[140,166,206]),("integer_word",[7]),
         ("numeral",[3,8]),("words",[3,120])]),["DISK_THM"]),
       [read"%42%60%117@@%94%62%117@@@"])
  fun op UINT_MAX x = x
    val op UINT_MAX =
    DT(((("integer_word",55),
        [("arithmetic",[41,46,71,93,173,177,180]),
         ("bool",[25,26,27,30,36,52,54,56,58,63,64,96,101,104,105,129]),
         ("int_arith",[37]),("integer",[140,166,206]),("integer_word",[6]),
         ("numeral",[3,5,8]),("sat",[1,3,5,6,7,11,12,13,15]),
         ("words",[2,110])]),["DISK_THM"]),
       [read"%42%72%117@@%94%73%117@@@"])
  fun op INT_BOUND_ORDER x = x
    val op INT_BOUND_ORDER =
    DT(((("integer_word",56),
        [("arithmetic",[24,25,41,46,59,71,93,172,173,180]),
         ("bool",[25,26,27,36,52,54,63,96,101,104,105]),("integer",[206]),
         ("integer_word",[53,54,55]),("numeral",[3,8]),
         ("words",[127])]),["DISK_THM"]),
       [read"%32%90%63%117@@%60%117@@@%32%90%60%117@@%72%117@@@%90%72%117@@%94%80%117@@@@@"])
  fun op INT_ZERO_LT_INT_MIN x = x
    val op INT_ZERO_LT_INT_MIN =
    DT(((("integer_word",57),
        [("arithmetic",[41,46,71,93,172,173,180]),
         ("bool",[25,26,27,36,52,54,56,63,96,101,104,105]),
         ("integer",[206]),("integer_word",[53]),("numeral",[3,8]),
         ("words",[127])]),["DISK_THM"]), [read"%90%63%117@@%94%33@@"])
  fun op INT_ZERO_LT_INT_MAX x = x
    val op INT_ZERO_LT_INT_MAX =
    DT(((("integer_word",58),
        [("bool",[25,53,58,63,105,124]),("integer",[206]),
         ("integer_word",[54]),("words",[121])]),["DISK_THM"]),
       [read"%45%34%70%50%76@@@%77%117@@@%90%94%33@@%60%117@@@"])
  fun op INT_ZERO_LE_INT_MAX x = x
    val op INT_ZERO_LE_INT_MAX =
    DT(((("integer_word",59),
        [("bool",[25,63]),("integer",[164]),("integer_word",[54]),
         ("words",[122])]),["DISK_THM"]), [read"%89%94%33@@%60%117@@"])
  fun op INT_ZERO_LT_UINT_MAX x = x
    val op INT_ZERO_LT_UINT_MAX =
    DT(((("integer_word",60),
        [("bool",[25,63]),("integer",[206]),("integer_word",[55]),
         ("words",[123])]),["DISK_THM"]), [read"%90%94%33@@%72%117@@"])
  fun op w2i_1 x = x
    val op w2i_1 =
    DT(((("integer_word",61),
        [("arithmetic",
         [19,24,25,41,46,59,63,71,93,172,173,176,177,180,200,210]),
         ("bool",
         [25,26,27,30,36,43,51,52,53,54,56,58,63,64,93,96,101,104,105,107,
          129]),("integer",[166,342]),("integer_word",[5]),
         ("numeral",[3,5,6,7,8,21,28]),("pred_set",[10,80]),
         ("sat",[1,3,5,6,7,11,12,13,15]),
         ("words",[47,58,113,152,155,242,300])]),["DISK_THM"]),
       [read"%42%121%98%70%50%76@@@@@%55%44%77%117@@%70%50%76@@@@%93%94%70%50%76@@@@@%94%70%50%76@@@@@"])
  fun op w2i_INT_MINw x = x
    val op w2i_INT_MINw =
    DT(((("integer_word",62),
        [("arithmetic",[95]),("bool",[25,51,56,63,105]),
         ("integer",[166,342]),("integer_word",[19,53]),
         ("words",[29,112,124])]),["DISK_THM"]),
       [read"%42%121%130@@%63%117@@"])
  fun op w2i_UINT_MAXw x = x
    val op w2i_UINT_MAXw =
    DT(((("integer_word",63),
        [("arithmetic",[24,25,27,41,46,71,93,172,173,177,180,206,269]),
         ("bool",[25,36,43,51,52,54,56,63,93,96,101,104,105]),
         ("integer",[166,342]),("integer_word",[19]),("numeral",[3,5,8]),
         ("sat",[1,3,5,6,7,11,12,13,15]),
         ("words",[2,28,110,127])]),["DISK_THM"]),
       [read"%42%121%132@@%93%94%70%50%76@@@@@"])
  fun op w2i_INT_MAXw x = x
    val op w2i_INT_MAXw =
    DT(((("integer_word",64),
        [("bool",[25,56,63]),("integer",[166]),("integer_word",[18,54]),
         ("words",[30,127])]),["DISK_THM"]),
       [read"%42%121%128@@%60%117@@"])
  fun op w2i_minus_1 x = x
    val op w2i_minus_1 =
    DT(((("integer_word",65),
        [("integer_word",[63]),("words",[192])]),["DISK_THM"]),
       [read"%42%121%127%98%70%50%76@@@@@@%93%94%70%50%76@@@@@"])
  fun op w2i_lt_0 x = x
    val op w2i_lt_0 =
    DT(((("integer_word",66),
        [("bool",[25,51,56,63,105]),
         ("integer_word",[21,27,30,43])]),["DISK_THM"]),
       [read"%24%21%36%90%121$0@@%94%33@@@%141$0@%98%33@@@|@"])
  fun op w2i_neg x = x
    val op w2i_neg =
    DT(((("integer_word",67),
        [("arithmetic",[41,46,63,71,93,173,180]),
         ("bool",
         [5,14,25,26,27,30,36,51,52,53,54,55,56,58,63,64,96,101,104,105,
          124,129,147]),("integer",[97,166,342]),("integer_word",[5]),
         ("numeral",[3,5,8,17,40,41]),
         ("sat",[1,3,5,6,7,11,12,13,14,15,17,18,19,20,23]),
         ("words",
         [144,149,153,323,325,326,345,366,377,383,442,444,445,
          447])]),["DISK_THM"]),
       [read"%24%21%45%32%34%70%50%76@@@%77%117@@@%145%37$0@%130@@@@%42%121%127$0@@@%93%121$0@@@@|@"])
  fun op i2w_0 x = x
    val op i2w_0 =
    DT(((("integer_word",68),
        [("bool",[25,26,27,56,58,105,129,147]),("integer",[145,206,216]),
         ("integer_word",[4]),("prim_rec",[6]),
         ("words",[144,343])]),["DISK_THM"]),
       [read"%37%82%94%33@@@%98%33@@"])
  fun op i2w_minus_1 x = x
    val op i2w_minus_1 =
    DT(((("integer_word",69),
        [("bool",[25,52,54,56,58,105,129,147]),("integer",[97,206,216]),
         ("integer_word",[4]),("numeral",[3,6])]),["DISK_THM"]),
       [read"%37%82%93%94%70%50%76@@@@@@%127%98%70%50%76@@@@@"])
  fun op i2w_INT_MIN x = x
    val op i2w_INT_MIN =
    DT(((("integer_word",70),
        [("bool",[14,25,37,51,54,56,58,63,64,72,101,105]),
         ("int_arith",[3,9]),
         ("integer",[59,62,79,80,83,85,92,93,95,96,104,111,320,337]),
         ("integer_word",[21,23,56,62]),("numeral",[7,8,16]),
         ("sat",[1,3,5,6,7,11,12,13,15])]),["DISK_THM"]),
       [read"%37%82%63%117@@@%130@"])
  fun op i2w_INT_MAX x = x
    val op i2w_INT_MAX =
    DT(((("integer_word",71),
        [("bool",[14,25,37,51,54,56,58,63,64,72,101,105]),
         ("int_arith",[3,9]),
         ("integer",[59,62,79,80,83,85,92,93,95,96,104,111,320,337]),
         ("integer_word",[21,23,56,64]),("numeral",[7,8,16]),
         ("sat",[1,3,5,6,7,11,12,13,15])]),["DISK_THM"]),
       [read"%37%82%60%117@@@%128@"])
  fun op i2w_UINT_MAX x = x
    val op i2w_UINT_MAX =
    DT(((("integer_word",72),
        [("bool",[25,26,27,30,37,51,53,54,56,58,63,64,72,101]),
         ("int_arith",[3,9,62]),
         ("integer",[59,62,80,83,92,95,96,97,145,166,216,320,335,342]),
         ("integer_word",[4,23,55,60,63,65]),
         ("sat",[1,3,5,6,7,11,12,13,15]),
         ("words",[28,192])]),["DISK_THM"]), [read"%37%82%72%117@@@%132@"])
  fun op saturate_i2w_0 x = x
    val op saturate_i2w_0 =
    DT(((("integer_word",73),
        [("arithmetic",[41,46,71,93,147,172,180]),
         ("bool",[25,26,27,36,54,56,58,63,96,101,104,105,129,147]),
         ("integer",[164,206,216]),("integer_word",[9,55]),
         ("numeral",[3,8]),("prim_rec",[6]),
         ("words",[123,144,192])]),["DISK_THM"]),
       [read"%37%104%94%33@@@%98%33@@"])
  fun op saturate_i2sw_0 x = x
    val op saturate_i2sw_0 =
    DT(((("integer_word",74),
        [("arithmetic",[41,46,59,71,93,130,147,172,173,177,180]),
         ("bool",
         [14,25,26,27,30,36,43,51,52,54,56,58,63,64,96,101,104,105,129,
          147]),("integer",[121,164]),("integer_word",[10,53,54,68]),
         ("numeral",[3,5,7,8,16,33]),("sat",[1,3,5,6,7,11,12,13,15]),
         ("words",[1,29,69,113,121,127,144,384,389])]),["DISK_THM"]),
       [read"%37%102%94%33@@@%98%33@@"])
  fun op saturate_w2sw x = x
    val op saturate_w2sw =
    DT(((("integer_word",75),
        [("arithmetic",
         [24,25,26,27,41,46,59,60,71,93,147,154,172,173,176,177,180,197,
          198,200,214,215,217,269,277]),
         ("bool",
         [8,14,25,26,27,30,36,37,43,51,52,53,54,56,58,63,64,72,93,96,101,
          104,105,129,147]),("int_arith",[3,8,9,34,54,62]),
         ("integer",
         [59,62,63,73,79,80,83,85,92,93,95,96,97,104,114,146,156,164,167,
          172,179,206,216,320,324,326,335,337]),
         ("integer_word",[4,7,8,10,12]),
         ("numeral",[3,5,7,8,16,17,21,34,35,40,41]),("prim_rec",[6]),
         ("sat",[1,3,5,6,7,11,12,13,14,15,17,18]),
         ("words",[0,1,3,6,30,110,127,129,140,145,537])]),["DISK_THM"]),
       [read"%24%21%38%109$0@@%54%32%35%78%118@@%77%117@@@%140%125%129@@$0@@@%129@%124$0@@@|@"])
  fun op saturate_i2sw x = x
    val op saturate_i2sw =
    DT(((("integer_word",76),
        [("arithmetic",
         [24,25,27,41,46,71,93,95,147,172,173,176,177,180,198,269]),
         ("bool",
         [14,25,26,27,30,36,37,42,43,51,52,53,54,56,58,63,64,72,93,96,99,
          100,101,104,105,107,108,109,129]),
         ("int_arith",[3,8,9,34,62,65,66]),
         ("integer",
         [59,62,74,79,80,83,85,92,93,95,96,97,104,114,115,145,156,164,166,
          179,210,216,320,335,337]),("integer_word",[9,55]),
         ("numeral",[3,5,7,8,16]),("sat",[1,3,5,6,7,11,12,13,15,16,17,18]),
         ("words",[2,28,105,110,123,127])]),["DISK_THM"]),
       [read"%28%9%37%104$0@@%53%90$0@%94%33@@@%98%33@@%106%71$0@@@@|@"])
  fun op saturate_sw2w x = x
    val op saturate_sw2w =
    DT(((("integer_word",77),
        [("arithmetic",
         [24,25,26,27,41,46,59,60,71,93,172,173,176,177,180,198,200,217,
          269]),
         ("bool",
         [25,26,27,30,36,43,51,52,53,54,56,58,63,64,65,93,96,101,104,105,
          107,129]),("integer",[216]),("integer_word",[13,18,66,76]),
         ("numeral",[3,5,7,8]),("sat",[1,3,5,6,7,11,12,13,15,17,18]),
         ("words",
         [2,28,105,116,127,129,130,140,145,250,450,537,543,
          587])]),["DISK_THM"]),
       [read"%24%21%38%108$0@@%54%141$0@%98%33@@@%99%33@@%110$0@@@|@"])
  fun op saturate_sw2sw x = x
    val op saturate_sw2sw =
    DT(((("integer_word",78),
        [("arithmetic",
         [24,25,27,41,46,60,71,93,95,172,173,176,180,217,219]),
         ("bool",
         [14,25,26,27,30,36,37,42,43,51,52,53,54,56,58,63,64,72,76,96,101,
          104,105,129,143,147]),("int_arith",[3,8,9,12,34,62,65,67]),
         ("integer",
         [59,62,63,79,80,83,85,92,93,95,96,97,104,114,115,145,156,164,165,
          179,205,206,216,320,324,335,337]),
         ("integer_word",[4,10,11,21,27,28,29,32,45,46,53,54]),
         ("numeral",[3,5,7,8,16,17,40,41]),("prim_rec",[6]),
         ("sat",[1,3,5,6,7,11,12,13,15]),
         ("words",[29,30,110,120,133,136,144,439])]),["DISK_THM"]),
       [read"%24%21%38%107$0@@%54%35%77%117@@%78%118@@@%113$0@@%54%139%115%129@@$0@@%129@%54%139$0@%115%131@@@%131@%124$0@@@@@|@"])
  fun op signed_saturate_sub x = x
    val op signed_saturate_sub =
    DT(((("integer_word",79),
        [("arithmetic",
         [19,41,46,59,64,71,93,95,130,147,173,176,177,180,217,219,268]),
         ("bool",
         [8,14,25,26,27,30,36,37,43,51,52,53,54,56,58,63,64,72,96,101,104,
          105,124,129,147]),("int_arith",[3,8,9,34,37,62,65,67]),
         ("integer",
         [59,62,63,64,73,74,79,80,83,85,92,93,95,96,97,104,114,115,121,143,
          145,156,164,165,179,181,182,189,190,205,206,216,317,320,322,324,
          335,337]),
         ("integer_word",
         [4,10,14,15,21,23,27,32,40,42,43,53,54,61,62,67,69,70,74]),
         ("numeral",[0,3,5,6,7,8,15,16,17,21,28,33,34,35,40,41]),
         ("numeral_bit",[11,12,32,33]),("prim_rec",[6]),
         ("sat",[1,3,5,6,7,11,12,13,15]),
         ("words",
         [1,3,29,69,110,113,114,120,144,146,192,199,301,321,322,323,324,
          325,326,327,328,339,340,342,352,366,377,383,384,389,
          439])]),["DISK_THM"]),
       [read"%24%2%24%5%37%112$1@$0@@%53%37$0@%130@@%53%139%98%33@@$1@@%128@%134$1@%130@@@%53%44%77%117@@%70%50%76@@@@%135$1@%126$0@@@%111$1@%127$0@@@@@|@|@"])
  fun op signed_saturate_add x = x
    val op signed_saturate_add =
    DT(((("integer_word",80),
        [("arithmetic",
         [18,24,25,26,27,41,46,59,62,71,74,75,76,93,100,147,172,173,176,
          177,180,183,186,200,217,233,269]),
         ("bool",
         [8,13,14,25,26,27,30,32,36,37,42,43,51,52,53,54,55,56,58,63,64,72,
          76,93,96,101,104,105,107,124,129,147]),("combin",[8,19]),
         ("int_arith",[3,8,9,34,61,62,65,66,67]),
         ("integer",
         [59,62,74,79,80,83,85,92,93,95,96,97,101,104,108,111,114,115,121,
          145,156,164,165,166,168,179,205,206,217,320,335,337]),
         ("integer_word",[4,5,10,14,21,27,30,40,43,53,54,70,71]),
         ("numeral",[0,3,5,7,8,15,16,17,21,34,35,40,41]),("prim_rec",[6]),
         ("sat",[1,3,5,6,7,11,12,13,14,15,17,18,19,20,23]),
         ("words",
         [3,29,69,110,111,120,124,153,160,340,366,377,389,482,507,514,525,
          537])]),["DISK_THM"]),
       [read"%24%2%24%5%37%111$1@$0@@%66%67%14%12%53%32%36$0@%142$2@@@%145%36$0@%142$1@@@@@%53$0@%130@%128@@$1@||@%134$1@$0@@@%142$1@@@|@|@"])
  fun op different_sign_then_no_overflow x = x
    val op different_sign_then_no_overflow =
    DT(((("integer_word",81),
        [("bool",
         [14,25,26,27,42,43,52,54,56,58,63,64,72,76,93,101,105,124]),
         ("int_arith",[3,8,9]),
         ("integer",
         [59,62,74,79,80,83,85,92,93,95,96,97,104,114,145,156,179,320,
          337]),("integer_word",[21,25,26,35,66]),("numeral",[7,8,16]),
         ("sat",[1,3,5,6,7,11,12,13,15]),("words",[525])]),["DISK_THM"]),
       [read"%24%22%24%23%45%145%36%142$1@@%142$0@@@@%42%121%134$1@$0@@@%84%121$1@@%121$0@@@@|@|@"])
  fun op w2i_i2w_pos x = x
    val op w2i_i2w_pos =
    DT(((("integer_word",82),
        [("bool",[14,25,26,27,30,51,54,56,58,63,64,72,101]),
         ("int_arith",[3,8,9,34]),
         ("integer",
         [59,62,79,80,83,85,92,93,95,96,97,104,114,156,164,179,320,337]),
         ("integer_word",[21,53,54]),("numeral",[7,8,16]),
         ("sat",[1,3,5,6,7,11,12,13,15])]),["DISK_THM"]),
       [read"%30%13%45%35$0@%62%117@@@%42%121%82%94$0@@@@%94$0@@@|@"])
  fun op w2i_i2w_neg x = x
    val op w2i_i2w_neg =
    DT(((("integer_word",83),
        [("bool",[14,25,26,27,30,51,54,56,58,63,64,72,101]),
         ("int_arith",[3,8,9,34]),
         ("integer",
         [59,62,79,80,83,85,92,93,95,96,97,104,114,156,164,179,320,337]),
         ("integer_word",[21,53,54]),("numeral",[7,8,16]),
         ("sat",[1,3,5,6,7,11,12,13,15])]),["DISK_THM"]),
       [read"%30%13%45%35$0@%65%117@@@%42%121%82%93%94$0@@@@@%93%94$0@@@@|@"])
  fun op overflow x = x
    val op overflow =
    DT(((("integer_word",84),
        [("arithmetic",
         [24,25,26,27,32,41,46,59,60,71,74,79,91,93,128,147,154,172,173,
          176,177,180,197,199,200,217,219,269]),
         ("bool",
         [14,25,26,27,30,36,37,42,43,51,52,53,54,56,58,62,63,64,72,76,93,
          96,101,104,105,107,124,129,143,147]),
         ("int_arith",[3,8,9,10,12,34,61,62,65,66]),
         ("integer",
         [59,62,63,73,74,79,80,83,85,87,92,93,95,96,97,104,111,114,115,120,
          132,139,141,145,156,164,165,166,167,168,179,194,205,206,210,216,
          228,230,242,251,319,320,324,335,337,342]),
         ("integer_word",[4,5,21,22,27,40,43,53,54,68,81,82,83]),
         ("numeral",[0,3,5,7,8,15,16,17,40,41]),("prim_rec",[6]),
         ("sat",[1,3,5,6,7,11,12,13,14,15,17,18]),
         ("words",
         [3,110,111,120,125,127,140,144,153,154,160,165,343,
          366])]),["DISK_THM"]),
       [read"%24%22%24%23%36%145%42%121%134$1@$0@@@%84%121$1@@%121$0@@@@@%32%36%142$1@@%142$0@@@%145%36%142$1@@%142%134$1@$0@@@@@@|@|@"])
  end
  val _ = DB.bindl "integer_word"
  [("toString_def",toString_def,DB.Def),
   ("fromString_primitive_def",fromString_primitive_def,DB.Def),
   ("i2w_def",i2w_def,DB.Def), ("w2i_def",w2i_def,DB.Def),
   ("UINT_MAX_def",UINT_MAX_def,DB.Def),
   ("INT_MAX_def",INT_MAX_def,DB.Def), ("INT_MIN_def",INT_MIN_def,DB.Def),
   ("saturate_i2w_def",saturate_i2w_def,DB.Def),
   ("saturate_i2sw_def",saturate_i2sw_def,DB.Def),
   ("saturate_sw2sw_def",saturate_sw2sw_def,DB.Def),
   ("saturate_w2sw_def",saturate_w2sw_def,DB.Def),
   ("saturate_sw2w_def",saturate_sw2w_def,DB.Def),
   ("signed_saturate_add_def",signed_saturate_add_def,DB.Def),
   ("signed_saturate_sub_def",signed_saturate_sub_def,DB.Def),
   ("fromString_ind",fromString_ind,DB.Thm),
   ("fromString_def",fromString_def,DB.Thm),
   ("ONE_LE_TWOEXP",ONE_LE_TWOEXP,DB.Thm),
   ("w2i_w2n_pos",w2i_w2n_pos,DB.Thm), ("w2i_n2w_pos",w2i_n2w_pos,DB.Thm),
   ("w2i_n2w_neg",w2i_n2w_neg,DB.Thm), ("i2w_w2i",i2w_w2i,DB.Thm),
   ("w2i_i2w",w2i_i2w,DB.Thm), ("word_msb_i2w",word_msb_i2w,DB.Thm),
   ("w2i_11",w2i_11,DB.Thm),
   ("int_word_nchotomy",int_word_nchotomy,DB.Thm),
   ("w2i_le",w2i_le,DB.Thm), ("w2i_ge",w2i_ge,DB.Thm),
   ("ranged_int_word_nchotomy",ranged_int_word_nchotomy,DB.Thm),
   ("sw2sw_i2w",sw2sw_i2w,DB.Thm), ("w2w_i2w",w2w_i2w,DB.Thm),
   ("WORD_LTi",WORD_LTi,DB.Thm), ("WORD_GTi",WORD_GTi,DB.Thm),
   ("WORD_LEi",WORD_LEi,DB.Thm), ("WORD_GEi",WORD_GEi,DB.Thm),
   ("word_add_i2w_w2n",word_add_i2w_w2n,DB.Thm),
   ("word_add_i2w",word_add_i2w,DB.Thm),
   ("word_sub_i2w_w2n",word_sub_i2w_w2n,DB.Thm),
   ("word_sub_i2w",word_sub_i2w,DB.Thm),
   ("word_mul_i2w_w2n",word_mul_i2w_w2n,DB.Thm),
   ("word_mul_i2w",word_mul_i2w,DB.Thm),
   ("word_i2w_add",word_i2w_add,DB.Thm),
   ("word_i2w_mul",word_i2w_mul,DB.Thm),
   ("MULT_MINUS_ONE",MULT_MINUS_ONE,DB.Thm),
   ("word_0_w2i",word_0_w2i,DB.Thm), ("i2w_DIV",i2w_DIV,DB.Thm),
   ("INT_MIN_MONOTONIC",INT_MIN_MONOTONIC,DB.Thm),
   ("INT_MAX_MONOTONIC",INT_MAX_MONOTONIC,DB.Thm),
   ("w2i_sw2sw_bounds",w2i_sw2sw_bounds,DB.Thm),
   ("w2i_i2w_id",w2i_i2w_id,DB.Thm), ("w2i_11_lift",w2i_11_lift,DB.Thm),
   ("w2i_n2w_mod",w2i_n2w_mod,DB.Thm),
   ("word_abs_w2i",word_abs_w2i,DB.Thm),
   ("word_abs_i2w",word_abs_i2w,DB.Thm), ("INT_MIN",INT_MIN,DB.Thm),
   ("INT_MAX",INT_MAX,DB.Thm), ("UINT_MAX",UINT_MAX,DB.Thm),
   ("INT_BOUND_ORDER",INT_BOUND_ORDER,DB.Thm),
   ("INT_ZERO_LT_INT_MIN",INT_ZERO_LT_INT_MIN,DB.Thm),
   ("INT_ZERO_LT_INT_MAX",INT_ZERO_LT_INT_MAX,DB.Thm),
   ("INT_ZERO_LE_INT_MAX",INT_ZERO_LE_INT_MAX,DB.Thm),
   ("INT_ZERO_LT_UINT_MAX",INT_ZERO_LT_UINT_MAX,DB.Thm),
   ("w2i_1",w2i_1,DB.Thm), ("w2i_INT_MINw",w2i_INT_MINw,DB.Thm),
   ("w2i_UINT_MAXw",w2i_UINT_MAXw,DB.Thm),
   ("w2i_INT_MAXw",w2i_INT_MAXw,DB.Thm),
   ("w2i_minus_1",w2i_minus_1,DB.Thm), ("w2i_lt_0",w2i_lt_0,DB.Thm),
   ("w2i_neg",w2i_neg,DB.Thm), ("i2w_0",i2w_0,DB.Thm),
   ("i2w_minus_1",i2w_minus_1,DB.Thm), ("i2w_INT_MIN",i2w_INT_MIN,DB.Thm),
   ("i2w_INT_MAX",i2w_INT_MAX,DB.Thm),
   ("i2w_UINT_MAX",i2w_UINT_MAX,DB.Thm),
   ("saturate_i2w_0",saturate_i2w_0,DB.Thm),
   ("saturate_i2sw_0",saturate_i2sw_0,DB.Thm),
   ("saturate_w2sw",saturate_w2sw,DB.Thm),
   ("saturate_i2sw",saturate_i2sw,DB.Thm),
   ("saturate_sw2w",saturate_sw2w,DB.Thm),
   ("saturate_sw2sw",saturate_sw2sw,DB.Thm),
   ("signed_saturate_sub",signed_saturate_sub,DB.Thm),
   ("signed_saturate_add",signed_saturate_add,DB.Thm),
   ("different_sign_then_no_overflow",
    different_sign_then_no_overflow,
    DB.Thm), ("w2i_i2w_pos",w2i_i2w_pos,DB.Thm),
   ("w2i_i2w_neg",w2i_i2w_neg,DB.Thm), ("overflow",overflow,DB.Thm)]

  local open Portable GrammarSpecials Parse
    fun UTOFF f = Feedback.trace("Parse.unicode_trace_off_complaints",0)f
  in
  val _ = mk_local_grms [("OmegaTheory.Omega_grammars",
                          OmegaTheory.Omega_grammars),
                         ("int_arithTheory.int_arith_grammars",
                          int_arithTheory.int_arith_grammars),
                         ("wordsTheory.words_grammars",
                          wordsTheory.words_grammars)]
  val _ = List.app (update_grms reveal) []
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("toString", (Term.prim_mk_const { Name = "toString", Thy = "integer_word"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("toString", (Term.prim_mk_const { Name = "toString", Thy = "integer_word"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("fromString", (Term.prim_mk_const { Name = "fromString", Thy = "integer_word"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("fromString", (Term.prim_mk_const { Name = "fromString", Thy = "integer_word"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("i2w", (Term.prim_mk_const { Name = "i2w", Thy = "integer_word"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("i2w", (Term.prim_mk_const { Name = "i2w", Thy = "integer_word"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("w2i", (Term.prim_mk_const { Name = "w2i", Thy = "integer_word"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("w2i", (Term.prim_mk_const { Name = "w2i", Thy = "integer_word"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("UINT_MAX", (Term.prim_mk_const { Name = "UINT_MAX", Thy = "integer_word"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("INT_MAX", (Term.prim_mk_const { Name = "INT_MAX", Thy = "integer_word"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("INT_MIN", (Term.prim_mk_const { Name = "INT_MIN", Thy = "integer_word"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("saturate_i2w", (Term.prim_mk_const { Name = "saturate_i2w", Thy = "integer_word"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("saturate_i2w", (Term.prim_mk_const { Name = "saturate_i2w", Thy = "integer_word"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("saturate_i2sw", (Term.prim_mk_const { Name = "saturate_i2sw", Thy = "integer_word"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("saturate_i2sw", (Term.prim_mk_const { Name = "saturate_i2sw", Thy = "integer_word"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("saturate_sw2sw", (Term.prim_mk_const { Name = "saturate_sw2sw", Thy = "integer_word"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("saturate_sw2sw", (Term.prim_mk_const { Name = "saturate_sw2sw", Thy = "integer_word"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("saturate_w2sw", (Term.prim_mk_const { Name = "saturate_w2sw", Thy = "integer_word"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("saturate_w2sw", (Term.prim_mk_const { Name = "saturate_w2sw", Thy = "integer_word"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("saturate_sw2w", (Term.prim_mk_const { Name = "saturate_sw2w", Thy = "integer_word"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("saturate_sw2w", (Term.prim_mk_const { Name = "saturate_sw2w", Thy = "integer_word"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("signed_saturate_add", (Term.prim_mk_const { Name = "signed_saturate_add", Thy = "integer_word"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("signed_saturate_add", (Term.prim_mk_const { Name = "signed_saturate_add", Thy = "integer_word"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("signed_saturate_sub", (Term.prim_mk_const { Name = "signed_saturate_sub", Thy = "integer_word"}))
  val _ = update_grms
       (UTOFF temp_overload_on)
       ("signed_saturate_sub", (Term.prim_mk_const { Name = "signed_saturate_sub", Thy = "integer_word"}))
  val integer_word_grammars = Parse.current_lgrms()
  end
  val _ = Theory.LoadableThyData.temp_encoded_update {
    thy = "integer_word",
    thydataty = "simp",
    data =
        "integer_word.INT_MIN integer_word.INT_ZERO_LT_INT_MIN integer_word.INT_ZERO_LT_UINT_MAX integer_word.UINT_MAX integer_word.INT_MAX"
  }
  val _ = Theory.LoadableThyData.temp_encoded_update {
    thy = "integer_word",
    thydataty = "compute",
    data =
        "integer_word.toString_def integer_word.w2i_def integer_word.signed_saturate_sub_def integer_word.signed_saturate_add_def integer_word.saturate_sw2w_def integer_word.saturate_w2sw_def integer_word.saturate_sw2sw_def integer_word.saturate_i2sw_def integer_word.saturate_i2w_def integer_word.INT_MIN_def integer_word.INT_MAX_def integer_word.UINT_MAX_def integer_word.fromString_def integer_word.i2w_def"
  }

val _ = if !Globals.print_thy_loads then print "done\n" else ()
val _ = Theory.load_complete "integer_word"
end
