A formalisation of a tool similar to Smallfoot in HOL

(**************************************************************************)
(*                             ACKNOWLEDGEMENT                            *)
(*                                                                        *)
(* I would like to thank Cristiano Calcagno, Josh Berdine and Peter       *)
(* W. O'Hearn - the authors of Smallfoot - which generously allowed me to *)
(* use large parts of the Smallfoot parser and the examples. Smallfoot    *)
(* can be found at                                                        *)
(*                                                                        *)
(* http://www.dcs.qmul.ac.uk/research/logic/theory/projects/smallfoot.    *)
(**************************************************************************)

(**************************************************************************)
(*                             BUILDING                                   *)
(*                                                                        *)
(* Holfoot is designed to work mainly with PolyML and the experimental    *)
(* kernel. It should work with mosml, but then building instructions for  *)
(* the command line version and the header file have to be adapted.       *)
(* Moreover, some variable names in the proof-scripts might need changing *)
(* when using the standard kernel.                                        *)
(*                                                                        *)
(* To build Holfoot, please do                                            *)
(*   - build HOL (using experimental kernal and PolyML 5.3)               *)
(*   - call "Holmake --qof -k" in directory                               *)
(*         "examples/separationLogic/src/holfoot" and then in             *)
(*         "examples/separationLogic/src/holfoot/(yourml)"                *)
(*   - copy are link "header.ml" from the ML-specific directory to the    *) 
(*     directory above for the initialisation of interactive examples     *)
(*   - if using polyML a state-file, the command-line tool and            *)
(*        the web-interface executable should be in directory poly        *)
(*   - for instructions on how to use this command-line tool, call        *)
(*     "holfoot -h" or test it on the examples in EXAMPLES/automatic via  *)
(*     "holfoot EXAMPLES/automatic/*"                                     *)
(*                                                                        *)
(**************************************************************************)

(**************************************************************************)
(*                              MOSML/POLYML                              *)
(*                                                                        *)
(* The ml-specific code is in subdirectories called poly and mosml.       *)
(* Holfoot is mainly build for PolyML and the experimental kernel. For    *)
(* example the command-line-tool is intended to be compiled by PolyML.    *)
(* Moreover the initialisation code differs for both systems. Please      *)
(* copy header.sml from either poly or mosml to the holfoot directory.    *)
(**************************************************************************)

(**************************************************************************)
(*                             EXAMPLES                                   *)
(*                                                                        *)
(* The directory EXAMPLES contains some example specifications and        *)
(* proofs. All examples in "automatic" work fully automatic and can be    *)
(* used with the command line tool.                                       *)
(*                                                                        *)
(* The examples in "interactive" need user interaction, i.e. customised   *)
(* proof scripts. For each file there is a file with the ending ".hol".   *)
(* This file contains the proof script. These scripts depend on a working *)
(* "header.sml" file to initialise holfoot.                               *)
(**************************************************************************)


Thomas Tuerk
