(******************************************************************************)
(* Boilerplate                                                                *)
(******************************************************************************)

(* load the libries
use (Globals.HOLDIR ^ "/examples/separationLogic/src/holfoot/header.sml")
*)


(******************************************************************************)
(* New Definition for the Specification                                       *)
(******************************************************************************)

val REMOVE_def = Define `
   (REMOVE x [] = []) /\
   (REMOVE x (x'::xs) = if (x = x') then xs else (x'::REMOVE x xs))`;

val REMOVE_ID = prove (
``!x l. (REMOVE x l = l) = ~(MEM x l)``,
Induct_on `l` THEN
ASM_SIMP_TAC list_ss [REMOVE_def, COND_RAND, COND_RATOR]);


val REMOVE_APPEND = prove (
``!x l1 l2. REMOVE x (l1 ++ l2) =
   if (MEM x l1) then
      (REMOVE x l1) ++ l2
   else
      l1 ++ (REMOVE x l2)``,

Induct_on `l1` THEN
ASM_SIMP_TAC list_ss [REMOVE_def] THEN
REPEAT STRIP_TAC THEN
Cases_on `x = h` THEN ASM_SIMP_TAC std_ss [] THEN
ASM_SIMP_TAC list_ss [COND_RAND, COND_RATOR]);



(******************************************************************************)
(* Verify specification                                                       *)
(******************************************************************************)

val file = concat [examplesDir, "/interactive/remove.dsf"];
val _ = holfoot_verify_spec file [ add_rewrites [REMOVE_def] ];


(* when using the automatic method, some goals remain that
   can easily be discarded afterwards

val imp_thm = holfoot_auto_verify_spec file;
val spec_thm = holfoot_prove_remaining (imp_thm,
   SIMP_TAC list_ss [REMOVE_def] THEN
   HF_ELIM_COMMENTS_TAC);

*)

(******************************************************************************)
(* Verify specification - iterative                                           *)
(******************************************************************************)

val file2 = concat [examplesDir, "/interactive/remove-iter.dsf"];
val _ = holfoot_verify_spec file2 [ add_rewrites [REMOVE_def, REMOVE_APPEND, REMOVE_ID] ];


(******************************************************************************)
(* Verify specification - iterative loop-spec                                 *)
(******************************************************************************)

val file3 = concat [examplesDir, "/interactive/remove-iter-loopspec.dsf"];
val _ = holfoot_verify_spec file3 [ add_rewrites [REMOVE_def] ];


