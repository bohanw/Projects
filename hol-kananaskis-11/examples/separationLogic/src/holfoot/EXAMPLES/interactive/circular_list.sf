push(r) [r|->_tf * lseg(_tf,r)] {
  local t, u;
  t = new();
  u = r->tl;
  t->tl = u;
  r->tl = t;
} [r|->_b * _b|->_tf * lseg(_tf,r)]

enqueue(r;) [r|->_tf * lseg(_tf,r)] {
  push(r);
  r = r->tl;
} [r|->_tf * lseg(_tf,_b) * _b|->r]

pop_dequeue(r) [r!=_tf * r|->_tf * lseg(_tf,r)] {
  local t, u;
  t = r->tl;
  u = t->tl;
  r->tl = u;
  dispose t;
} [r|->_b * lseg(_b,r)]

test(r;) [r|->_tf * lseg(_tf,r)] {
  push(r);
  pop_dequeue(r);
  enqueue(r;);
  pop_dequeue(r);
} [r|->_a * lseg(_a,r)]
