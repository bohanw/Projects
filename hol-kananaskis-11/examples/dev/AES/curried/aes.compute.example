(* Example.

key = (0wx00, 0wx01, 0wx02, 0wx03, 0wx04, 0wx05, 0wx06, 0wx07,
       0wx08, 0wx09, 0wx0a, 0wx0b, 0wx0c, 0wx0d, 0wx0e, 0wx0f) : state;

plaintext = (0wx00,0wx11,0wx22,0wx33,0wx44,0wx55,0wx66,0wx77,
             0wx88,0wx99,0wxaa,0wxbb,0wxcc,0wxdd,0wxee,0wxff) : state

ciphertext = (0wx69, 0wxC4, 0wxE0, 0wxD8, 0wx6A, 0wx7B, 0wx4, 0wx30, 
              0wxD8, 0wxCD, 0wxB7, 0wx80, 0wx70, 0wxB4, 0wxC5, 0wx5A) :state;
*)

val _ = quietdec := true;
load "aesTheory";
open aesTheory;
val _ = quietdec := false;


val key = Term 
   `((BYTE F F F F F F F F),
     (BYTE F F F F F F F T),
     (BYTE F F F F F F T F),
     (BYTE F F F F F F T T),
     (BYTE F F F F F T F F),
     (BYTE F F F F F T F T),
     (BYTE F F F F F T T F),
     (BYTE F F F F F T T T),
     (BYTE F F F F T F F F),
     (BYTE F F F F T F F T),
     (BYTE F F F F T F T F),
     (BYTE F F F F T F T T),
     (BYTE F F F F T T F F),
     (BYTE F F F F T T F T),
     (BYTE F F F F T T T F),
     (BYTE F F F F T T T T)):state`;

val plaintext = Term
  `((BYTE F F F F F F F F),
    (BYTE F F F T F F F T),
    (BYTE F F T F F F T F),
    (BYTE F F T T F F T T),
    (BYTE F T F F F T F F),
    (BYTE F T F T F T F T),
    (BYTE F T T F F T T F),
    (BYTE F T T T F T T T),
    (BYTE T F F F T F F F),
    (BYTE T F F T T F F T),
    (BYTE T F T F T F T F),
    (BYTE T F T T T F T T),
    (BYTE T T F F T T F F),
    (BYTE T T F T T T F T),
    (BYTE T T T F T T T F),
    (BYTE T T T T T T T T)) : state`;

computeLib.add_funs [MultTheory.ConstMult_def, Round_def, InvRound_def];

val M = Term`let (encrypt,decrypt) = AES ^key 
              in decrypt(encrypt ^plaintext) = ^plaintext`;
val M1 = Term`let (encrypt, decrypt) = AES ^key 
               in encrypt ^plaintext`;
val M2 = Term`AES ^key`;

Count.apply EVAL M;
(*
runtime: 63.860s,    gctime: 3.300s,     systime: 0.530s.
HOL primitive inference steps: 2,526,955.
*)

Count.apply EVAL M1;
Count.apply EVAL M2;


(*---------------------------------------------------------------------------*)
(* Faster? Check                                                             *)
(*---------------------------------------------------------------------------*)

computeLib.add_funs [RoundOpTheory.TabledMultCol, RoundOpTheory.TabledInvMultCol];
Count.apply EVAL M;
(*
runtime: 15.330s,    gctime: 0.810s,     systime: 0.100s.
HOL primitive inference steps: 492235.
*)

(*  In ML:

  val key = 
    ((false,(false,(false,(false,(false,(false,(false,false))))))),
    ((false,(false,(false,(false,(false,(false,(false,true))))))),
    ((false,(false,(false,(false,(false,(false,(true,false))))))),
    ((false,(false,(false,(false,(false,(false,(true,true))))))),
    ((false,(false,(false,(false,(false,(true,(false,false))))))),
    ((false,(false,(false,(false,(false,(true,(false,true))))))),
    ((false,(false,(false,(false,(false,(true,(true,false))))))),
    ((false,(false,(false,(false,(false,(true,(true,true))))))),
    ((false,(false,(false,(false,(true,(false,(false,false))))))),
    ((false,(false,(false,(false,(true,(false,(false,true))))))),
    ((false,(false,(false,(false,(true,(false,(true,false))))))),
    ((false,(false,(false,(false,(true,(false,(true,true))))))),
    ((false,(false,(false,(false,(true,(true,(false,false))))))),
    ((false,(false,(false,(false,(true,(true,(false,true))))))),
    ((false,(false,(false,(false,(true,(true,(true,false))))))),
    (false,(false,(false,(false,(true,(true,(true,true))))))))))))))))))))))

  val plaintext = 
    ((false,(false,(false,(false,(false,(false,(false,false))))))),
    ((false,(false,(false,(true,(false,(false,(false,true))))))),
    ((false,(false,(true,(false,(false,(false,(true,false))))))),
    ((false,(false,(true,(true,(false,(false,(true,true))))))),
    ((false,(true,(false,(false,(false,(true,(false,false))))))),
    ((false,(true,(false,(true,(false,(true,(false,true))))))),
    ((false,(true,(true,(false,(false,(true,(true,false))))))),
    ((false,(true,(true,(true,(false,(true,(true,true))))))),
    ((true,(false,(false,(false,(true,(false,(false,false))))))),
    ((true,(false,(false,(true,(true,(false,(false,true))))))),
    ((true,(false,(true,(false,(true,(false,(true,false))))))),
    ((true,(false,(true,(true,(true,(false,(true,true))))))),
    ((true,(true,(false,(false,(true,(true,(false,false))))))),
    ((true,(true,(false,(true,(true,(true,(false,true))))))),
    ((true,(true,(true,(false,(true,(true,(true,false))))))),
    (true,(true,(true,(true,(true,(true,(true,true))))))))))))))))))))));

*)
